unit VISSIMLIB_TLB;

// ************************************************************************ //
// WARNING                                                                    
// -------                                                                    
// The types declared in this file were generated from data read from a       
// Type Library. If this type library is explicitly or indirectly (via        
// another type library referring to this type library) re-imported, or the   
// 'Refresh' command of the Type Library Editor activated while editing the   
// Type Library, the contents of this file will be regenerated and all        
// manual modifications will be lost.                                         
// ************************************************************************ //

// $Rev: 98336 $
// File generated on 6/11/2020 6:12:10 AM from Type Library described below.

// ************************************************************************  //
// Type Lib: C:\Program Files\PTV Vision\PTV Vissim 2020\Exe\VISSIM200.exe (1)
// LIBID: {46BC06CD-79C5-4A6A-B716-56EB76F8BAEF}
// LCID: 0
// Helpfile: 
// HelpString: Vissim Object Library 20.0 64 Bit
// DepndLst: 
//   (1) v2.0 stdole, (C:\Windows\SysWOW64\stdole2.tlb)
// SYS_KIND: SYS_WIN64
// Errors:
//   Hint: Parameter 'Type' of IFreeDistributionContainerBase.AddFreeDistribution changed to 'Type_'
//   Hint: Parameter 'Type' of IOccupancyDistributionContainerBase.AddOccupancyDistribution changed to 'Type_'
//   Hint: Parameter 'Type' of IVehicleRouteManagedLanesContainerBase.AddVehicleRouteManagedLanes changed to 'Type_'
//   Hint: Parameter 'Type' of ITimeDistributionContainerBase.AddTimeDistribution changed to 'Type_'
// ************************************************************************ //
{$TYPEDADDRESS OFF} // Unit must be compiled without type-checked pointers. 
{$WARN SYMBOL_PLATFORM OFF}
{$WRITEABLECONST ON}
{$VARPROPSETTER ON}
{$ALIGN 4}

interface

uses Winapi.Windows, System.Classes, System.Variants, System.Win.StdVCL, Vcl.Graphics, Vcl.OleServer, Winapi.ActiveX;
  

// *********************************************************************//
// GUIDS declared in the TypeLibrary. Following prefixes are used:        
//   Type Libraries     : LIBID_xxxx                                      
//   CoClasses          : CLASS_xxxx                                      
//   DISPInterfaces     : DIID_xxxx                                       
//   Non-DISP interfaces: IID_xxxx                                        
// *********************************************************************//
const
  // TypeLibrary Major and minor versions
  VISSIMLIBMajorVersion = 20;
  VISSIMLIBMinorVersion = 0;

  LIBID_VISSIMLIB: TGUID = '{46BC06CD-79C5-4A6A-B716-56EB76F8BAEF}';

  IID_IObjectBase: TGUID = '{B80B6035-44FD-4E18-806F-03A437223BDD}';
  IID_IVissim: TGUID = '{A25086D9-6B91-468E-9765-828B3D6F2CA5}';
  CLASS_Vissim: TGUID = '{E58C72C8-B668-47F3-85C9-4B8EDF582E03}';
  IID_INetBase: TGUID = '{5886A652-AFDC-4315-BDDF-F988301FC40F}';
  IID_INet: TGUID = '{C21E180F-853F-43F5-99A3-389F2527EA89}';
  IID_ICollectionBase: TGUID = '{83F66D36-1AB6-4778-AA3F-A74AADD4D997}';
  IID_IAnimRecCollection: TGUID = '{ACE1C490-0AE2-4744-83E3-B94B8F79CD50}';
  IID_IAnimRecContainerBase: TGUID = '{DE9CA9C2-4B3B-470F-B39B-B54893D1319C}';
  IID_IAnimRecContainer: TGUID = '{F80444EF-28A6-4712-B358-70AEE7227022}';
  IID_IAttributes: TGUID = '{8E2F6D17-ABB1-46D0-A972-2CBF1219B98E}';
  IID_IIterator: TGUID = '{47A344BE-1AD4-426F-9ED6-617467CEF760}';
  IID_IAnimRecBase: TGUID = '{7738C214-9184-4151-AD94-A9541CA40DC5}';
  IID_IAnimRec: TGUID = '{C4115F6B-9E00-4F59-82DD-D42A73BE8491}';
  IID_ISectionCollection: TGUID = '{554BA114-A51E-43D0-A42F-8000FF2E759A}';
  IID_IAliasCollection: TGUID = '{84A9D293-2B08-4DD8-9A1A-7C43404CEDB5}';
  IID_IAliasContainerBase: TGUID = '{239F7AF8-E421-4040-8E46-CE8478163105}';
  IID_IAliasContainer: TGUID = '{A24A6F8D-E8C9-4FD4-9C28-873558C144C4}';
  IID_IAliasBase: TGUID = '{7BBE1FB5-7291-467F-A398-F828395EB26E}';
  IID_IAlias: TGUID = '{FD3599E7-E919-4595-A878-D925B37D4EA7}';
  IID_IAreaBehaviorTypeCollection: TGUID = '{EF9FB328-6502-4751-8F3E-9184307AF647}';
  IID_IAreaBehaviorTypeContainerBase: TGUID = '{F5B46D67-FAA5-4541-8924-0D93B3C8EC10}';
  IID_IAreaBehaviorTypeContainer: TGUID = '{E1A56550-ED7C-46A9-9D8A-1C8FA37EE414}';
  IID_IAreaBehaviorTypeBase: TGUID = '{A1F0B59E-7710-425D-8C58-ED69099FA717}';
  IID_IAreaBehaviorType: TGUID = '{1C8C18FA-D6DC-4AF2-8779-E6D52BD881DC}';
  IID_IAreaBehaviorTypeElementCollection: TGUID = '{7BCEEACC-BED5-4A52-BDC5-5E32A35D85E0}';
  IID_IAreaBehaviorTypeElementContainerBase: TGUID = '{65961C68-F275-442C-85E3-3D187A2E259E}';
  IID_IAreaBehaviorTypeElementContainer: TGUID = '{72F8B210-2304-4FFA-B419-8F6F414C7EA7}';
  IID_IAreaBehaviorTypeElementBase: TGUID = '{5418641A-2355-479F-BA1D-84B51F3D0225}';
  IID_IAreaBehaviorTypeElement: TGUID = '{B43E692F-2B02-41CE-A4C3-B1BBF6DF87C4}';
  IID_IPedestrianClassBase: TGUID = '{7A07DFED-857F-4A9A-BCB7-D16CA3922518}';
  IID_IPedestrianClass: TGUID = '{ED674E34-3BCB-4C39-A8A4-B947DB88A2B8}';
  IID_IPedestrianTypeCollection: TGUID = '{BEEA11CB-EBBA-4932-9AD2-B940F753FAD1}';
  IID_IWalkingBehaviorBase: TGUID = '{E1800015-69C8-4D84-BB7D-145838B2ED50}';
  IID_IWalkingBehavior: TGUID = '{4AEE9F36-70C2-47B0-9361-8CD9E7F7E0EE}';
  IID_ITimeIntervalBase: TGUID = '{402C304F-F60E-4E2E-94D5-BE33059A3830}';
  IID_ITimeInterval: TGUID = '{912CB8FA-B7A5-4D64-A257-3813CC4E306C}';
  IID_ITimeIntervalSetBase: TGUID = '{D8ADB95E-1FDB-4598-815B-6406AB6CC379}';
  IID_ITimeIntervalSet: TGUID = '{5B7CD8E5-A852-4E78-8878-046ECCA07913}';
  IID_ITimeIntervalCollection: TGUID = '{52CFCD37-992C-4042-8D5D-F0E2D3790671}';
  IID_ITimeIntervalContainerBase: TGUID = '{AFA2BD3A-9D2D-4218-A0AD-C98B6A929912}';
  IID_ITimeIntervalContainer: TGUID = '{9D87123C-5CAD-4E49-A88C-82FEBFBBB1F1}';
  IID_IDesSpeedDistributionBase: TGUID = '{15FFB39A-3ABC-4163-89E8-9DCDDB4ACEB0}';
  IID_IDesSpeedDistribution: TGUID = '{45B8F17D-8F23-486F-AB45-02C3D91E0B53}';
  IID_ISpeedDistributionDataPointCollection: TGUID = '{F7E6D302-5C0B-453E-8232-832C6C468CD5}';
  IID_ISpeedDistributionDataPointContainerBase: TGUID = '{FAE2246B-1FD0-41A2-852E-48A3C19F9B93}';
  IID_ISpeedDistributionDataPointContainer: TGUID = '{694A3375-09D2-4CC8-9F97-0ECC868093AB}';
  IID_IAreaMeasurementCollection: TGUID = '{12F6B625-BC88-4104-A0DA-9CF67EB3A617}';
  IID_IAreaMeasurementContainerBase: TGUID = '{340DC969-861A-4C94-9578-3CA3E8AE630B}';
  IID_IAreaMeasurementContainer: TGUID = '{DE2FD7E5-3872-4BF1-998B-1CE194DA5B6B}';
  IID_IAreaMeasurementBase: TGUID = '{B304829A-074E-4BC0-9334-191EC032C61B}';
  IID_IAreaMeasurement: TGUID = '{DFE70CB0-6432-457B-BBB3-CE93E27D6F35}';
  IID_IAreaCollection: TGUID = '{96C2F998-428C-4BB5-9462-0DC20A19F767}';
  IID_IAreaContainerBase: TGUID = '{947B1B80-9E39-44B5-B7E0-F3EABDADE311}';
  IID_IAreaContainer: TGUID = '{A4FEDA90-436D-4192-BE73-3AC1121F2F52}';
  IID_IAreaBase: TGUID = '{C26CF3F6-3A07-4AF1-B9E6-AF2247D11459}';
  IID_IArea: TGUID = '{BC755905-AA79-43F0-AAEE-5121D08305CC}';
  IID_IPointCollection: TGUID = '{D1AB808E-42B3-4139-9285-928266A32D79}';
  IID_IPointContainerBase: TGUID = '{0FE74A24-401E-4F78-8CB9-E4873D6A2564}';
  IID_IPointContainer: TGUID = '{7C4639A1-A556-4DA6-A4A2-A3BB0DD5E47C}';
  IID_IDisplayTypeBase: TGUID = '{F9710891-974E-4C3A-BAF1-A7227FFEA045}';
  IID_IDisplayType: TGUID = '{27DCFA7A-84B2-4B97-99A0-69549246C29B}';
  IID_ITimeDistributionBase: TGUID = '{96BFC5A7-0136-47AC-B411-C2D269CD94C5}';
  IID_ITimeDistribution: TGUID = '{88E1F583-C897-47EE-BEA3-908E5B94B847}';
  IID_IDurationDistributionDataPointCollection: TGUID = '{17979425-831C-4DDB-8F8E-F445551B61F3}';
  IID_IDurationDistributionDataPointContainerBase: TGUID = '{1F16A91E-23D7-47DA-BF07-9A9FB9686FEE}';
  IID_IDurationDistributionDataPointContainer: TGUID = '{825AE225-329E-4CCF-8E80-BAF5A8AD4357}';
  IID_ILocationDistributionBase: TGUID = '{986BAAE0-BB4D-4998-A23D-3DE3679EBE93}';
  IID_ILocationDistribution: TGUID = '{4A8C4CE3-CFBB-43D6-B52F-B0F5802CEE41}';
  IID_IDistributionDataPointCollection: TGUID = '{7B304716-FDC3-4823-9C92-ED01526060D2}';
  IID_IDistributionDataPointContainerBase: TGUID = '{8DC8CBB8-289D-4694-94CF-7E2A75506C51}';
  IID_IDistributionDataPointContainer: TGUID = '{724E5135-DA8F-4D39-B63C-6190D65CF8E9}';
  IID_ILevelBase: TGUID = '{27779D84-0FE7-4F5D-BB3B-E0F4E9322F24}';
  IID_ILevel: TGUID = '{CE367CDC-2D6B-4767-B8A8-5BE23910C7DC}';
  IID_IPTStopCollection: TGUID = '{6DC9684E-CBCF-4FA4-B437-8AEB39B91FC1}';
  IID_IPedClassQueuingBehaviorCollection: TGUID = '{304B219A-2AFD-4111-BC03-0BB6D7DD4B30}';
  IID_IPedClassQueuingBehaviorContainerBase: TGUID = '{3A6A9B5B-CF18-4137-BB19-D487734E0946}';
  IID_IPedClassQueuingBehaviorContainer: TGUID = '{EFF436FC-1AB6-422B-8E4A-99139BB0D5D8}';
  IID_IPedestrianInputCollection: TGUID = '{CA3ACFE2-D22E-4909-ADB6-5DA62CBBEA5C}';
  IID_IPedestrianRouteLocationCollection: TGUID = '{05B943AA-384E-446E-8E02-B518DDD4DC66}';
  IID_IPedestrianRoutingDecisionStaticCollection: TGUID = '{6EEB05ED-6FD0-4C83-A7D7-041CCE731E35}';
  IID_IPedestrianRoutingDecisionPartialCollection: TGUID = '{5099FB41-C6B9-4739-A48C-8310469AE834}';
  IID_IElevatorGroupBase: TGUID = '{ED2BDD36-B31F-45AE-9125-0E38267411DA}';
  IID_IElevatorGroup: TGUID = '{E673DD9D-AD63-4C5C-8FE7-30602A2EE84D}';
  IID_IElevatorCollection: TGUID = '{1DC91A7E-178D-44E5-BF6D-E5759FE2CBC5}';
  IID_IPedestrianCollection: TGUID = '{520CFB8B-83A2-4632-B085-8BD20B2A0F8F}';
  IID_IPedestrianRouteStaticCollection: TGUID = '{BDA79967-4885-4D18-A96E-7B06658FB3CC}';
  IID_IPedestrianRoutePartialCollection: TGUID = '{A2A259A0-30D9-4BC9-886F-185C12FFCB36}';
  IID_IBackgroundImageCollection: TGUID = '{A45F32F1-1428-44E8-A5BE-D6F78BBF6895}';
  IID_IBackgroundImageContainerBase: TGUID = '{AFF3DC3F-3B2C-4138-BBAF-375C3C9DD35B}';
  IID_IBackgroundImageContainer: TGUID = '{C52660A3-5C3F-443E-925A-9DFF42DE3CDD}';
  IID_IBackgroundImageBase: TGUID = '{E610918C-287C-44C1-8552-8B9D6EDB6692}';
  IID_IBackgroundImage: TGUID = '{D86A159E-9B22-493B-BCF1-FAB445E25A57}';
  IID_IBoardDelFuncCollection: TGUID = '{E16811B5-8945-45E4-ADD7-497856B23463}';
  IID_IBoardDelFuncContainerBase: TGUID = '{9081AC7F-0A94-49E7-A19A-2E2DEDD7C895}';
  IID_IBoardDelFuncContainer: TGUID = '{1BBFBD92-A8AC-4F8F-ADFA-E4E340B86452}';
  IID_IBoardDelFuncBase: TGUID = '{86C759A0-E96A-4B01-9C7D-406D8F08BD22}';
  IID_IBoardDelFunc: TGUID = '{8F0B12E8-E4FD-432E-89A3-E309F37AE58B}';
  IID_IBoardDelFuncDataPtCollection: TGUID = '{09625447-402B-4B50-A716-ABF97F603A45}';
  IID_IBoardDelFuncDataPtContainerBase: TGUID = '{6B575D54-DE8D-4EBA-8652-72454FEA6DE5}';
  IID_IBoardDelFuncDataPtContainer: TGUID = '{3BAA194D-AF25-42DB-9B21-3607DD55F64D}';
  IID_IBoardDelTypeCollection: TGUID = '{01F35E07-34E0-4575-AFAE-ECE368FFFBF6}';
  IID_IBoardDelTypeContainerBase: TGUID = '{F65B6DDC-0385-46CB-BA66-30348A8BEEA4}';
  IID_IBoardDelTypeContainer: TGUID = '{16433D3A-B202-4BEF-B4CD-9F3906901FD2}';
  IID_IBoardDelTypeBase: TGUID = '{56BDB990-8E5C-4AD5-BE48-50DDC2742F72}';
  IID_IBoardDelType: TGUID = '{E3CB5B6E-EC34-4310-9184-69449A3D98EA}';
  IID_IBoardDelTypeElementCollection: TGUID = '{88157691-E33A-4DD1-A315-0CD359EF7C28}';
  IID_IBoardDelTypeElementContainerBase: TGUID = '{4BD72948-E8DB-4217-B050-0B75A551DEC2}';
  IID_IBoardDelTypeElementContainer: TGUID = '{C622E672-9D08-429C-A55F-79CCBCF8C9E9}';
  IID_IBoardDelTypeElementBase: TGUID = '{00D7CC2F-4D6C-4F1A-B0DE-91179850DA67}';
  IID_IBoardDelTypeElement: TGUID = '{33965030-8698-46DD-B871-6ED9C875846A}';
  IID_ICameraPositionCollection: TGUID = '{E28F9DDA-A9AA-43E2-9579-4BF2A2EBF3A7}';
  IID_ICameraPositionContainerBase: TGUID = '{4E3BF665-BB41-4906-A101-2A5E8F886DE4}';
  IID_ICameraPositionContainer: TGUID = '{70336FDA-7A7B-4468-A7AA-8F3EC9C336C8}';
  IID_ICameraPositionBase: TGUID = '{5AEAF3F4-CEFC-4AE4-956C-1D3DD152DD8E}';
  IID_ICameraPosition: TGUID = '{1E8D8546-C0BE-419B-8800-EF846D1C52AF}';
  IID_IColorDistributionCollection: TGUID = '{A1CDFEFC-A0B5-4EC3-80A0-27918CC3D46F}';
  IID_IColorDistributionContainerBase: TGUID = '{BD2A3EB7-7AD0-440B-BE85-EBF8E19AB1E8}';
  IID_IColorDistributionContainer: TGUID = '{CC521C1F-C550-49A0-867E-E33A1B988B44}';
  IID_IColorDistributionBase: TGUID = '{D02E0B89-0752-43A5-AC68-A42291B2DB19}';
  IID_IColorDistribution: TGUID = '{3E793EC9-9D96-4DE1-8C69-6DD308FFFD41}';
  IID_IColorDistributionElementCollection: TGUID = '{64EAEE66-7F80-430C-9EFC-FAE9C8920825}';
  IID_IColorDistributionElementContainerBase: TGUID = '{8AF2148D-3EC7-4222-AADF-65551D4253A2}';
  IID_IColorDistributionElementContainer: TGUID = '{83F1B405-335D-4ECA-8AAA-D9FF32BFC7C4}';
  IID_IColorDistributionElementBase: TGUID = '{401780EE-7659-480F-B79E-4CD157681C62}';
  IID_IColorDistributionElement: TGUID = '{68B4AABB-AE69-4F3B-A3D9-02A3B78262D4}';
  IID_IConflictAreaCollection: TGUID = '{CC982D58-32BC-4AE0-9F86-E1DA758B592F}';
  IID_IConflictAreaContainerBase: TGUID = '{7442D3EF-E1AC-4A9C-AD31-4EB67461FC4B}';
  IID_IConflictAreaContainer: TGUID = '{826B7012-855C-4EF4-8AFB-ABAEFDFA72BD}';
  IID_IConflictAreaBase: TGUID = '{B67D7AB2-0950-4807-81DF-59A112AC514E}';
  IID_IConflictArea: TGUID = '{380FF088-041F-4BB1-B90D-B870CFA4F26E}';
  IID_ILinkBase: TGUID = '{B1B21330-1A7D-4030-B339-BF548020D13F}';
  IID_ILink: TGUID = '{0D980298-675C-4BE7-9BED-4E91084A4381}';
  IID_ILaneCollection: TGUID = '{5937C064-94BD-447A-AAE4-B0DDB5E7ED26}';
  IID_ILaneContainerBase: TGUID = '{6EC23949-7C58-4B5C-8FE2-245E49CD4838}';
  IID_ILaneContainer: TGUID = '{ECE2CA64-52A4-4782-A6B6-1D266D459B17}';
  IID_ILaneBase: TGUID = '{C5F3D40C-E78E-4776-B612-1EBE5267A1FA}';
  IID_ILane: TGUID = '{5E5A9DEA-0865-42A3-AA1C-51E0FACA251E}';
  IID_IVehicleClassCollection: TGUID = '{5401212D-9307-47FE-83E9-E19CDF8D1B70}';
  IID_IConflictMarkerCollection: TGUID = '{0B862041-C562-4C3B-B05A-7DB3E0DCA6CF}';
  IID_IParkingLotCollection: TGUID = '{73637705-0FA2-4AA0-B099-D0178E58B023}';
  IID_IPriorityRuleCollection: TGUID = '{7F5E7267-7046-4353-A9E2-F23E128F1FD1}';
  IID_IVehicleCollection: TGUID = '{4A3A9693-8CDD-49A0-8A86-DA87836919F1}';
  IID_IDesSpeedDecisionCollection: TGUID = '{19B58B1D-8657-4B79-ABB6-851C8555EE62}';
  IID_IDetectorCollection: TGUID = '{FA981AA5-5762-4A18-8722-68C8EFB0060F}';
  IID_IReducedSpeedAreaCollection: TGUID = '{0F7EA801-D650-4C92-B6CF-94EFBE09E72B}';
  IID_ISignalHeadCollection: TGUID = '{8A996187-8985-4A3B-AAA5-D91B5EC46595}';
  IID_IStopSignCollection: TGUID = '{20B24EEA-80BF-4B21-A71F-24E1E9AB1E2A}';
  IID_ILinkBehaviorTypeBase: TGUID = '{F80CD790-9658-4395-A5D9-C6CE54657E63}';
  IID_ILinkBehaviorType: TGUID = '{226209A8-508B-434B-862C-9A6284E486F7}';
  IID_IDrivingBehaviorBase: TGUID = '{63D8C6D3-7E81-4DF1-A7E1-BE0C3636BB37}';
  IID_IDrivingBehavior: TGUID = '{23D3FF33-020B-4097-99CA-4A72B05D4E1D}';
  IID_IVehClassLateralBehaviorCollection: TGUID = '{B9F4AE3C-ACA4-41D3-8B3D-B811E998CB15}';
  IID_IVehClassLateralBehaviorContainerBase: TGUID = '{627E9F88-AD41-4BD9-B22F-75EDD39490A6}';
  IID_IVehClassLateralBehaviorContainer: TGUID = '{F544CC14-D573-41BA-8880-EC52A44A505E}';
  IID_IVehClassFollowingBehaviorCollection: TGUID = '{AE06AB7D-B3A6-4F73-A0B1-9061CE14A1F5}';
  IID_IVehClassFollowingBehaviorContainerBase: TGUID = '{0516FC7F-09F4-4B45-98D6-D49E17075556}';
  IID_IVehClassFollowingBehaviorContainer: TGUID = '{70F05EE3-50C1-4C49-A143-1B5919F91E8B}';
  IID_IFreeDistributionBase: TGUID = '{0A9D7E1C-3731-45E9-BA24-DA1631943440}';
  IID_IFreeDistribution: TGUID = '{E127B380-0F0C-4F0A-83C1-7E650A836A29}';
  IID_IDrivBehavVehClassSpeedMisestDistrCollection: TGUID = '{E91B54AB-6768-4251-97B9-B33C7AEC9F92}';
  IID_IDrivBehavVehClassSpeedMisestDistrContainerBase: TGUID = '{B665FEA9-55A7-458C-A7F8-42C06A4B766B}';
  IID_IDrivBehavVehClassSpeedMisestDistrContainer: TGUID = '{2928F4C5-CE8F-4B6A-A43E-0E68D185C725}';
  IID_IVehClassDrivingBehaviorCollection: TGUID = '{FCB19AB6-0B4C-4B89-8122-02B23BEC9169}';
  IID_IVehClassDrivingBehaviorContainerBase: TGUID = '{600709AF-9CC6-4A16-AECA-0814F4F99549}';
  IID_IVehClassDrivingBehaviorContainer: TGUID = '{44BDC1DC-E61F-4725-AED1-B595E5278DA5}';
  IID_IVehicleClassBase: TGUID = '{E2B68544-8740-4C0B-AB97-2DC604A00CBD}';
  IID_IVehicleClass: TGUID = '{30E8268A-C848-40C4-89FD-17EC7A8C51E5}';
  IID_IVehicleTypeCollection: TGUID = '{6AF79ACE-D38E-4564-9AFF-F87C7053E968}';
  IID_IVehClassDrivingBehaviorBase: TGUID = '{F3C68BD4-DAC2-4DE1-AB36-47A348F34DA0}';
  IID_IVehClassDrivingBehavior: TGUID = '{BA18E00B-0CB9-40B6-A776-7D43ED676E9C}';
  IID_ILinkPolyPointCollection: TGUID = '{4F4D3DF1-AFB3-43A8-9A73-222DEE72B632}';
  IID_ILinkPolyPointContainerBase: TGUID = '{BDD03DE6-9F79-4665-B8D7-EBB288448BB1}';
  IID_ILinkPolyPointContainer: TGUID = '{C05CC291-6693-422E-9D5B-007C442194C9}';
  IID_IDistanceDistributionBase: TGUID = '{7AB3230E-8CF3-41F1-B2EB-05C1DEF8904A}';
  IID_IDistanceDistribution: TGUID = '{0568D6FF-EC95-4BF8-8D3A-C7A1C34D63E9}';
  IID_ILinkLnChgDistDistrAttrElementCollection: TGUID = '{1FAE09E5-3E6C-42BF-8A9E-E0A9DB7BF44E}';
  IID_ILinkLnChgDistDistrAttrElementContainerBase: TGUID = '{5C05A012-BB4C-4055-BF03-F4A00D8FB7DD}';
  IID_ILinkLnChgDistDistrAttrElementContainer: TGUID = '{10BA84FA-C391-4F96-8BA8-FC9A138BA5C9}';
  IID_IVehicleRouteStaticCollection: TGUID = '{E9295000-45FA-4C58-A8E2-C02A1EB73FE5}';
  IID_IVehicleRouteClosureCollection: TGUID = '{60DC2D28-F6A0-4135-8704-A0753CF2F2F5}';
  IID_IVehicleRouteManagedLanesCollection: TGUID = '{4E989C46-8B2B-4BA8-8553-10B011732612}';
  IID_IVehicleRoutePartialCollection: TGUID = '{2ED32491-EA48-4FEF-AFFF-CBEA04906551}';
  IID_IVehicleRouteParkingCollection: TGUID = '{EEC67EAD-7228-4185-9594-FF469028D3DD}';
  IID_IVehicleRoutePartialPTCollection: TGUID = '{138D8E39-A4D0-498A-BB86-25A73E59BCEC}';
  IID_IPTLineCollection: TGUID = '{733F6073-0032-4BF2-93A3-D0CAEF578FF3}';
  IID_IVehicleInputCollection: TGUID = '{E1765972-3475-416E-9C38-443D31DA64D9}';
  IID_IQueueCounterCollection: TGUID = '{BE71D5EC-8DD1-4DE9-8399-E0B2D81085E9}';
  IID_IVehicleTravelTimeMeasurementCollection: TGUID = '{B6DA90F7-FA1A-44BD-891A-2203B396C671}';
  IID_IVehicleRoutingDecisionStaticCollection: TGUID = '{0865F608-9EFC-436A-BB9C-A505F85038D4}';
  IID_IVehicleRoutingDecisionPartialCollection: TGUID = '{F0FB1E11-0786-43A5-ABB1-DF207FF14A24}';
  IID_IVehicleRoutingDecisionParkingCollection: TGUID = '{7B53879B-2986-496B-8B9D-901B1DF9D4FB}';
  IID_IVehicleRoutingDecisionDynamicCollection: TGUID = '{8AAD6E76-6D47-4202-8C28-83724F67B7EB}';
  IID_IVehicleRoutingDecisionManagedLanesCollection: TGUID = '{1BE4407A-98B6-4742-8BC4-7DD6B187A6F3}';
  IID_IVehicleRoutingDecisionPartialPTCollection: TGUID = '{97472746-0D32-494D-9BDC-9A8D6E98461D}';
  IID_IVehClassCountedDataCollection: TGUID = '{EBBC5EAD-8995-4D5E-8758-0A0637B9CA9B}';
  IID_IVehClassCountedDataContainerBase: TGUID = '{555424A1-B901-41CB-B82D-7A8D9F940B60}';
  IID_IVehClassCountedDataContainer: TGUID = '{C0BD728D-F4D5-42AC-B23B-8AFD76549F8F}';
  IID_IVehClassCountedDataBase: TGUID = '{B8FC79AB-4E37-467E-A396-7D0F3AE33BFD}';
  IID_IVehClassCountedData: TGUID = '{BFE4C8A1-E3A6-4EF4-8FA7-4B9CB7E93987}';
  IID_IEdgeCollection: TGUID = '{DD33BC2B-9E3C-4656-8D18-3BC97C733D03}';
  IID_IVehClassGapCollection: TGUID = '{FE14AB7D-8A28-4DB6-8361-2B5F7F06EFE6}';
  IID_IVehClassGapContainerBase: TGUID = '{3C024044-656F-4CD4-9AB8-53630D4B695D}';
  IID_IVehClassGapContainer: TGUID = '{97874A53-BD22-4718-BE2B-7EAF65743534}';
  IID_IVehClassGapBase: TGUID = '{B335A237-C88A-4FF7-8980-F7F6F191D56F}';
  IID_IVehClassGap: TGUID = '{3A2B5D97-CCB4-4495-9076-E04E682436B9}';
  IID_ICritSpeedFuncCollection: TGUID = '{CC6F96C5-3DCD-4FAC-8217-68450BFA1998}';
  IID_ICritSpeedFuncContainerBase: TGUID = '{FEF6F256-0C39-41F4-BB89-A8921900CBA4}';
  IID_ICritSpeedFuncContainer: TGUID = '{916A4D98-DC3C-4437-ACB0-226F94FF6C8C}';
  IID_ICritSpeedFuncBase: TGUID = '{5F1202C9-179E-416E-A156-82ED55303F69}';
  IID_ICritSpeedFunc: TGUID = '{FEC69871-1839-4602-A0AF-677C1DEABFBA}';
  IID_ICritSpeedFuncDataPtCollection: TGUID = '{99AB1ABB-D73E-4FEA-B96A-E08920E7B542}';
  IID_ICritSpeedFuncDataPtContainerBase: TGUID = '{C9A75872-7637-4481-A600-6FCB0268A09E}';
  IID_ICritSpeedFuncDataPtContainer: TGUID = '{73FB94FE-982F-4D9F-A778-8E3853AB46EA}';
  IID_IDataCollectionMeasurementCollection: TGUID = '{B93A0D61-35D2-42B7-BFAB-F4DED9D74201}';
  IID_IDataCollectionMeasurementContainerBase: TGUID = '{55E032D8-17E9-4D3D-95C5-BE14D9B48F1F}';
  IID_IDataCollectionMeasurementContainer: TGUID = '{29B9505D-687A-48AE-851A-7ADC7B97C313}';
  IID_IDataCollectionMeasurementBase: TGUID = '{609767DF-8364-4A3A-8FD5-BDA952237959}';
  IID_IDataCollectionMeasurement: TGUID = '{40CE2831-0F09-4296-9CF5-B1FB7720CBF7}';
  IID_IDataCollectionPointCollection: TGUID = '{13058068-0DA7-4C68-84F5-71395BDA9332}';
  IID_IDataCollectionPointContainerBase: TGUID = '{46594A61-B657-413A-A3A1-7395AEEEB72C}';
  IID_IDataCollectionPointContainer: TGUID = '{6AFEB068-CEDA-41E0-A862-B5406B456812}';
  IID_IDataCollectionPointBase: TGUID = '{C81A7D0F-C8CD-450A-93D8-2D536E3731C5}';
  IID_IDataCollectionPoint: TGUID = '{499C9D4D-0E5B-459B-98C0-33082718A67D}';
  IID_IDelayMeasurementCollection: TGUID = '{8DE19A4A-1EB2-41DE-A232-A5E6906F83DA}';
  IID_IDelayMeasurementContainerBase: TGUID = '{806585EE-FA24-4273-9AA1-A9CCA222FD2C}';
  IID_IDelayMeasurementContainer: TGUID = '{C06BC7D1-BA0A-48B7-B131-FF29798C83C2}';
  IID_IDelayMeasurementBase: TGUID = '{6C75C70A-5734-46F5-99EF-33CEC6D4232E}';
  IID_IDelayMeasurement: TGUID = '{D707F5DA-DE6D-45D0-9204-A354D980C96F}';
  IID_IDesAccelerationFunctionCollection: TGUID = '{0120AE30-8BFB-4A30-9E64-5DB19070D7DB}';
  IID_IDesAccelerationFunctionContainerBase: TGUID = '{7CBC48DC-B15E-443B-9D30-B3F09C02E96F}';
  IID_IDesAccelerationFunctionContainer: TGUID = '{42370C71-5EDF-44FD-8ACE-A9A387F3D834}';
  IID_IDesAccelerationFunctionBase: TGUID = '{FE80C373-5D9B-4AF8-9B3E-F7E8CB2682F9}';
  IID_IDesAccelerationFunction: TGUID = '{4A997039-E055-49D2-944F-B5690C4B3805}';
  IID_IAccelerationFunctionDataPointCollection: TGUID = '{D33505A3-F195-4390-B47D-4DA70960AE05}';
  IID_IAccelerationFunctionDataPointContainerBase: TGUID = '{9E0AFE67-A54C-4794-AAAC-259A2B92D171}';
  IID_IAccelerationFunctionDataPointContainer: TGUID = '{12919CC6-FE21-42B5-9814-2E57FB1B46CA}';
  IID_IDesDecelerationFunctionCollection: TGUID = '{5F69B273-95C0-4C6D-8052-D5834C848D4A}';
  IID_IDesDecelerationFunctionContainerBase: TGUID = '{6F9773A5-50F0-4FA9-B86D-38564947C8CC}';
  IID_IDesDecelerationFunctionContainer: TGUID = '{32E26E78-6559-4FC9-A434-F15E972F8664}';
  IID_IDesDecelerationFunctionBase: TGUID = '{E83D83E5-49F8-44C4-A29D-C0388BA4D938}';
  IID_IDesDecelerationFunction: TGUID = '{CFD591D9-17C7-4D33-BC5E-1A7BF0C31546}';
  IID_IDecelerationFunctionDataPointCollection: TGUID = '{05A65948-44FA-4DBF-9117-47631D8037C0}';
  IID_IDecelerationFunctionDataPointContainerBase: TGUID = '{2AA793CF-18B1-4F2E-AB44-EB76F284F3B6}';
  IID_IDecelerationFunctionDataPointContainer: TGUID = '{727628EC-2A1B-40C3-89DC-9672CF5453F0}';
  IID_IDesSpeedDecisionContainerBase: TGUID = '{982C96E7-BC68-463B-82A7-1199C8A9BB59}';
  IID_IDesSpeedDecisionContainer: TGUID = '{72106B84-A613-4373-8397-9566711F4C5C}';
  IID_IDesSpeedDecisionBase: TGUID = '{1642D367-CAA3-4E6B-BD11-F8442B935256}';
  IID_IDesSpeedDecision: TGUID = '{F16C9121-68D2-4397-BFE3-5565758421EB}';
  IID_IVehClassDesSpeedDistributionCollection: TGUID = '{BD6F6E1E-5BF7-45CF-B083-33DB56BBA777}';
  IID_IVehClassDesSpeedDistributionContainerBase: TGUID = '{A8524D14-830B-4A71-8B82-BC3C45793102}';
  IID_IVehClassDesSpeedDistributionContainer: TGUID = '{D5681C04-9E47-4748-8CA7-F62F33A0B42F}';
  IID_IVehClassDesSpeedDistributionBase: TGUID = '{F4114759-5223-4B5A-A42D-9A5377E458F4}';
  IID_IVehClassDesSpeedDistribution: TGUID = '{89928B1B-B3DF-4F0B-847B-D1EB81997B33}';
  IID_IDesSpeedDistributionCollection: TGUID = '{E80C3337-1D29-4291-88CE-87DF481CE228}';
  IID_IDesSpeedDistributionContainerBase: TGUID = '{A4B19E29-38E6-45F7-97A2-6A59ECEF8CD0}';
  IID_IDesSpeedDistributionContainer: TGUID = '{ACD5745B-498F-4BD2-8CC9-7EA12E2A7B26}';
  IID_IDetectorContainerBase: TGUID = '{F2FFA954-81CC-4B1B-B4AC-17ECD5A03514}';
  IID_IDetectorContainer: TGUID = '{FAFC0038-9516-45BD-8D7C-F592A2366A65}';
  IID_IDetectorBase: TGUID = '{112EFCBD-5D5E-40D1-BB7B-5EDEBED0604E}';
  IID_IDetector: TGUID = '{6ECFF179-28C9-40E5-BD3D-0F9FE1D33F21}';
  IID_ISignalControllerBase: TGUID = '{EE696511-FB92-438A-9A1E-221300583221}';
  IID_ISignalController: TGUID = '{C0211C17-6ECF-41E5-A804-E02D8CA4FA9A}';
  IID_ISignalGroupCollection: TGUID = '{87C1F22A-0C53-491C-A69F-41C2E5DA7343}';
  IID_ISignalGroupContainerBase: TGUID = '{65E8949E-632A-41D6-87AD-15A399501FB3}';
  IID_ISignalGroupContainer: TGUID = '{AE7A179A-3368-4557-B27F-83161662236E}';
  IID_ISignalGroupBase: TGUID = '{A4F19A8E-DDED-4472-8E80-66C7258174CE}';
  IID_ISignalGroup: TGUID = '{9C83A8FB-1D6F-41EC-8D32-C4853B559073}';
  IID_IWTTFileCollection: TGUID = '{831DD47D-81AE-44C4-A5E9-58688D8999B9}';
  IID_ISignalOutputConfigurationElementCollection: TGUID = '{97246E0F-335A-4E85-AEE6-FE31F155A963}';
  IID_ISignalOutputConfigurationElementContainerBase: TGUID = '{F1FA1C40-8722-4C72-B967-144E42C3C8C8}';
  IID_ISignalOutputConfigurationElementContainer: TGUID = '{4E8C3515-32D1-42A3-8EAF-D4D78EF57518}';
  IID_ISignalOutputConfigurationElementBase: TGUID = '{088BF208-1F77-4ED3-B84C-A8925054F9A5}';
  IID_ISignalOutputConfigurationElement: TGUID = '{0FA1A6DD-E899-4710-B862-5B11D2C0832B}';
  IID_IWTTValueFormatBase: TGUID = '{56FB59A1-23B3-413E-AA17-6C5283A83B7C}';
  IID_IWTTValueFormat: TGUID = '{89E1A8A3-D08E-4CAD-BB4D-7FAD45B65F47}';
  IID_IPTStopBase: TGUID = '{73463A4E-0145-4632-89D6-84ED14012873}';
  IID_IPTStop: TGUID = '{F9FBEC8A-7590-4929-A719-A2A23E9A0790}';
  IID_IBoardingVolumeCollection: TGUID = '{B673EB0F-8608-45D8-916F-8052551A5813}';
  IID_IBoardingVolumeContainerBase: TGUID = '{39F8B8FB-94DB-4E90-811C-BD2CF8E75710}';
  IID_IBoardingVolumeContainer: TGUID = '{076049C1-0215-49A7-974C-94DEA5473694}';
  IID_IBoardingVolumeBase: TGUID = '{1741CD70-AB33-4847-AF3D-4068929E7BB8}';
  IID_IBoardingVolume: TGUID = '{E9BDDC3B-7904-4A8B-B320-2F89E23AEA74}';
  IID_IPTLineStopCollection: TGUID = '{69156FCE-F1D8-412E-93CB-A3772DBCD536}';
  IID_IPartialPTLineStopCollection: TGUID = '{61822A19-5CB1-4368-8FB5-38E0C2423D6B}';
  IID_IPedestrianClassCollection: TGUID = '{7078076C-6AB8-402B-A8F7-AF2C5BB865C1}';
  IID_IDisplayTypeCollection: TGUID = '{EA41AC6D-CE4D-465C-B04D-7F1276958880}';
  IID_IDisplayTypeContainerBase: TGUID = '{1EFA46B5-8AE5-435C-B82D-F8DEF9380659}';
  IID_IDisplayTypeContainer: TGUID = '{C27FD3E3-30DF-489F-ADA9-C1A485370E4B}';
  IID_IDistanceDistributionCollection: TGUID = '{47708F23-A1AB-4837-836E-95CA256B8C03}';
  IID_IDistanceDistributionContainerBase: TGUID = '{8ABA4939-3DC8-4CDD-B05B-1EF1E531A2A7}';
  IID_IDistanceDistributionContainer: TGUID = '{BFFC87E7-6E8E-461D-8B3A-AF2D8565F5B6}';
  IID_IDrivingBehaviorCollection: TGUID = '{299B9113-78D8-448D-90B8-A057BC478F92}';
  IID_IDrivingBehaviorContainerBase: TGUID = '{EE1FA6BF-FCAE-4BDB-9175-C5BDF7F1459B}';
  IID_IDrivingBehaviorContainer: TGUID = '{BD07E333-8C8E-425F-9E5B-6BD1F44E6071}';
  IID_IDynamicAssignmentBase: TGUID = '{CB912C9D-6975-474C-8F61-5A7670B0E304}';
  IID_IDynamicAssignment: TGUID = '{9FC3E94F-FAEA-46E9-B460-72CA96E5CBCB}';
  IID_IDynAssignDemandCollection: TGUID = '{3301C974-E748-47FC-9318-81D38A97AF21}';
  IID_IDynAssignDemandContainerBase: TGUID = '{779A9BD3-FCC4-41B1-965B-2718E6E33B5A}';
  IID_IDynAssignDemandContainer: TGUID = '{1B1BE465-8657-46FB-801E-2F0A83C4E4C3}';
  IID_IDynAssignDemandBase: TGUID = '{6E52FA64-CF5A-4C7F-8EB4-5F451CA012A6}';
  IID_IDynAssignDemand: TGUID = '{E8876A54-6D72-40B0-BE7C-57191C74D15A}';
  IID_IVehicleCompositionBase: TGUID = '{B29BA632-A8D8-4D32-BC98-FDA2C827884C}';
  IID_IVehicleComposition: TGUID = '{7243EB33-36F9-47C0-9BD1-910D02F58C92}';
  IID_IVehicleCompositionRelativeFlowCollection: TGUID = '{9E4046FB-092F-4705-893E-F400C659BC11}';
  IID_IVehicleCompositionRelativeFlowContainerBase: TGUID = '{95585E85-3FF4-484B-BEDF-636441136CFA}';
  IID_IVehicleCompositionRelativeFlowContainer: TGUID = '{568CB3D7-1890-41AD-A53E-40D6D6D829B5}';
  IID_IVehicleTypeBase: TGUID = '{AA423210-F1C3-4004-B1ED-B65E7DD97D1E}';
  IID_IVehicleType: TGUID = '{E065AD8D-4708-477E-BD79-027FE10F9535}';
  IID_IWeightDistributionBase: TGUID = '{FC232410-4C62-4C73-B7A9-D2CFA8978F09}';
  IID_IWeightDistribution: TGUID = '{8C0BA0AF-2E6D-4217-AFE2-F399A5617CCF}';
  IID_IPowerDistributionBase: TGUID = '{CFCE40DA-412F-4077-8501-ED9E57961B23}';
  IID_IPowerDistribution: TGUID = '{F286BE26-9166-4233-8967-BE7505B65765}';
  IID_IMaxAccelerationFunctionBase: TGUID = '{D61DDEB5-2196-4B02-8AEA-9238C8A7A04C}';
  IID_IMaxAccelerationFunction: TGUID = '{A92E141A-3716-43E5-8047-39CA059F7AA6}';
  IID_IMaxDecelerationFunctionBase: TGUID = '{B70DBD8A-FE93-4AD8-8CF3-F683A6A19E32}';
  IID_IMaxDecelerationFunction: TGUID = '{1D005D17-5A65-48D3-9FF7-587B71204FEF}';
  IID_IModel2D3DDistributionBase: TGUID = '{5B198DC6-AA40-4B8C-8067-7E858F4DD294}';
  IID_IModel2D3DDistribution: TGUID = '{DA7441DB-C8D6-4A8E-87B5-4899F81BF1E4}';
  IID_IModel2D3DDistributionElementCollection: TGUID = '{47D27927-D59D-4C8B-B31A-3EBED908009E}';
  IID_IModel2D3DDistributionElementContainerBase: TGUID = '{9CC17FC5-103A-4535-9FAE-8D79C3CF1FDA}';
  IID_IModel2D3DDistributionElementContainer: TGUID = '{03E38061-A224-4F14-B376-D78B7EBA52D8}';
  IID_IModel2D3DBase: TGUID = '{96E8A58D-0E55-49F6-80AB-6C7B1D81AD61}';
  IID_IModel2D3D: TGUID = '{8D595C82-D64B-42B4-B55C-09DFF771B64D}';
  IID_IModel2D3DSegmentCollection: TGUID = '{077A66EB-8068-40DC-9C5C-5FE0ABB00CC8}';
  IID_IModel2D3DSegmentContainerBase: TGUID = '{692DA856-4C79-4471-B456-2F9D4BA2D160}';
  IID_IModel2D3DSegmentContainer: TGUID = '{EB720644-CCD7-4453-A5C8-024D0E840C0C}';
  IID_IModel2D3DSegmentBase: TGUID = '{D36C2F93-F205-48A3-AF3D-4A8826800B71}';
  IID_IModel2D3DSegment: TGUID = '{049B5A9D-FC66-4B50-B7FF-7E1841064314}';
  IID_IDoorCollection: TGUID = '{0D308C96-1A84-4003-B29B-CCC2CA8D8856}';
  IID_IDoorContainerBase: TGUID = '{F76CAD40-258C-4EEF-AA4D-609B3B01DA3B}';
  IID_IDoorContainer: TGUID = '{E2C40777-1E0B-4618-BBCF-85C9D0C522B2}';
  IID_IModel2D3DDistributionElementBase: TGUID = '{3A773848-CC20-442D-A6AE-A9725125227F}';
  IID_IModel2D3DDistributionElement: TGUID = '{925FB57F-7168-473F-9AE1-63510EE1802C}';
  IID_IParkingLotSelectionParametersCollection: TGUID = '{1704AE70-7DD1-43CF-8966-04F27FB0D72C}';
  IID_IParkingLotSelectionParametersContainerBase: TGUID = '{53FCC75C-2785-481D-B7D7-08898C476B56}';
  IID_IParkingLotSelectionParametersContainer: TGUID = '{4ADA26CB-2A88-442E-AF96-44C115698A6A}';
  IID_IOccupancyDistributionBase: TGUID = '{E8427910-265E-4CFC-BADB-FB515B7F650C}';
  IID_IOccupancyDistribution: TGUID = '{0FD93B49-7060-40E4-973D-47E07C36FF63}';
  IID_ILatDriftSpeedFuncBase: TGUID = '{74A878E0-CFA3-49C5-AEB0-E616874FA7A0}';
  IID_ILatDriftSpeedFunc: TGUID = '{0A1E9BCB-ACF5-4E5B-8C57-64A83BD9A38A}';
  IID_ILatDriftSpeedFuncDataPtCollection: TGUID = '{F660E2AD-A0AA-4D8C-A8F0-E439665FA322}';
  IID_ILatDriftSpeedFuncDataPtContainerBase: TGUID = '{9EE99317-722F-416D-9D68-689257A67493}';
  IID_ILatDriftSpeedFuncDataPtContainer: TGUID = '{94671518-9503-43DC-A712-861F769FCB34}';
  IID_IVehicleCompositionRelativeFlowBase: TGUID = '{F5F59023-D745-41A8-9B40-5906EB8884C7}';
  IID_IVehicleCompositionRelativeFlow: TGUID = '{0BE82FF9-0325-458B-B964-0E98084A4BD0}';
  IID_IMatrixBase: TGUID = '{60386A10-884E-46D0-8558-ADC211F7EA63}';
  IID_IMatrix: TGUID = '{97041CA0-9B9D-450C-8395-D0466B9A5F6D}';
  IID_IAlternativePathSearchCollection: TGUID = '{34AEE6CF-6BF4-4F4E-BC1A-5D3409E79D18}';
  IID_IAlternativePathSearchContainerBase: TGUID = '{70A2ECDF-0A6C-45AA-812F-2BA70B099B61}';
  IID_IAlternativePathSearchContainer: TGUID = '{56254FE0-7B2B-4C8F-93B3-A4B19D726514}';
  IID_IAlternativePathSearchVehicleRoutingDecisionCollection: TGUID = '{EF26B6E6-24B3-46D7-B618-2F03BCB14F4F}';
  IID_IAlternativePathSearchVehicleRoutingDecisionContainerBase: TGUID = '{D60C53C8-F31D-4FA1-9D7C-EDA3B8936B59}';
  IID_IAlternativePathSearchVehicleRoutingDecisionContainer: TGUID = '{5F456CB7-D15E-4313-B9B3-86596108D60E}';
  IID_IAttributeSelectionCollection: TGUID = '{8040ABED-EBE8-43AE-A612-6EB3247788EC}';
  IID_IAttributeSelectionContainerBase: TGUID = '{7A2EC9C4-18DC-4DF9-8A50-119AF408A163}';
  IID_IAttributeSelectionContainer: TGUID = '{AE698177-22BF-44B2-9AAB-D7B311E20B3E}';
  IID_IEdgeInitialTrafficCollection: TGUID = '{BF53E030-6CC3-4D8B-8C94-35A2E8792179}';
  IID_IEdgeInitialTrafficContainerBase: TGUID = '{4BB4C1F2-5A42-4426-B74F-454D390E0AF2}';
  IID_IEdgeInitialTrafficContainer: TGUID = '{28CF546E-2A98-4064-9465-506907DCF69C}';
  IID_IEdgeInitialTrafficBase: TGUID = '{D1A495E6-A545-42B1-A071-055D695E8D4D}';
  IID_IEdgeInitialTraffic: TGUID = '{AF7E51C3-4D8E-4420-B244-BF26D65842A9}';
  IID_INodeBase: TGUID = '{0D32845A-C27B-4BFD-B265-1D3B2B50F99F}';
  IID_INode: TGUID = '{995068E4-13E3-4221-8E72-8EEA10C006DD}';
  IID_ILegOrientationCollection: TGUID = '{D96002F8-D82D-4B6A-AB04-2B4BD9AB1692}';
  IID_ILegOrientationContainerBase: TGUID = '{4F35CC50-8571-4B79-BF07-14D289B77636}';
  IID_ILegOrientationContainer: TGUID = '{C0498845-D66A-43AC-B391-108EBE0FDC1A}';
  IID_ILinkSegmentCollection: TGUID = '{B9FAECE2-5066-4563-99E9-4FED0D80AAE5}';
  IID_ILinkSegmentContainerBase: TGUID = '{37EEE6CD-D68D-4733-B23F-43EA1D6938FE}';
  IID_ILinkSegmentContainer: TGUID = '{FF9B674A-3439-4D6C-88E4-461135798218}';
  IID_IMovementCollection: TGUID = '{EEC9DE11-2801-4BA9-9105-6CD41558A4F2}';
  IID_IMovementContainerBase: TGUID = '{572348DE-5C45-49AD-90D1-E02D6D733B79}';
  IID_IMovementContainer: TGUID = '{9A40218E-C41E-4A1A-8F9B-B108927D8865}';
  IID_IMovementBase: TGUID = '{D331791F-3DC3-49DC-9C2C-BF8C52917918}';
  IID_IMovement: TGUID = '{B62A536C-71C2-4AC2-8543-73CF99471D65}';
  IID_INodeCollection: TGUID = '{F92E9040-9BDE-4197-9515-928154CC7B01}';
  IID_IMesoTurnConflictCollection: TGUID = '{C9EADDA2-13E1-49B5-B8ED-EBC0FC4EA26D}';
  IID_IMesoTurnCollection: TGUID = '{2F181F4D-BA9B-4B0D-9FBD-14B61FA67A72}';
  IID_IMesoNodeBase: TGUID = '{9E763FFD-A977-4121-88BA-15362541C9A2}';
  IID_IMesoNode: TGUID = '{7855F8D6-C2C0-4F07-BBAB-6439B8AF7B6A}';
  IID_IMesoEdgeCollection: TGUID = '{A36FD029-8C8A-4B49-A394-54FC1F58ABB4}';
  IID_IParkingLotBase: TGUID = '{B3578AD2-5E28-4321-8749-8296F98267BF}';
  IID_IParkingLot: TGUID = '{7280BC94-BE7A-42A3-83B1-682A49F26486}';
  IID_IVehClassDynAssignDesSpeedDistributionCollection: TGUID = '{B49183C4-CD38-45D7-97F0-4F2B3C7694A5}';
  IID_IVehClassDynAssignDesSpeedDistributionContainerBase: TGUID = '{D42F0787-CCC5-49D1-BE7E-1904F6C5BC52}';
  IID_IVehClassDynAssignDesSpeedDistributionContainer: TGUID = '{A60B9593-0AF1-457A-A2D1-66845D15FBE9}';
  IID_IPathCollection: TGUID = '{84A2D5B7-2691-480A-9A1A-AEC7415C238E}';
  IID_IZoneBase: TGUID = '{E7BD4851-2636-4338-8875-8A2C26681215}';
  IID_IZone: TGUID = '{82D4C4BB-C774-4C0C-81A8-BEFBDBDAE1C6}';
  IID_IMesoTurnConflictContainerBase: TGUID = '{A82EC0F9-15AA-4036-B74F-1BB095EDA29A}';
  IID_IMesoTurnConflictContainer: TGUID = '{F2157F86-AA20-4B6B-ADCD-A1D7E9E42054}';
  IID_IMesoTurnContainerBase: TGUID = '{DB8E3896-A9A2-4657-A757-2EC2C29256D6}';
  IID_IMesoTurnContainer: TGUID = '{F1789C4E-9D91-49F3-B1B2-56409EB51130}';
  IID_IVehicleRoutingDecisionDynamicBase: TGUID = '{0435F0E9-763D-49FF-BCE3-43B8EB023104}';
  IID_IVehicleRoutingDecisionDynamic: TGUID = '{23DBAE4A-6D75-456E-A540-2E57339F125C}';
  IID_IVehCompositionInitialVolumeCollection: TGUID = '{EF888A73-F9CC-42FC-AD4B-5B21604438EA}';
  IID_IVehCompositionInitialVolumeContainerBase: TGUID = '{03853486-4953-44A8-97D8-78B1162D4DEF}';
  IID_IVehCompositionInitialVolumeContainer: TGUID = '{18506708-729E-400B-8DFC-A04F188148FE}';
  IID_IEdgeContainerBase: TGUID = '{B58A8381-49F4-41F9-939F-50477ED059CA}';
  IID_IEdgeContainer: TGUID = '{B2313F9B-BCAB-4E3D-9319-37848E138A63}';
  IID_IEdgeBase: TGUID = '{2B48648D-6EB2-4E36-A548-83B9D7C427D8}';
  IID_IEdge: TGUID = '{E9ACDCD8-A421-41C0-A0C6-6819569E6F3D}';
  IID_ILinkCollection: TGUID = '{AB6272F2-8022-4080-BA73-EE18409694B0}';
  IID_IElevatorGroupCollection: TGUID = '{C6EFADF1-5B50-4023-9EEA-B6089BB7EED8}';
  IID_IElevatorGroupContainerBase: TGUID = '{940CBD63-134D-45A0-840D-3E4FF569D12B}';
  IID_IElevatorGroupContainer: TGUID = '{02287ADA-6B2C-4D13-8D35-CB4763421B24}';
  IID_IElevatorContainerBase: TGUID = '{0F3FE4B0-0A4A-4844-A127-63FBCCD9083B}';
  IID_IElevatorContainer: TGUID = '{CDCE86EF-09F0-4CDA-ABD7-58973968B5C4}';
  IID_IElevatorBase: TGUID = '{B6E2E583-37D1-41E4-AC05-F7216E91CB2F}';
  IID_IElevator: TGUID = '{FE4999CF-7217-40A2-A95C-3FC8D8D331ED}';
  IID_IElevatorDoorCollection: TGUID = '{F26DF242-0BF6-4AA2-9FA1-0D9100C51051}';
  IID_IElevatorDoorContainerBase: TGUID = '{8285A928-F282-4730-BAC6-F506DDDE89C0}';
  IID_IElevatorDoorContainer: TGUID = '{CB92A96E-2B37-43DE-BB21-E6324CA311E7}';
  IID_IElevatorDoorBase: TGUID = '{988887C3-848D-4AB8-8B2F-43E129606C1B}';
  IID_IElevatorDoor: TGUID = '{6DD69DC6-3F84-46D7-BD38-3378DF149107}';
  IID_ILevelCollection: TGUID = '{7392967B-EC5C-444E-8622-A6817A5F5D88}';
  IID_IEvaluationBase: TGUID = '{E7CD1E46-D805-4BEA-BBD0-4CB20FD81D5A}';
  IID_IEvaluation: TGUID = '{F1710E61-AF58-4361-8549-5351A75B23B2}';
  IID_IObjectNoCollection: TGUID = '{E652FCD7-7103-4F20-9157-A508B5B29E6B}';
  IID_IObjectNoContainerBase: TGUID = '{499EBF18-BC98-4ECE-AE7E-0D071B2F55A9}';
  IID_IObjectNoContainer: TGUID = '{1E48E745-FB2B-44F8-B85E-9316777BB764}';
  IID_IObjectNoBase: TGUID = '{5017F0FC-B3E7-4F20-A5A4-89072D6D8FFE}';
  IID_IObjectNo: TGUID = '{C2DF5DC5-D9C3-44FD-8F1F-941CBEF87791}';
  IID_ILaneChangesBase: TGUID = '{38002D51-C0DA-44CC-9EE2-E703F957A833}';
  IID_ILaneChanges: TGUID = '{6DB41FDC-AEBE-41B7-84B8-8797828B5AAA}';
  IID_IVehicleRecordBase: TGUID = '{2CD96BBE-D926-4E9B-B8AD-C0F94AFDB963}';
  IID_IVehicleRecord: TGUID = '{8E6E3EE8-F473-4BFE-9A50-63085A69F9A0}';
  IID_IPedestrianRecordBase: TGUID = '{C51F1213-5973-4A33-83E6-14857313923D}';
  IID_IPedestrianRecord: TGUID = '{0C1927C8-F497-4A98-8525-2146A626985F}';
  IID_IEvaluationPercentileCollection: TGUID = '{849DE23D-8DD8-4696-AD41-9EBED0DB6A10}';
  IID_IEvaluationPercentileContainerBase: TGUID = '{8C3D5F08-B1A1-4106-8DF6-ED6DF0D65425}';
  IID_IEvaluationPercentileContainer: TGUID = '{D1B349BE-534A-4869-80FC-5B2AC8D1B622}';
  IID_IEvaluationPercentileBase: TGUID = '{5E590E3F-04F5-48B0-A3CE-6BB9EA9A6EDC}';
  IID_IEvaluationPercentile: TGUID = '{6F75DFB6-38D6-4F22-8AC5-7AC6E1D7C387}';
  IID_IFireEventCollection: TGUID = '{33669DCE-D44E-4124-8CB3-4FCF23C528EC}';
  IID_IFireEventContainerBase: TGUID = '{694E746F-5975-44DA-A837-36B5886392D6}';
  IID_IFireEventContainer: TGUID = '{78CE2844-5877-46D6-940A-0E7F6F16BAF2}';
  IID_IFireEventBase: TGUID = '{153B15D5-EC6A-4C3C-BBE1-68639609B72C}';
  IID_IFireEvent: TGUID = '{113F3BF3-0F10-43C9-BE41-056CD1BA29CF}';
  IID_IPlot3DQuantityCollection: TGUID = '{CC4C0BB2-1D5A-4700-A395-1B0566624F6A}';
  IID_IPlot3DQuantityContainerBase: TGUID = '{B4A1438E-736F-4CE3-AAE1-46366B8B352F}';
  IID_IPlot3DQuantityContainer: TGUID = '{21ECF1A1-FB79-4E58-A605-BACE3AB5D272}';
  IID_IPlot3DQuantityBase: TGUID = '{F1515DF3-D71A-4E0D-9296-DFFCB7D2F25D}';
  IID_IPlot3DQuantity: TGUID = '{34D06219-CD29-4A59-975F-3DF8C004BD9A}';
  IID_IFDSMeshCollection: TGUID = '{EA94205D-7645-4F05-81E7-3E44384A9FF7}';
  IID_IFDSMeshContainerBase: TGUID = '{66B0F3CE-E06A-47EC-9EFA-CBC8C2A971FE}';
  IID_IFDSMeshContainer: TGUID = '{F95108FF-1F5B-401D-8948-256559F383F6}';
  IID_IFlowBundleCollection: TGUID = '{82BB32CA-B6C8-4968-B4D0-FCF80102A5E4}';
  IID_IFlowBundleContainerBase: TGUID = '{A854533B-5F0E-4CBF-9AC0-81749EC15159}';
  IID_IFlowBundleContainer: TGUID = '{7B09A41E-8E75-46C6-9F84-4F7910C0C110}';
  IID_IFlowBundleBase: TGUID = '{969A365D-AB90-4AB9-B9EC-89E06EF9F89D}';
  IID_IFlowBundle: TGUID = '{FEF8AD7A-8A60-4C85-A465-89C80ABEF24B}';
  IID_IFlowBundleLinkCrossSectionCollection: TGUID = '{AF916324-0121-4052-8F20-482D2469AD70}';
  IID_IFlowBundleLinkCrossSectionContainerBase: TGUID = '{4113DFA0-374E-40F0-914E-469901251AF8}';
  IID_IFlowBundleLinkCrossSectionContainer: TGUID = '{7B46E802-05D9-492C-8C69-EE51BBB141AA}';
  IID_IFlowBundleLinkCrossSectionBase: TGUID = '{5057089B-AD38-4C85-BD34-94236C8B6A5C}';
  IID_IFlowBundleLinkCrossSection: TGUID = '{AA756ED3-50E5-42BA-80A6-9029380B6230}';
  IID_IFreeDistributionCollection: TGUID = '{58189ADE-B815-4044-8C98-99E3FFC64EE0}';
  IID_IFreeDistributionContainerBase: TGUID = '{2EAC71AC-EDCF-49FD-B165-77CA184ECAAF}';
  IID_IFreeDistributionContainer: TGUID = '{649085D2-E8F3-4D21-8593-7C81956FFACB}';
  IID_IInformationSign3DCollection: TGUID = '{CB7922DD-5894-4112-A3F1-6A1D33628353}';
  IID_IInformationSign3DContainerBase: TGUID = '{41360C4A-8C06-4C8C-9DF7-7BDA0FBC911E}';
  IID_IInformationSign3DContainer: TGUID = '{FCAD03D8-D7A5-4B3A-9EB1-85BE154F701F}';
  IID_IInformationSign3DBase: TGUID = '{D3124997-1B49-4C19-A33B-DFB1F70978FA}';
  IID_IInformationSign3D: TGUID = '{6FEADF2A-586E-4A88-B18E-FFEAC80A243C}';
  IID_IInformationSign3DContentRowCollection: TGUID = '{F8AE4E33-72B8-4AF2-A8E5-727BC3DF4DCC}';
  IID_IInformationSign3DContentRowContainerBase: TGUID = '{B84A2E0D-0F26-4D7E-B76D-A80620A898F1}';
  IID_IInformationSign3DContentRowContainer: TGUID = '{5FFF3ABA-0C1A-4763-A97F-4447BDFB4B19}';
  IID_IInformationSign3DContentRowBase: TGUID = '{5C1DAB5E-81D8-4663-B6B6-E3A7D4C27E2B}';
  IID_IInformationSign3DContentRow: TGUID = '{C7A211F5-EA60-4EBE-82C0-EF491F28EB91}';
  IID_ILatDriftSpeedFuncCollection: TGUID = '{4A55C8C9-F6BE-4051-B181-40EFE17331F2}';
  IID_ILatDriftSpeedFuncContainerBase: TGUID = '{F10393F6-A4C6-4EC9-8814-E20898A5CAE3}';
  IID_ILatDriftSpeedFuncContainer: TGUID = '{012322D6-1377-4B80-91E2-05A60915BA9F}';
  IID_ILevelContainerBase: TGUID = '{7228AA07-702B-4A98-9B2F-C8123D758AC4}';
  IID_ILevelContainer: TGUID = '{943F3D65-47A7-47A2-8E3F-32E7785F8318}';
  IID_ILinkBehaviorTypeCollection: TGUID = '{06E3CE3D-09DC-4C2C-B95E-4750E7ED70DF}';
  IID_ILinkBehaviorTypeContainerBase: TGUID = '{5CB0F4CF-77CB-469A-BBDC-5CFE584CEE8A}';
  IID_ILinkBehaviorTypeContainer: TGUID = '{7354AD07-CEAA-413F-932A-0230949BC4BF}';
  IID_ILinkContainerBase: TGUID = '{02F5C483-7257-4572-B27F-EBDFA4433431}';
  IID_ILinkContainer: TGUID = '{3B07E811-EBB6-4E53-86CD-279F0F380AAC}';
  IID_ILocationDistributionCollection: TGUID = '{4AB70787-83F9-4252-AEA9-7B7CFD4A1D76}';
  IID_ILocationDistributionContainerBase: TGUID = '{D79F6E54-65DB-4115-A7FB-2942AE7E87AC}';
  IID_ILocationDistributionContainer: TGUID = '{0B1782B0-7EC3-4674-A7A1-D9648A896DA3}';
  IID_IManagedLanesFacilityCollection: TGUID = '{3EB24A07-25AA-448B-B6FD-7D39AB1473FB}';
  IID_IManagedLanesFacilityContainerBase: TGUID = '{3A98CF40-A1A9-4666-9D69-A9E8ECEFC92C}';
  IID_IManagedLanesFacilityContainer: TGUID = '{C94675E8-FDA9-423C-BA77-F51FFEB8E3E0}';
  IID_IManagedLanesFacilityBase: TGUID = '{B91040A1-38E4-4F4D-958B-4F960CE3D3E1}';
  IID_IManagedLanesFacility: TGUID = '{4E192720-5E75-4F1D-B1CB-E72B1839415B}';
  IID_IVehClassDecisionModelCollection: TGUID = '{86040EA7-768D-4103-A3A6-26E0D861801E}';
  IID_IVehClassDecisionModelContainerBase: TGUID = '{5A11813E-2307-4FDD-90FF-8E9DD239F348}';
  IID_IVehClassDecisionModelContainer: TGUID = '{6615EBE8-6771-4F66-9605-8BD092FB7F4C}';
  IID_ITimeIntervalPricingModelCollection: TGUID = '{64E7E963-48AE-4BB5-80D9-DA63FA3002C6}';
  IID_ITimeIntervalPricingModelContainerBase: TGUID = '{A6C6793D-12B5-4420-B33D-A650F5767B13}';
  IID_ITimeIntervalPricingModelContainer: TGUID = '{725CDA13-FEF1-4C58-BA04-7D6C92C4FFC9}';
  IID_IMatrixCollection: TGUID = '{1595481A-F118-4A03-BC10-557F190F4383}';
  IID_IMatrixContainerBase: TGUID = '{C3481C4B-44CC-4316-AB4E-BDEDC06BDDAB}';
  IID_IMatrixContainer: TGUID = '{9FA89C77-221F-49C5-91E5-621ED03E66A2}';
  IID_IMaxAccelerationFunctionCollection: TGUID = '{CF0DC54F-1241-40AD-A504-1648B426FFDA}';
  IID_IMaxAccelerationFunctionContainerBase: TGUID = '{CAA12DEB-844D-4413-808A-CB420E111D84}';
  IID_IMaxAccelerationFunctionContainer: TGUID = '{0A5D1728-385C-4179-88EB-E8B2683854C6}';
  IID_IMaxDecelerationFunctionCollection: TGUID = '{59E711BB-4FA1-4C0B-AE3F-12C12152FA37}';
  IID_IMaxDecelerationFunctionContainerBase: TGUID = '{AC2B58DB-6E04-43D8-B5D1-8B9FD127DF61}';
  IID_IMaxDecelerationFunctionContainer: TGUID = '{7A64BA15-A3CC-4836-9D69-D7F5E4F2FEC9}';
  IID_IMesoEdgeContainerBase: TGUID = '{A473D16D-53D4-4101-B149-C1D4D7A51EE2}';
  IID_IMesoEdgeContainer: TGUID = '{6C6E7B16-E114-439B-ACC7-5DDE98702D0A}';
  IID_IMesoEdgeBase: TGUID = '{A66F8E11-3102-42CD-84FC-FF3E20739353}';
  IID_IMesoEdge: TGUID = '{9F99D68F-1EA6-4B06-9F7A-272EB13AA7FD}';
  IID_IMesoLaneCollection: TGUID = '{C508FD75-5497-40A4-9312-73DAC09F442A}';
  IID_IMesoLaneContainerBase: TGUID = '{4E482494-4B5E-440F-BA67-70A4C9FE2275}';
  IID_IMesoLaneContainer: TGUID = '{756F4B0E-80AC-48F5-840A-764D204ADFA2}';
  IID_IMesoLaneBase: TGUID = '{C8DAC55E-4D78-444B-9F3C-2FB7A4667B2C}';
  IID_IMesoLane: TGUID = '{983FC239-5944-431E-9D0B-118A3B7FFAED}';
  IID_IMesoNodeCollection: TGUID = '{BEE5572A-C8B2-4CE5-B85D-1BB85E15AF5D}';
  IID_IMesoNodeContainerBase: TGUID = '{51067B1E-30E2-4950-BF0E-70459E563D68}';
  IID_IMesoNodeContainer: TGUID = '{7A6594E6-67D0-4753-8B2C-7D9332307949}';
  IID_IModel2D3DDistributionCollection: TGUID = '{DEC79607-1EFF-48BE-8DAF-8F96648F9D88}';
  IID_IModel2D3DDistributionContainerBase: TGUID = '{F48364A8-8101-4004-A91A-79832B050029}';
  IID_IModel2D3DDistributionContainer: TGUID = '{90FBECEE-B6ED-4F87-9286-1A6C8D15FCFF}';
  IID_IModel2D3DCollection: TGUID = '{C0B44963-7A5A-4356-9F86-A56D1694D3A6}';
  IID_IModel2D3DContainerBase: TGUID = '{F576882D-D417-4594-9CA9-797FEB827D2E}';
  IID_IModel2D3DContainer: TGUID = '{49EB3947-1E60-4839-A945-93DFFF75BA27}';
  IID_INetParaBase: TGUID = '{5F03796E-1F2D-4DE5-B149-B44226666345}';
  IID_INetPara: TGUID = '{9CF0542C-8D7C-4175-BE04-FDB14C3E75C0}';
  IID_IPedestrianTypeBase: TGUID = '{492860E5-7838-426C-ACF4-0B497550AE70}';
  IID_IPedestrianType: TGUID = '{F499AB19-F19C-4042-B82D-415C75EC59C3}';
  IID_INodeContainerBase: TGUID = '{8DF7C19E-15C6-439F-B567-1CE7C7295464}';
  IID_INodeContainer: TGUID = '{F0E4F17E-F623-4DCE-A66C-0FC2FBE576BF}';
  IID_IObstacleCollection: TGUID = '{1A1AB988-6138-4D46-B469-CD33C030B1BF}';
  IID_IObstacleContainerBase: TGUID = '{0CBB4F15-B1CA-418E-914C-3626D7A81843}';
  IID_IObstacleContainer: TGUID = '{FCB3C286-E6B4-45E9-AA89-F3559BA6B6C9}';
  IID_IObstacleBase: TGUID = '{73385E85-5621-4A95-8F30-B132CEBE6844}';
  IID_IObstacle: TGUID = '{706E2D6A-3499-4644-9195-F6CBFDE4D284}';
  IID_IOccupancyDistributionCollection: TGUID = '{445F6FD6-71C3-40A5-9AFD-6C9A29B00F3A}';
  IID_IOccupancyDistributionContainerBase: TGUID = '{76FC5EC9-C887-43CA-B360-90D64090A6AA}';
  IID_IOccupancyDistributionContainer: TGUID = '{F9566143-DD5C-498E-A0F3-BFE658002658}';
  IID_IPTLineContainerBase: TGUID = '{47A603C2-CA7F-4E08-A907-81B36301BF57}';
  IID_IPTLineContainer: TGUID = '{77083250-C835-4471-8269-DE818316B0FF}';
  IID_IPTLineBase: TGUID = '{D2A668EA-276A-4FDE-ABC3-409FDE6E7205}';
  IID_IPTLine: TGUID = '{93B723CB-BFE3-43F2-8231-C50A015C6848}';
  IID_IDepartureTimeCollection: TGUID = '{4F4B46E1-E901-43CA-9B58-8DB33EB4945D}';
  IID_IDepartureTimeContainerBase: TGUID = '{48D33AA4-12D9-44E7-A153-59924B7FB8AB}';
  IID_IDepartureTimeContainer: TGUID = '{DB4F9180-8DD3-46FD-8BAC-21FC90F8C1C0}';
  IID_IDepartureTimeBase: TGUID = '{78A017F2-A048-4AEA-9DD4-6D958B22E0C5}';
  IID_IDepartureTime: TGUID = '{A9BDC4EB-D62F-4491-81BD-C6681AF35607}';
  IID_IPTLineStopContainerBase: TGUID = '{642420B3-00BD-44F0-A9DA-55D4149DE9C4}';
  IID_IPTLineStopContainer: TGUID = '{734172E6-DBE5-4B42-BDCB-8D8E1CF04800}';
  IID_IPTStopContainerBase: TGUID = '{8D467EA6-8236-4003-9E1A-7F887137EA51}';
  IID_IPTStopContainer: TGUID = '{BEDC9F26-B53B-4B75-B684-A08E94F2C164}';
  IID_IParkingLotContainerBase: TGUID = '{E9ACF97C-CFD7-4FD2-952A-7D3C51E0902D}';
  IID_IParkingLotContainer: TGUID = '{86D69ACB-D906-47E9-9B32-4D22EC5EE838}';
  IID_IPathContainerBase: TGUID = '{D79DEF8C-A9CF-4128-A903-47A3E485A028}';
  IID_IPathContainer: TGUID = '{DBC53777-E63B-4F4C-847C-30B0DE373DAF}';
  IID_IPathBase: TGUID = '{7EB31864-927D-4A9F-8982-0D4C78E6D492}';
  IID_IPath: TGUID = '{B2098E97-5B65-456D-ADA3-7F710E67F66D}';
  IID_IVehicleBase: TGUID = '{1099CDA7-3EF0-44E5-B05C-2400CBEBFFF6}';
  IID_IVehicle: TGUID = '{3829984D-F2C6-477E-81BD-2B6F5A88E3A4}';
  IID_IVehVehClassSpeedMisestFactCollection: TGUID = '{82210EAB-FC87-4BBF-86DE-159FB8B9817B}';
  IID_IVehVehClassSpeedMisestFactContainerBase: TGUID = '{6592195F-9557-449C-9DDF-72041DD6F7EF}';
  IID_IVehVehClassSpeedMisestFactContainer: TGUID = '{FB284DF5-24DE-4672-A8FA-E0BC39A1788D}';
  IID_IVehicleRouteStaticBase: TGUID = '{85C4D332-C3F1-4383-8180-1894F2954C05}';
  IID_IVehicleRouteStatic: TGUID = '{5FF785C2-8307-4662-8B1C-D42AA8537493}';
  IID_IVehicleRoutingDecisionStaticBase: TGUID = '{570931A7-4859-4685-8F43-4A573860B6A4}';
  IID_IVehicleRoutingDecisionStatic: TGUID = '{98210758-A4EF-4B27-80E5-C4944DE4E07F}';
  IID_IVehicleRouteStaticContainerBase: TGUID = '{B473ACE5-7511-433F-8B51-F618233A3D21}';
  IID_IVehicleRouteStaticContainer: TGUID = '{8608AEB5-0E1E-425B-8EDD-83E803725066}';
  IID_IVehicleRoutePartialBase: TGUID = '{7DD977C5-CD0A-4970-A23F-866F2712C1A7}';
  IID_IVehicleRoutePartial: TGUID = '{61FB5B4C-9A4F-44B6-A6E5-0EA05FBDF6E2}';
  IID_IVehicleRoutingDecisionPartialBase: TGUID = '{05C97DD3-EE27-4A55-B4AA-6C96E5EC7716}';
  IID_IVehicleRoutingDecisionPartial: TGUID = '{73CE4329-C571-4A70-9270-015FC87EE525}';
  IID_IVehicleRoutePartialContainerBase: TGUID = '{F5CDD3B9-0F2B-4D02-A98D-33027CC11FA3}';
  IID_IVehicleRoutePartialContainer: TGUID = '{90AD462C-163E-4D6F-B644-61B640061DBF}';
  IID_IVehicleRouteManagedLanesBase: TGUID = '{30FB7B5E-AB5E-4F3C-9480-E9513959545C}';
  IID_IVehicleRouteManagedLanes: TGUID = '{5168796D-909E-49A8-9C72-DD091E7A9243}';
  IID_IVehicleRoutingDecisionManagedLanesBase: TGUID = '{63E3BC2C-AA5E-48CD-9ED2-D0A822206B27}';
  IID_IVehicleRoutingDecisionManagedLanes: TGUID = '{E7B5D786-6944-48AB-843E-9CB57839AD20}';
  IID_IVehicleRouteManagedLanesContainerBase: TGUID = '{1FA0554F-734E-4061-94C5-78B2F48F759C}';
  IID_IVehicleRouteManagedLanesContainer: TGUID = '{6626D429-26DA-45BA-85C4-DADB192D193E}';
  IID_IVehicleRouteParkingBase: TGUID = '{FCD371B0-B53F-4A33-BC5A-5EFED124B7CE}';
  IID_IVehicleRouteParking: TGUID = '{5AFA3CA2-5B82-474B-8D71-ADD1E0AAAAEA}';
  IID_IVehicleRoutingDecisionParkingBase: TGUID = '{08BAB03B-CB87-4837-81D4-3AAE780018AD}';
  IID_IVehicleRoutingDecisionParking: TGUID = '{6AA5555C-1387-43B6-9D1A-23CDB4E87F41}';
  IID_IVehicleRouteParkingContainerBase: TGUID = '{A7729CCF-575F-4B0D-A7B1-C502BEA40FF4}';
  IID_IVehicleRouteParkingContainer: TGUID = '{72341D0A-5A3E-46FB-969E-5078E884FBBC}';
  IID_ITimeIntervalParkingRateCollection: TGUID = '{E6480FA2-D097-4337-9EF4-FB9F1CCD76A3}';
  IID_ITimeIntervalParkingRateContainerBase: TGUID = '{16EC527E-85EF-47B3-B856-D94384CE305C}';
  IID_ITimeIntervalParkingRateContainer: TGUID = '{F2E73BB3-B3CD-4B33-94D0-E0ACE581826E}';
  IID_IVehicleRoutePartialPTBase: TGUID = '{F501FA7C-FEA8-4725-B620-9022EC969979}';
  IID_IVehicleRoutePartialPT: TGUID = '{C2EAD672-E361-4252-81C6-D20DB7A0B8C5}';
  IID_IPartialPTLineStopContainerBase: TGUID = '{8AEC7491-808D-4797-9857-7DDCD1002D06}';
  IID_IPartialPTLineStopContainer: TGUID = '{6B6D4509-2FCE-4FA3-986E-E809F47A86BE}';
  IID_IVehicleRoutingDecisionPartialPTBase: TGUID = '{A51008D7-2F62-4980-AEB8-396C56B5ECA2}';
  IID_IVehicleRoutingDecisionPartialPT: TGUID = '{522764FF-2B42-4ADD-AA98-BAABF12FC461}';
  IID_IVehicleRoutePartialPTContainerBase: TGUID = '{CB019ACA-07D6-41BA-B1E4-ADB6A982323C}';
  IID_IVehicleRoutePartialPTContainer: TGUID = '{576665FB-E02D-4E4D-8245-C127AF0B9399}';
  IID_IPavementMarkingCollection: TGUID = '{EB527A96-A0D5-42D1-BC1E-A15E8D92152B}';
  IID_IPavementMarkingContainerBase: TGUID = '{2707B03D-F2AF-41F6-813B-7F2739213A9F}';
  IID_IPavementMarkingContainer: TGUID = '{677FE03B-39CE-4473-AA7D-53F8CECECCCF}';
  IID_IPavementMarkingBase: TGUID = '{07C766C0-6588-440E-860D-4996E59462E3}';
  IID_IPavementMarking: TGUID = '{B9D75B21-4723-41A6-82ED-FA7B6377E689}';
  IID_IPedestrianAttributeDecisionCollection: TGUID = '{80A06BB9-4503-4AE6-AE19-527770523804}';
  IID_IPedestrianAttributeDecisionContainerBase: TGUID = '{97E39040-F5C3-4502-944D-A2EE77F44A0D}';
  IID_IPedestrianAttributeDecisionContainer: TGUID = '{372B2F82-1309-4FBC-ABCC-4F38652C5393}';
  IID_IPedestrianAttributeDecisionBase: TGUID = '{3D0C3771-0558-4F6A-9A52-F5832F2FFF40}';
  IID_IPedestrianAttributeDecision: TGUID = '{5F818864-779F-4612-9B38-52EAB406FDAA}';
  IID_IRampBase: TGUID = '{49795547-4AD4-4191-9CDA-E46FD2DE0EAC}';
  IID_IRamp: TGUID = '{A42E9ECA-F203-4C16-9627-7DD6B508D2AD}';
  IID_IPedestrianClassContainerBase: TGUID = '{1E6F764B-80AC-465D-9DA0-B861CA7C9283}';
  IID_IPedestrianClassContainer: TGUID = '{7547A314-C63B-4AFE-B3F5-F251A0BBC75B}';
  IID_IPedestrianCompositionCollection: TGUID = '{2DDF327A-AF2C-49DA-BE02-E8AF0B89DCA1}';
  IID_IPedestrianCompositionContainerBase: TGUID = '{851178F8-9C80-416D-AD59-CA802A72721E}';
  IID_IPedestrianCompositionContainer: TGUID = '{C342BF27-F447-4AF8-B1ED-42986A86677C}';
  IID_IPedestrianCompositionBase: TGUID = '{1A7826CA-6B81-4A53-9F1A-E8E08EC47998}';
  IID_IPedestrianComposition: TGUID = '{5BEC0534-54F8-4EC2-871C-011DC351074F}';
  IID_IPedestrianCompositionRelativeFlowCollection: TGUID = '{A798D5DA-450B-4F70-8F21-FC7D02A2CBCA}';
  IID_IPedestrianCompositionRelativeFlowContainerBase: TGUID = '{4353AD08-F71C-49BF-AED7-3306636FB906}';
  IID_IPedestrianCompositionRelativeFlowContainer: TGUID = '{F78CD02E-2AD8-4A47-A131-8B44247EBD2C}';
  IID_IPedestrianCompositionRelativeFlowBase: TGUID = '{B4C01184-6236-41E3-9BAD-87B84DA29E8B}';
  IID_IPedestrianCompositionRelativeFlow: TGUID = '{A35A2843-4073-4001-985F-4ADCBA93E249}';
  IID_IPedestrianInputContainerBase: TGUID = '{DE9E540E-0AB6-4CBE-A5F1-CAC0555BA9E9}';
  IID_IPedestrianInputContainer: TGUID = '{26677FE0-DB95-4C0A-ACED-14D1B6A37531}';
  IID_IPedestrianInputBase: TGUID = '{CCC3FAD4-684C-489C-96B1-3C64B660AA18}';
  IID_IPedestrianInput: TGUID = '{49D9A094-37E0-4D41-BA3C-9F810F08D879}';
  IID_ITimeIntervalPedVolumeCollection: TGUID = '{8915952C-D2A9-443B-9115-738374251253}';
  IID_ITimeIntervalPedVolumeContainerBase: TGUID = '{134B2ADC-79C6-45D7-B5BC-1E7243D04C43}';
  IID_ITimeIntervalPedVolumeContainer: TGUID = '{82E15A42-29F8-4986-A3C6-6C50ADE2D4A5}';
  IID_IPedestrianNetworkPerformanceMeasurementBase: TGUID = '{E9687D32-163B-4ABB-BD84-63B801EBA8FE}';
  IID_IPedestrianNetworkPerformanceMeasurement: TGUID = '{346B9614-86E8-42DF-B12B-5EA87478C6CB}';
  IID_IPedestrianRoutingDecisionPartialContainerBase: TGUID = '{B25627AB-BF33-4228-AD81-6D07C5A5787A}';
  IID_IPedestrianRoutingDecisionPartialContainer: TGUID = '{DD5BF0F8-2A69-4478-A4AF-750CC9FC9C86}';
  IID_IPedestrianRoutingDecisionPartialBase: TGUID = '{75136365-8938-47A1-B47A-A68D136FB097}';
  IID_IPedestrianRoutingDecisionPartial: TGUID = '{39D52D00-376A-42CA-8DFF-EA77FE8E8C22}';
  IID_IPedestrianRoutePartialContainerBase: TGUID = '{C7C1D0A2-A952-4023-9B51-D248F2B92A1A}';
  IID_IPedestrianRoutePartialContainer: TGUID = '{E82696A9-1678-448D-A12D-B7A2C2CA7B87}';
  IID_IPedestrianRoutePartialBase: TGUID = '{26E10156-2266-46F3-9A89-7F981C537438}';
  IID_IPedestrianRoutePartial: TGUID = '{F49F8345-0B4C-40B9-9E59-E470D1891182}';
  IID_IPedestrianRouteChoiceAreaCollection: TGUID = '{0E3D3342-8F55-4491-8041-A2C5A8CD6F83}';
  IID_IPedestrianRouteChoiceAreaContainerBase: TGUID = '{265E43B8-8842-451B-A212-7155BD886E6B}';
  IID_IPedestrianRouteChoiceAreaContainer: TGUID = '{FF2BF5DE-2085-486B-863F-31BA61BCFF27}';
  IID_IPedestrianRouteLocationContainerBase: TGUID = '{A85A0B20-67A8-49D5-ADAA-A6C79ED80FC2}';
  IID_IPedestrianRouteLocationContainer: TGUID = '{CDA0FCA2-1A12-4390-9454-7249F2199786}';
  IID_IPedestrianRouteLocationBase: TGUID = '{529A7B68-1FED-4F3B-81D3-97B2DE04E178}';
  IID_IPedestrianRouteLocation: TGUID = '{63EC03EC-C43E-4A72-BF05-16544121BF0C}';
  IID_IPedestrianRouteStaticBase: TGUID = '{FE241E81-9D7B-413F-B668-F6314AEF34DC}';
  IID_IPedestrianRouteStatic: TGUID = '{4EB9CFAA-35F8-4608-B3D7-09C3C00170A2}';
  IID_IPedestrianRoutingDecisionStaticBase: TGUID = '{4FBA1895-94B2-467B-8369-02395C073D3E}';
  IID_IPedestrianRoutingDecisionStatic: TGUID = '{90B31894-10F4-438D-BCDF-A1ED28E2EBC0}';
  IID_IPedestrianRouteStaticContainerBase: TGUID = '{0CDA85A4-7965-4D8C-ABA8-9CD1179CF458}';
  IID_IPedestrianRouteStaticContainer: TGUID = '{EE25DE42-F35D-4889-96D4-157CBD9D63A3}';
  IID_IPedestrianRoutingDecisionStaticContainerBase: TGUID = '{06E49ADE-3B84-4609-9740-5D5B467E0747}';
  IID_IPedestrianRoutingDecisionStaticContainer: TGUID = '{6ED2E6B9-B3F1-4862-90C2-0D3EA2A1265E}';
  IID_IPedestrianTravelTimeMeasurementCollection: TGUID = '{F16BFACE-A436-476E-9F02-69E30ED3AAB0}';
  IID_IPedestrianTravelTimeMeasurementContainerBase: TGUID = '{6EC559FD-007D-4226-BD77-071F1424E938}';
  IID_IPedestrianTravelTimeMeasurementContainer: TGUID = '{A4B19038-1FA9-45BB-BE77-7C2D5886BC15}';
  IID_IPedestrianTravelTimeMeasurementBase: TGUID = '{0CA88BFA-9709-4668-981A-D9CD01CA508E}';
  IID_IPedestrianTravelTimeMeasurement: TGUID = '{01FE8615-3053-41B7-9179-A7DAA36052C9}';
  IID_IPedestrianTypeContainerBase: TGUID = '{8C863422-31B6-4B6A-A1B8-98BC8453D49B}';
  IID_IPedestrianTypeContainer: TGUID = '{AD56EAD9-691E-4BDE-A588-7C74450F3D9E}';
  IID_IPedestrianContainerBase: TGUID = '{A120FB47-6BCF-4BA5-ACB9-7311DFB422DC}';
  IID_IPedestrianContainer: TGUID = '{647FE170-2B56-4958-9F76-752B1CCD0906}';
  IID_IPedestrianBase: TGUID = '{0F3CDD19-04C0-42D2-A21C-53A70F6D6C2D}';
  IID_IPedestrian: TGUID = '{CCB1B250-D56F-4749-9518-ABF94E339046}';
  IID_IPowerDistributionCollection: TGUID = '{F8C7948B-EAAC-4DF5-A511-B80D795AA7A0}';
  IID_IPowerDistributionContainerBase: TGUID = '{817DF1FA-D77E-47F6-ACAA-75F237A286CD}';
  IID_IPowerDistributionContainer: TGUID = '{387D7D17-B2AE-483D-B467-160D9CAAEC78}';
  IID_IPriorityRuleContainerBase: TGUID = '{3F59A365-8E72-4BEE-8314-325359E01573}';
  IID_IPriorityRuleContainer: TGUID = '{EC679C62-6D6B-4440-9EB6-97EE73F3D2DB}';
  IID_IPriorityRuleBase: TGUID = '{BBE52220-3B07-4CDA-B6FC-B5DFB2F263B7}';
  IID_IPriorityRule: TGUID = '{DF8032BC-BB86-439C-80F5-601C34365BCC}';
  IID_IConflictMarkerContainerBase: TGUID = '{8DB9C229-B0C8-4914-A5D7-78C7D63C2904}';
  IID_IConflictMarkerContainer: TGUID = '{C923FB59-2C09-49D3-816B-3880147E299D}';
  IID_IConflictMarkerBase: TGUID = '{00BDB322-544E-4EA9-8BCE-C7462C2BA564}';
  IID_IConflictMarker: TGUID = '{E90C469F-5607-4B69-9CF1-884FF9BFC193}';
  IID_IQueueCounterContainerBase: TGUID = '{D1A94CF1-8CFD-483E-A5A7-B9D39CD7E3DE}';
  IID_IQueueCounterContainer: TGUID = '{4B174CD1-1AB0-4B8B-A2C8-C88D9764B5B7}';
  IID_IQueueCounterBase: TGUID = '{4CF58F1B-CAF9-4230-B6B4-EF042F95A506}';
  IID_IQueueCounter: TGUID = '{AF892E62-FB85-42EA-A14F-BF517CEC6664}';
  IID_IRampCollection: TGUID = '{E8F9E867-8ADC-49F6-9ED3-B00E39DC8795}';
  IID_IRampContainerBase: TGUID = '{BA4ACE73-E5F0-48F0-B625-745F4D114853}';
  IID_IRampContainer: TGUID = '{A1FD8CC1-68E7-4675-9A48-29ADC6D6B366}';
  IID_IReducedSpeedAreaContainerBase: TGUID = '{835A2D11-FF8F-4782-A0C5-2A9E36840792}';
  IID_IReducedSpeedAreaContainer: TGUID = '{A51010E6-B7CB-459D-9248-0164E6756262}';
  IID_IReducedSpeedAreaBase: TGUID = '{07C8F11A-A540-4599-B5FA-CDB2FE224047}';
  IID_IReducedSpeedArea: TGUID = '{2D541964-9CE9-48AD-8527-E288BBA0FFD5}';
  IID_IVehClassSpeedReductionCollection: TGUID = '{386B11D3-A9CC-445D-ACCE-0FC8757CCCDD}';
  IID_IVehClassSpeedReductionContainerBase: TGUID = '{08236594-19EA-479D-8CAC-E449FBF38ED9}';
  IID_IVehClassSpeedReductionContainer: TGUID = '{4EC9682C-0AED-4856-97B7-639A02772AA1}';
  IID_IVehClassSpeedReductionBase: TGUID = '{36696ACA-74D5-4260-85CF-FC2453FEED37}';
  IID_IVehClassSpeedReduction: TGUID = '{0E90499B-F9D5-4F9B-B06F-B6DF8D7D3222}';
  IID_ISCCommunicationCollection: TGUID = '{D4351A12-8300-4DCC-A7B5-9D10EA986389}';
  IID_ISCCommunicationContainerBase: TGUID = '{96F70AA7-067E-4A74-82DD-38D9422F81FE}';
  IID_ISCCommunicationContainer: TGUID = '{CA17F16C-6556-4990-9096-A1DCBC3E48BB}';
  IID_ISCCommunicationBase: TGUID = '{DF3C62C7-F0AA-44E8-A63D-6415633F4B70}';
  IID_ISCCommunication: TGUID = '{09050072-D1D0-4D4A-82D1-7EC2A2E2AF81}';
  IID_IScriptCollection: TGUID = '{ED0459B6-4D84-4E8C-8DC0-8ACDDA0B146D}';
  IID_IScriptContainerBase: TGUID = '{D7B32761-C462-45D4-8AF2-300A4FC37BBB}';
  IID_IScriptContainer: TGUID = '{05EE0AD1-C582-43EE-8CC2-4BDE2BDB21EE}';
  IID_IScriptBase: TGUID = '{F1D5BA5A-3358-4EA0-8152-BA0BB40BBE62}';
  IID_IScript: TGUID = '{5703918C-DB20-46E9-BC90-09430F0CFAF6}';
  IID_ISectionContainerBase: TGUID = '{249B8F7D-45D2-41D5-BF1F-08E263F45F3E}';
  IID_ISectionContainer: TGUID = '{E6EA2DFF-7180-4D09-B530-8CC6E7528533}';
  IID_ISectionBase: TGUID = '{D967759B-B0BD-4447-B1BC-D44E24381057}';
  IID_ISection: TGUID = '{99D1C75E-E163-4530-9507-F9C593C8D7A3}';
  IID_ISignalControllerCollection: TGUID = '{25336DEA-F9A7-4000-9708-46979BD63249}';
  IID_ISignalControllerContainerBase: TGUID = '{0A406036-8E6D-4B67-B8E3-66E3EBCBE644}';
  IID_ISignalControllerContainer: TGUID = '{B4F21CFF-E705-49D1-841D-5B5F3BB09137}';
  IID_ISignalHeadContainerBase: TGUID = '{092C5649-8576-4715-A848-CDCBFA53D0FF}';
  IID_ISignalHeadContainer: TGUID = '{3EFBE8BE-373F-4202-868A-4AA0998E07EB}';
  IID_ISignalHeadBase: TGUID = '{0585BCE1-B71B-4FE1-91BE-A65F52888E0F}';
  IID_ISignalHead: TGUID = '{F560FFCC-B59B-42FF-9381-284FC599E694}';
  IID_ITrafficSignal3DCollection: TGUID = '{61C29214-773A-4526-9585-471687BAC192}';
  IID_ITrafficSignal3DContainerBase: TGUID = '{8C7F5556-4D9C-491E-A3C3-C35EBC4BEFDA}';
  IID_ITrafficSignal3DContainer: TGUID = '{361A27A3-A7EB-457E-ACFD-88BC87588AAD}';
  IID_ITrafficSignal3DBase: TGUID = '{AEB25F66-BFB4-477C-AC8D-D7675F9261B6}';
  IID_ITrafficSignal3D: TGUID = '{8CA21489-EA75-4444-ACAC-2024A86FA57E}';
  IID_ISignalArm3DCollection: TGUID = '{EC81A101-8C6E-4807-AF77-683FBB0CDC71}';
  IID_ISignalArm3DContainerBase: TGUID = '{05747882-FBE4-4EEC-A4AF-9FBDB705BCAF}';
  IID_ISignalArm3DContainer: TGUID = '{956A6CD4-787D-4217-B227-12AEF87CFFBC}';
  IID_ISignalArm3DBase: TGUID = '{287AAF02-434B-4F7A-ADA1-2463749BA2FC}';
  IID_ISignalArm3D: TGUID = '{68845131-BF02-4EE1-A784-782A36457E95}';
  IID_ISignalHead3DCollection: TGUID = '{60E07CB8-F682-45EB-9B4C-80A3AE8408B2}';
  IID_ISignalHead3DContainerBase: TGUID = '{EC6D7029-4072-4E10-A56F-7E0E8EC35782}';
  IID_ISignalHead3DContainer: TGUID = '{498FE5F8-5C23-486C-8501-DFF84B591355}';
  IID_ISignalHead3DBase: TGUID = '{02A82836-569C-497E-8A4B-80AF348DA981}';
  IID_ISignalHead3D: TGUID = '{E2864996-8168-4C81-834E-012FE3F87463}';
  IID_ITrafficSign3DCollection: TGUID = '{820EC3FD-5681-4AD5-9F3A-39250E54F51E}';
  IID_ITrafficSign3DContainerBase: TGUID = '{F967D7FD-9DC6-4E23-981A-2D37CF320C43}';
  IID_ITrafficSign3DContainer: TGUID = '{4906D52F-21B7-4DF8-8968-23E13C9EBD18}';
  IID_ITrafficSign3DBase: TGUID = '{ACF9848A-FDCE-4A10-AEA3-639F17EFB360}';
  IID_ITrafficSign3D: TGUID = '{7BBBD0F8-C847-45FB-ADD4-EC0B320C91DD}';
  IID_IStreetlight3DCollection: TGUID = '{F13016CC-1CBA-478B-9637-48D2EB0EF595}';
  IID_IStreetlight3DContainerBase: TGUID = '{59584560-A04F-4790-A77D-7759A43682F6}';
  IID_IStreetlight3DContainer: TGUID = '{E8D927B8-317A-42B4-89CC-B801428F7360}';
  IID_IStreetlight3DBase: TGUID = '{B1A915EF-331C-47B6-84F8-3818164CD003}';
  IID_IStreetlight3D: TGUID = '{6FCE6CD0-575F-4652-B90E-E2ABE814BEEB}';
  IID_ISimulationBase: TGUID = '{AFEAD6A3-9D82-48BD-AB41-5590452BF7FA}';
  IID_ISimulation: TGUID = '{8E31AAEC-F42D-4ED1-85D6-B02A90932041}';
  IID_ISimulationRunCollection: TGUID = '{C989B6D1-40F5-45D3-8B92-F4D1CB9B5610}';
  IID_ISimulationRunContainerBase: TGUID = '{7B16323F-8BBC-4652-BB98-CC59B5267E66}';
  IID_ISimulationRunContainer: TGUID = '{7B7DFDFB-D627-4215-A505-605BC4C1A0AF}';
  IID_ISimulationRunBase: TGUID = '{484F3A85-8311-42BE-86E9-F8A19C79AA52}';
  IID_ISimulationRun: TGUID = '{A21F4373-9873-4B48-AF07-58FDC1B69F9F}';
  IID_IStatic3DModelCollection: TGUID = '{982F2FF7-4C91-4090-954D-81648ABF866C}';
  IID_IStatic3DModelContainerBase: TGUID = '{A2F87DF5-148F-4184-B39F-CD22C4A9DCD5}';
  IID_IStatic3DModelContainer: TGUID = '{A5CCCCDB-7EF0-4315-947A-8C4231772F4C}';
  IID_IStatic3DModelBase: TGUID = '{1B2C11D0-2944-474C-ABFC-A647C9D720FC}';
  IID_IStatic3DModel: TGUID = '{39434C68-9BED-4B63-8CB5-9FF51D8C7F3E}';
  IID_IStopSignContainerBase: TGUID = '{A6D8BDD3-07C3-4D45-9D0E-1C7A98EADB39}';
  IID_IStopSignContainer: TGUID = '{ABB53166-391B-479E-868D-999A9B095E21}';
  IID_IStopSignBase: TGUID = '{2D15DE1C-A7B5-430B-B49E-D354862A781B}';
  IID_IStopSign: TGUID = '{C297F20E-8134-4A62-8862-3B86B53E6D1F}';
  IID_IVehClassDwellTimeDistributionCollection: TGUID = '{24CF68D6-A29F-45C7-AFFF-6AE1EA6D86F0}';
  IID_IVehClassDwellTimeDistributionContainerBase: TGUID = '{2D134C95-C72C-4FED-9233-75CF8FC84FDD}';
  IID_IVehClassDwellTimeDistributionContainer: TGUID = '{7A397F1F-EC1D-408E-860B-5FAD3D577634}';
  IID_IVehClassDwellTimeDistributionBase: TGUID = '{75BC0F84-3A2B-4360-B3FE-10932F24BFB4}';
  IID_IVehClassDwellTimeDistribution: TGUID = '{EE557C7B-8293-47A4-9D4C-2CA3AA6DD839}';
  IID_IStoryboardCollection: TGUID = '{CA971839-9EDC-470D-B897-2038E41DF48A}';
  IID_IStoryboardContainerBase: TGUID = '{2DB3493D-6B7E-4841-8B11-3A118EC693F1}';
  IID_IStoryboardContainer: TGUID = '{DAB2E943-9823-45D4-AEC8-BDBE1A605859}';
  IID_IStoryboardBase: TGUID = '{BD6BAC53-0041-425B-95BA-11A3E29B797E}';
  IID_IStoryboard: TGUID = '{60D1A9E0-2F24-4F74-9228-0B27C90F669F}';
  IID_IKeyframeCollection: TGUID = '{0CF68B99-96E6-4E4F-8868-1428EC58D0FE}';
  IID_IKeyframeContainerBase: TGUID = '{4E575E96-883A-477F-977E-FCBA231E9F1B}';
  IID_IKeyframeContainer: TGUID = '{C16BF8AE-DB75-411D-A6DD-5F64FBA76BA5}';
  IID_IKeyframeBase: TGUID = '{57FBF21B-7F75-4716-8EB8-C5722486092E}';
  IID_IKeyframe: TGUID = '{8071E5C9-D455-47A9-AE1C-17CC79446D6B}';
  IID_ITimeDistributionCollection: TGUID = '{BE4C999A-EBEA-4344-B5D7-4A8E700106F3}';
  IID_ITimeDistributionContainerBase: TGUID = '{A2728A78-BE27-4C92-9A61-685F54A6A162}';
  IID_ITimeDistributionContainer: TGUID = '{69D8E2F7-9590-4BCB-8037-79DFBCF779B6}';
  IID_ITimeIntervalSetCollection: TGUID = '{1DDF61AF-F69A-4535-B98D-DA4BA5011996}';
  IID_ITimeIntervalSetContainerBase: TGUID = '{1E6A3C4D-8188-403E-B063-686440BA5BF0}';
  IID_ITimeIntervalSetContainer: TGUID = '{B43B2F39-55BD-4A7E-93AB-C84602818E30}';
  IID_ITollPricingCalculationModelCollection: TGUID = '{5BBCE65E-93DB-4BA7-9E06-42785C6A37EE}';
  IID_ITollPricingCalculationModelContainerBase: TGUID = '{FCEA9773-E129-42C0-BADC-056550ED2962}';
  IID_ITollPricingCalculationModelContainer: TGUID = '{C6703BBD-AB8F-4914-BA24-A31D1D7DDF8A}';
  IID_ITollPricingCalculationModelBase: TGUID = '{37002997-5CAE-4BAD-B4E2-21FE339EAD5A}';
  IID_ITollPricingCalculationModel: TGUID = '{CE7B90FB-D04C-4D5D-8DFC-17C1D224ACA2}';
  IID_ITollPricingCalculationModelElementCollection: TGUID = '{854EA3E5-8803-4E4B-AFEB-313DA4297248}';
  IID_ITollPricingCalculationModelElementContainerBase: TGUID = '{909C1525-66E7-41E0-8923-AF13D6C07D57}';
  IID_ITollPricingCalculationModelElementContainer: TGUID = '{A9EAA809-A185-461E-AA2B-48DC0D300F10}';
  IID_IUserDefinedAttributeCollection: TGUID = '{D1CED0D7-3C67-493B-A6DF-918BE588A6CA}';
  IID_IUserDefinedAttributeContainerBase: TGUID = '{28307507-D934-4CE5-8ECA-3E87C065E4D5}';
  IID_IUserDefinedAttributeContainer: TGUID = '{EB8BED10-67D8-41A2-AFC9-DF3904CC67D3}';
  IID_IUserDefinedAttributeBase: TGUID = '{E5B8E5FC-9A92-4878-AF2E-9D093027B2E2}';
  IID_IUserDefinedAttribute: TGUID = '{809710B6-E357-481E-9581-AA1892882D4B}';
  IID_IVehicleAttributeDecisionCollection: TGUID = '{EB10C714-6CEA-47AD-8D32-17DAD1514515}';
  IID_IVehicleAttributeDecisionContainerBase: TGUID = '{BD104C67-DC5D-470F-BC6C-194588B11980}';
  IID_IVehicleAttributeDecisionContainer: TGUID = '{31F034A3-E29F-47EE-8E07-7F9730A3DB45}';
  IID_IVehicleAttributeDecisionBase: TGUID = '{4F229C37-C80C-45F7-B99E-0CCAB7775C2F}';
  IID_IVehicleAttributeDecision: TGUID = '{151237AD-861C-49F9-9F89-0FAA98582C3D}';
  IID_IVehicleClassContainerBase: TGUID = '{67F9C140-E35C-4BC6-976D-FAA347F15DE5}';
  IID_IVehicleClassContainer: TGUID = '{C00C6E99-6E6A-4590-A511-3F46E4C854F4}';
  IID_IVehicleCompositionCollection: TGUID = '{F7B23C02-8B08-4B1C-996A-EDA762118B67}';
  IID_IVehicleCompositionContainerBase: TGUID = '{EA3266D8-CC24-47D1-ACC0-452EECE347DB}';
  IID_IVehicleCompositionContainer: TGUID = '{5DD92028-8C7F-4E31-A50E-755BA81C0FEC}';
  IID_IVehicleInputContainerBase: TGUID = '{B60574F0-7F0C-47E2-A47A-45FF57C819B7}';
  IID_IVehicleInputContainer: TGUID = '{4F793BC8-7E0F-4A0E-ABCD-3324C0A5E486}';
  IID_IVehicleInputBase: TGUID = '{11810758-D2F1-4262-83E4-45DBD3573DB8}';
  IID_IVehicleInput: TGUID = '{FAF15F5C-8D5F-41AB-BACD-9E6433B21BC6}';
  IID_ITimeIntervalVehVolumeCollection: TGUID = '{794EE991-B3F7-4F87-B7B0-53E6571B9EF2}';
  IID_ITimeIntervalVehVolumeContainerBase: TGUID = '{EE331888-5E60-4D5A-A6BA-5C16B0642F09}';
  IID_ITimeIntervalVehVolumeContainer: TGUID = '{3583D881-CBBD-481A-99E9-07D4AE819199}';
  IID_IVehicleNetworkPerformanceMeasurementBase: TGUID = '{2D8B7C72-980D-409C-A3BC-A0CA3D645B0A}';
  IID_IVehicleNetworkPerformanceMeasurement: TGUID = '{FE03F0D0-35CA-443A-A411-DF36516D7F34}';
  IID_IVehicleRoutingDecisionClosureCollection: TGUID = '{623003B4-A0CC-412F-8535-BD12E296BA4A}';
  IID_IVehicleRoutingDecisionClosureContainerBase: TGUID = '{53DD227E-1B94-4061-ACBE-030E21AFBA7B}';
  IID_IVehicleRoutingDecisionClosureContainer: TGUID = '{7368813D-DFCE-48FB-B2B2-051544D66374}';
  IID_IVehicleRoutingDecisionClosureBase: TGUID = '{3FA2E839-49C9-4643-BB3B-B2332EDEAF45}';
  IID_IVehicleRoutingDecisionClosure: TGUID = '{1B6D947C-E5A8-4D13-8190-E9EBBB63D46B}';
  IID_IVehicleRouteClosureContainerBase: TGUID = '{AAC4C1DA-037F-4D12-84DE-2CFCCBC50E5E}';
  IID_IVehicleRouteClosureContainer: TGUID = '{3A2E3D8A-D0A6-4407-A0E5-4EE5CCEAA999}';
  IID_IVehicleRouteClosureBase: TGUID = '{53E4AF8F-D90E-4715-ABF7-6D96A6B845BD}';
  IID_IVehicleRouteClosure: TGUID = '{B9F3E6A2-DBD5-480E-BBF0-28625CFDD74F}';
  IID_IVehicleRoutingDecisionDynamicContainerBase: TGUID = '{8F053A86-B774-4CDB-8DF8-963C17A389A8}';
  IID_IVehicleRoutingDecisionDynamicContainer: TGUID = '{7570D448-5BFB-4593-AF0F-759BD7145EC8}';
  IID_IVehicleRoutingDecisionManagedLanesContainerBase: TGUID = '{5DBB39B4-5060-4D07-ADAC-E815CEE0C8DD}';
  IID_IVehicleRoutingDecisionManagedLanesContainer: TGUID = '{BD358AFB-666E-48F2-BCAA-F0CDB947C23C}';
  IID_IVehicleRoutingDecisionParkingContainerBase: TGUID = '{C60A78FC-1807-467A-BA27-FBA58E2EE80A}';
  IID_IVehicleRoutingDecisionParkingContainer: TGUID = '{06F7F10D-B1E0-4EA6-A6E4-DA87CA1DF1E1}';
  IID_IVehicleRoutingDecisionPartialContainerBase: TGUID = '{47A0CD49-942C-4C90-BC7C-1B624B59C6B5}';
  IID_IVehicleRoutingDecisionPartialContainer: TGUID = '{93B71828-A482-44E8-B773-40ED315CD84F}';
  IID_IVehicleRoutingDecisionPartialPTContainerBase: TGUID = '{381498B3-392F-4553-A983-40D9BB6C2F59}';
  IID_IVehicleRoutingDecisionPartialPTContainer: TGUID = '{839A29A1-129F-41EF-B129-40AF896CBCA7}';
  IID_IVehicleRoutingDecisionStaticContainerBase: TGUID = '{DB67DBC5-C72B-4ABD-8C53-073B7B1C3425}';
  IID_IVehicleRoutingDecisionStaticContainer: TGUID = '{D7981D02-CBED-41DF-BB6C-4DE1A0373211}';
  IID_IVehicleTravelTimeMeasurementContainerBase: TGUID = '{DB717E58-0470-4BEA-9BB1-55907867B0D4}';
  IID_IVehicleTravelTimeMeasurementContainer: TGUID = '{850FFE03-9681-40FE-B0D3-EC63D73F54F4}';
  IID_IVehicleTravelTimeMeasurementBase: TGUID = '{223F9483-612C-4845-AA1C-D7AF8DBEC075}';
  IID_IVehicleTravelTimeMeasurement: TGUID = '{DF1DC73E-6F9B-485E-A2D7-C8D8FE53E12B}';
  IID_IVehicleTypeContainerBase: TGUID = '{896BAAAA-96BD-473E-BFA2-E7E9572865ED}';
  IID_IVehicleTypeContainer: TGUID = '{B7929C5C-8F9E-40EA-9CF7-DDFBA020E73D}';
  IID_IVehicleContainerBase: TGUID = '{29F96939-BC8A-481B-93BF-5ECEDE96508F}';
  IID_IVehicleContainer: TGUID = '{C1568A6C-AE37-481C-803C-D01DC1C9F28B}';
  IID_IWTTFileContainerBase: TGUID = '{A1082D35-EA65-4153-9ECE-7069F65DC252}';
  IID_IWTTFileContainer: TGUID = '{7040BC78-53B3-489C-A501-527D80B63369}';
  IID_IWTTFileBase: TGUID = '{F87415BA-BA17-4047-BD0D-1E9A754FD13F}';
  IID_IWTTFile: TGUID = '{F6A6661C-5650-4D42-94FD-3CAF98C51C3A}';
  IID_IWalkingBehaviorCollection: TGUID = '{B761AD6E-9EAD-454F-A6DD-1E1A87BA9B83}';
  IID_IWalkingBehaviorContainerBase: TGUID = '{E43F8F71-E10D-494F-A322-5AB2824343BE}';
  IID_IWalkingBehaviorContainer: TGUID = '{23977C45-5102-4693-B83F-2D4D18CCCBC0}';
  IID_IWeightDistributionCollection: TGUID = '{B112BEF9-DBE6-42DC-B8C1-6DFCE147BCC8}';
  IID_IWeightDistributionContainerBase: TGUID = '{A724E9FD-B4DC-4618-A73A-F23815301DBE}';
  IID_IWeightDistributionContainer: TGUID = '{443DF4A0-407E-4B95-A882-AC10BB0C7E91}';
  IID_IZoneCollection: TGUID = '{54E9C1B9-41E2-4378-AFEE-B30CCF558A80}';
  IID_IZoneContainerBase: TGUID = '{3185EE23-DA14-4330-89D5-466303E69298}';
  IID_IZoneContainer: TGUID = '{2594385A-F1E9-4AED-9196-E0422E85C359}';
  IID_IGraphics: TGUID = '{EF10FD71-7BA8-49F5-9EC1-39A22AFFE227}';
  IID_INetworkWindow: TGUID = '{36CC2587-3283-43D0-8D69-CEE6115D1819}';
  IID_IScenarioManagementBase: TGUID = '{3CD71AB4-B751-46EC-9919-41AB4CC0F5CC}';
  IID_IScenarioManagement: TGUID = '{40E3ECEF-02F2-4D89-8D57-F9D384DC2C84}';
  IID_IPresentation: TGUID = '{09FF1483-43EE-4E3B-932D-E57A171F9AF0}';
  IID_ILicenseInfo: TGUID = '{DC35BF66-4E51-40E6-AB1A-AD701D35BC59}';
  IID_IOptima: TGUID = '{CC7F7C27-C5FD-438F-BBCE-0561BE85FF87}';
  IID_IAttribute: TGUID = '{4600A07A-5144-4D74-89E5-6C19DED0BD2E}';
  IID_IAccelerationFunctionDataPointBase: TGUID = '{6BAD5237-2B47-408C-8BD8-60255DEB47BF}';
  IID_IAccelerationFunctionDataPoint: TGUID = '{0E01E5FB-E0A4-4CF3-B1EE-449897671537}';
  IID_IAlternativePathSearchBase: TGUID = '{34D6391A-333D-4BA1-8525-A366403C2724}';
  IID_IAlternativePathSearch: TGUID = '{9A9906F6-4C89-426E-B4F5-C04AF60DAB1D}';
  IID_IAlternativePathSearchVehicleRoutingDecisionBase: TGUID = '{04C24572-44F0-4921-B743-D856C2AC027D}';
  IID_IAlternativePathSearchVehicleRoutingDecision: TGUID = '{BFC81654-ABF4-47E3-B3DA-CD97964D7E8E}';
  IID_IAttributeSelectionBase: TGUID = '{7417B15E-E773-49E2-AA1C-E0A70B7FB660}';
  IID_IAttributeSelection: TGUID = '{EDC3D526-CBB5-4B6E-9B91-2F98A204EE41}';
  IID_IBoardDelFuncDataPtBase: TGUID = '{C804FD2F-C814-4698-B083-6B135FD71849}';
  IID_IBoardDelFuncDataPt: TGUID = '{1A22EDFB-4920-4D1D-A2E8-9096C28CFB44}';
  IID_ICritSpeedFuncDataPtBase: TGUID = '{37279276-18B9-428B-BA07-F30876D893BC}';
  IID_ICritSpeedFuncDataPt: TGUID = '{46D55EAF-3755-4F0E-AE31-8A76C893933A}';
  IID_IDecelerationFunctionDataPointBase: TGUID = '{AFDD8126-C114-4A96-ADFD-5B4F6635AFB5}';
  IID_IDecelerationFunctionDataPoint: TGUID = '{7F7E6D8C-5967-40B8-AB1A-1E1A957EF106}';
  IID_IDistributionDataPointBase: TGUID = '{83C2DB13-C37A-47DA-89DB-C9169D939BEF}';
  IID_IDistributionDataPoint: TGUID = '{4F9CEAA8-283B-4863-8751-345F78B55DDA}';
  IID_IDoorBase: TGUID = '{24C893D9-4434-40D9-948E-57D82AAE6CC1}';
  IID_IDoor: TGUID = '{9B6B12F9-3F11-4E24-9BB4-E223D2CC6F86}';
  IID_IDrivBehavVehClassSpeedMisestDistrBase: TGUID = '{80783263-1B70-41B1-AC5B-781BEC586E74}';
  IID_IDrivBehavVehClassSpeedMisestDistr: TGUID = '{D91A5118-BB9A-4936-AEF5-652971231414}';
  IID_IDurationDistributionDataPointBase: TGUID = '{7B917B19-CB3F-4296-AEA4-0F4D7BE81103}';
  IID_IDurationDistributionDataPoint: TGUID = '{E7BD3703-8B35-4ED9-8CD3-53621E92B178}';
  IID_IFDSMeshBase: TGUID = '{F84DEF5C-3B6C-436A-828C-137570AEC106}';
  IID_IPlot3DFileTimestepCollection: TGUID = '{F102D061-D77F-406B-ADD9-1615CF989A9C}';
  IID_IPlot3DFileTimestepContainerBase: TGUID = '{18098AA9-A79A-404E-BFDD-A393B813CA9C}';
  IID_IPlot3DFileTimestepContainer: TGUID = '{49005B6E-0E8D-4474-BA0F-A86213CAF1B0}';
  IID_IFDSMesh: TGUID = '{B1B8DAFB-A997-44D9-B532-498CC81B37A2}';
  IID_ILatDriftSpeedFuncDataPtBase: TGUID = '{5CA37D23-B376-43C8-AA7E-10B104054B88}';
  IID_ILatDriftSpeedFuncDataPt: TGUID = '{CEF308AA-2383-4B37-8A9D-D3CC22316739}';
  IID_ILegOrientationBase: TGUID = '{A1FDA2BB-BA0B-4EBC-B271-A8827F1F1537}';
  IID_ILegOrientation: TGUID = '{25DBAFF5-DA5A-4E29-AD4A-B249A8E9EBE9}';
  IID_ILinkLnChgDistDistrAttrElementBase: TGUID = '{13C506AD-F4AB-4E20-B754-28274813F7D8}';
  IID_ILinkLnChgDistDistrAttrElement: TGUID = '{D9573466-F184-4BAD-8F56-410BBEE67EC3}';
  IID_ILinkPolyPointBase: TGUID = '{923CF1A3-BE1F-485B-84ED-F0E4A5758CFD}';
  IID_ILinkPolyPoint: TGUID = '{63FE0528-FA8C-40F0-941A-82C6F4486A46}';
  IID_ILinkSegmentBase: TGUID = '{884873AD-A2A5-4256-A34C-47418084C549}';
  IID_ILinkSegment: TGUID = '{8D4D095B-472D-4432-B63E-9A7CCE813161}';
  IID_IMesoTurnBase: TGUID = '{601598C8-759B-4D29-A88E-39073CBCEFB2}';
  IID_IMesoTurn: TGUID = '{D504E95A-01B0-4061-BB77-5451386C222C}';
  IID_IMesoTurnConflictBase: TGUID = '{1B07F81A-C74C-47E6-88CB-39B2F41AE156}';
  IID_IMesoTurnConflict: TGUID = '{BEDAE47F-8D4B-47AD-9981-1ADE4A2A74D4}';
  IID_IPTLineStopBase: TGUID = '{F8BFC31C-0824-4794-93E1-A8BCF0696E9B}';
  IID_IPTLineStop: TGUID = '{A66288C5-E5C1-4650-A8DE-21B258358420}';
  IID_IParkingLotSelectionParametersBase: TGUID = '{6C86A140-353D-423E-8502-4B003FD3BDDE}';
  IID_IParkingLotSelectionParameters: TGUID = '{88355199-2120-40EC-9455-5FF7D26DA342}';
  IID_IPartialPTLineStopBase: TGUID = '{F8CB96F5-7D05-44CF-BB47-498A30A21F39}';
  IID_IPartialPTLineStop: TGUID = '{7F7DC8FB-0BB3-46B3-BD3B-1CA3DF3D61CB}';
  IID_IPedClassQueuingBehaviorBase: TGUID = '{A98E2F53-EF02-4BF8-B566-3787D6AC77E2}';
  IID_IPedClassQueuingBehavior: TGUID = '{69077EF2-3C41-4936-94E5-CDA225F6B86C}';
  IID_IPedestrianRouteChoiceAreaBase: TGUID = '{48BE4732-A226-4F78-93B0-BFBAE3E6E69D}';
  IID_IPedestrianRouteChoiceArea: TGUID = '{F8F268B1-39F9-4C9F-B8CF-028E87373978}';
  IID_IPlot3DFileTimestepBase: TGUID = '{EBE62071-395C-4CBD-8378-630D37F9A3E0}';
  IID_IPlot3DFileTimestep: TGUID = '{FCF5F145-E38C-4ED1-9E40-9EB03D7A1C59}';
  IID_IPointBase: TGUID = '{EBB5FF27-37DB-4C0E-A2F4-D22C83C173EF}';
  IID_IPoint: TGUID = '{25F40349-3833-41F5-9799-394197C8C9DA}';
  IID_ISpeedDistributionDataPointBase: TGUID = '{8EE99A79-B1BA-420B-8531-A541C2062BFC}';
  IID_ISpeedDistributionDataPoint: TGUID = '{9FB82358-2CF1-487D-BD19-46C63C788A28}';
  IID_ITimeIntervalParkingRateBase: TGUID = '{8E8CE1AD-0B39-4D15-923E-3A1830AC97B5}';
  IID_ITimeIntervalParkingRate: TGUID = '{327967AA-AE70-4292-BC36-F67A8426BB34}';
  IID_ITimeIntervalPedVolumeBase: TGUID = '{8FBC5A27-5354-48D1-A5AF-A056FDC45A0C}';
  IID_ITimeIntervalPedVolume: TGUID = '{2C0D7881-D69D-4A81-A4CE-862F7A4773E5}';
  IID_ITimeIntervalPricingModelBase: TGUID = '{0E2BB1B7-DB91-489D-AA07-85192E1FF172}';
  IID_ITimeIntervalPricingModel: TGUID = '{8C7D8FEB-5882-43C2-8BD6-C8A6A8B503D9}';
  IID_ITimeIntervalVehVolumeBase: TGUID = '{4C38EE0B-79CA-40B9-A939-775CC2EEE4DE}';
  IID_ITimeIntervalVehVolume: TGUID = '{408F3930-1801-4014-8A15-8C32E71B7191}';
  IID_ITollPricingCalculationModelElementBase: TGUID = '{39B8863A-5D8B-458D-8211-1504A31E3D1B}';
  IID_ITollPricingCalculationModelElement: TGUID = '{13BDCDF3-01F6-47C7-BD28-D3C74A083477}';
  IID_IVehClassDecisionModelBase: TGUID = '{FEAF9FEF-8830-4C6A-BD20-E291560751B1}';
  IID_IVehClassDecisionModel: TGUID = '{EAE86500-EC22-4CBC-A0B3-D32586E144D8}';
  IID_IVehClassDynAssignDesSpeedDistributionBase: TGUID = '{A716F2EB-9B9F-417D-80EC-CB16A46959FD}';
  IID_IVehClassDynAssignDesSpeedDistribution: TGUID = '{0DF7D03E-E4D9-4C8E-8A56-726ABB658F7E}';
  IID_IVehClassFollowingBehaviorBase: TGUID = '{97EF4A23-31DB-4F40-AF9A-8D795B92E5ED}';
  IID_IVehClassFollowingBehavior: TGUID = '{23D980F3-93BB-4D16-976F-807C3374E6D8}';
  IID_IVehClassLateralBehaviorBase: TGUID = '{0CA37626-E5B0-430F-9728-C578CCDFCD8E}';
  IID_IVehClassLateralBehavior: TGUID = '{C2B1E542-B8E6-42FC-AE04-80C7DFD8AAAC}';
  IID_IVehCompositionInitialVolumeBase: TGUID = '{76C8E988-B119-420D-BA27-A9B3FA33B24B}';
  IID_IVehCompositionInitialVolume: TGUID = '{27DA5B2D-7712-47BB-9F41-E3C3CA5F5562}';
  IID_IVehVehClassSpeedMisestFactBase: TGUID = '{BDECF80D-A52E-4B86-B12C-E043C9B1E0CB}';
  IID_IVehVehClassSpeedMisestFact: TGUID = '{8EEEE08F-5C11-4066-8FDE-CED3C65B0C94}';
  IID_IWTTValueFormatCollection: TGUID = '{8523BB14-48A9-4E3F-9B85-EE05B992591C}';
  IID_IWTTValueFormatContainerBase: TGUID = '{64ABFCEF-9CFE-4438-B19E-2B31641DF69C}';
  IID_IWTTValueFormatContainer: TGUID = '{B8ED4A70-2A5D-499E-9B2F-AB8DD9936874}';

// *********************************************************************//
// Declaration of Enumerations defined in Type Library                    
// *********************************************************************//
// Constants for enum __MIDL___MIDL_itf_Vissim_0000_0000_0001
type
  __MIDL___MIDL_itf_Vissim_0000_0000_0001 = TOleEnum;
const
  ImportInitial = $00000000;
  ImportAdditive = $00000001;
  ImportDifference = $00000002;

// Constants for enum __MIDL___MIDL_itf_Vissim_0000_0000_0003
type
  __MIDL___MIDL_itf_Vissim_0000_0000_0003 = TOleEnum;
const
  CGEdgeTypeDynamicAssignment = $00000000;
  CGEdgeTypeEvaluation = $00000001;
  CGEdgeTypeMesoSimulation = $00000002;

// Constants for enum DistributionType
type
  DistributionType = TOleEnum;
const
  DistributionTypeNormal = $00000001;
  DistributionTypeEmpirical = $00000002;
  DistributionType_End = $00000003;

// Constants for enum ManagedLaneType
type
  ManagedLaneType = TOleEnum;
const
  ManagedLaneTypeManaged = $00000001;
  ManagedLaneTypeGeneralPurpose = $00000002;
  ManagedLaneType_End = $00000003;

// Constants for enum UserDefinedAttributeDataType
type
  UserDefinedAttributeDataType = TOleEnum;
const
  UserDefinedAttributeDataTypeInt = $00000001;
  UserDefinedAttributeDataTypeDouble = $00000002;
  UserDefinedAttributeDataTypeBool = $00000003;
  UserDefinedAttributeDataTypeText = $00000004;
  UserDefinedAttributeDataTypeFilename = $00000005;
  UserDefinedAttributeDataTypeTimePoint = $00000006;
  UserDefinedAttributeDataTypeDuration = $00000007;
  UserDefinedAttributeDataTypeLongDuration = $00000008;
  UserDefinedAttributeDataTypeLongLength = $00000009;
  UserDefinedAttributeDataTypeShortLength = $0000000A;
  UserDefinedAttributeDataTypeVeryShortLength = $0000000B;
  UserDefinedAttributeDataTypeSpeed = $0000000C;
  UserDefinedAttributeDataTypeSmallSpeed = $0000000D;
  UserDefinedAttributeDataTypeAcceleration = $0000000E;
  UserDefinedAttributeDataTypeArea = $0000000F;
  UserDefinedAttributeDataTypeSmallArea = $00000010;
  UserDefinedAttributeDataTypeCurrency = $00000011;
  UserDefinedAttributeDataType_End = $00000012;

// Constants for enum __MIDL___MIDL_itf_Vissim_0000_0000_0002
type
  __MIDL___MIDL_itf_Vissim_0000_0000_0002 = TOleEnum;
const
  ForAssignment = $00000000;
  ForVisualization = $00000001;
  OnlyNetwork = $00000002;

// Constants for enum LicenseModules
type
  LicenseModules = TOleEnum;
const
  LicenseModules3DGraphics = $00000001;
  LicenseModulesExport3DSMAX = $00000002;
  LicenseModulesBingMaps = $00000003;
  LicenseModulesExternalDriverModel = $00000004;
  LicenseModulesDrivingSimulator = $00000005;
  LicenseModulesDynamicAssignment = $00000006;
  LicenseModulesEmissions = $00000007;
  LicenseModulesLinkTypes = $00000008;
  LicenseModulesManagedLanes = $00000009;
  LicenseModulesPublicTransport = $0000000A;
  LicenseModulesSynchro = $0000000B;
  LicenseModulesTestMode = $0000000C;
  LicenseModulesV3DM = $0000000D;
  LicenseModulesStreetTraffic = $0000000E;
  LicenseModulesVisVAP = $0000000F;
  LicenseModulesMesoSimulation = $00000010;
  LicenseModulesBIMImport = $00000011;
  LicenseModulesExternalSignalControl = $00000012;
  LicenseModulesEconoliteAsc3 = $00000013;
  LicenseModulesBalance = $00000014;
  LicenseModulesEpics = $00000015;
  LicenseModulesFourthDimensionD4 = $00000016;
  LicenseModulesLisaOMTC = $00000017;
  LicenseModulesMcCain2033 = $00000018;
  LicenseModulesRBC = $00000019;
  LicenseModulesSCATS = $0000001A;
  LicenseModulesSCOOT = $0000001B;
  LicenseModulesSiemensVA = $0000001C;
  LicenseModulesTRENDS = $0000001D;
  LicenseModulesVAP = $0000001E;
  LicenseModulesVISSIG = $0000001F;
  LicenseModulesVSPlus = $00000020;
  LicenseModulesLandsideDemGen = $00000021;
  LicenseModulesInternal = $00000022;
  LicenseModules_End = $00000023;

// Constants for enum MessagePriority
type
  MessagePriority = TOleEnum;
const
  MESSAGEPRIORITY_ERROR = $00003000;
  MESSAGEPRIORITY_WARNING = $00004000;
  MESSAGEPRIORITY_NOTE = $00005000;
  MESSAGEPRIORITY_SYSTEM = $00006000;

// Constants for enum ValueType
type
  ValueType = TOleEnum;
const
  ValueType_None = $00000000;
  ValueType_Int = $00000001;
  ValueType_Real = $00000002;
  ValueType_String = $00000003;
  ValueType_UncheckedString = $00000004;
  ValueType_Duration = $00000005;
  ValueType_LongDuration = $00000006;
  ValueType_TimePoint = $00000007;
  ValueType_Filename = $00000008;
  ValueType_NamedLayoutReference = $00000009;
  ValueType_Bool = $0000000A;
  ValueType_Bitset = $0000000B;
  ValueType_Bitvector = $0000000C;
  ValueType_Date = $0000000D;
  ValueType_Speed = $0000000E;
  ValueType_Acceleration = $0000000F;
  ValueType_Char = $00000010;
  ValueType_Length = $00000011;
  ValueType_ObsoleteLongLength = $00000012;
  ValueType_Area = $00000013;
  ValueType_Color = $00000014;
  ValueType_Coord = $00000015;
  ValueType_Currency = $00000016;
  ValueType_WorldPoint = $00000017;
  ValueType_LocalizedDate = $00000018;
  ValueType_LocalizedDateTime = $00000019;
  ValueType_AttributeID = $0000001A;
  ValueType_FormulaString = $0000001B;
  ValueType_PedestrianDensity = $0000001C;
  ValueType_PedestrianFlow = $0000001D;
  ValueType_PedestrianSpeedSquared = $0000001E;
  ValueType_VehicleDensity = $0000001F;
  ValueType_TrafficVolume = $00000020;
  ValueType_Network = $00000021;
  ValueType_TimeIntervalSet = $00000022;
  ValueType_TimeIntervalSetUnorderedList = $00000023;
  ValueType_TimeIntervalSetOrderedList = $00000024;
  ValueType_UserDefinedAttribute = $00000025;
  ValueType_UserDefinedAttributeUnorderedList = $00000026;
  ValueType_UserDefinedAttributeOrderedList = $00000027;
  ValueType_ScreenshotParameters = $00000028;
  ValueType_ScreenshotParametersUnorderedList = $00000029;
  ValueType_ScreenshotParametersOrderedList = $0000002A;
  ValueType_Label = $0000002B;
  ValueType_LabelUnorderedList = $0000002C;
  ValueType_LabelOrderedList = $0000002D;
  ValueType_PedestrianNetworkPerformanceMeasurement = $0000002E;
  ValueType_PedestrianNetworkPerformanceMeasurementUnorderedList = $0000002F;
  ValueType_PedestrianNetworkPerformanceMeasurementOrderedList = $00000030;
  ValueType_VehicleNetworkPerformanceMeasurement = $00000031;
  ValueType_VehicleNetworkPerformanceMeasurementUnorderedList = $00000032;
  ValueType_VehicleNetworkPerformanceMeasurementOrderedList = $00000033;
  ValueType_BoardingDelayFunction = $00000034;
  ValueType_BoardingDelayFunctionUnorderedList = $00000035;
  ValueType_BoardingDelayFunctionOrderedList = $00000036;
  ValueType_CameraPosition = $00000037;
  ValueType_CameraPositionUnorderedList = $00000038;
  ValueType_CameraPositionOrderedList = $00000039;
  ValueType_ColorDistribution = $0000003A;
  ValueType_ColorDistributionUnorderedList = $0000003B;
  ValueType_ColorDistributionOrderedList = $0000003C;
  ValueType_CriticalSpeedFunction = $0000003D;
  ValueType_CriticalSpeedFunctionUnorderedList = $0000003E;
  ValueType_CriticalSpeedFunctionOrderedList = $0000003F;
  ValueType_DesAccelerationFunction = $00000040;
  ValueType_DesAccelerationFunctionUnorderedList = $00000041;
  ValueType_DesAccelerationFunctionOrderedList = $00000042;
  ValueType_DesDecelerationFunction = $00000043;
  ValueType_DesDecelerationFunctionUnorderedList = $00000044;
  ValueType_DesDecelerationFunctionOrderedList = $00000045;
  ValueType_DesSpeedDistribution = $00000046;
  ValueType_DesSpeedDistributionUnorderedList = $00000047;
  ValueType_DesSpeedDistributionOrderedList = $00000048;
  ValueType_DisplayType = $00000049;
  ValueType_DisplayTypeUnorderedList = $0000004A;
  ValueType_DisplayTypeOrderedList = $0000004B;
  ValueType_DistanceDistribution = $0000004C;
  ValueType_DistanceDistributionUnorderedList = $0000004D;
  ValueType_DistanceDistributionOrderedList = $0000004E;
  ValueType_FreeDistribution = $0000004F;
  ValueType_FreeDistributionUnorderedList = $00000050;
  ValueType_FreeDistributionOrderedList = $00000051;
  ValueType_InformationSign3D = $00000052;
  ValueType_InformationSign3DUnorderedList = $00000053;
  ValueType_InformationSign3DOrderedList = $00000054;
  ValueType_LateralDriftSpeedFunction = $00000055;
  ValueType_LateralDriftSpeedFunctionUnorderedList = $00000056;
  ValueType_LateralDriftSpeedFunctionOrderedList = $00000057;
  ValueType_Level = $00000058;
  ValueType_LevelUnorderedList = $00000059;
  ValueType_LevelOrderedList = $0000005A;
  ValueType_LocationDistribution = $0000005B;
  ValueType_LocationDistributionUnorderedList = $0000005C;
  ValueType_LocationDistributionOrderedList = $0000005D;
  ValueType_MaxAccelerationFunction = $0000005E;
  ValueType_MaxAccelerationFunctionUnorderedList = $0000005F;
  ValueType_MaxAccelerationFunctionOrderedList = $00000060;
  ValueType_MaxDecelerationFunction = $00000061;
  ValueType_MaxDecelerationFunctionUnorderedList = $00000062;
  ValueType_MaxDecelerationFunctionOrderedList = $00000063;
  ValueType_MesoSimEdge = $00000064;
  ValueType_MesoSimEdgeUnorderedList = $00000065;
  ValueType_MesoSimEdgeOrderedList = $00000066;
  ValueType_MesoSimLane = $00000067;
  ValueType_MesoSimLaneUnorderedList = $00000068;
  ValueType_MesoSimLaneOrderedList = $00000069;
  ValueType_MesoSimNode = $0000006A;
  ValueType_MesoSimNodeUnorderedList = $0000006B;
  ValueType_MesoSimNodeOrderedList = $0000006C;
  ValueType_OccupancyDistribution = $0000006D;
  ValueType_OccupancyDistributionUnorderedList = $0000006E;
  ValueType_OccupancyDistributionOrderedList = $0000006F;
  ValueType_Path = $00000070;
  ValueType_PathUnorderedList = $00000071;
  ValueType_PathOrderedList = $00000072;
  ValueType_Pedestrian = $00000073;
  ValueType_PedestrianUnorderedList = $00000074;
  ValueType_PedestrianOrderedList = $00000075;
  ValueType_PedestrianObstacle = $00000076;
  ValueType_PedestrianObstacleUnorderedList = $00000077;
  ValueType_PedestrianObstacleOrderedList = $00000078;
  ValueType_PowerDistribution = $00000079;
  ValueType_PowerDistributionUnorderedList = $0000007A;
  ValueType_PowerDistributionOrderedList = $0000007B;
  ValueType_Script = $0000007C;
  ValueType_ScriptUnorderedList = $0000007D;
  ValueType_ScriptOrderedList = $0000007E;
  ValueType_Section = $0000007F;
  ValueType_SectionUnorderedList = $00000080;
  ValueType_SectionOrderedList = $00000081;
  ValueType_SimulationRun = $00000082;
  ValueType_SimulationRunUnorderedList = $00000083;
  ValueType_SimulationRunOrderedList = $00000084;
  ValueType_Static3DModel = $00000085;
  ValueType_Static3DModelUnorderedList = $00000086;
  ValueType_Static3DModelOrderedList = $00000087;
  ValueType_Storyboard = $00000088;
  ValueType_StoryboardUnorderedList = $00000089;
  ValueType_StoryboardOrderedList = $0000008A;
  ValueType_TimeDistribution = $0000008B;
  ValueType_TimeDistributionUnorderedList = $0000008C;
  ValueType_TimeDistributionOrderedList = $0000008D;
  ValueType_TollPricingCalculationModel = $0000008E;
  ValueType_TollPricingCalculationModelUnorderedList = $0000008F;
  ValueType_TollPricingCalculationModelOrderedList = $00000090;
  ValueType_Vehicle = $00000091;
  ValueType_VehicleUnorderedList = $00000092;
  ValueType_VehicleOrderedList = $00000093;
  ValueType_WTTFile = $00000094;
  ValueType_WTTFileUnorderedList = $00000095;
  ValueType_WTTFileOrderedList = $00000096;
  ValueType_WalkingBehavior = $00000097;
  ValueType_WalkingBehaviorUnorderedList = $00000098;
  ValueType_WalkingBehaviorOrderedList = $00000099;
  ValueType_WeightDistribution = $0000009A;
  ValueType_WeightDistributionUnorderedList = $0000009B;
  ValueType_WeightDistributionOrderedList = $0000009C;
  ValueType_Zone = $0000009D;
  ValueType_ZoneUnorderedList = $0000009E;
  ValueType_ZoneOrderedList = $0000009F;
  ValueType_BoardingDelayFunctionDataPoint = $000000A0;
  ValueType_BoardingDelayFunctionDataPointUnorderedList = $000000A1;
  ValueType_BoardingDelayFunctionDataPointOrderedList = $000000A2;
  ValueType_ColorDistributionElement = $000000A3;
  ValueType_ColorDistributionElementUnorderedList = $000000A4;
  ValueType_ColorDistributionElementOrderedList = $000000A5;
  ValueType_CriticalSpeedFunctionDataPoint = $000000A6;
  ValueType_CriticalSpeedFunctionDataPointUnorderedList = $000000A7;
  ValueType_CriticalSpeedFunctionDataPointOrderedList = $000000A8;
  ValueType_DurationDistributionDataPoint = $000000A9;
  ValueType_DurationDistributionDataPointUnorderedList = $000000AA;
  ValueType_DurationDistributionDataPointOrderedList = $000000AB;
  ValueType_InformationSign3DContentRow = $000000AC;
  ValueType_InformationSign3DContentRowUnorderedList = $000000AD;
  ValueType_InformationSign3DContentRowOrderedList = $000000AE;
  ValueType_Keyframe = $000000AF;
  ValueType_KeyframeUnorderedList = $000000B0;
  ValueType_KeyframeOrderedList = $000000B1;
  ValueType_LateralDriftSpeedFunctionDataPoint = $000000B2;
  ValueType_LateralDriftSpeedFunctionDataPointUnorderedList = $000000B3;
  ValueType_LateralDriftSpeedFunctionDataPointOrderedList = $000000B4;
  ValueType_MesoSimTurnConflict = $000000B5;
  ValueType_MesoSimTurnConflictUnorderedList = $000000B6;
  ValueType_MesoSimTurnConflictOrderedList = $000000B7;
  ValueType_MesoSimTurnRel = $000000B8;
  ValueType_MesoSimTurnRelUnorderedList = $000000B9;
  ValueType_MesoSimTurnRelOrderedList = $000000BA;
  ValueType_Point3DAbsolute = $000000BB;
  ValueType_Point3DAbsoluteUnorderedList = $000000BC;
  ValueType_Point3DAbsoluteOrderedList = $000000BD;
  ValueType_SpeedDistributionDataPoint = $000000BE;
  ValueType_SpeedDistributionDataPointUnorderedList = $000000BF;
  ValueType_SpeedDistributionDataPointOrderedList = $000000C0;
  ValueType_TimeInterval = $000000C1;
  ValueType_TimeIntervalUnorderedList = $000000C2;
  ValueType_TimeIntervalOrderedList = $000000C3;
  ValueType_TollPricingCalculationModelElement = $000000C4;
  ValueType_TollPricingCalculationModelElementUnorderedList = $000000C5;
  ValueType_TollPricingCalculationModelElementOrderedList = $000000C6;
  ValueType_WTTConfiguration = $000000C7;
  ValueType_WTTConfigurationUnorderedList = $000000C8;
  ValueType_WTTConfigurationOrderedList = $000000C9;
  ValueType_WTTValueFormat = $000000CA;
  ValueType_WTTValueFormatUnorderedList = $000000CB;
  ValueType_WTTValueFormatOrderedList = $000000CC;
  ValueType_AccelerationFunctionDataPoint = $000000CD;
  ValueType_AccelerationFunctionDataPointUnorderedList = $000000CE;
  ValueType_AccelerationFunctionDataPointOrderedList = $000000CF;
  ValueType_DecelerationFunctionDataPoint = $000000D0;
  ValueType_DecelerationFunctionDataPointUnorderedList = $000000D1;
  ValueType_DecelerationFunctionDataPointOrderedList = $000000D2;
  ValueType_DistributionDataPoint = $000000D3;
  ValueType_DistributionDataPointUnorderedList = $000000D4;
  ValueType_DistributionDataPointOrderedList = $000000D5;
  ValueType_Simulation = $000000D6;
  ValueType_SimulationUnorderedList = $000000D7;
  ValueType_SimulationOrderedList = $000000D8;
  ValueType_ANIRecording = $000000D9;
  ValueType_ANIRecordingUnorderedList = $000000DA;
  ValueType_ANIRecordingOrderedList = $000000DB;
  ValueType_BackgroundImage = $000000DC;
  ValueType_BackgroundImageUnorderedList = $000000DD;
  ValueType_BackgroundImageOrderedList = $000000DE;
  ValueType_FireEvent = $000000DF;
  ValueType_FireEventUnorderedList = $000000E0;
  ValueType_FireEventOrderedList = $000000E1;
  ValueType_Matrix = $000000E2;
  ValueType_MatrixUnorderedList = $000000E3;
  ValueType_MatrixOrderedList = $000000E4;
  ValueType_PedestrianAreaMeasurement = $000000E5;
  ValueType_PedestrianAreaMeasurementUnorderedList = $000000E6;
  ValueType_PedestrianAreaMeasurementOrderedList = $000000E7;
  ValueType_SignalController = $000000E8;
  ValueType_SignalControllerUnorderedList = $000000E9;
  ValueType_SignalControllerOrderedList = $000000EA;
  ValueType_FDSMesh = $000000EB;
  ValueType_FDSMeshUnorderedList = $000000EC;
  ValueType_FDSMeshOrderedList = $000000ED;
  ValueType_MatrixZoneElement = $000000EE;
  ValueType_MatrixZoneElementUnorderedList = $000000EF;
  ValueType_MatrixZoneElementOrderedList = $000000F0;
  ValueType_Plot3DQuantity = $000000F1;
  ValueType_Plot3DQuantityUnorderedList = $000000F2;
  ValueType_Plot3DQuantityOrderedList = $000000F3;
  ValueType_SignalGroup = $000000F4;
  ValueType_SignalGroupUnorderedList = $000000F5;
  ValueType_SignalGroupOrderedList = $000000F6;
  ValueType_SignalOutputConfigurationElement = $000000F7;
  ValueType_SignalOutputConfigurationElementUnorderedList = $000000F8;
  ValueType_SignalOutputConfigurationElementOrderedList = $000000F9;
  ValueType_Plot3DFileTimestep = $000000FA;
  ValueType_Plot3DFileTimestepUnorderedList = $000000FB;
  ValueType_Plot3DFileTimestepOrderedList = $000000FC;
  ValueType_SCCommunication = $000000FD;
  ValueType_SCCommunicationUnorderedList = $000000FE;
  ValueType_SCCommunicationOrderedList = $000000FF;
  ValueType_TrafficSignal3D = $00000100;
  ValueType_TrafficSignal3DUnorderedList = $00000101;
  ValueType_TrafficSignal3DOrderedList = $00000102;
  ValueType_SignalArm3D = $00000103;
  ValueType_SignalArm3DUnorderedList = $00000104;
  ValueType_SignalArm3DOrderedList = $00000105;
  ValueType_SignalHead3D = $00000106;
  ValueType_SignalHead3DUnorderedList = $00000107;
  ValueType_SignalHead3DOrderedList = $00000108;
  ValueType_SignalMast3D = $00000109;
  ValueType_SignalMast3DUnorderedList = $0000010A;
  ValueType_SignalMast3DOrderedList = $0000010B;
  ValueType_Streetlight3D = $0000010C;
  ValueType_Streetlight3DUnorderedList = $0000010D;
  ValueType_Streetlight3DOrderedList = $0000010E;
  ValueType_TrafficSign3D = $0000010F;
  ValueType_TrafficSign3DUnorderedList = $00000110;
  ValueType_TrafficSign3DOrderedList = $00000111;
  ValueType_Point3D = $00000112;
  ValueType_Point3DUnorderedList = $00000113;
  ValueType_Point3DOrderedList = $00000114;
  ValueType_AttributeSelection = $00000115;
  ValueType_AttributeSelectionUnorderedList = $00000116;
  ValueType_AttributeSelectionOrderedList = $00000117;
  ValueType_CarParkParameters = $00000118;
  ValueType_CarParkParametersUnorderedList = $00000119;
  ValueType_CarParkParametersOrderedList = $0000011A;
  ValueType_LinkEvalSegment = $0000011B;
  ValueType_LinkEvalSegmentUnorderedList = $0000011C;
  ValueType_LinkEvalSegmentOrderedList = $0000011D;
  ValueType_ODPair = $0000011E;
  ValueType_ODPairUnorderedList = $0000011F;
  ValueType_ODPairOrderedList = $00000120;
  ValueType_ObjectNo = $00000121;
  ValueType_ObjectNoUnorderedList = $00000122;
  ValueType_ObjectNoOrderedList = $00000123;
  ValueType_PedestrianAreaLocation = $00000124;
  ValueType_PedestrianAreaLocationUnorderedList = $00000125;
  ValueType_PedestrianAreaLocationOrderedList = $00000126;
  ValueType_PedestrianGridCell = $00000127;
  ValueType_PedestrianGridCellUnorderedList = $00000128;
  ValueType_PedestrianGridCellOrderedList = $00000129;
  ValueType_Point = $0000012A;
  ValueType_PointUnorderedList = $0000012B;
  ValueType_PointOrderedList = $0000012C;
  ValueType_Point3DRelative = $0000012D;
  ValueType_Point3DRelativeUnorderedList = $0000012E;
  ValueType_Point3DRelativeOrderedList = $0000012F;
  ValueType_Polygon = $00000130;
  ValueType_PolygonUnorderedList = $00000131;
  ValueType_PolygonOrderedList = $00000132;
  ValueType_ANMDefaults = $00000133;
  ValueType_ANMDefaultsUnorderedList = $00000134;
  ValueType_ANMDefaultsOrderedList = $00000135;
  ValueType_DynamicAssignment = $00000136;
  ValueType_DynamicAssignmentUnorderedList = $00000137;
  ValueType_DynamicAssignmentOrderedList = $00000138;
  ValueType_AlternativePathSearch = $00000139;
  ValueType_AlternativePathSearchUnorderedList = $0000013A;
  ValueType_AlternativePathSearchOrderedList = $0000013B;
  ValueType_MatrixCorrectionParameters = $0000013C;
  ValueType_MatrixCorrectionParametersUnorderedList = $0000013D;
  ValueType_MatrixCorrectionParametersOrderedList = $0000013E;
  ValueType_RouteGuidance = $0000013F;
  ValueType_RouteGuidanceUnorderedList = $00000140;
  ValueType_RouteGuidanceOrderedList = $00000141;
  ValueType_Evaluation = $00000142;
  ValueType_EvaluationUnorderedList = $00000143;
  ValueType_EvaluationOrderedList = $00000144;
  ValueType_AreaMeasurementRawData = $00000145;
  ValueType_AreaMeasurementRawDataUnorderedList = $00000146;
  ValueType_AreaMeasurementRawDataOrderedList = $00000147;
  ValueType_Convergence = $00000148;
  ValueType_ConvergenceUnorderedList = $00000149;
  ValueType_ConvergenceOrderedList = $0000014A;
  ValueType_DataCollection = $0000014B;
  ValueType_DataCollectionUnorderedList = $0000014C;
  ValueType_DataCollectionOrderedList = $0000014D;
  ValueType_DataCollectionRawData = $0000014E;
  ValueType_DataCollectionRawDataUnorderedList = $0000014F;
  ValueType_DataCollectionRawDataOrderedList = $00000150;
  ValueType_Delays = $00000151;
  ValueType_DelaysUnorderedList = $00000152;
  ValueType_DelaysOrderedList = $00000153;
  ValueType_DischargeRecord = $00000154;
  ValueType_DischargeRecordUnorderedList = $00000155;
  ValueType_DischargeRecordOrderedList = $00000156;
  ValueType_EvaluationPercentile = $00000157;
  ValueType_EvaluationPercentileUnorderedList = $00000158;
  ValueType_EvaluationPercentileOrderedList = $00000159;
  ValueType_GreenTimeDistribution = $0000015A;
  ValueType_GreenTimeDistributionUnorderedList = $0000015B;
  ValueType_GreenTimeDistributionOrderedList = $0000015C;
  ValueType_LinkResults = $0000015D;
  ValueType_LinkResultsUnorderedList = $0000015E;
  ValueType_LinkResultsOrderedList = $0000015F;
  ValueType_ManagedLanes = $00000160;
  ValueType_ManagedLanesUnorderedList = $00000161;
  ValueType_ManagedLanesOrderedList = $00000162;
  ValueType_MesoEvaluationConfig = $00000163;
  ValueType_MesoEvaluationConfigUnorderedList = $00000164;
  ValueType_MesoEvaluationConfigOrderedList = $00000165;
  ValueType_NodeRawData = $00000166;
  ValueType_NodeRawDataUnorderedList = $00000167;
  ValueType_NodeRawDataOrderedList = $00000168;
  ValueType_NodeResults = $00000169;
  ValueType_NodeResultsUnorderedList = $0000016A;
  ValueType_NodeResultsOrderedList = $0000016B;
  ValueType_ODPairEvaluationConfiguration = $0000016C;
  ValueType_ODPairEvaluationConfigurationUnorderedList = $0000016D;
  ValueType_ODPairEvaluationConfigurationOrderedList = $0000016E;
  ValueType_PTWaitingTimes = $0000016F;
  ValueType_PTWaitingTimesUnorderedList = $00000170;
  ValueType_PTWaitingTimesOrderedList = $00000171;
  ValueType_PedestrianAreaMeasurementResults = $00000172;
  ValueType_PedestrianAreaMeasurementResultsUnorderedList = $00000173;
  ValueType_PedestrianAreaMeasurementResultsOrderedList = $00000174;
  ValueType_PedestrianAreaResults = $00000175;
  ValueType_PedestrianAreaResultsUnorderedList = $00000176;
  ValueType_PedestrianAreaResultsOrderedList = $00000177;
  ValueType_PedestrianGridCellEvalConfig = $00000178;
  ValueType_PedestrianGridCellEvalConfigUnorderedList = $00000179;
  ValueType_PedestrianGridCellEvalConfigOrderedList = $0000017A;
  ValueType_PedestrianNetworkPerformanceEvaluationConfiguration = $0000017B;
  ValueType_PedestrianNetworkPerformanceEvaluationConfigurationUnorderedList = $0000017C;
  ValueType_PedestrianNetworkPerformanceEvaluationConfigurationOrderedList = $0000017D;
  ValueType_PedestrianTravelTimeODData = $0000017E;
  ValueType_PedestrianTravelTimeODDataUnorderedList = $0000017F;
  ValueType_PedestrianTravelTimeODDataOrderedList = $00000180;
  ValueType_PedestrianTravelTimeRawData = $00000181;
  ValueType_PedestrianTravelTimeRawDataUnorderedList = $00000182;
  ValueType_PedestrianTravelTimeRawDataOrderedList = $00000183;
  ValueType_PedestrianTravelTimes = $00000184;
  ValueType_PedestrianTravelTimesUnorderedList = $00000185;
  ValueType_PedestrianTravelTimesOrderedList = $00000186;
  ValueType_Queues = $00000187;
  ValueType_QueuesUnorderedList = $00000188;
  ValueType_QueuesOrderedList = $00000189;
  ValueType_SCDetRecord = $0000018A;
  ValueType_SCDetRecordUnorderedList = $0000018B;
  ValueType_SCDetRecordOrderedList = $0000018C;
  ValueType_SSAM = $0000018D;
  ValueType_SSAMUnorderedList = $0000018E;
  ValueType_SSAMOrderedList = $0000018F;
  ValueType_SignalChanges = $00000190;
  ValueType_SignalChangesUnorderedList = $00000191;
  ValueType_SignalChangesOrderedList = $00000192;
  ValueType_VehicleInputData = $00000193;
  ValueType_VehicleInputDataUnorderedList = $00000194;
  ValueType_VehicleInputDataOrderedList = $00000195;
  ValueType_VehicleNetworkPerformanceEvaluationConfiguration = $00000196;
  ValueType_VehicleNetworkPerformanceEvaluationConfigurationUnorderedList = $00000197;
  ValueType_VehicleNetworkPerformanceEvaluationConfigurationOrderedList = $00000198;
  ValueType_VehicleTravelTimeRawData = $00000199;
  ValueType_VehicleTravelTimeRawDataUnorderedList = $0000019A;
  ValueType_VehicleTravelTimeRawDataOrderedList = $0000019B;
  ValueType_VehicleTravelTimes = $0000019C;
  ValueType_VehicleTravelTimesUnorderedList = $0000019D;
  ValueType_VehicleTravelTimesOrderedList = $0000019E;
  ValueType_NetPara = $0000019F;
  ValueType_NetParaUnorderedList = $000001A0;
  ValueType_NetParaOrderedList = $000001A1;
  ValueType_DefaultRefsParkingLot = $000001A2;
  ValueType_DefaultRefsParkingLotUnorderedList = $000001A3;
  ValueType_DefaultRefsParkingLotOrderedList = $000001A4;
  ValueType_AreaBehaviorType = $000001A5;
  ValueType_AreaBehaviorTypeUnorderedList = $000001A6;
  ValueType_AreaBehaviorTypeOrderedList = $000001A7;
  ValueType_ElevatorGroup = $000001A8;
  ValueType_ElevatorGroupUnorderedList = $000001A9;
  ValueType_ElevatorGroupOrderedList = $000001AA;
  ValueType_DefaultRefsElevator = $000001AB;
  ValueType_DefaultRefsElevatorUnorderedList = $000001AC;
  ValueType_DefaultRefsElevatorOrderedList = $000001AD;
  ValueType_BoardingDelayType = $000001AE;
  ValueType_BoardingDelayTypeUnorderedList = $000001AF;
  ValueType_BoardingDelayTypeOrderedList = $000001B0;
  ValueType_Elevator = $000001B1;
  ValueType_ElevatorUnorderedList = $000001B2;
  ValueType_ElevatorOrderedList = $000001B3;
  ValueType_Model2D3D = $000001B4;
  ValueType_Model2D3DUnorderedList = $000001B5;
  ValueType_Model2D3DOrderedList = $000001B6;
  ValueType_Model2D3DDistribution = $000001B7;
  ValueType_Model2D3DDistributionUnorderedList = $000001B8;
  ValueType_Model2D3DDistributionOrderedList = $000001B9;
  ValueType_PedestrianType = $000001BA;
  ValueType_PedestrianTypeUnorderedList = $000001BB;
  ValueType_PedestrianTypeOrderedList = $000001BC;
  ValueType_VehicleType = $000001BD;
  ValueType_VehicleTypeUnorderedList = $000001BE;
  ValueType_VehicleTypeOrderedList = $000001BF;
  ValueType_ElevatorDoor = $000001C0;
  ValueType_ElevatorDoorUnorderedList = $000001C1;
  ValueType_ElevatorDoorOrderedList = $000001C2;
  ValueType_Model2D3DDistributionElement = $000001C3;
  ValueType_Model2D3DDistributionElementUnorderedList = $000001C4;
  ValueType_Model2D3DDistributionElementOrderedList = $000001C5;
  ValueType_Model2D3DSegment = $000001C6;
  ValueType_Model2D3DSegmentUnorderedList = $000001C7;
  ValueType_Model2D3DSegmentOrderedList = $000001C8;
  ValueType_ParkingLotSelectionParameters = $000001C9;
  ValueType_ParkingLotSelectionParametersUnorderedList = $000001CA;
  ValueType_ParkingLotSelectionParametersOrderedList = $000001CB;
  ValueType_VehicleCategoryANMDefaults = $000001CC;
  ValueType_VehicleCategoryANMDefaultsUnorderedList = $000001CD;
  ValueType_VehicleCategoryANMDefaultsOrderedList = $000001CE;
  ValueType_Door = $000001CF;
  ValueType_DoorUnorderedList = $000001D0;
  ValueType_DoorOrderedList = $000001D1;
  ValueType_PedestrianClass = $000001D2;
  ValueType_PedestrianClassUnorderedList = $000001D3;
  ValueType_PedestrianClassOrderedList = $000001D4;
  ValueType_PedestrianComposition = $000001D5;
  ValueType_PedestrianCompositionUnorderedList = $000001D6;
  ValueType_PedestrianCompositionOrderedList = $000001D7;
  ValueType_PedestrianRamp = $000001D8;
  ValueType_PedestrianRampUnorderedList = $000001D9;
  ValueType_PedestrianRampOrderedList = $000001DA;
  ValueType_VehicleClass = $000001DB;
  ValueType_VehicleClassUnorderedList = $000001DC;
  ValueType_VehicleClassOrderedList = $000001DD;
  ValueType_VehicleComposition = $000001DE;
  ValueType_VehicleCompositionUnorderedList = $000001DF;
  ValueType_VehicleCompositionOrderedList = $000001E0;
  ValueType_AreaBehaviorTypeElement = $000001E1;
  ValueType_AreaBehaviorTypeElementUnorderedList = $000001E2;
  ValueType_AreaBehaviorTypeElementOrderedList = $000001E3;
  ValueType_BoardingDelayTypeElement = $000001E4;
  ValueType_BoardingDelayTypeElementUnorderedList = $000001E5;
  ValueType_BoardingDelayTypeElementOrderedList = $000001E6;
  ValueType_DynAssignDemand = $000001E7;
  ValueType_DynAssignDemandUnorderedList = $000001E8;
  ValueType_DynAssignDemandOrderedList = $000001E9;
  ValueType_LaneChanges = $000001EA;
  ValueType_LaneChangesUnorderedList = $000001EB;
  ValueType_LaneChangesOrderedList = $000001EC;
  ValueType_PedestrianCompositionRelativeFlow = $000001ED;
  ValueType_PedestrianCompositionRelativeFlowUnorderedList = $000001EE;
  ValueType_PedestrianCompositionRelativeFlowOrderedList = $000001EF;
  ValueType_PedestrianRecord = $000001F0;
  ValueType_PedestrianRecordUnorderedList = $000001F1;
  ValueType_PedestrianRecordOrderedList = $000001F2;
  ValueType_VehVehClassSpeedMisestFact = $000001F3;
  ValueType_VehVehClassSpeedMisestFactUnorderedList = $000001F4;
  ValueType_VehVehClassSpeedMisestFactOrderedList = $000001F5;
  ValueType_VehicleCompositionRelativeFlow = $000001F6;
  ValueType_VehicleCompositionRelativeFlowUnorderedList = $000001F7;
  ValueType_VehicleCompositionRelativeFlowOrderedList = $000001F8;
  ValueType_VehicleRecord = $000001F9;
  ValueType_VehicleRecordUnorderedList = $000001FA;
  ValueType_VehicleRecordOrderedList = $000001FB;
  ValueType_DrivingBehavior = $000001FC;
  ValueType_DrivingBehaviorUnorderedList = $000001FD;
  ValueType_DrivingBehaviorOrderedList = $000001FE;
  ValueType_LinkBehaviorType = $000001FF;
  ValueType_LinkBehaviorTypeUnorderedList = $00000200;
  ValueType_LinkBehaviorTypeOrderedList = $00000201;
  ValueType_ManagedLanesFacility = $00000202;
  ValueType_ManagedLanesFacilityUnorderedList = $00000203;
  ValueType_ManagedLanesFacilityOrderedList = $00000204;
  ValueType_ANMDefaultDrivingBehavior = $00000205;
  ValueType_ANMDefaultDrivingBehaviorUnorderedList = $00000206;
  ValueType_ANMDefaultDrivingBehaviorOrderedList = $00000207;
  ValueType_DrivBehavVehClassSpeedMisestDistr = $00000208;
  ValueType_DrivBehavVehClassSpeedMisestDistrUnorderedList = $00000209;
  ValueType_DrivBehavVehClassSpeedMisestDistrOrderedList = $0000020A;
  ValueType_DriveAisleParameters = $0000020B;
  ValueType_DriveAisleParametersUnorderedList = $0000020C;
  ValueType_DriveAisleParametersOrderedList = $0000020D;
  ValueType_ParkingSpaceParameters = $0000020E;
  ValueType_ParkingSpaceParametersUnorderedList = $0000020F;
  ValueType_ParkingSpaceParametersOrderedList = $00000210;
  ValueType_TimeIntervalPricingModel = $00000211;
  ValueType_TimeIntervalPricingModelUnorderedList = $00000212;
  ValueType_TimeIntervalPricingModelOrderedList = $00000213;
  ValueType_VehClassDecisionModel = $00000214;
  ValueType_VehClassDecisionModelUnorderedList = $00000215;
  ValueType_VehClassDecisionModelOrderedList = $00000216;
  ValueType_VehClassDrivingBehavior = $00000217;
  ValueType_VehClassDrivingBehaviorUnorderedList = $00000218;
  ValueType_VehClassDrivingBehaviorOrderedList = $00000219;
  ValueType_VehClassFollowingBehavior = $0000021A;
  ValueType_VehClassFollowingBehaviorUnorderedList = $0000021B;
  ValueType_VehClassFollowingBehaviorOrderedList = $0000021C;
  ValueType_VehClassLateralBehavior = $0000021D;
  ValueType_VehClassLateralBehaviorUnorderedList = $0000021E;
  ValueType_VehClassLateralBehaviorOrderedList = $0000021F;
  ValueType_Link = $00000220;
  ValueType_LinkUnorderedList = $00000221;
  ValueType_LinkOrderedList = $00000222;
  ValueType_Node = $00000223;
  ValueType_NodeUnorderedList = $00000224;
  ValueType_NodeOrderedList = $00000225;
  ValueType_QueueCounter = $00000226;
  ValueType_QueueCounterUnorderedList = $00000227;
  ValueType_QueueCounterOrderedList = $00000228;
  ValueType_VehicleInput = $00000229;
  ValueType_VehicleInputUnorderedList = $0000022A;
  ValueType_VehicleInputOrderedList = $0000022B;
  ValueType_VehicleRoutingDecisionClosure = $0000022C;
  ValueType_VehicleRoutingDecisionClosureUnorderedList = $0000022D;
  ValueType_VehicleRoutingDecisionClosureOrderedList = $0000022E;
  ValueType_VehicleRoutingDecisionManagedLanes = $0000022F;
  ValueType_VehicleRoutingDecisionManagedLanesUnorderedList = $00000230;
  ValueType_VehicleRoutingDecisionManagedLanesOrderedList = $00000231;
  ValueType_VehicleRoutingDecisionPartial = $00000232;
  ValueType_VehicleRoutingDecisionPartialUnorderedList = $00000233;
  ValueType_VehicleRoutingDecisionPartialOrderedList = $00000234;
  ValueType_VehicleRoutingDecisionStatic = $00000235;
  ValueType_VehicleRoutingDecisionStaticUnorderedList = $00000236;
  ValueType_VehicleRoutingDecisionStaticOrderedList = $00000237;
  ValueType_VehicleTravelTimeMeasurement = $00000238;
  ValueType_VehicleTravelTimeMeasurementUnorderedList = $00000239;
  ValueType_VehicleTravelTimeMeasurementOrderedList = $0000023A;
  ValueType_Lane = $0000023B;
  ValueType_LaneUnorderedList = $0000023C;
  ValueType_LaneOrderedList = $0000023D;
  ValueType_LegOrientation = $0000023E;
  ValueType_LegOrientationUnorderedList = $0000023F;
  ValueType_LegOrientationOrderedList = $00000240;
  ValueType_LinkEndPoint = $00000241;
  ValueType_LinkEndPointUnorderedList = $00000242;
  ValueType_LinkEndPointOrderedList = $00000243;
  ValueType_LinkLnChgDistDistrAttrElement = $00000244;
  ValueType_LinkLnChgDistDistrAttrElementUnorderedList = $00000245;
  ValueType_LinkLnChgDistDistrAttrElementOrderedList = $00000246;
  ValueType_LinkSegment = $00000247;
  ValueType_LinkSegmentUnorderedList = $00000248;
  ValueType_LinkSegmentOrderedList = $00000249;
  ValueType_Movement = $0000024A;
  ValueType_MovementUnorderedList = $0000024B;
  ValueType_MovementOrderedList = $0000024C;
  ValueType_PolyLine3D = $0000024D;
  ValueType_PolyLine3DUnorderedList = $0000024E;
  ValueType_PolyLine3DOrderedList = $0000024F;
  ValueType_TimeIntervalVehVolume = $00000250;
  ValueType_TimeIntervalVehVolumeUnorderedList = $00000251;
  ValueType_TimeIntervalVehVolumeOrderedList = $00000252;
  ValueType_VehClassCountedData = $00000253;
  ValueType_VehClassCountedDataUnorderedList = $00000254;
  ValueType_VehClassCountedDataOrderedList = $00000255;
  ValueType_VehicleRouteClosure = $00000256;
  ValueType_VehicleRouteClosureUnorderedList = $00000257;
  ValueType_VehicleRouteClosureOrderedList = $00000258;
  ValueType_VehicleRouteManagedLanes = $00000259;
  ValueType_VehicleRouteManagedLanesUnorderedList = $0000025A;
  ValueType_VehicleRouteManagedLanesOrderedList = $0000025B;
  ValueType_VehicleRoutePartial = $0000025C;
  ValueType_VehicleRoutePartialUnorderedList = $0000025D;
  ValueType_VehicleRoutePartialOrderedList = $0000025E;
  ValueType_VehicleRouteStatic = $0000025F;
  ValueType_VehicleRouteStaticUnorderedList = $00000260;
  ValueType_VehicleRouteStaticOrderedList = $00000261;
  ValueType_VehicleRoutingDecisionManagedLanesLinkCrossSection = $00000262;
  ValueType_VehicleRoutingDecisionManagedLanesLinkCrossSectionUnorderedList = $00000263;
  ValueType_VehicleRoutingDecisionManagedLanesLinkCrossSectionOrderedList = $00000264;
  ValueType_VehicleRoutingDecisionPartialLinkCrossSection = $00000265;
  ValueType_VehicleRoutingDecisionPartialLinkCrossSectionUnorderedList = $00000266;
  ValueType_VehicleRoutingDecisionPartialLinkCrossSectionOrderedList = $00000267;
  ValueType_VehicleTravelTimeMeasurementLinkCrossSection = $00000268;
  ValueType_VehicleTravelTimeMeasurementLinkCrossSectionUnorderedList = $00000269;
  ValueType_VehicleTravelTimeMeasurementLinkCrossSectionOrderedList = $0000026A;
  ValueType_LaneAffectedVehicleClasses = $0000026B;
  ValueType_LaneAffectedVehicleClassesUnorderedList = $0000026C;
  ValueType_LaneAffectedVehicleClassesOrderedList = $0000026D;
  ValueType_LinkPolyPoint = $0000026E;
  ValueType_LinkPolyPointUnorderedList = $0000026F;
  ValueType_LinkPolyPointOrderedList = $00000270;
  ValueType_ConflictArea = $00000271;
  ValueType_ConflictAreaUnorderedList = $00000272;
  ValueType_ConflictAreaOrderedList = $00000273;
  ValueType_DataCollectionPoint = $00000274;
  ValueType_DataCollectionPointUnorderedList = $00000275;
  ValueType_DataCollectionPointOrderedList = $00000276;
  ValueType_DelayMeasurement = $00000277;
  ValueType_DelayMeasurementUnorderedList = $00000278;
  ValueType_DelayMeasurementOrderedList = $00000279;
  ValueType_DesSpeedDecision = $0000027A;
  ValueType_DesSpeedDecisionUnorderedList = $0000027B;
  ValueType_DesSpeedDecisionOrderedList = $0000027C;
  ValueType_Edge = $0000027D;
  ValueType_EdgeUnorderedList = $0000027E;
  ValueType_EdgeOrderedList = $0000027F;
  ValueType_EdgeClosure = $00000280;
  ValueType_EdgeClosureUnorderedList = $00000281;
  ValueType_EdgeClosureOrderedList = $00000282;
  ValueType_EdgeInitialTraffic = $00000283;
  ValueType_EdgeInitialTrafficUnorderedList = $00000284;
  ValueType_EdgeInitialTrafficOrderedList = $00000285;
  ValueType_FlowBundle = $00000286;
  ValueType_FlowBundleUnorderedList = $00000287;
  ValueType_FlowBundleOrderedList = $00000288;
  ValueType_ParkingLot = $00000289;
  ValueType_ParkingLotUnorderedList = $0000028A;
  ValueType_ParkingLotOrderedList = $0000028B;
  ValueType_PavementMarking = $0000028C;
  ValueType_PavementMarkingUnorderedList = $0000028D;
  ValueType_PavementMarkingOrderedList = $0000028E;
  ValueType_PriorityRule = $0000028F;
  ValueType_PriorityRuleUnorderedList = $00000290;
  ValueType_PriorityRuleOrderedList = $00000291;
  ValueType_ReducedSpeedArea = $00000292;
  ValueType_ReducedSpeedAreaUnorderedList = $00000293;
  ValueType_ReducedSpeedAreaOrderedList = $00000294;
  ValueType_SignalHead = $00000295;
  ValueType_SignalHeadUnorderedList = $00000296;
  ValueType_SignalHeadOrderedList = $00000297;
  ValueType_StopSign = $00000298;
  ValueType_StopSignUnorderedList = $00000299;
  ValueType_StopSignOrderedList = $0000029A;
  ValueType_VehicleAttributeDecision = $0000029B;
  ValueType_VehicleAttributeDecisionUnorderedList = $0000029C;
  ValueType_VehicleAttributeDecisionOrderedList = $0000029D;
  ValueType_VehicleRoutingDecisionDynamic = $0000029E;
  ValueType_VehicleRoutingDecisionDynamicUnorderedList = $0000029F;
  ValueType_VehicleRoutingDecisionDynamicOrderedList = $000002A0;
  ValueType_VehicleRoutingDecisionParking = $000002A1;
  ValueType_VehicleRoutingDecisionParkingUnorderedList = $000002A2;
  ValueType_VehicleRoutingDecisionParkingOrderedList = $000002A3;
  ValueType_AlternativePathSearchVehicleRoutingDecision = $000002A4;
  ValueType_AlternativePathSearchVehicleRoutingDecisionUnorderedList = $000002A5;
  ValueType_AlternativePathSearchVehicleRoutingDecisionOrderedList = $000002A6;
  ValueType_ConflictMarker = $000002A7;
  ValueType_ConflictMarkerUnorderedList = $000002A8;
  ValueType_ConflictMarkerOrderedList = $000002A9;
  ValueType_DTATimeInterval = $000002AA;
  ValueType_DTATimeIntervalUnorderedList = $000002AB;
  ValueType_DTATimeIntervalOrderedList = $000002AC;
  ValueType_FlowBundleLinkCrossSection = $000002AD;
  ValueType_FlowBundleLinkCrossSectionUnorderedList = $000002AE;
  ValueType_FlowBundleLinkCrossSectionOrderedList = $000002AF;
  ValueType_ParkingRouteParameters = $000002B0;
  ValueType_ParkingRouteParametersUnorderedList = $000002B1;
  ValueType_ParkingRouteParametersOrderedList = $000002B2;
  ValueType_TimeIntervalParkingRate = $000002B3;
  ValueType_TimeIntervalParkingRateUnorderedList = $000002B4;
  ValueType_TimeIntervalParkingRateOrderedList = $000002B5;
  ValueType_VehClassDesSpeedDistribution = $000002B6;
  ValueType_VehClassDesSpeedDistributionUnorderedList = $000002B7;
  ValueType_VehClassDesSpeedDistributionOrderedList = $000002B8;
  ValueType_VehClassDwellTimeDistribution = $000002B9;
  ValueType_VehClassDwellTimeDistributionUnorderedList = $000002BA;
  ValueType_VehClassDwellTimeDistributionOrderedList = $000002BB;
  ValueType_VehClassDynAssignDesSpeedDistribution = $000002BC;
  ValueType_VehClassDynAssignDesSpeedDistributionUnorderedList = $000002BD;
  ValueType_VehClassDynAssignDesSpeedDistributionOrderedList = $000002BE;
  ValueType_VehClassGap = $000002BF;
  ValueType_VehClassGapUnorderedList = $000002C0;
  ValueType_VehClassGapOrderedList = $000002C1;
  ValueType_VehClassSpeedReduction = $000002C2;
  ValueType_VehClassSpeedReductionUnorderedList = $000002C3;
  ValueType_VehClassSpeedReductionOrderedList = $000002C4;
  ValueType_VehCompositionInitialVolume = $000002C5;
  ValueType_VehCompositionInitialVolumeUnorderedList = $000002C6;
  ValueType_VehCompositionInitialVolumeOrderedList = $000002C7;
  ValueType_VehicleRouteParking = $000002C8;
  ValueType_VehicleRouteParkingUnorderedList = $000002C9;
  ValueType_VehicleRouteParkingOrderedList = $000002CA;
  ValueType_DataCollectionMeasurement = $000002CB;
  ValueType_DataCollectionMeasurementUnorderedList = $000002CC;
  ValueType_DataCollectionMeasurementOrderedList = $000002CD;
  ValueType_Detector = $000002CE;
  ValueType_DetectorUnorderedList = $000002CF;
  ValueType_DetectorOrderedList = $000002D0;
  ValueType_PTLine = $000002D1;
  ValueType_PTLineUnorderedList = $000002D2;
  ValueType_PTLineOrderedList = $000002D3;
  ValueType_DepartureTime = $000002D4;
  ValueType_DepartureTimeUnorderedList = $000002D5;
  ValueType_DepartureTimeOrderedList = $000002D6;
  ValueType_PTStop = $000002D7;
  ValueType_PTStopUnorderedList = $000002D8;
  ValueType_PTStopOrderedList = $000002D9;
  ValueType_PedestrianArea = $000002DA;
  ValueType_PedestrianAreaUnorderedList = $000002DB;
  ValueType_PedestrianAreaOrderedList = $000002DC;
  ValueType_PedestrianAttributeDecision = $000002DD;
  ValueType_PedestrianAttributeDecisionUnorderedList = $000002DE;
  ValueType_PedestrianAttributeDecisionOrderedList = $000002DF;
  ValueType_PedestrianInput = $000002E0;
  ValueType_PedestrianInputUnorderedList = $000002E1;
  ValueType_PedestrianInputOrderedList = $000002E2;
  ValueType_PedestrianRouteLocation = $000002E3;
  ValueType_PedestrianRouteLocationUnorderedList = $000002E4;
  ValueType_PedestrianRouteLocationOrderedList = $000002E5;
  ValueType_PedestrianRoutingDecisionPartial = $000002E6;
  ValueType_PedestrianRoutingDecisionPartialUnorderedList = $000002E7;
  ValueType_PedestrianRoutingDecisionPartialOrderedList = $000002E8;
  ValueType_PedestrianRoutingDecisionStatic = $000002E9;
  ValueType_PedestrianRoutingDecisionStaticUnorderedList = $000002EA;
  ValueType_PedestrianRoutingDecisionStaticOrderedList = $000002EB;
  ValueType_PedestrianTravelTimeMeasurement = $000002EC;
  ValueType_PedestrianTravelTimeMeasurementUnorderedList = $000002ED;
  ValueType_PedestrianTravelTimeMeasurementOrderedList = $000002EE;
  ValueType_VehicleRoutingDecisionPartialPT = $000002EF;
  ValueType_VehicleRoutingDecisionPartialPTUnorderedList = $000002F0;
  ValueType_VehicleRoutingDecisionPartialPTOrderedList = $000002F1;
  ValueType_BoardingVolume = $000002F2;
  ValueType_BoardingVolumeUnorderedList = $000002F3;
  ValueType_BoardingVolumeOrderedList = $000002F4;
  ValueType_PTLineStop = $000002F5;
  ValueType_PTLineStopUnorderedList = $000002F6;
  ValueType_PTLineStopOrderedList = $000002F7;
  ValueType_PedClassQueuingBehavior = $000002F8;
  ValueType_PedClassQueuingBehaviorUnorderedList = $000002F9;
  ValueType_PedClassQueuingBehaviorOrderedList = $000002FA;
  ValueType_PedestrianRoutePartial = $000002FB;
  ValueType_PedestrianRoutePartialUnorderedList = $000002FC;
  ValueType_PedestrianRoutePartialOrderedList = $000002FD;
  ValueType_PedestrianRouteStatic = $000002FE;
  ValueType_PedestrianRouteStaticUnorderedList = $000002FF;
  ValueType_PedestrianRouteStaticOrderedList = $00000300;
  ValueType_TimeIntervalPedVolume = $00000301;
  ValueType_TimeIntervalPedVolumeUnorderedList = $00000302;
  ValueType_TimeIntervalPedVolumeOrderedList = $00000303;
  ValueType_VehicleRoutePartialPT = $00000304;
  ValueType_VehicleRoutePartialPTUnorderedList = $00000305;
  ValueType_VehicleRoutePartialPTOrderedList = $00000306;
  ValueType_VehicleRoutingDecisionPartialPTLinkCrossSection = $00000307;
  ValueType_VehicleRoutingDecisionPartialPTLinkCrossSectionUnorderedList = $00000308;
  ValueType_VehicleRoutingDecisionPartialPTLinkCrossSectionOrderedList = $00000309;
  ValueType_PartialPTLineStop = $0000030A;
  ValueType_PartialPTLineStopUnorderedList = $0000030B;
  ValueType_PartialPTLineStopOrderedList = $0000030C;
  ValueType_PedestrianRouteChoiceArea = $0000030D;
  ValueType_PedestrianRouteChoiceAreaUnorderedList = $0000030E;
  ValueType_PedestrianRouteChoiceAreaOrderedList = $0000030F;
  ValueType_Alias = $00000310;
  ValueType_AliasUnorderedList = $00000311;
  ValueType_AliasOrderedList = $00000312;
  ValueType_SignalControllerTypeEnum = $00000313;
  ValueType_VehicleCategoryEnum = $00000314;
  ValueType_VehicleTypeEquipmentEnum = $00000315;
  ValueType_ParkingLotSelectionEnum = $00000316;
  ValueType_DistributionUsageEnum = $00000317;
  ValueType_DistributionTypeEnum = $00000318;
  ValueType_ANMVehicleCategoryEnum = $00000319;
  ValueType_ANMDrivingBehaviorDefaultTypeEnum = $0000031A;
  ValueType_ConnectorDirectionEnum = $0000031B;
  ValueType_SignalGroupTypeEnum = $0000031C;
  ValueType_SignalHeadTypeEnum = $0000031D;
  ValueType_TollPricingFormulaOperatorEnum = $0000031E;
  ValueType_StopSignTypeEnum = $0000031F;
  ValueType_CarFollowingModelTypeEnum = $00000320;
  ValueType_LaneChangeRuleTypeEnum = $00000321;
  ValueType_LateralPositionEnum = $00000322;
  ValueType_AmberBehaviorTypeEnum = $00000323;
  ValueType_RedAmberBehaviorTypeEnum = $00000324;
  ValueType_InputVolumeTypeEnum = $00000325;
  ValueType_ParkingLotTypeEnum = $00000326;
  ValueType_PedestrianAreaPTUsageEnum = $00000327;
  ValueType_RouteChoiceMethodEnum = $00000328;
  ValueType_PedestrianStairwayDefinedByEnum = $00000329;
  ValueType_RouteChoiceTravelTimeMethodEnum = $0000032A;
  ValueType_AreaGeometryTypeEnum = $0000032B;
  ValueType_FunctionUsageEnum = $0000032C;
  ValueType_TimeIntervalSetNoEnum = $0000032D;
  ValueType_OrientationEnum = $0000032E;
  ValueType_NodeTypeEnum = $0000032F;
  ValueType_DetectorTypeEnum = $00000330;
  ValueType_WTTProtocolTypeEnum = $00000331;
  ValueType_PedestrianRampTypeEnum = $00000332;
  ValueType_Backgrounds3DResolutionEnum = $00000333;
  ValueType_DynamicRoutingConditionEnum = $00000334;
  ValueType_DynamicRoutingStrategyEnum = $00000335;
  ValueType_ManagedLaneTypeEnum = $00000336;
  ValueType_MovementDirectionEnum = $00000337;
  ValueType_StandingLocationEnum = $00000338;
  ValueType_WTTConfigurationCategoryTypeEnum = $00000339;
  ValueType_SignalizationStateEnum = $0000033A;
  ValueType_PriorityRuleSignalStateEnum = $0000033B;
  ValueType_ConflictAreaStatusEnum = $0000033C;
  ValueType_RailTypeEnum = $0000033D;
  ValueType_TiesTypeEnum = $0000033E;
  ValueType_DoorSideEnum = $0000033F;
  ValueType_DoorUsageEnum = $00000340;
  ValueType_PTWaitingBehaviorEnum = $00000341;
  ValueType_ArrowMarkingDirectionEnum = $00000342;
  ValueType_PavementMarkingTypeEnum = $00000343;
  ValueType_RoundaboutMarkingDirectionEnum = $00000344;
  ValueType_DwellTimeDefinitionEnum = $00000345;
  ValueType_SmoothingMethodEnum = $00000346;
  ValueType_RouteGuidanceStrategyEnum = $00000347;
  ValueType_AggregateSectionEnum = $00000348;
  ValueType_EdgeTypeEnum = $00000349;
  ValueType_AutoExportTypeEnum = $0000034A;
  ValueType_EvaluationFilterTypeEnum = $0000034B;
  ValueType_ActuationEnum = $0000034C;
  ValueType_Arm3DStyleEnum = $0000034D;
  ValueType_SignalHead3DLayoutEnum = $0000034E;
  ValueType_Mast3DStyleEnum = $0000034F;
  ValueType_TrafficSign3DShapeEnum = $00000350;
  ValueType_Signal3DAffiliationEnum = $00000351;
  ValueType_SideEnum = $00000352;
  ValueType_ExtControlEnum = $00000353;
  ValueType_InteractionStateEnum = $00000354;
  ValueType_TargetTypeEnum = $00000355;
  ValueType_VehicleRoutingDecisionTypeEnum = $00000356;
  ValueType_ConstructionElementTypeEnum = $00000357;
  ValueType_PTStateEnum = $00000358;
  ValueType_PedestrianRampDefineEndByEnum = $00000359;
  ValueType_CameraMovementEnum = $0000035A;
  ValueType_ResolutionTypeEnum = $0000035B;
  ValueType_AttributeSelectionStringFormatEnum = $0000035C;
  ValueType_ANIFileTypeEnum = $0000035D;
  ValueType_RunTypeEnum = $0000035E;
  ValueType_RouteChoiceAreaCombinationMethodEnum = $0000035F;
  ValueType_PedestrianRoutingDecisionModelEnum = $00000360;
  ValueType_SimulationModeEnum = $00000361;
  ValueType_DynAssignPathSelectionMethodEnum = $00000362;
  ValueType_MesoEdgeTypeEnum = $00000363;
  ValueType_UserDefinedAttributeDataTypeEnum = $00000364;
  ValueType_UserDefinedAttributeSubAttrEnum = $00000365;
  ValueType_UserDefinedAttributeDataSourceTypeEnum = $00000366;
  ValueType_NetLineStyleEnum = $00000367;
  ValueType_NetPolygonFillStyleEnum = $00000368;
  ValueType_DrivingStateEnum = $00000369;
  ValueType_MesoSpeedModelEnum = $0000036A;
  ValueType_DynAssignCostCalculationIntervalEnum = $0000036B;
  ValueType_DynAssignTraveltimeCalculationMethodEnum = $0000036C;
  ValueType_KeepPreviousResultsEnum = $0000036D;
  ValueType_VehicleRoutingDecisionParkingGeneratedByEnum = $0000036E;
  ValueType_FullOccupancyBehaviourEnum = $0000036F;
  ValueType_ObstacleGeneratedByEnum = $00000370;
  ValueType_MesoNodeTypeEnum = $00000371;
  ValueType_DynAssignPathSelectionTypeEnum = $00000372;
  ValueType_ScriptScopeEnum = $00000373;
  ValueType_ParkingStateEnum = $00000374;
  ValueType_ElevatorMotionStateEnum = $00000375;
  ValueType_ElevatorDoorStateEnum = $00000376;
  ValueType_TravDirectionEnum = $00000377;
  ValueType_LOSSchemeTypeEnum = $00000378;
  ValueType_SignalOutputConfigurationElementLabelTypeEnum = $00000379;
  ValueType_SignalOutputConfigurationElementDetectorLabelTypeEnum = $0000037A;
  ValueType_GradientBaseEnum = $0000037B;
  ValueType_DirectionOfTrafficEnum = $0000037C;
  ValueType_SignalHead3DRedAmbEnum = $0000037D;
  ValueType_UnitLengthLongEnum = $0000037E;
  ValueType_UnitLengthShortEnum = $0000037F;
  ValueType_UnitLengthVeryShortEnum = $00000380;
  ValueType_UnitSpeedEnum = $00000381;
  ValueType_UnitSpeedSmallEnum = $00000382;
  ValueType_UnitAccelerationEnum = $00000383;
  ValueType_IndicatingEnum = $00000384;
  ValueType_MotionStateTypeEnum = $00000385;
  ValueType_PriorityRuleGeneratedByEnum = $00000386;
  ValueType_ConvergenceBehaviorTypeEnum = $00000387;
  ValueType_DrivingDirectionEnum = $00000388;
  ValueType_ParkingDirectionEnum = $00000389;
  ValueType_PedestrianQueueApproachingMethodEnum = $0000038A;
  ValueType_FlowBundleCrossSectionRelevanceEnum = $0000038B;
  ValueType_LicenseModulesEnum = $0000038C;
  ValueType_WaitingPositionApproachMethodTypeEnum = $0000038D;
  ValueType_FlexibleRouteChoiceMethodEnum = $0000038E;
  ValueType_DecisionTypeEnum = $0000038F;
  ValueType_ConflictTypeEnum = $00000390;
  ValueType_InformationSign3DOrientationEnum = $00000391;
  ValueType_InformationSign3DRowContentTypeEnum = $00000392;
  ValueType_FormEnum = $00000393;
  ValueType_VissimTextAlignmentEnum = $00000394;
  ValueType_EvaluationAggregationFunctionEnum = $00000395;
  ValueType_ScreenshotAspectRatioEnum = $00000396;
  ValueType_ElevatorAlightingDoorChoiceMethodEnum = $00000397;
  ValueType_DrawOrder3DEnum = $00000398;
  ValueType_SignalGroupActuationTypeEnum = $00000399;
  ValueType_DeadEndSideEnum = $0000039A;
  ValueType_AccessSideEnum = $0000039B;
  ValueType_Layout = $0000039C;
  ValueType_ChartAreaGraphicParameters = $0000039D;
  ValueType_ChartAreaGraphicParametersUnorderedList = $0000039E;
  ValueType_ChartAreaGraphicParametersOrderedList = $0000039F;
  ValueType_ChartTitleGraphicParamters = $000003A0;
  ValueType_ChartTitleGraphicParamtersUnorderedList = $000003A1;
  ValueType_ChartTitleGraphicParamtersOrderedList = $000003A2;
  ValueType_ChartWindowGraphicParameters = $000003A3;
  ValueType_ChartWindowGraphicParametersUnorderedList = $000003A4;
  ValueType_ChartWindowGraphicParametersOrderedList = $000003A5;
  ValueType_QuickViewLayout = $000003A6;
  ValueType_QuickViewLayoutUnorderedList = $000003A7;
  ValueType_QuickViewLayoutOrderedList = $000003A8;
  ValueType_WorkspaceLayout = $000003A9;
  ValueType_WorkspaceLayoutUnorderedList = $000003AA;
  ValueType_WorkspaceLayoutOrderedList = $000003AB;
  ValueType_ChartLayout = $000003AC;
  ValueType_ChartLayoutUnorderedList = $000003AD;
  ValueType_ChartLayoutOrderedList = $000003AE;
  ValueType_ListLayout = $000003AF;
  ValueType_ListLayoutUnorderedList = $000003B0;
  ValueType_ListLayoutOrderedList = $000003B1;
  ValueType_MatrixEditorLayout = $000003B2;
  ValueType_MatrixEditorLayoutUnorderedList = $000003B3;
  ValueType_MatrixEditorLayoutOrderedList = $000003B4;
  ValueType_NetworkEditorLayout = $000003B5;
  ValueType_NetworkEditorLayoutUnorderedList = $000003B6;
  ValueType_NetworkEditorLayoutOrderedList = $000003B7;
  ValueType_WindowLayoutCurrent = $000003B8;
  ValueType_WindowLayoutCurrentUnorderedList = $000003B9;
  ValueType_WindowLayoutCurrentOrderedList = $000003BA;
  ValueType_WindowLayoutDefault = $000003BB;
  ValueType_WindowLayoutDefaultUnorderedList = $000003BC;
  ValueType_WindowLayoutDefaultOrderedList = $000003BD;
  ValueType_BackgroundRef = $000003BE;
  ValueType_BackgroundRefUnorderedList = $000003BF;
  ValueType_BackgroundRefOrderedList = $000003C0;
  ValueType_BasicChartLayout = $000003C1;
  ValueType_BasicChartLayoutUnorderedList = $000003C2;
  ValueType_BasicChartLayoutOrderedList = $000003C3;
  ValueType_Camera = $000003C4;
  ValueType_CameraUnorderedList = $000003C5;
  ValueType_CameraOrderedList = $000003C6;
  ValueType_DockableAreaPane = $000003C7;
  ValueType_DockableAreaPaneUnorderedList = $000003C8;
  ValueType_DockableAreaPaneOrderedList = $000003C9;
  ValueType_GraphicParameters = $000003CA;
  ValueType_GraphicParametersUnorderedList = $000003CB;
  ValueType_GraphicParametersOrderedList = $000003CC;
  ValueType_InformationSign3DRef = $000003CD;
  ValueType_InformationSign3DRefUnorderedList = $000003CE;
  ValueType_InformationSign3DRefOrderedList = $000003CF;
  ValueType_LevelRef = $000003D0;
  ValueType_LevelRefUnorderedList = $000003D1;
  ValueType_LevelRefOrderedList = $000003D2;
  ValueType_MainWindow = $000003D3;
  ValueType_MainWindowUnorderedList = $000003D4;
  ValueType_MainWindowOrderedList = $000003D5;
  ValueType_MatrixEditorGraphicParameters = $000003D6;
  ValueType_MatrixEditorGraphicParametersUnorderedList = $000003D7;
  ValueType_MatrixEditorGraphicParametersOrderedList = $000003D8;
  ValueType_SignalControllerRef = $000003D9;
  ValueType_SignalControllerRefUnorderedList = $000003DA;
  ValueType_SignalControllerRefOrderedList = $000003DB;
  ValueType_TypeRef = $000003DC;
  ValueType_TypeRefUnorderedList = $000003DD;
  ValueType_TypeRefOrderedList = $000003DE;
  ValueType_BackgroundGraphicParameters = $000003DF;
  ValueType_BackgroundGraphicParametersUnorderedList = $000003E0;
  ValueType_BackgroundGraphicParametersOrderedList = $000003E1;
  ValueType_BasicChartGraphicParameters = $000003E2;
  ValueType_BasicChartGraphicParametersUnorderedList = $000003E3;
  ValueType_BasicChartGraphicParametersOrderedList = $000003E4;
  ValueType_ConflictAreaGraphicParameters = $000003E5;
  ValueType_ConflictAreaGraphicParametersUnorderedList = $000003E6;
  ValueType_ConflictAreaGraphicParametersOrderedList = $000003E7;
  ValueType_DataCollectionPointGraphicParameters = $000003E8;
  ValueType_DataCollectionPointGraphicParametersUnorderedList = $000003E9;
  ValueType_DataCollectionPointGraphicParametersOrderedList = $000003EA;
  ValueType_DataSelection = $000003EB;
  ValueType_DataSelectionUnorderedList = $000003EC;
  ValueType_DataSelectionOrderedList = $000003ED;
  ValueType_DesiredSpeedDecisionGraphicParameters = $000003EE;
  ValueType_DesiredSpeedDecisionGraphicParametersUnorderedList = $000003EF;
  ValueType_DesiredSpeedDecisionGraphicParametersOrderedList = $000003F0;
  ValueType_DetectorGraphicParameters = $000003F1;
  ValueType_DetectorGraphicParametersUnorderedList = $000003F2;
  ValueType_DetectorGraphicParametersOrderedList = $000003F3;
  ValueType_DockableChildPane = $000003F4;
  ValueType_DockableChildPaneUnorderedList = $000003F5;
  ValueType_DockableChildPaneOrderedList = $000003F6;
  ValueType_ElevatorGraphicParameters = $000003F7;
  ValueType_ElevatorGraphicParametersUnorderedList = $000003F8;
  ValueType_ElevatorGraphicParametersOrderedList = $000003F9;
  ValueType_FireEventGraphicParameters = $000003FA;
  ValueType_FireEventGraphicParametersUnorderedList = $000003FB;
  ValueType_FireEventGraphicParametersOrderedList = $000003FC;
  ValueType_FlowBundleGraphicParameters = $000003FD;
  ValueType_FlowBundleGraphicParametersUnorderedList = $000003FE;
  ValueType_FlowBundleGraphicParametersOrderedList = $000003FF;
  ValueType_GraphicParameters3D = $00000400;
  ValueType_GraphicParameters3DUnorderedList = $00000401;
  ValueType_GraphicParameters3DOrderedList = $00000402;
  ValueType_GraphicParametersBasic = $00000403;
  ValueType_GraphicParametersBasicUnorderedList = $00000404;
  ValueType_GraphicParametersBasicOrderedList = $00000405;
  ValueType_InformationSign3DGraphicParameters = $00000406;
  ValueType_InformationSign3DGraphicParametersUnorderedList = $00000407;
  ValueType_InformationSign3DGraphicParametersOrderedList = $00000408;
  ValueType_LinkGraphicParameters = $00000409;
  ValueType_LinkGraphicParametersUnorderedList = $0000040A;
  ValueType_LinkGraphicParametersOrderedList = $0000040B;
  ValueType_NodeGraphicParameters = $0000040C;
  ValueType_NodeGraphicParametersUnorderedList = $0000040D;
  ValueType_NodeGraphicParametersOrderedList = $0000040E;
  ValueType_PTLineGraphicParameters = $0000040F;
  ValueType_PTLineGraphicParametersUnorderedList = $00000410;
  ValueType_PTLineGraphicParametersOrderedList = $00000411;
  ValueType_PTStopGraphicParameters = $00000412;
  ValueType_PTStopGraphicParametersUnorderedList = $00000413;
  ValueType_PTStopGraphicParametersOrderedList = $00000414;
  ValueType_ParkingLotGraphicParameters = $00000415;
  ValueType_ParkingLotGraphicParametersUnorderedList = $00000416;
  ValueType_ParkingLotGraphicParametersOrderedList = $00000417;
  ValueType_PavementMarkingGraphicParameters = $00000418;
  ValueType_PavementMarkingGraphicParametersUnorderedList = $00000419;
  ValueType_PavementMarkingGraphicParametersOrderedList = $0000041A;
  ValueType_PedestrianAreaGraphicParameters = $0000041B;
  ValueType_PedestrianAreaGraphicParametersUnorderedList = $0000041C;
  ValueType_PedestrianAreaGraphicParametersOrderedList = $0000041D;
  ValueType_PedestrianAttributeDecisionGraphicParameters = $0000041E;
  ValueType_PedestrianAttributeDecisionGraphicParametersUnorderedList = $0000041F;
  ValueType_PedestrianAttributeDecisionGraphicParametersOrderedList = $00000420;
  ValueType_PedestrianGraphicParameters = $00000421;
  ValueType_PedestrianGraphicParametersUnorderedList = $00000422;
  ValueType_PedestrianGraphicParametersOrderedList = $00000423;
  ValueType_PedestrianInputGraphicParameters = $00000424;
  ValueType_PedestrianInputGraphicParametersUnorderedList = $00000425;
  ValueType_PedestrianInputGraphicParametersOrderedList = $00000426;
  ValueType_PedestrianObstacleGraphicParameters = $00000427;
  ValueType_PedestrianObstacleGraphicParametersUnorderedList = $00000428;
  ValueType_PedestrianObstacleGraphicParametersOrderedList = $00000429;
  ValueType_PedestrianRampGraphicParameters = $0000042A;
  ValueType_PedestrianRampGraphicParametersUnorderedList = $0000042B;
  ValueType_PedestrianRampGraphicParametersOrderedList = $0000042C;
  ValueType_PedestrianRoutingDecisionGraphicParameters = $0000042D;
  ValueType_PedestrianRoutingDecisionGraphicParametersUnorderedList = $0000042E;
  ValueType_PedestrianRoutingDecisionGraphicParametersOrderedList = $0000042F;
  ValueType_PedestrianTravelTimeMeasurementGraphicParameters = $00000430;
  ValueType_PedestrianTravelTimeMeasurementGraphicParametersUnorderedList = $00000431;
  ValueType_PedestrianTravelTimeMeasurementGraphicParametersOrderedList = $00000432;
  ValueType_PriorityRulesGraphicParameters = $00000433;
  ValueType_PriorityRulesGraphicParametersUnorderedList = $00000434;
  ValueType_PriorityRulesGraphicParametersOrderedList = $00000435;
  ValueType_QueueCounterGraphicParameters = $00000436;
  ValueType_QueueCounterGraphicParametersUnorderedList = $00000437;
  ValueType_QueueCounterGraphicParametersOrderedList = $00000438;
  ValueType_ReducedSpeedAreaGraphicParameters = $00000439;
  ValueType_ReducedSpeedAreaGraphicParametersUnorderedList = $0000043A;
  ValueType_ReducedSpeedAreaGraphicParametersOrderedList = $0000043B;
  ValueType_SectionGraphicParameters = $0000043C;
  ValueType_SectionGraphicParametersUnorderedList = $0000043D;
  ValueType_SectionGraphicParametersOrderedList = $0000043E;
  ValueType_SignalHeadGraphicParameters = $0000043F;
  ValueType_SignalHeadGraphicParametersUnorderedList = $00000440;
  ValueType_SignalHeadGraphicParametersOrderedList = $00000441;
  ValueType_Static3DModelGraphicParameters = $00000442;
  ValueType_Static3DModelGraphicParametersUnorderedList = $00000443;
  ValueType_Static3DModelGraphicParametersOrderedList = $00000444;
  ValueType_StopSignGraphicParameters = $00000445;
  ValueType_StopSignGraphicParametersUnorderedList = $00000446;
  ValueType_StopSignGraphicParametersOrderedList = $00000447;
  ValueType_TrafficSignal3DGraphicParameters = $00000448;
  ValueType_TrafficSignal3DGraphicParametersUnorderedList = $00000449;
  ValueType_TrafficSignal3DGraphicParametersOrderedList = $0000044A;
  ValueType_VehicleAttributeDecisionGraphicParameters = $0000044B;
  ValueType_VehicleAttributeDecisionGraphicParametersUnorderedList = $0000044C;
  ValueType_VehicleAttributeDecisionGraphicParametersOrderedList = $0000044D;
  ValueType_VehicleGraphicParameters = $0000044E;
  ValueType_VehicleGraphicParametersUnorderedList = $0000044F;
  ValueType_VehicleGraphicParametersOrderedList = $00000450;
  ValueType_VehicleInputGraphicParameters = $00000451;
  ValueType_VehicleInputGraphicParametersUnorderedList = $00000452;
  ValueType_VehicleInputGraphicParametersOrderedList = $00000453;
  ValueType_VehicleRoutingDecisionGraphicParameters = $00000454;
  ValueType_VehicleRoutingDecisionGraphicParametersUnorderedList = $00000455;
  ValueType_VehicleRoutingDecisionGraphicParametersOrderedList = $00000456;
  ValueType_VehicleTravelTimeMeasurementGraphicParameters = $00000457;
  ValueType_VehicleTravelTimeMeasurementGraphicParametersUnorderedList = $00000458;
  ValueType_VehicleTravelTimeMeasurementGraphicParametersOrderedList = $00000459;
  ValueType_AttributeRef = $0000045A;
  ValueType_AttributeRefUnorderedList = $0000045B;
  ValueType_AttributeRefOrderedList = $0000045C;
  ValueType_AxisGraphicParameters = $0000045D;
  ValueType_AxisGraphicParametersUnorderedList = $0000045E;
  ValueType_AxisGraphicParametersOrderedList = $0000045F;
  ValueType_ClassRef = $00000460;
  ValueType_ClassRefUnorderedList = $00000461;
  ValueType_ClassRefOrderedList = $00000462;
  ValueType_DataSeriesGraphicParameters = $00000463;
  ValueType_DataSeriesGraphicParametersUnorderedList = $00000464;
  ValueType_DataSeriesGraphicParametersOrderedList = $00000465;
  ValueType_FlowBundleBarGraphicParameters = $00000466;
  ValueType_FlowBundleBarGraphicParametersUnorderedList = $00000467;
  ValueType_FlowBundleBarGraphicParametersOrderedList = $00000468;
  ValueType_IntPoint2D = $00000469;
  ValueType_IntPoint2DUnorderedList = $0000046A;
  ValueType_IntPoint2DOrderedList = $0000046B;
  ValueType_LegendGraphicParameters = $0000046C;
  ValueType_LegendGraphicParametersUnorderedList = $0000046D;
  ValueType_LegendGraphicParametersOrderedList = $0000046E;
  ValueType_LinkBarGraphicParameters = $0000046F;
  ValueType_LinkBarGraphicParametersUnorderedList = $00000470;
  ValueType_LinkBarGraphicParametersOrderedList = $00000471;
  ValueType_NetworkObjectRef = $00000472;
  ValueType_NetworkObjectRefUnorderedList = $00000473;
  ValueType_NetworkObjectRefOrderedList = $00000474;
  ValueType_SimulationRunRef = $00000475;
  ValueType_SimulationRunRefUnorderedList = $00000476;
  ValueType_SimulationRunRefOrderedList = $00000477;
  ValueType_TimeIntervalRef = $00000478;
  ValueType_TimeIntervalRefUnorderedList = $00000479;
  ValueType_TimeIntervalRefOrderedList = $0000047A;
  ValueType_TurnValVisualizationScheme = $0000047B;
  ValueType_TurnValVisualizationSchemeUnorderedList = $0000047C;
  ValueType_TurnValVisualizationSchemeOrderedList = $0000047D;
  ValueType_ColorScheme = $0000047E;
  ValueType_ColorSchemeUnorderedList = $0000047F;
  ValueType_ColorSchemeOrderedList = $00000480;
  ValueType_NetObjectListLayoutParameters = $00000481;
  ValueType_NetObjectListLayoutParametersUnorderedList = $00000482;
  ValueType_NetObjectListLayoutParametersOrderedList = $00000483;
  ValueType_AttributeListLayoutParameters = $00000484;
  ValueType_AttributeListLayoutParametersUnorderedList = $00000485;
  ValueType_AttributeListLayoutParametersOrderedList = $00000486;
  ValueType_ColorSchemeElement = $00000487;
  ValueType_ColorSchemeElementUnorderedList = $00000488;
  ValueType_ColorSchemeElementOrderedList = $00000489;
  ValueType_AttributeListLayoutFilter = $0000048A;
  ValueType_AttributeListLayoutFilterUnorderedList = $0000048B;
  ValueType_AttributeListLayoutFilterOrderedList = $0000048C;
  ValueType_AttributeListLayoutFilterCriterionAcceleration = $0000048D;
  ValueType_AttributeListLayoutFilterCriterionAccelerationUnorderedList = $0000048E;
  ValueType_AttributeListLayoutFilterCriterionAccelerationOrderedList = $0000048F;
  ValueType_AttributeListLayoutFilterCriterionArea = $00000490;
  ValueType_AttributeListLayoutFilterCriterionAreaUnorderedList = $00000491;
  ValueType_AttributeListLayoutFilterCriterionAreaOrderedList = $00000492;
  ValueType_AttributeListLayoutFilterCriterionBool = $00000493;
  ValueType_AttributeListLayoutFilterCriterionBoolUnorderedList = $00000494;
  ValueType_AttributeListLayoutFilterCriterionBoolOrderedList = $00000495;
  ValueType_AttributeListLayoutFilterCriterionCoord = $00000496;
  ValueType_AttributeListLayoutFilterCriterionCoordUnorderedList = $00000497;
  ValueType_AttributeListLayoutFilterCriterionCoordOrderedList = $00000498;
  ValueType_AttributeListLayoutFilterCriterionDouble = $00000499;
  ValueType_AttributeListLayoutFilterCriterionDoubleUnorderedList = $0000049A;
  ValueType_AttributeListLayoutFilterCriterionDoubleOrderedList = $0000049B;
  ValueType_AttributeListLayoutFilterCriterionDurationInSeconds = $0000049C;
  ValueType_AttributeListLayoutFilterCriterionDurationInSecondsUnorderedList = $0000049D;
  ValueType_AttributeListLayoutFilterCriterionDurationInSecondsOrderedList = $0000049E;
  ValueType_AttributeListLayoutFilterCriterionIndex = $0000049F;
  ValueType_AttributeListLayoutFilterCriterionIndexUnorderedList = $000004A0;
  ValueType_AttributeListLayoutFilterCriterionIndexOrderedList = $000004A1;
  ValueType_AttributeListLayoutFilterCriterionInt = $000004A2;
  ValueType_AttributeListLayoutFilterCriterionIntUnorderedList = $000004A3;
  ValueType_AttributeListLayoutFilterCriterionIntOrderedList = $000004A4;
  ValueType_AttributeListLayoutFilterCriterionLongLength = $000004A5;
  ValueType_AttributeListLayoutFilterCriterionLongLengthUnorderedList = $000004A6;
  ValueType_AttributeListLayoutFilterCriterionLongLengthOrderedList = $000004A7;
  ValueType_AttributeListLayoutFilterCriterionPedestrianDensity = $000004A8;
  ValueType_AttributeListLayoutFilterCriterionPedestrianDensityUnorderedList = $000004A9;
  ValueType_AttributeListLayoutFilterCriterionPedestrianDensityOrderedList = $000004AA;
  ValueType_AttributeListLayoutFilterCriterionPedestrianFlow = $000004AB;
  ValueType_AttributeListLayoutFilterCriterionPedestrianFlowUnorderedList = $000004AC;
  ValueType_AttributeListLayoutFilterCriterionPedestrianFlowOrderedList = $000004AD;
  ValueType_AttributeListLayoutFilterCriterionPedestrianSpeedSquared = $000004AE;
  ValueType_AttributeListLayoutFilterCriterionPedestrianSpeedSquaredUnorderedList = $000004AF;
  ValueType_AttributeListLayoutFilterCriterionPedestrianSpeedSquaredOrderedList = $000004B0;
  ValueType_AttributeListLayoutFilterCriterionPercentage = $000004B1;
  ValueType_AttributeListLayoutFilterCriterionPercentageUnorderedList = $000004B2;
  ValueType_AttributeListLayoutFilterCriterionPercentageOrderedList = $000004B3;
  ValueType_AttributeListLayoutFilterCriterionPreciseDurationInSeconds = $000004B4;
  ValueType_AttributeListLayoutFilterCriterionPreciseDurationInSecondsUnorderedList = $000004B5;
  ValueType_AttributeListLayoutFilterCriterionPreciseDurationInSecondsOrderedList = $000004B6;
  ValueType_AttributeListLayoutFilterCriterionRelationEnum = $000004B7;
  ValueType_AttributeListLayoutFilterCriterionRelationEnumUnorderedList = $000004B8;
  ValueType_AttributeListLayoutFilterCriterionRelationEnumOrderedList = $000004B9;
  ValueType_AttributeListLayoutFilterCriterionShortLength = $000004BA;
  ValueType_AttributeListLayoutFilterCriterionShortLengthUnorderedList = $000004BB;
  ValueType_AttributeListLayoutFilterCriterionShortLengthOrderedList = $000004BC;
  ValueType_AttributeListLayoutFilterCriterionSmallSpeed = $000004BD;
  ValueType_AttributeListLayoutFilterCriterionSmallSpeedUnorderedList = $000004BE;
  ValueType_AttributeListLayoutFilterCriterionSmallSpeedOrderedList = $000004BF;
  ValueType_AttributeListLayoutFilterCriterionSpeed = $000004C0;
  ValueType_AttributeListLayoutFilterCriterionSpeedUnorderedList = $000004C1;
  ValueType_AttributeListLayoutFilterCriterionSpeedOrderedList = $000004C2;
  ValueType_AttributeListLayoutFilterCriterionString = $000004C3;
  ValueType_AttributeListLayoutFilterCriterionStringUnorderedList = $000004C4;
  ValueType_AttributeListLayoutFilterCriterionStringOrderedList = $000004C5;
  ValueType_AttributeListLayoutFilterCriterionTrafficVolume = $000004C6;
  ValueType_AttributeListLayoutFilterCriterionTrafficVolumeUnorderedList = $000004C7;
  ValueType_AttributeListLayoutFilterCriterionTrafficVolumeOrderedList = $000004C8;
  ValueType_AttributeListLayoutFilterCriterionUnsignedInt = $000004C9;
  ValueType_AttributeListLayoutFilterCriterionUnsignedIntUnorderedList = $000004CA;
  ValueType_AttributeListLayoutFilterCriterionUnsignedIntOrderedList = $000004CB;
  ValueType_AttributeListLayoutFilterCriterionVehicleDensity = $000004CC;
  ValueType_AttributeListLayoutFilterCriterionVehicleDensityUnorderedList = $000004CD;
  ValueType_AttributeListLayoutFilterCriterionVehicleDensityOrderedList = $000004CE;
  ValueType_AttributeListLayoutFilterCriterionVeryShortLength = $000004CF;
  ValueType_AttributeListLayoutFilterCriterionVeryShortLengthUnorderedList = $000004D0;
  ValueType_AttributeListLayoutFilterCriterionVeryShortLengthOrderedList = $000004D1;
  ValueType_DockablePaneTypeEnum = $000004D2;
  ValueType_PolygonFillStyleEnum = $000004D3;
  ValueType_TrafficSignalDisplayTypeEnum = $000004D4;
  ValueType_AlignmentTypeEnum = $000004D5;
  ValueType_LineStyleEnum = $000004D6;
  ValueType_AreaRepresentationEnum = $000004D7;
  ValueType_AttributeListLayoutStringFormatEnum = $000004D8;
  ValueType_NetworkEditorSynchronizationEnum = $000004D9;
  ValueType_LinkRepresentationEnum = $000004DA;
  ValueType_FogModeEnum = $000004DB;
  ValueType_StatusBarModeEnum = $000004DC;
  ValueType_MapProviderTypeEnum = $000004DD;
  ValueType_ChartFillStyleEnum = $000004DE;
  ValueType_LegendPositionEnum = $000004DF;
  ValueType_DataMappingTargetEnum = $000004E0;
  ValueType_ChartLineStyleEnum = $000004E1;
  ValueType_SeriesTypeEnum = $000004E2;
  ValueType_ChartMarkerStyleEnum = $000004E3;
  ValueType_ChartTypeEnum = $000004E4;
  ValueType_DrawingModeColSchemeDispTypeEnum = $000004E5;
  ValueType_DrawingModeColSchemeFuncEnum = $000004E6;
  ValueType_DrawingModeColSchemeDispTypeFuncEnum = $000004E7;
  ValueType_DrawingModeColSchemeStateEnum = $000004E8;
  ValueType_Alignment2DTypeEnum = $000004E9;
  ValueType_AgentShapeStyleEnum = $000004EA;
  ValueType_DrawingModeDistColSchemeEnum = $000004EB;
  ValueType_DrawingModeDispTypeEnum = $000004EC;
  ValueType_LinkBarDrawingModeEnum = $000004ED;
  ValueType_LinkBarRepresentationEnum = $000004EE;
  ValueType_CriterionTypeNumericEnum = $000004EF;
  ValueType_CriterionTypeStringEnum = $000004F0;
  ValueType_CriterionTypeRelationEnumEnum = $000004F1;
  ValueType_OvertakingLaneDrawingModeEnum = $000004F2;
  ValueType_ScenarioManagementProject = $000004F3;
  ValueType_LogEntry = $000004F4;
  ValueType_LogEntryUnorderedList = $000004F5;
  ValueType_LogEntryOrderedList = $000004F6;
  ValueType_MaxKey = $000004F7;
  ValueType_MaxKeyUnorderedList = $000004F8;
  ValueType_MaxKeyOrderedList = $000004F9;
  ValueType_Modification = $000004FA;
  ValueType_ModificationUnorderedList = $000004FB;
  ValueType_ModificationOrderedList = $000004FC;
  ValueType_Project = $000004FD;
  ValueType_ProjectUnorderedList = $000004FE;
  ValueType_ProjectOrderedList = $000004FF;
  ValueType_Scenario = $00000500;
  ValueType_ScenarioUnorderedList = $00000501;
  ValueType_ScenarioOrderedList = $00000502;
  ValueType_UpdateCounter = $00000503;
  ValueType_UpdateCounterUnorderedList = $00000504;
  ValueType_UpdateCounterOrderedList = $00000505;
  ValueType_TypeLast = $00000506;

// Constants for enum AggregationFunction
type
  AggregationFunction = TOleEnum;
const
  AggregationFunctionDefault = $00000000;
  AggregationFunctionAggregate = $00000001;
  AggregationFunctionMin = $00000002;
  AggregationFunctionMax = $00000003;
  AggregationFunctionAvg = $00000004;
  AggregationFunctionSum = $00000005;
  AggregationFunctionWeightedAvg = $00000006;
  AggregationFunctionCompare = $00000007;
  AggregationFunctionEmpty = $00000008;
  AggregationFunctionCount = $00000009;
  AggregationFunctionConcatenate = $0000000A;
  AggregationFunctionFreqOfOccurrence = $0000000B;
  AggregationFunctionDistinct = $0000000C;
  AggregationFunctionHeadway = $0000000D;
  AggregationFunctionFirst = $0000000E;
  AggregationFunctionLast = $0000000F;
  AggregationFunction_End = $00000010;

// Constants for enum StringFormatTypeT
type
  StringFormatTypeT = TOleEnum;
const
  defaultfmt = $00000000;
  scientific = $00000001;
  percent = $00000002;
  longlength = $00000003;
  shortlength = $00000004;
  veryshortlength = $00000005;
  hours = $00000006;
  minutes = $00000007;
  seconds = $00000008;
  timepoint = $00000009;
  timepoint24 = $0000000A;
  hhmm = $0000000B;
  hhmm24 = $0000000C;
  coord2d = $0000000D;
  coord3d = $0000000E;
  filename_Texture = $00000064;
  filename_Vissim3DModel = $00000065;
  filename_Sound = $00000067;
  filename_DriverModel = $00000068;
  filename_Background = $00000069;
  filename_TripChain = $0000006A;
  filename_Cost = $0000006B;
  filename_Path = $0000006C;
  filename_Matrix = $0000006D;
  filename_WTT = $0000006E;
  filename_SCProg = $0000006F;
  filename_SCGui = $00000070;
  filename_Script = $00000071;
  filename_FDS = $00000072;

// Constants for enum ANIFileType
type
  ANIFileType = TOleEnum;
const
  ANIFileTypeANI_TXT = $00000001;
  ANIFileTypeANI_Binary = $00000002;
  ANIFileTypeANI_Web = $00000003;
  ANIFileType_End = $00000004;

// Constants for enum ANMDrivingBehaviorDefaultType
type
  ANMDrivingBehaviorDefaultType = TOleEnum;
const
  ANMDrivingBehaviorDefaultTypeNone = $00000001;
  ANMDrivingBehaviorDefaultTypeUrban = $00000002;
  ANMDrivingBehaviorDefaultTypeRightLeftSide = $00000003;
  ANMDrivingBehaviorDefaultTypeHighway = $00000004;
  ANMDrivingBehaviorDefaultTypePedestrians = $00000005;
  ANMDrivingBehaviorDefaultTypeBicycleLane = $00000006;
  ANMDrivingBehaviorDefaultType_End = $00000007;

// Constants for enum ANMVehicleCategory
type
  ANMVehicleCategory = TOleEnum;
const
  ANMVehicleCategoryNone = $00000001;
  ANMVehicleCategoryCar = $00000002;
  ANMVehicleCategoryHGV = $00000003;
  ANMVehicleCategoryBus = $00000004;
  ANMVehicleCategoryTram = $00000005;
  ANMVehicleCategoryPedestrian = $00000006;
  ANMVehicleCategoryBike = $00000007;
  ANMVehicleCategory_End = $00000008;

// Constants for enum AccessSide
type
  AccessSide = TOleEnum;
const
  AccessSideAll = $00000001;
  AccessSideLeft = $00000002;
  AccessSideRight = $00000003;
  AccessSideNone = $00000004;
  AccessSide_End = $00000005;

// Constants for enum Actuation
type
  Actuation = TOleEnum;
const
  ActuationNone = $00000001;
  ActuationSingle = $00000002;
  ActuationRepeated = $00000003;
  ActuationContinuous = $00000004;
  Actuation_End = $00000005;

// Constants for enum AggregateSection
type
  AggregateSection = TOleEnum;
const
  AggregateSectionStart = $00000001;
  AggregateSectionDestination = $00000002;
  AggregateSection_End = $00000003;

// Constants for enum AmberBehaviorType
type
  AmberBehaviorType = TOleEnum;
const
  AmberBehaviorTypeOneDecision = $00000001;
  AmberBehaviorTypeContinuousCheck = $00000002;
  AmberBehaviorType_End = $00000003;

// Constants for enum AreaGeometryType
type
  AreaGeometryType = TOleEnum;
const
  AreaGeometryTypeRectangle = $00000001;
  AreaGeometryTypePolygon = $00000002;
  AreaGeometryTypeCircle = $00000003;
  AreaGeometryType_End = $00000004;

// Constants for enum Arm3DStyle
type
  Arm3DStyle = TOleEnum;
const
  Arm3DStyleSingleFramed = $00000001;
  Arm3DStyleDoubleFramedDown = $00000002;
  Arm3DStyleDoubleFramedUp = $00000003;
  Arm3DStyle_End = $00000004;

// Constants for enum ArrowMarkingDirection
type
  ArrowMarkingDirection = TOleEnum;
const
  ArrowMarkingDirectionLeft = $00000001;
  ArrowMarkingDirectionRight = $00000002;
  ArrowMarkingDirectionStraight = $00000004;

// Constants for enum AttributeSelectionStringFormat
type
  AttributeSelectionStringFormat = TOleEnum;
const
  AttributeSelectionStringFormatDefault = $00000001;
  AttributeSelectionStringFormatScientific = $00000002;
  AttributeSelectionStringFormatPercent = $00000003;
  AttributeSelectionStringFormatKilometers = $00000004;
  AttributeSelectionStringFormatMiles = $00000005;
  AttributeSelectionStringFormatMeters = $00000006;
  AttributeSelectionStringFormatFeet = $00000007;
  AttributeSelectionStringFormatMillimeters = $00000008;
  AttributeSelectionStringFormatInches = $00000009;
  AttributeSelectionStringFormatKilometersPerHour = $0000000A;
  AttributeSelectionStringFormatMilesPerHour = $0000000B;
  AttributeSelectionStringFormatMetersPerSecond = $0000000C;
  AttributeSelectionStringFormatFeetPerMinute = $0000000D;
  AttributeSelectionStringFormatMetersPerSquareSecond = $0000000E;
  AttributeSelectionStringFormatFeetPerSquareSecond = $0000000F;
  AttributeSelectionStringFormatSquareKilometers = $00000010;
  AttributeSelectionStringFormatSquareMiles = $00000011;
  AttributeSelectionStringFormatSquareMeters = $00000012;
  AttributeSelectionStringFormatSquareFeet = $00000013;
  AttributeSelectionStringFormatHours = $00000014;
  AttributeSelectionStringFormatMinutes = $00000015;
  AttributeSelectionStringFormatSeconds = $00000016;
  AttributeSelectionStringFormatTimePoint = $00000017;
  AttributeSelectionStringFormatTimePoint24 = $00000018;
  AttributeSelectionStringFormatHHMM = $00000019;
  AttributeSelectionStringFormatHHMM24 = $0000001A;
  AttributeSelectionStringFormatVehiclesPerKilometer = $0000001B;
  AttributeSelectionStringFormatVehiclesPerMile = $0000001C;
  AttributeSelectionStringFormatPedestriansPerSquareMeter = $0000001D;
  AttributeSelectionStringFormatPedestriansPerSquareFoot = $0000001E;
  AttributeSelectionStringFormatPedestriansPerMeterSecond = $0000001F;
  AttributeSelectionStringFormatPedestriansPerFootSecond = $00000020;
  AttributeSelectionStringFormat_End = $00000021;

// Constants for enum AutoExportType
type
  AutoExportType = TOleEnum;
const
  AutoExportTypeFile = $00000001;
  AutoExportTypeDatabase = $00000002;
  AutoExportType_End = $00000003;

// Constants for enum Backgrounds3DResolution
type
  Backgrounds3DResolution = TOleEnum;
const
  Backgrounds3DResolutionLowest = $00000001;
  Backgrounds3DResolutionLow = $00000002;
  Backgrounds3DResolutionMedium = $00000003;
  Backgrounds3DResolutionHigh = $00000004;
  Backgrounds3DResolutionTiles = $00000005;
  Backgrounds3DResolution_End = $00000006;

// Constants for enum CameraMovement
type
  CameraMovement = TOleEnum;
const
  CameraMovementConstantSpeed = $00000001;
  CameraMovementSmoothStart = $00000002;
  CameraMovementSmoothEnd = $00000003;
  CameraMovementSmooth = $00000004;
  CameraMovement_End = $00000005;

// Constants for enum CarFollowingModelType
type
  CarFollowingModelType = TOleEnum;
const
  CarFollowingModelTypeNoInteraction = $00000001;
  CarFollowingModelTypeWiedemann74 = $00000002;
  CarFollowingModelTypeWiedemann99 = $00000003;
  CarFollowingModelType_End = $00000004;

// Constants for enum ConflictAreaStatus
type
  ConflictAreaStatus = TOleEnum;
const
  ConflictAreaStatusTwoYieldsOne = $00000001;
  ConflictAreaStatusOneYieldsTwo = $00000002;
  ConflictAreaStatusUndetermined = $00000003;
  ConflictAreaStatusPassive = $00000004;
  ConflictAreaStatus_End = $00000005;

// Constants for enum ConflictType
type
  ConflictType = TOleEnum;
const
  ConflictTypeMerge = $00000001;
  ConflictTypeBranch = $00000002;
  ConflictTypeCrossing = $00000003;
  ConflictType_End = $00000004;

// Constants for enum ConnectorDirection
type
  ConnectorDirection = TOleEnum;
const
  ConnectorDirectionAll = $00000001;
  ConnectorDirectionLeft = $00000002;
  ConnectorDirectionRight = $00000003;
  ConnectorDirectionNone = $00000004;
  ConnectorDirection_End = $00000005;

// Constants for enum ConstructionElementType
type
  ConstructionElementType = TOleEnum;
const
  ConstructionElementTypeArea = $00000001;
  ConstructionElementTypeRampStairs = $00000002;
  ConstructionElementTypePedestrianLink = $00000003;
  ConstructionElementTypeElevator = $00000004;
  ConstructionElementTypePTVehicle = $00000005;
  ConstructionElementType_End = $00000006;

// Constants for enum ConvergenceBehaviorType
type
  ConvergenceBehaviorType = TOleEnum;
const
  ConvergenceBehaviorTypeStopMultiRun = $00000001;
  ConvergenceBehaviorTypeAskMultiRun = $00000002;
  ConvergenceBehaviorTypeCompleteMultiRun = $00000003;
  ConvergenceBehaviorType_End = $00000004;

// Constants for enum DeadEndSide
type
  DeadEndSide = TOleEnum;
const
  DeadEndSideNone = $00000001;
  DeadEndSideEntry = $00000002;
  DeadEndSideExit = $00000003;
  DeadEndSide_End = $00000004;

// Constants for enum DecisionType
type
  DecisionType = TOleEnum;
const
  DecisionTypeDistribution = $00000001;
  DecisionTypeValue = $00000002;
  DecisionType_End = $00000003;

// Constants for enum DetectorType
type
  DetectorType = TOleEnum;
const
  DetectorTypeStandard = $00000001;
  DetectorTypePuls = $00000002;
  DetectorTypePresence = $00000003;
  DetectorTypePTCallingPoint = $00000004;
  DetectorType_End = $00000005;

// Constants for enum DirectionOfTraffic
type
  DirectionOfTraffic = TOleEnum;
const
  DirectionOfTrafficLeftHandTraffic = $00000001;
  DirectionOfTrafficRightHandTraffic = $00000002;
  DirectionOfTraffic_End = $00000003;

// Constants for enum DistributionUsage
type
  DistributionUsage = TOleEnum;
const
  DistributionUsageInternal = $00000001;
  DistributionUsageDesiredSpeed = $00000002;
  DistributionUsageDwellTime = $00000003;
  DistributionUsageWeight = $00000004;
  DistributionUsagePower = $00000005;
  DistributionUsageLocation = $00000006;
  DistributionUsageOccupancy = $00000007;
  DistributionUsageDistance = $00000008;
  DistributionUsageFree = $00000009;
  DistributionUsage_End = $0000000A;

// Constants for enum DoorSide
type
  DoorSide = TOleEnum;
const
  DoorSideNone = $00000001;
  DoorSideLeft = $00000002;
  DoorSideRight = $00000003;
  DoorSideBoth = $00000004;
  DoorSide_End = $00000005;

// Constants for enum DoorUsage
type
  DoorUsage = TOleEnum;
const
  DoorUsageNone = $00000001;
  DoorUsageAlighting = $00000002;
  DoorUsageBoarding = $00000003;
  DoorUsageBoth = $00000004;
  DoorUsage_End = $00000005;

// Constants for enum DrawOrder3D
type
  DrawOrder3D = TOleEnum;
const
  DrawOrder3DTop2 = $00000001;
  DrawOrder3DTop1 = $00000002;
  DrawOrder3DMid = $00000003;
  DrawOrder3DBottom1 = $00000004;
  DrawOrder3DBottom2 = $00000005;
  DrawOrder3D_End = $00000006;

// Constants for enum DrivingDirection
type
  DrivingDirection = TOleEnum;
const
  DrivingDirectionForward = $00000001;
  DrivingDirectionReverse = $00000002;
  DrivingDirection_End = $00000003;

// Constants for enum DrivingState
type
  DrivingState = TOleEnum;
const
  DrivingStateInQueueCondition = $00000001;
  DrivingStateWaitingForLaneChange = $00000002;
  DrivingStateIgnoresPriorityRule = $00000003;
  DrivingStateInPriorityRuleDeadlock = $00000004;
  DrivingStateWantsToChangeLane = $00000005;
  DrivingStateIsChangingLane = $00000006;
  DrivingStateHasChangedLane = $00000007;
  DrivingStateBrakesForLaneChange = $00000008;
  DrivingStateBrakesCooperatively = $00000009;
  DrivingStateLossOfAttention = $0000000A;
  DrivingStateIgnoresRedSignal = $0000000B;
  DrivingStateBrakesHard = $0000000C;
  DrivingStateBrakesModerately = $0000000D;
  DrivingStateDefault = $0000000E;
  DrivingStateReversing = $0000000F;
  DrivingStateIgnoresIntacVehicle = $00000010;
  DrivingStateInPlatoon = $00000011;
  DrivingStateIgnoresParkingBlockage = $00000012;
  DrivingState_End = $00000013;

// Constants for enum DwellTimeDefinition
type
  DwellTimeDefinition = TOleEnum;
const
  DwellTimeDefinitionDistribution = $00000001;
  DwellTimeDefinitionCalculation = $00000002;
  DwellTimeDefinition_End = $00000003;

// Constants for enum DynAssignCostCalculationInterval
type
  DynAssignCostCalculationInterval = TOleEnum;
const
  DynAssignCostCalculationIntervalPreviousSimRun = $00000001;
  DynAssignCostCalculationIntervalCurrentSimRun = $00000002;
  DynAssignCostCalculationInterval_End = $00000003;

// Constants for enum DynAssignPathSelectionMethod
type
  DynAssignPathSelectionMethod = TOleEnum;
const
  DynAssignPathSelectionMethodStochasticKirchhoff = $00000001;
  DynAssignPathSelectionMethodUseVolumeOld = $00000002;
  DynAssignPathSelectionMethodEquilibrium = $00000003;
  DynAssignPathSelectionMethod_End = $00000004;

// Constants for enum DynAssignPathSelectionType
type
  DynAssignPathSelectionType = TOleEnum;
const
  DynAssignPathSelectionTypeDecideAtStartOnly = $00000001;
  DynAssignPathSelectionTypeDecideRepeatedly = $00000002;
  DynAssignPathSelectionType_End = $00000003;

// Constants for enum DynAssignTraveltimeCalculationMethod
type
  DynAssignTraveltimeCalculationMethod = TOleEnum;
const
  DynAssignTraveltimeCalculationMethodPathTraveltimes = $00000001;
  DynAssignTraveltimeCalculationMethodEdgeTraveltimes = $00000002;
  DynAssignTraveltimeCalculationMethod_End = $00000003;

// Constants for enum DynamicRoutingCondition
type
  DynamicRoutingCondition = TOleEnum;
const
  DynamicRoutingConditionDestinationIsZoneOfParkingLot = $00000001;
  DynamicRoutingConditionDestinationParkingLotFull = $00000002;
  DynamicRoutingConditionDestinationParkingLotFewerThan = $00000003;
  DynamicRoutingConditionParkingLotFull = $00000004;
  DynamicRoutingConditionParkingLotFewerThan = $00000005;
  DynamicRoutingConditionAlways = $00000006;
  DynamicRoutingCondition_End = $00000007;

// Constants for enum DynamicRoutingStrategy
type
  DynamicRoutingStrategy = TOleEnum;
const
  DynamicRoutingStrategySameZoneDifferentParkingLotRandom = $00000001;
  DynamicRoutingStrategySameZoneParkingLotByBenefitFunction = $00000002;
  DynamicRoutingStrategySameZoneDifferentParkingLotByBenefitFunction = $00000003;
  DynamicRoutingStrategyAnyZoneParkingLotByBenefitFunction = $00000004;
  DynamicRoutingStrategyAnyZoneDifferentParkingLotByBenefitFunction = $00000005;
  DynamicRoutingStrategyNewRouteToDestinationParkingLot = $00000006;
  DynamicRoutingStrategySpecifiedParkingLot = $00000007;
  DynamicRoutingStrategy_End = $00000008;

// Constants for enum ElevatorAlightingDoorChoiceMethod
type
  ElevatorAlightingDoorChoiceMethod = TOleEnum;
const
  ElevatorAlightingDoorChoiceMethodRandomDoor = $00000001;
  ElevatorAlightingDoorChoiceMethodDoorTowardNextRouteLocation = $00000002;
  ElevatorAlightingDoorChoiceMethod_End = $00000003;

// Constants for enum ElevatorDoorState
type
  ElevatorDoorState = TOleEnum;
const
  ElevatorDoorStateOpening = $00000001;
  ElevatorDoorStateOpen = $00000002;
  ElevatorDoorStateClosing = $00000003;
  ElevatorDoorStateClosed = $00000004;
  ElevatorDoorState_End = $00000005;

// Constants for enum ElevatorMotionState
type
  ElevatorMotionState = TOleEnum;
const
  ElevatorMotionStateStopping = $00000001;
  ElevatorMotionStateGoingUp = $00000002;
  ElevatorMotionStateGoingDown = $00000003;
  ElevatorMotionState_End = $00000004;

// Constants for enum EvaluationAggregationFunction
type
  EvaluationAggregationFunction = TOleEnum;
const
  EvaluationAggregationFunctionCurrent = $00000001;
  EvaluationAggregationFunctionLast = $00000002;
  EvaluationAggregationFunctionTotal = $00000003;
  EvaluationAggregationFunctionAvg = $00000004;
  EvaluationAggregationFunctionStdDev = $00000005;
  EvaluationAggregationFunctionMin = $00000006;
  EvaluationAggregationFunctionMax = $00000007;
  EvaluationAggregationFunction_End = $00000008;

// Constants for enum EvaluationFilterType
type
  EvaluationFilterType = TOleEnum;
const
  EvaluationFilterTypeByClass = $00000001;
  EvaluationFilterTypeByNo = $00000002;
  EvaluationFilterTypeAll = $00000003;
  EvaluationFilterTypeBySection = $00000004;
  EvaluationFilterType_End = $00000005;

// Constants for enum ExtControl
type
  ExtControl = TOleEnum;
const
  ExtControlEVC_NOT = $00000001;
  ExtControlEVC_DDE = $00000002;
  ExtControlEVC_EVF = $00000003;
  ExtControlEVC_COM = $00000004;
  ExtControlEVC_DRIVSIM = $00000005;
  ExtControl_End = $00000006;

// Constants for enum FlexibleRouteChoiceMethod
type
  FlexibleRouteChoiceMethod = TOleEnum;
const
  FlexibleRouteChoiceMethodStatic = $00000001;
  FlexibleRouteChoiceMethodFormula = $00000002;
  FlexibleRouteChoiceMethod_End = $00000003;

// Constants for enum FlowBundleCrossSectionRelevance
type
  FlowBundleCrossSectionRelevance = TOleEnum;
const
  FlowBundleCrossSectionRelevanceAtLeastOne = $00000001;
  FlowBundleCrossSectionRelevanceAll = $00000002;
  FlowBundleCrossSectionRelevance_End = $00000003;

// Constants for enum Form
type
  Form = TOleEnum;
const
  FormStraightRun = $00000001;
  FormTwoStraightRun = $00000002;
  FormQuarterTurn = $00000003;
  FormHalfTurn = $00000004;
  FormTwoQuarterTurn = $00000005;
  Form_End = $00000006;

// Constants for enum FullOccupancyBehaviour
type
  FullOccupancyBehaviour = TOleEnum;
const
  FullOccupancyBehaviourWait = $00000001;
  FullOccupancyBehaviourDriveOn = $00000002;
  FullOccupancyBehaviour_End = $00000003;

// Constants for enum FunctionUsage
type
  FunctionUsage = TOleEnum;
const
  FunctionUsageMaxAcceleration = $00000001;
  FunctionUsageDesAcceleration = $00000002;
  FunctionUsageMaxDeceleration = $00000003;
  FunctionUsageDesDeceleration = $00000004;
  FunctionUsageBoardingDelay = $00000005;
  FunctionUsage_End = $00000006;

// Constants for enum GradientBase
type
  GradientBase = TOleEnum;
const
  GradientBaseZCoordinates = $00000001;
  GradientBaseAttributeGradient = $00000002;
  GradientBase_End = $00000003;

// Constants for enum Indicating
type
  Indicating = TOleEnum;
const
  IndicatingLeft = $00000001;
  IndicatingRight = $00000002;
  IndicatingNo = $00000003;
  Indicating_End = $00000004;

// Constants for enum InformationSign3DOrientation
type
  InformationSign3DOrientation = TOleEnum;
const
  InformationSign3DOrientationFixedOrientation = $00000001;
  InformationSign3DOrientationRotationToCamera = $00000002;
  InformationSign3DOrientationRotationAndTiltToCamera = $00000003;
  InformationSign3DOrientation_End = $00000004;

// Constants for enum InformationSign3DRowContentType
type
  InformationSign3DRowContentType = TOleEnum;
const
  InformationSign3DRowContentTypeText = $00000001;
  InformationSign3DRowContentTypeAttributeValue = $00000002;
  InformationSign3DRowContentTypeAttributeName = $00000003;
  InformationSign3DRowContentTypeAttributeNameAndValue = $00000004;
  InformationSign3DRowContentTypeTextAndAttributeValue = $00000005;
  InformationSign3DRowContentTypeAttributeValueAndText = $00000006;
  InformationSign3DRowContentType_End = $00000007;

// Constants for enum InputVolumeType
type
  InputVolumeType = TOleEnum;
const
  InputVolumeTypeExact = $00000001;
  InputVolumeTypeStochastic = $00000002;
  InputVolumeType_End = $00000003;

// Constants for enum InteractionState
type
  InteractionState = TOleEnum;
const
  InteractionStateFree = $00000001;
  InteractionStateCloseUp = $00000002;
  InteractionStateFollow = $00000003;
  InteractionStateBrakeAX = $00000004;
  InteractionStateBrakeBX = $00000005;
  InteractionStateBrakeZX = $00000006;
  InteractionStateBrakeLC = $00000007;
  InteractionStateBrakeCoop = $00000008;
  InteractionStateExternal = $00000009;
  InteractionStatePass = $0000000A;
  InteractionStateSleep = $0000000B;
  InteractionStateDwell = $0000000C;
  InteractionStateApproachingPlatoon = $0000000D;
  InteractionStateFollowingInPlatoon = $0000000E;
  InteractionStateLeavingPlatoon = $0000000F;
  InteractionState_End = $00000010;

// Constants for enum KeepPreviousResults
type
  KeepPreviousResults = TOleEnum;
const
  KeepPreviousResultsKeepNone = $00000001;
  KeepPreviousResultsKeepCurrent = $00000002;
  KeepPreviousResultsKeepAll = $00000003;
  KeepPreviousResults_End = $00000004;

// Constants for enum LOSSchemeType
type
  LOSSchemeType = TOleEnum;
const
  LOSSchemeTypeSignalized = $00000001;
  LOSSchemeTypeNonSignalized = $00000002;
  LOSSchemeTypeMerge = $00000003;
  LOSSchemeTypeDiverge = $00000004;
  LOSSchemeTypeWeaving = $00000005;
  LOSSchemeType_End = $00000006;

// Constants for enum LaneChangeRuleType
type
  LaneChangeRuleType = TOleEnum;
const
  LaneChangeRuleTypeFreeLaneSelection = $00000001;
  LaneChangeRuleTypeOutSideRule = $00000002;
  LaneChangeRuleType_End = $00000003;

// Constants for enum LateralPosition
type
  LateralPosition = TOleEnum;
const
  LateralPositionMiddle = $00000001;
  LateralPositionAny = $00000002;
  LateralPositionRight = $00000003;
  LateralPositionLeft = $00000004;
  LateralPosition_End = $00000005;

// Constants for enum Mast3DStyle
type
  Mast3DStyle = TOleEnum;
const
  Mast3DStyleRound = $00000001;
  Mast3DStyleGrooved = $00000002;
  Mast3DStyleWooden = $00000003;
  Mast3DStyle_End = $00000004;

// Constants for enum MesoEdgeType
type
  MesoEdgeType = TOleEnum;
const
  MesoEdgeTypeMesoLink = $00000001;
  MesoEdgeTypeMesoTurn = $00000002;
  MesoEdgeTypeMesoSourceConn = $00000003;
  MesoEdgeTypeMesoDestConn = $00000004;
  MesoEdgeTypeMicroToMesoConn = $00000005;
  MesoEdgeTypePTSourceConn = $00000006;
  MesoEdgeTypeVehicleSourceConn = $00000007;
  MesoEdgeType_End = $00000008;

// Constants for enum MesoNodeType
type
  MesoNodeType = TOleEnum;
const
  MesoNodeTypeVissimNode = $00000001;
  MesoNodeTypeParkingLotNode = $00000002;
  MesoNodeTypeSourceZoneNode = $00000003;
  MesoNodeTypeDestZoneNode = $00000004;
  MesoNodeTypeVirtualTwoLegNode = $00000005;
  MesoNodeTypeBoundaryNodeMicro2Meso = $00000006;
  MesoNodeTypeBoundaryNodeMeso2Micro = $00000007;
  MesoNodeTypeBoundarySourceConnNodeMicro2Meso = $00000008;
  MesoNodeTypeDynamicRoutingDecisionNode = $00000009;
  MesoNodeTypePTStopNode = $0000000A;
  MesoNodeTypeEntryNode = $0000000B;
  MesoNodeTypePTSourceNode = $0000000C;
  MesoNodeTypeVehicleInputSourceNode = $0000000D;
  MesoNodeTypePTStopLayByBranchNode = $0000000E;
  MesoNodeTypePTStopLayByMergeNode = $0000000F;
  MesoNodeTypeManagedLanesRoutingDecisionNode = $00000010;
  MesoNodeType_End = $00000011;

// Constants for enum MesoSpeedModel
type
  MesoSpeedModel = TOleEnum;
const
  MesoSpeedModelVehicleBased = $00000001;
  MesoSpeedModelLinkBased = $00000002;
  MesoSpeedModel_End = $00000003;

// Constants for enum MotionStateType
type
  MotionStateType = TOleEnum;
const
  MotionStateTypeApproachingPTVehicle = $00000001;
  MotionStateTypeAlightingFromPTVehicle = $00000002;
  MotionStateTypeWaitingForPTVehicle = $00000003;
  MotionStateTypeWalkingUpOnEscalator = $00000004;
  MotionStateTypeWalkingDownOnEscalator = $00000005;
  MotionStateTypeStandingOnEscalator = $00000006;
  MotionStateTypeWalkingOnMovingWalkway = $00000007;
  MotionStateTypeStandingOnMovingWalkway = $00000008;
  MotionStateTypeWaitingAtQueueHead = $00000009;
  MotionStateTypeWaitingInQueue = $0000000A;
  MotionStateTypeWalkingUpstairs = $0000000B;
  MotionStateTypeWalkingDownstairs = $0000000C;
  MotionStateTypeApproachingElevator = $0000000D;
  MotionStateTypeAlightingFromElevator = $0000000E;
  MotionStateTypeWaitingForElevator = $0000000F;
  MotionStateTypeRidingElevator = $00000010;
  MotionStateTypeWaiting = $00000011;
  MotionStateTypeWalkingOnLevel = $00000012;
  MotionStateType_End = $00000013;

// Constants for enum MovementDirection
type
  MovementDirection = TOleEnum;
const
  MovementDirectionForward = $00000001;
  MovementDirectionReverse = $00000002;
  MovementDirection_End = $00000003;

// Constants for enum NetLineStyle
type
  NetLineStyle = TOleEnum;
const
  NetLineStyleNoLine = $00000001;
  NetLineStyleSolidLine = $00000002;
  NetLineStyle_End = $00000003;

// Constants for enum NetPolygonFillStyle
type
  NetPolygonFillStyle = TOleEnum;
const
  NetPolygonFillStyleNoFill = $00000001;
  NetPolygonFillStyleSolidFill = $00000002;
  NetPolygonFillStyle_End = $00000003;

// Constants for enum NodeType
type
  NodeType = TOleEnum;
const
  NodeTypePolygon = $00000001;
  NodeTypeSegments = $00000002;
  NodeType_End = $00000003;

// Constants for enum ObstacleGeneratedBy
type
  ObstacleGeneratedBy = TOleEnum;
const
  ObstacleGeneratedByUser = $00000001;
  ObstacleGeneratedBy3DTrafficSignalMast = $00000002;
  ObstacleGeneratedBy_End = $00000003;

// Constants for enum Orientation
type
  Orientation = TOleEnum;
const
  OrientationUndefined = $00000000;
  OrientationNorth = $00000001;
  OrientationNorthEast = $00000002;
  OrientationEast = $00000004;
  OrientationSouthEast = $00000008;
  OrientationSouth = $00000010;
  OrientationSouthWest = $00000020;
  OrientationWest = $00000040;
  OrientationNorthWest = $00000080;

// Constants for enum PTState
type
  PTState = TOleEnum;
const
  PTStateNone = $00000001;
  PTStateAlighting = $00000002;
  PTStateApproaching = $00000003;
  PTStateWaiting = $00000004;
  PTState_End = $00000005;

// Constants for enum PTWaitingBehavior
type
  PTWaitingBehavior = TOleEnum;
const
  PTWaitingBehaviorWaitAtFixedLocation = $00000001;
  PTWaitingBehaviorWaitIfHeldUp = $00000002;
  PTWaitingBehavior_End = $00000003;

// Constants for enum ParkingDirection
type
  ParkingDirection = TOleEnum;
const
  ParkingDirectionForwardInFowardOut = $00000001;
  ParkingDirectionForwardInReverseOut = $00000002;
  ParkingDirection_End = $00000003;

// Constants for enum ParkingLotSelection
type
  ParkingLotSelection = TOleEnum;
const
  ParkingLotSelectionDepartureFromParkingLot = $00000001;
  ParkingLotSelectionDynamicRoutingDecision = $00000002;
  ParkingLotSelectionRouteGuidanceTactic1 = $00000003;
  ParkingLotSelectionRouteGuidanceTactic2 = $00000004;
  ParkingLotSelection_End = $00000005;

// Constants for enum ParkingLotType
type
  ParkingLotType = TOleEnum;
const
  ParkingLotTypeZoneConnector = $00000001;
  ParkingLotTypeAbstractParkingLot = $00000002;
  ParkingLotTypeRealParkingSpace = $00000003;
  ParkingLotType_End = $00000004;

// Constants for enum ParkingState
type
  ParkingState = TOleEnum;
const
  ParkingStateIsParking = $00000001;
  ParkingStateIsWaiting = $00000002;
  ParkingState_End = $00000003;

// Constants for enum PavementMarkingType
type
  PavementMarkingType = TOleEnum;
const
  PavementMarkingTypeArrow = $00000001;
  PavementMarkingTypeDiamondLane = $00000002;
  PavementMarkingTypeUTurn = $00000003;
  PavementMarkingTypeRoundabout = $00000004;
  PavementMarkingTypeZebracrossing = $00000005;
  PavementMarkingType_End = $00000006;

// Constants for enum PedestrianAreaPTUsage
type
  PedestrianAreaPTUsage = TOleEnum;
const
  PedestrianAreaPTUsagePTWaiting = $00000001;
  PedestrianAreaPTUsagePTPlatformEdge = $00000002;
  PedestrianAreaPTUsagePTNone = $00000003;
  PedestrianAreaPTUsage_End = $00000004;

// Constants for enum PedestrianQueueApproachingMethod
type
  PedestrianQueueApproachingMethod = TOleEnum;
const
  PedestrianQueueApproachingMethodDirectLine = $00000001;
  PedestrianQueueApproachingMethodStaticPotential = $00000002;
  PedestrianQueueApproachingMethod_End = $00000003;

// Constants for enum PedestrianRampDefineEndBy
type
  PedestrianRampDefineEndBy = TOleEnum;
const
  PedestrianRampDefineEndByHeadroom = $00000001;
  PedestrianRampDefineEndByLength = $00000002;
  PedestrianRampDefineEndBy_End = $00000003;

// Constants for enum PedestrianRampType
type
  PedestrianRampType = TOleEnum;
const
  PedestrianRampTypeRamp = $00000001;
  PedestrianRampTypeStairway = $00000002;
  PedestrianRampTypeMovingWalkway = $00000003;
  PedestrianRampTypeEscalator = $00000004;
  PedestrianRampType_End = $00000005;

// Constants for enum PedestrianRoutingDecisionModel
type
  PedestrianRoutingDecisionModel = TOleEnum;
const
  PedestrianRoutingDecisionModelEnteringArea = $00000001;
  PedestrianRoutingDecisionModelEveryTimeStep = $00000002;
  PedestrianRoutingDecisionModel_End = $00000003;

// Constants for enum PedestrianStairwayDefinedBy
type
  PedestrianStairwayDefinedBy = TOleEnum;
const
  PedestrianStairwayDefinedBySteps = $00000001;
  PedestrianStairwayDefinedByRise = $00000002;
  PedestrianStairwayDefinedByGoing = $00000003;
  PedestrianStairwayDefinedBy_End = $00000004;

// Constants for enum PriorityRuleGeneratedBy
type
  PriorityRuleGeneratedBy = TOleEnum;
const
  PriorityRuleGeneratedByUser = $00000001;
  PriorityRuleGeneratedByParkingLot = $00000002;
  PriorityRuleGeneratedBy_End = $00000003;

// Constants for enum PriorityRuleSignalState
type
  PriorityRuleSignalState = TOleEnum;
const
  PriorityRuleSignalStateRed = $00000000;
  PriorityRuleSignalStateGreen = $00000001;
  PriorityRuleSignalState_End = $00000002;

// Constants for enum RailType
type
  RailType = TOleEnum;
const
  RailTypeNone = $00000001;
  RailTypeStandard = $00000002;
  RailType_End = $00000003;

// Constants for enum RedAmberBehaviorType
type
  RedAmberBehaviorType = TOleEnum;
const
  RedAmberBehaviorTypeGo = $00000001;
  RedAmberBehaviorTypeStop = $00000002;
  RedAmberBehaviorType_End = $00000003;

// Constants for enum ResolutionType
type
  ResolutionType = TOleEnum;
const
  ResolutionTypeUserDefined = $00000001;
  ResolutionType1280x720 = $00000002;
  ResolutionType1280x960 = $00000003;
  ResolutionType1600x900 = $00000004;
  ResolutionType1920x1080 = $00000005;
  ResolutionType3840x2160 = $00000006;
  ResolutionType_End = $00000007;

// Constants for enum RoundaboutMarkingDirection
type
  RoundaboutMarkingDirection = TOleEnum;
const
  RoundaboutMarkingDirectionLeft = $00000001;
  RoundaboutMarkingDirectionRight = $00000002;
  RoundaboutMarkingDirectionStraight = $00000004;
  RoundaboutMarkingDirectionCenterIsland = $00000008;

// Constants for enum RouteChoiceAreaCombinationMethod
type
  RouteChoiceAreaCombinationMethod = TOleEnum;
const
  RouteChoiceAreaCombinationMethodTotal = $00000001;
  RouteChoiceAreaCombinationMethodAverage = $00000002;
  RouteChoiceAreaCombinationMethodMinimum = $00000003;
  RouteChoiceAreaCombinationMethodMaximum = $00000004;
  RouteChoiceAreaCombinationMethod_End = $00000005;

// Constants for enum RouteChoiceMethod
type
  RouteChoiceMethod = TOleEnum;
const
  RouteChoiceMethodStatic = $00000001;
  RouteChoiceMethodTravelTime = $00000002;
  RouteChoiceMethodServicePointSelection = $00000003;
  RouteChoiceMethodQuantity = $00000004;
  RouteChoiceMethodDensity = $00000005;
  RouteChoiceMethodFormula = $00000006;
  RouteChoiceMethod_End = $00000007;

// Constants for enum RouteChoiceTravelTimeMethod
type
  RouteChoiceTravelTimeMethod = TOleEnum;
const
  RouteChoiceTravelTimeMethodBestRoute = $00000001;
  RouteChoiceTravelTimeMethodKirchhoff = $00000002;
  RouteChoiceTravelTimeMethodLogit = $00000003;
  RouteChoiceTravelTimeMethodLogitOfReciprocal = $00000004;
  RouteChoiceTravelTimeMethod_End = $00000005;

// Constants for enum RouteGuidanceStrategy
type
  RouteGuidanceStrategy = TOleEnum;
const
  RouteGuidanceStrategyNewRouteToDestinationParkingLot = $00000001;
  RouteGuidanceStrategyNewDestinationParkingLotInSameZone = $00000002;
  RouteGuidanceStrategy_End = $00000003;

// Constants for enum RunType
type
  RunType = TOleEnum;
const
  RunTypeManually = $00000001;
  RunTypeBefSimStart = $00000002;
  RunTypeAftSimStart = $00000003;
  RunTypeAtTmStepStart = $00000004;
  RunTypeAtTmStepEnd = $00000005;
  RunTypeBefSimEnd = $00000006;
  RunTypeAftSimEnd = $00000007;
  RunType_End = $00000008;

// Constants for enum ScreenshotAspectRatio
type
  ScreenshotAspectRatio = TOleEnum;
const
  ScreenshotAspectRatioCurrentNetEditor = $00000001;
  ScreenshotAspectRatio1by1 = $00000002;
  ScreenshotAspectRatio2by1 = $00000003;
  ScreenshotAspectRatio3by2 = $00000004;
  ScreenshotAspectRatio4by3 = $00000005;
  ScreenshotAspectRatio16by9 = $00000006;
  ScreenshotAspectRatioDINPortrait = $00000007;
  ScreenshotAspectRatioDINLandscape = $00000008;
  ScreenshotAspectRatioLetterPortrait = $00000009;
  ScreenshotAspectRatioLetterLandscape = $0000000A;
  ScreenshotAspectRatio_End = $0000000B;

// Constants for enum ScriptScope
type
  ScriptScope = TOleEnum;
const
  ScriptScopeSingleCall = $00000001;
  ScriptScopeSimulationRun = $00000002;
  ScriptScope_End = $00000003;

// Constants for enum Side
type
  Side = TOleEnum;
const
  SideNone = $00000001;
  SideLeft = $00000002;
  SideRight = $00000003;
  Side_End = $00000004;

// Constants for enum Signal3DAffiliation
type
  Signal3DAffiliation = TOleEnum;
const
  Signal3DAffiliationSignalMast = $00000001;
  Signal3DAffiliationSignalArm = $00000002;
  Signal3DAffiliation_End = $00000003;

// Constants for enum SignalControllerType
type
  SignalControllerType = TOleEnum;
const
  SignalControllerTypeFixedTime = $00000001;
  SignalControllerTypeTL = $00000002;
  SignalControllerTypeVAP = $00000003;
  SignalControllerTypeRBC = $00000004;
  SignalControllerTypeSCATS = $00000005;
  SignalControllerTypeLISA = $00000006;
  SignalControllerTypeSCOOT = $00000007;
  SignalControllerTypeEconolite = $00000008;
  SignalControllerTypeVSPlus = $00000009;
  SignalControllerTypeTRENDS = $0000000A;
  SignalControllerTypeMcCain = $0000000B;
  SignalControllerTypeD4 = $0000000C;
  SignalControllerTypeExternal = $0000000D;
  SignalControllerTypeBalanceCentral = $0000000E;
  SignalControllerTypeEpicsBalanceLocal = $0000000F;
  SignalControllerTypePedestrianCrossing = $00000010;
  SignalControllerTypeRailwayCrossing = $00000011;
  SignalControllerTypeTwoStageController = $00000012;
  SignalControllerType_End = $00000013;

// Constants for enum SignalGroupActuationType
type
  SignalGroupActuationType = TOleEnum;
const
  SignalGroupActuationTypeDefaultSignalGroup = $00000001;
  SignalGroupActuationTypeCallingSignalGroup = $00000002;
  SignalGroupActuationTypeUndefined = $00000003;
  SignalGroupActuationType_End = $00000004;

// Constants for enum SignalGroupType
type
  SignalGroupType = TOleEnum;
const
  SignalGroupTypeNormal = $00000001;
  SignalGroupTypeGreenArrow = $00000002;
  SignalGroupTypeFlashing = $00000003;
  SignalGroupType_End = $00000004;

// Constants for enum SignalHead3DLayout
type
  SignalHead3DLayout = TOleEnum;
const
  SignalHead3DLayoutOneLensRedCircularVertical = $00000001;
  SignalHead3DLayoutOneLensAmberCircularVertical = $00000002;
  SignalHead3DLayoutOneLensGreenLeftVertical = $00000003;
  SignalHead3DLayoutOneLensGreenRightVertical = $00000004;
  SignalHead3DLayoutTwoLensRedGreenCircularVertical = $00000005;
  SignalHead3DLayoutTwoLensRedGreenLeftVertical = $00000006;
  SignalHead3DLayoutTwoLensRedGreenRightVertical = $00000007;
  SignalHead3DLayoutTwoLensGreenAmberLeftVertical = $00000008;
  SignalHead3DLayoutTwoLensGreenAmberRightVertical = $00000009;
  SignalHead3DLayoutTwoLensRedAmberCircularVertical = $0000000A;
  SignalHead3DLayoutTwoLensRedAmberLeftVertical = $0000000B;
  SignalHead3DLayoutTwoLensRedAmberRightVertical = $0000000C;
  SignalHead3DLayoutThreeLensCircularVertical = $0000000D;
  SignalHead3DLayoutThreeLensProtectedLeftVertical = $0000000E;
  SignalHead3DLayoutThreeLensProtectedRightVertical = $0000000F;
  SignalHead3DLayoutFourLensThreePlusGreenLeftOneFaceVertical = $00000010;
  SignalHead3DLayoutFourLensThreePlusGreenRightOneFaceVertical = $00000011;
  SignalHead3DLayoutFourLensThreePlusRedLeftTwoFacesVertical = $00000012;
  SignalHead3DLayoutFourLensThreePlusRedRightTwoFacesVertical = $00000013;
  SignalHead3DLayoutFiveLensThreePlusGreenAmberLeftOneFaceVertical = $00000014;
  SignalHead3DLayoutFiveLensThreePlusGreenAmberRightOneFaceVertical = $00000015;
  SignalHead3DLayoutFiveLensThreePlusGreenAmberLeftDoghouseVertical = $00000016;
  SignalHead3DLayoutFiveLensThreePlusGreenAmberRightDoghouseVertical = $00000017;
  SignalHead3DLayoutFiveLensThreePlusGreenAmberLeftTwoFacesVertical = $00000018;
  SignalHead3DLayoutFiveLensThreePlusGreenAmberRightTwoFacesVertical = $00000019;
  SignalHead3DLayoutSixLensThreePlusProtectedLeftTwoFacesVertical = $0000001A;
  SignalHead3DLayoutSixLensThreePlusProtectedRightTwoFacesVertical = $0000001B;
  SignalHead3DLayoutOneLensRedCircularHorizontal = $0000001C;
  SignalHead3DLayoutOneLensAmberCircularHorizontal = $0000001D;
  SignalHead3DLayoutOneLensGreenLeftHorizontal = $0000001E;
  SignalHead3DLayoutOneLensGreenRightHorizontal = $0000001F;
  SignalHead3DLayoutOneLensGreenThroughHorizontal = $00000020;
  SignalHead3DLayoutOneLensGreenLeft45Horizontal = $00000021;
  SignalHead3DLayoutOneLensGreenRight45Horizontal = $00000022;
  SignalHead3DLayoutOneLensAmberThroughMeaningGoHorizontal = $00000023;
  SignalHead3DLayoutOneLensAmberLeftMeaningGoHorizontal = $00000024;
  SignalHead3DLayoutOneLensAmberRightMeaningGoHorizontal = $00000025;
  SignalHead3DLayoutOneLensAmberLeft45MeaningGoHorizontal = $00000026;
  SignalHead3DLayoutOneLensAmberRight45MeaningGoHorizontal = $00000027;
  SignalHead3DLayoutTwoLensRedGreenCircularHorizontal = $00000028;
  SignalHead3DLayoutTwoLensRedGreenLeftHorizontal = $00000029;
  SignalHead3DLayoutTwoLensRedGreenRightHorizontal = $0000002A;
  SignalHead3DLayoutTwoLensGreenAmberLeftHorizontal = $0000002B;
  SignalHead3DLayoutTwoLensGreenAmberRightHorizontal = $0000002C;
  SignalHead3DLayoutTwoLensRedAmberCircularHorizontal = $0000002D;
  SignalHead3DLayoutTwoLensRedAmberLeftHorizontal = $0000002E;
  SignalHead3DLayoutTwoLensRedAmberRightHorizontal = $0000002F;
  SignalHead3DLayoutThreeLensCircularHorizontal = $00000030;
  SignalHead3DLayoutThreeLensProtectedLeftHorizontal = $00000031;
  SignalHead3DLayoutThreeLensProtectedRightHorizontal = $00000032;
  SignalHead3DLayoutFourLensThreePlusGreenLeftOneFaceHorizontal = $00000033;
  SignalHead3DLayoutFourLensThreePlusGreenRightOneFaceHorizontal = $00000034;
  SignalHead3DLayoutFourLensThreePlusRedLeftTwoFacesHorizontal = $00000035;
  SignalHead3DLayoutFourLensThreePlusRedRightTwoFacesHorizontal = $00000036;
  SignalHead3DLayoutFiveLensThreePlusGreenAmberLeftOneFaceHorizontal = $00000037;
  SignalHead3DLayoutFiveLensThreePlusGreenAmberRightOneFaceHorizontal = $00000038;
  SignalHead3DLayoutPedestrianOneBoxSideBySide = $00000039;
  SignalHead3DLayoutPedestrianOneBoxAlternatingPlusTime = $0000003A;
  SignalHead3DLayoutPedestrianTwoBoxesStacked = $0000003B;
  SignalHead3DLayoutPedestrianTwoBoxesSideBySidePlusTimer = $0000003C;
  SignalHead3DLayoutPedestrianOneLensRed = $0000003D;
  SignalHead3DLayoutPedestrianOneLensRedInvert = $0000003E;
  SignalHead3DLayoutPedestrianOneLensRedPlusBike = $0000003F;
  SignalHead3DLayoutPedestrianOneLensRedPlusBikeInvert = $00000040;
  SignalHead3DLayoutPedestrianOneLensAmber = $00000041;
  SignalHead3DLayoutPedestrianOneLensAmberPedPlusBike = $00000042;
  SignalHead3DLayoutPedestrianOneLensAmberTram = $00000043;
  SignalHead3DLayoutPedestrianOneLensTimerSmall = $00000044;
  SignalHead3DLayoutPedestrianOneLensTimerBig = $00000045;
  SignalHead3DLayoutPedestrianTwoLensRedGreen = $00000046;
  SignalHead3DLayoutPedestrianTwoLensRedGreenPedPlusBike = $00000047;
  SignalHead3DLayoutPedestrianTwoLensRedGreenBike = $00000048;
  SignalHead3DLayoutPedestrianThreeLensRedGreen = $00000049;
  SignalHead3DLayoutPedestrianThreeLensRedAmberGreen = $0000004A;
  SignalHead3DLayoutPedestrianThreeLensRedAmberGreenBike = $0000004B;
  SignalHead3DLayoutPedestrianThreeLensRedGreenPlusTimerSmall = $0000004C;
  SignalHead3DLayoutPedestrianThreeLensRedGreenPlusTimerBig = $0000004D;
  SignalHead3DLayoutPTOneLensDemandTram = $0000004E;
  SignalHead3DLayoutPTOneLensDemandBus = $0000004F;
  SignalHead3DLayoutPTOneLensGo = $00000050;
  SignalHead3DLayoutPTOneLensPreSignal = $00000051;
  SignalHead3DLayoutPTTwoLensStopGoAhead = $00000052;
  SignalHead3DLayoutPTTwoLensStopGoLeft = $00000053;
  SignalHead3DLayoutPTTwoLensStopGoRight = $00000054;
  SignalHead3DLayoutPTTwoLensStopGo = $00000055;
  SignalHead3DLayoutPTThreeLensStopGoAhead = $00000056;
  SignalHead3DLayoutPTThreeLensStopGoLeft = $00000057;
  SignalHead3DLayoutPTThreeLensStopGoRight = $00000058;
  SignalHead3DLayoutPTThreeLensStopGo = $00000059;
  SignalHead3DLayoutPTThreeLensStopCircleGoAhead = $0000005A;
  SignalHead3DLayoutPTThreeLensStopCircleGoLeft = $0000005B;
  SignalHead3DLayoutPTThreeLensStopCircleGoRight = $0000005C;
  SignalHead3DLayoutPTThreeLensStopCircleGo = $0000005D;
  SignalHead3DLayoutPTThreeLensStopTGoAhead = $0000005E;
  SignalHead3DLayoutPTThreeLensStopTGoLeft = $0000005F;
  SignalHead3DLayoutPTThreeLensStopTGoRight = $00000060;
  SignalHead3DLayoutPTThreeLensStopTGo = $00000061;
  SignalHead3DLayoutPTThreeLensStopTriangleGoAhead = $00000062;
  SignalHead3DLayoutPTThreeLensStopTriangleGoLeft = $00000063;
  SignalHead3DLayoutPTThreeLensStopTriangleGoRight = $00000064;
  SignalHead3DLayoutOneLensTimerSmallVertical = $00000065;
  SignalHead3DLayoutOneLensTimerBigVertical = $00000066;
  SignalHead3DLayoutOneLensTimerSmallHorizontal = $00000067;
  SignalHead3DLayoutOneLensTimerBigHorizontal = $00000068;
  SignalHead3DLayout_End = $00000069;

// Constants for enum SignalHead3DRedAmb
type
  SignalHead3DRedAmb = TOleEnum;
const
  SignalHead3DRedAmbBlackArrowOnColor = $00000001;
  SignalHead3DRedAmbColoredArrowOnBlack = $00000002;
  SignalHead3DRedAmb_End = $00000003;

// Constants for enum SignalHeadType
type
  SignalHeadType = TOleEnum;
const
  SignalHeadTypeCircular = $00000001;
  SignalHeadTypeLeftArrow = $00000002;
  SignalHeadTypeRightArrow = $00000003;
  SignalHeadTypeInvisible = $00000004;
  SignalHeadType_End = $00000005;

// Constants for enum SignalOutputConfigurationElementDetectorLabelType
type
  SignalOutputConfigurationElementDetectorLabelType = TOleEnum;
const
  SignalOutputConfigurationElementDetectorLabelTypeName = $00000001;
  SignalOutputConfigurationElementDetectorLabelTypePortNumber = $00000002;
  SignalOutputConfigurationElementDetectorLabelType_End = $00000003;

// Constants for enum SignalOutputConfigurationElementLabelType
type
  SignalOutputConfigurationElementLabelType = TOleEnum;
const
  SignalOutputConfigurationElementLabelTypeName = $00000001;
  SignalOutputConfigurationElementLabelTypeNumber = $00000002;
  SignalOutputConfigurationElementLabelType_End = $00000003;

// Constants for enum SignalizationState
type
  SignalizationState = TOleEnum;
const
  SignalizationStateRed = $00000001;
  SignalizationStateRedAmber = $00000002;
  SignalizationStateGreen = $00000003;
  SignalizationStateAmber = $00000004;
  SignalizationStateOff = $00000005;
  SignalizationStateUndefined = $00000006;
  SignalizationStateFlashingAmber = $00000007;
  SignalizationStateFlashingRed = $00000008;
  SignalizationStateFlashingGreen = $00000009;
  SignalizationStateAlternatingRedGreen = $0000000A;
  SignalizationStateGreenAmber = $0000000B;
  SignalizationState_End = $0000000C;

// Constants for enum SimulationMode
type
  SimulationMode = TOleEnum;
const
  SimulationModeMicro = $00000001;
  SimulationModeMeso = $00000002;
  SimulationMode_End = $00000003;

// Constants for enum SmoothingMethod
type
  SmoothingMethod = TOleEnum;
const
  SmoothingMethodExpSmoothing = $00000001;
  SmoothingMethodMethodOfSuccessiveAverages = $00000002;
  SmoothingMethod_End = $00000003;

// Constants for enum StandingLocation
type
  StandingLocation = TOleEnum;
const
  StandingLocationRight = $00000001;
  StandingLocationLeft = $00000002;
  StandingLocationRandom = $00000003;
  StandingLocation_End = $00000004;

// Constants for enum StopSignType
type
  StopSignType = TOleEnum;
const
  StopSignTypeNormal = $00000001;
  StopSignTypePTStop = $00000002;
  StopSignTypeAbstractParkingLot = $00000003;
  StopSignTypeZoneConnector = $00000004;
  StopSignTypeRealParkingSpaces = $00000005;
  StopSignType_End = $00000006;

// Constants for enum TargetType
type
  TargetType = TOleEnum;
const
  TargetTypeNone = $00000001;
  TargetTypeVehicle = $00000002;
  TargetTypeSignalHead = $00000003;
  TargetTypePriorityRule = $00000004;
  TargetTypeConflictArea = $00000005;
  TargetTypeReducedSpeedArea = $00000006;
  TargetTypeStopSign = $00000007;
  TargetTypePTStop = $00000008;
  TargetTypeParkingLot = $00000009;
  TargetType_End = $0000000A;

// Constants for enum TiesType
type
  TiesType = TOleEnum;
const
  TiesTypeNone = $00000001;
  TiesTypeStandard = $00000002;
  TiesTypeEmbedded = $00000003;
  TiesType_End = $00000004;

// Constants for enum TimeIntervalSetNo
type
  TimeIntervalSetNo = TOleEnum;
const
  TimeIntervalSetNoVehicleInput = $00000001;
  TimeIntervalSetNoVehicleRouteStatic = $00000002;
  TimeIntervalSetNoVehicleRoutePartial = $00000003;
  TimeIntervalSetNoVehicleRouteParking = $00000004;
  TimeIntervalSetNoPedestrianInput = $00000005;
  TimeIntervalSetNoPedestrianRoutePartial = $00000006;
  TimeIntervalSetNoVehicleRoutePartialPT = $00000007;
  TimeIntervalSetNoAreaBehaviorType = $00000008;
  TimeIntervalSetNoManagedLanesFacility = $00000009;
  TimeIntervalSetNoPedestrianRouteStatic = $0000000B;
  TimeIntervalSetNoVehicleNetworkPerformanceMeasurementSimulationResult = $00000064;
  TimeIntervalSetNoVehicleTravelTimeMeasurementSimulationResult = $00000065;
  TimeIntervalSetNoDelayMeasurementSimulationResult = $00000066;
  TimeIntervalSetNoDataCollectionMeasurementSimulationResult = $00000067;
  TimeIntervalSetNoQueueCounterSimulationResult = $00000068;
  TimeIntervalSetNoLinkEvalSegmentSimulationResult = $00000069;
  TimeIntervalSetNoPathSimulationResult = $0000006A;
  TimeIntervalSetNoPedestrianTravelTimeMeasurementSimulationResult = $0000006B;
  TimeIntervalSetNoPedestrianAreaSimulationResult = $0000006C;
  TimeIntervalSetNoPedestrianRampSimulationResult = $0000006D;
  TimeIntervalSetNoPedestrianAreaMeasurementSimulationResult = $0000006E;
  TimeIntervalSetNoMovementSimulationResult = $0000006F;
  TimeIntervalSetNoMesoSimLaneSimulationResult = $00000070;
  TimeIntervalSetNoMesoSimEdgeSimulationResult = $00000071;
  TimeIntervalSetNoPedestrianNetworkPerformanceMeasurementSimulationResult = $00000072;
  TimeIntervalSetNoODPairSimulationResult = $00000073;
  TimeIntervalSetNoPedestrianGridCellSimulationResult = $00000074;
  TimeIntervalSetNoDynamicAssignmentEvaluation = $000000C8;

// Constants for enum TollPricingFormulaOperator
type
  TollPricingFormulaOperator = TOleEnum;
const
  TollPricingFormulaOperatorAnd = $00000001;
  TollPricingFormulaOperatorOr = $00000002;
  TollPricingFormulaOperator_End = $00000003;

// Constants for enum TrafficSign3DShape
type
  TrafficSign3DShape = TOleEnum;
const
  TrafficSign3DShapeRectangle = $00000001;
  TrafficSign3DShapeCircle = $00000002;
  TrafficSign3DShapeTriangleUp = $00000003;
  TrafficSign3DShapeTriangleDown = $00000004;
  TrafficSign3DShapeTriangleLeft = $00000005;
  TrafficSign3DShapeTriangleRight = $00000006;
  TrafficSign3DShapePentagon = $00000007;
  TrafficSign3DShapeOctagon = $00000008;
  TrafficSign3DShapeDiamond = $00000009;
  TrafficSign3DShape_End = $0000000A;

// Constants for enum TravDirection
type
  TravDirection = TOleEnum;
const
  TravDirectionTravDirectionNone = $00000001;
  TravDirectionTravDirectionUp = $00000002;
  TravDirectionTravDirectionDown = $00000003;
  TravDirection_End = $00000004;

// Constants for enum UnitAcceleration
type
  UnitAcceleration = TOleEnum;
const
  UnitAccelerationMetersPerSquareSecond = $00000000;
  UnitAccelerationFeetPerSquareSecond = $00000001;
  UnitAcceleration_End = $00000002;

// Constants for enum UnitLengthLong
type
  UnitLengthLong = TOleEnum;
const
  UnitLengthLongKilometers = $00000000;
  UnitLengthLongMiles = $00000001;
  UnitLengthLong_End = $00000002;

// Constants for enum UnitLengthShort
type
  UnitLengthShort = TOleEnum;
const
  UnitLengthShortMeters = $00000000;
  UnitLengthShortFeet = $00000001;
  UnitLengthShort_End = $00000002;

// Constants for enum UnitLengthVeryShort
type
  UnitLengthVeryShort = TOleEnum;
const
  UnitLengthVeryShortMillimeters = $00000000;
  UnitLengthVeryShortInches = $00000001;
  UnitLengthVeryShort_End = $00000002;

// Constants for enum UnitSpeed
type
  UnitSpeed = TOleEnum;
const
  UnitSpeedKilometersPerHour = $00000000;
  UnitSpeedMilesPerHour = $00000001;
  UnitSpeed_End = $00000002;

// Constants for enum UnitSpeedSmall
type
  UnitSpeedSmall = TOleEnum;
const
  UnitSpeedSmallMetersPerSecond = $00000000;
  UnitSpeedSmallFeetPerMinute = $00000001;
  UnitSpeedSmall_End = $00000002;

// Constants for enum UserDefinedAttributeDataSourceType
type
  UserDefinedAttributeDataSourceType = TOleEnum;
const
  UserDefinedAttributeDataSourceTypeData = $00000001;
  UserDefinedAttributeDataSourceTypeFormula = $00000002;
  UserDefinedAttributeDataSourceType_End = $00000003;

// Constants for enum UserDefinedAttributeSubAttr
type
  UserDefinedAttributeSubAttr = TOleEnum;
const
  UserDefinedAttributeSubAttrSimulationRun = $00000001;
  UserDefinedAttributeSubAttrTimeInterval = $00000002;

// Constants for enum VehicleCategory
type
  VehicleCategory = TOleEnum;
const
  VehicleCategoryCar = $00000001;
  VehicleCategoryHGV = $00000002;
  VehicleCategoryBus = $00000003;
  VehicleCategoryTram = $00000004;
  VehicleCategoryPedestrian = $00000005;
  VehicleCategoryBike = $00000006;
  VehicleCategory_End = $00000007;

// Constants for enum VehicleRoutingDecisionParkingGeneratedBy
type
  VehicleRoutingDecisionParkingGeneratedBy = TOleEnum;
const
  VehicleRoutingDecisionParkingGeneratedByUser = $00000001;
  VehicleRoutingDecisionParkingGeneratedByDynamicAssignment = $00000002;
  VehicleRoutingDecisionParkingGeneratedBy_End = $00000003;

// Constants for enum VehicleRoutingDecisionType
type
  VehicleRoutingDecisionType = TOleEnum;
const
  VehicleRoutingDecisionTypeNone = $00000001;
  VehicleRoutingDecisionTypeStatic = $00000002;
  VehicleRoutingDecisionTypePartial = $00000003;
  VehicleRoutingDecisionTypePTPartial = $00000004;
  VehicleRoutingDecisionTypeParking = $00000005;
  VehicleRoutingDecisionTypeDynamic = $00000006;
  VehicleRoutingDecisionTypeClosure = $00000007;
  VehicleRoutingDecisionTypeManagedLanes = $00000008;
  VehicleRoutingDecisionType_End = $00000009;

// Constants for enum VehicleTypeEquipment
type
  VehicleTypeEquipment = TOleEnum;
const
  VehicleTypeEquipmentRouteGuidance1 = $00000004;
  VehicleTypeEquipmentRouteGuidance2 = $00000008;
  VehicleTypeEquipmentC2XCar = $00000020;
  VehicleTypeEquipmentC2XRSU = $00000040;

// Constants for enum VissimTextAlignment
type
  VissimTextAlignment = TOleEnum;
const
  VissimTextAlignmentLeft = $00000001;
  VissimTextAlignmentCenter = $00000002;
  VissimTextAlignmentRight = $00000003;
  VissimTextAlignment_End = $00000004;

// Constants for enum WTTConfigurationCategoryType
type
  WTTConfigurationCategoryType = TOleEnum;
const
  WTTConfigurationCategoryTypeOther = $00000001;
  WTTConfigurationCategoryTypeNumberFromTo = $00000002;
  WTTConfigurationCategoryTypeSignalGroup = $00000003;
  WTTConfigurationCategoryTypeDetector = $00000004;
  WTTConfigurationCategoryTypePTCallingPoint = $00000005;
  WTTConfigurationCategoryType_End = $00000006;

// Constants for enum WTTProtocolType
type
  WTTProtocolType = TOleEnum;
const
  WTTProtocolTypeSignalTimesTable = $00000001;
  WTTProtocolTypeScDetectorRecord = $00000002;
  WTTProtocolType_End = $00000003;

// Constants for enum WaitingPositionApproachMethodType
type
  WaitingPositionApproachMethodType = TOleEnum;
const
  WaitingPositionApproachMethodTypeDirectLine = $00000001;
  WaitingPositionApproachMethodTypePotential = $00000002;
  WaitingPositionApproachMethodType_End = $00000003;

type

// *********************************************************************//
// Forward declaration of types defined in TypeLibrary                    
// *********************************************************************//
  IObjectBase = interface;
  IObjectBaseDisp = dispinterface;
  IVissim = interface;
  IVissimDisp = dispinterface;
  INetBase = interface;
  INetBaseDisp = dispinterface;
  INet = interface;
  INetDisp = dispinterface;
  ICollectionBase = interface;
  ICollectionBaseDisp = dispinterface;
  IAnimRecCollection = interface;
  IAnimRecCollectionDisp = dispinterface;
  IAnimRecContainerBase = interface;
  IAnimRecContainerBaseDisp = dispinterface;
  IAnimRecContainer = interface;
  IAnimRecContainerDisp = dispinterface;
  IAttributes = interface;
  IAttributesDisp = dispinterface;
  IIterator = interface;
  IIteratorDisp = dispinterface;
  IAnimRecBase = interface;
  IAnimRecBaseDisp = dispinterface;
  IAnimRec = interface;
  IAnimRecDisp = dispinterface;
  ISectionCollection = interface;
  ISectionCollectionDisp = dispinterface;
  IAliasCollection = interface;
  IAliasCollectionDisp = dispinterface;
  IAliasContainerBase = interface;
  IAliasContainerBaseDisp = dispinterface;
  IAliasContainer = interface;
  IAliasContainerDisp = dispinterface;
  IAliasBase = interface;
  IAliasBaseDisp = dispinterface;
  IAlias = interface;
  IAliasDisp = dispinterface;
  IAreaBehaviorTypeCollection = interface;
  IAreaBehaviorTypeCollectionDisp = dispinterface;
  IAreaBehaviorTypeContainerBase = interface;
  IAreaBehaviorTypeContainerBaseDisp = dispinterface;
  IAreaBehaviorTypeContainer = interface;
  IAreaBehaviorTypeContainerDisp = dispinterface;
  IAreaBehaviorTypeBase = interface;
  IAreaBehaviorTypeBaseDisp = dispinterface;
  IAreaBehaviorType = interface;
  IAreaBehaviorTypeDisp = dispinterface;
  IAreaBehaviorTypeElementCollection = interface;
  IAreaBehaviorTypeElementCollectionDisp = dispinterface;
  IAreaBehaviorTypeElementContainerBase = interface;
  IAreaBehaviorTypeElementContainerBaseDisp = dispinterface;
  IAreaBehaviorTypeElementContainer = interface;
  IAreaBehaviorTypeElementContainerDisp = dispinterface;
  IAreaBehaviorTypeElementBase = interface;
  IAreaBehaviorTypeElementBaseDisp = dispinterface;
  IAreaBehaviorTypeElement = interface;
  IAreaBehaviorTypeElementDisp = dispinterface;
  IPedestrianClassBase = interface;
  IPedestrianClassBaseDisp = dispinterface;
  IPedestrianClass = interface;
  IPedestrianClassDisp = dispinterface;
  IPedestrianTypeCollection = interface;
  IPedestrianTypeCollectionDisp = dispinterface;
  IWalkingBehaviorBase = interface;
  IWalkingBehaviorBaseDisp = dispinterface;
  IWalkingBehavior = interface;
  IWalkingBehaviorDisp = dispinterface;
  ITimeIntervalBase = interface;
  ITimeIntervalBaseDisp = dispinterface;
  ITimeInterval = interface;
  ITimeIntervalDisp = dispinterface;
  ITimeIntervalSetBase = interface;
  ITimeIntervalSetBaseDisp = dispinterface;
  ITimeIntervalSet = interface;
  ITimeIntervalSetDisp = dispinterface;
  ITimeIntervalCollection = interface;
  ITimeIntervalCollectionDisp = dispinterface;
  ITimeIntervalContainerBase = interface;
  ITimeIntervalContainerBaseDisp = dispinterface;
  ITimeIntervalContainer = interface;
  ITimeIntervalContainerDisp = dispinterface;
  IDesSpeedDistributionBase = interface;
  IDesSpeedDistributionBaseDisp = dispinterface;
  IDesSpeedDistribution = interface;
  IDesSpeedDistributionDisp = dispinterface;
  ISpeedDistributionDataPointCollection = interface;
  ISpeedDistributionDataPointCollectionDisp = dispinterface;
  ISpeedDistributionDataPointContainerBase = interface;
  ISpeedDistributionDataPointContainerBaseDisp = dispinterface;
  ISpeedDistributionDataPointContainer = interface;
  ISpeedDistributionDataPointContainerDisp = dispinterface;
  IAreaMeasurementCollection = interface;
  IAreaMeasurementCollectionDisp = dispinterface;
  IAreaMeasurementContainerBase = interface;
  IAreaMeasurementContainerBaseDisp = dispinterface;
  IAreaMeasurementContainer = interface;
  IAreaMeasurementContainerDisp = dispinterface;
  IAreaMeasurementBase = interface;
  IAreaMeasurementBaseDisp = dispinterface;
  IAreaMeasurement = interface;
  IAreaMeasurementDisp = dispinterface;
  IAreaCollection = interface;
  IAreaCollectionDisp = dispinterface;
  IAreaContainerBase = interface;
  IAreaContainerBaseDisp = dispinterface;
  IAreaContainer = interface;
  IAreaContainerDisp = dispinterface;
  IAreaBase = interface;
  IAreaBaseDisp = dispinterface;
  IArea = interface;
  IAreaDisp = dispinterface;
  IPointCollection = interface;
  IPointCollectionDisp = dispinterface;
  IPointContainerBase = interface;
  IPointContainerBaseDisp = dispinterface;
  IPointContainer = interface;
  IPointContainerDisp = dispinterface;
  IDisplayTypeBase = interface;
  IDisplayTypeBaseDisp = dispinterface;
  IDisplayType = interface;
  IDisplayTypeDisp = dispinterface;
  ITimeDistributionBase = interface;
  ITimeDistributionBaseDisp = dispinterface;
  ITimeDistribution = interface;
  ITimeDistributionDisp = dispinterface;
  IDurationDistributionDataPointCollection = interface;
  IDurationDistributionDataPointCollectionDisp = dispinterface;
  IDurationDistributionDataPointContainerBase = interface;
  IDurationDistributionDataPointContainerBaseDisp = dispinterface;
  IDurationDistributionDataPointContainer = interface;
  IDurationDistributionDataPointContainerDisp = dispinterface;
  ILocationDistributionBase = interface;
  ILocationDistributionBaseDisp = dispinterface;
  ILocationDistribution = interface;
  ILocationDistributionDisp = dispinterface;
  IDistributionDataPointCollection = interface;
  IDistributionDataPointCollectionDisp = dispinterface;
  IDistributionDataPointContainerBase = interface;
  IDistributionDataPointContainerBaseDisp = dispinterface;
  IDistributionDataPointContainer = interface;
  IDistributionDataPointContainerDisp = dispinterface;
  ILevelBase = interface;
  ILevelBaseDisp = dispinterface;
  ILevel = interface;
  ILevelDisp = dispinterface;
  IPTStopCollection = interface;
  IPTStopCollectionDisp = dispinterface;
  IPedClassQueuingBehaviorCollection = interface;
  IPedClassQueuingBehaviorCollectionDisp = dispinterface;
  IPedClassQueuingBehaviorContainerBase = interface;
  IPedClassQueuingBehaviorContainerBaseDisp = dispinterface;
  IPedClassQueuingBehaviorContainer = interface;
  IPedClassQueuingBehaviorContainerDisp = dispinterface;
  IPedestrianInputCollection = interface;
  IPedestrianInputCollectionDisp = dispinterface;
  IPedestrianRouteLocationCollection = interface;
  IPedestrianRouteLocationCollectionDisp = dispinterface;
  IPedestrianRoutingDecisionStaticCollection = interface;
  IPedestrianRoutingDecisionStaticCollectionDisp = dispinterface;
  IPedestrianRoutingDecisionPartialCollection = interface;
  IPedestrianRoutingDecisionPartialCollectionDisp = dispinterface;
  IElevatorGroupBase = interface;
  IElevatorGroupBaseDisp = dispinterface;
  IElevatorGroup = interface;
  IElevatorGroupDisp = dispinterface;
  IElevatorCollection = interface;
  IElevatorCollectionDisp = dispinterface;
  IPedestrianCollection = interface;
  IPedestrianCollectionDisp = dispinterface;
  IPedestrianRouteStaticCollection = interface;
  IPedestrianRouteStaticCollectionDisp = dispinterface;
  IPedestrianRoutePartialCollection = interface;
  IPedestrianRoutePartialCollectionDisp = dispinterface;
  IBackgroundImageCollection = interface;
  IBackgroundImageCollectionDisp = dispinterface;
  IBackgroundImageContainerBase = interface;
  IBackgroundImageContainerBaseDisp = dispinterface;
  IBackgroundImageContainer = interface;
  IBackgroundImageContainerDisp = dispinterface;
  IBackgroundImageBase = interface;
  IBackgroundImageBaseDisp = dispinterface;
  IBackgroundImage = interface;
  IBackgroundImageDisp = dispinterface;
  IBoardDelFuncCollection = interface;
  IBoardDelFuncCollectionDisp = dispinterface;
  IBoardDelFuncContainerBase = interface;
  IBoardDelFuncContainerBaseDisp = dispinterface;
  IBoardDelFuncContainer = interface;
  IBoardDelFuncContainerDisp = dispinterface;
  IBoardDelFuncBase = interface;
  IBoardDelFuncBaseDisp = dispinterface;
  IBoardDelFunc = interface;
  IBoardDelFuncDisp = dispinterface;
  IBoardDelFuncDataPtCollection = interface;
  IBoardDelFuncDataPtCollectionDisp = dispinterface;
  IBoardDelFuncDataPtContainerBase = interface;
  IBoardDelFuncDataPtContainerBaseDisp = dispinterface;
  IBoardDelFuncDataPtContainer = interface;
  IBoardDelFuncDataPtContainerDisp = dispinterface;
  IBoardDelTypeCollection = interface;
  IBoardDelTypeCollectionDisp = dispinterface;
  IBoardDelTypeContainerBase = interface;
  IBoardDelTypeContainerBaseDisp = dispinterface;
  IBoardDelTypeContainer = interface;
  IBoardDelTypeContainerDisp = dispinterface;
  IBoardDelTypeBase = interface;
  IBoardDelTypeBaseDisp = dispinterface;
  IBoardDelType = interface;
  IBoardDelTypeDisp = dispinterface;
  IBoardDelTypeElementCollection = interface;
  IBoardDelTypeElementCollectionDisp = dispinterface;
  IBoardDelTypeElementContainerBase = interface;
  IBoardDelTypeElementContainerBaseDisp = dispinterface;
  IBoardDelTypeElementContainer = interface;
  IBoardDelTypeElementContainerDisp = dispinterface;
  IBoardDelTypeElementBase = interface;
  IBoardDelTypeElementBaseDisp = dispinterface;
  IBoardDelTypeElement = interface;
  IBoardDelTypeElementDisp = dispinterface;
  ICameraPositionCollection = interface;
  ICameraPositionCollectionDisp = dispinterface;
  ICameraPositionContainerBase = interface;
  ICameraPositionContainerBaseDisp = dispinterface;
  ICameraPositionContainer = interface;
  ICameraPositionContainerDisp = dispinterface;
  ICameraPositionBase = interface;
  ICameraPositionBaseDisp = dispinterface;
  ICameraPosition = interface;
  ICameraPositionDisp = dispinterface;
  IColorDistributionCollection = interface;
  IColorDistributionCollectionDisp = dispinterface;
  IColorDistributionContainerBase = interface;
  IColorDistributionContainerBaseDisp = dispinterface;
  IColorDistributionContainer = interface;
  IColorDistributionContainerDisp = dispinterface;
  IColorDistributionBase = interface;
  IColorDistributionBaseDisp = dispinterface;
  IColorDistribution = interface;
  IColorDistributionDisp = dispinterface;
  IColorDistributionElementCollection = interface;
  IColorDistributionElementCollectionDisp = dispinterface;
  IColorDistributionElementContainerBase = interface;
  IColorDistributionElementContainerBaseDisp = dispinterface;
  IColorDistributionElementContainer = interface;
  IColorDistributionElementContainerDisp = dispinterface;
  IColorDistributionElementBase = interface;
  IColorDistributionElementBaseDisp = dispinterface;
  IColorDistributionElement = interface;
  IColorDistributionElementDisp = dispinterface;
  IConflictAreaCollection = interface;
  IConflictAreaCollectionDisp = dispinterface;
  IConflictAreaContainerBase = interface;
  IConflictAreaContainerBaseDisp = dispinterface;
  IConflictAreaContainer = interface;
  IConflictAreaContainerDisp = dispinterface;
  IConflictAreaBase = interface;
  IConflictAreaBaseDisp = dispinterface;
  IConflictArea = interface;
  IConflictAreaDisp = dispinterface;
  ILinkBase = interface;
  ILinkBaseDisp = dispinterface;
  ILink = interface;
  ILinkDisp = dispinterface;
  ILaneCollection = interface;
  ILaneCollectionDisp = dispinterface;
  ILaneContainerBase = interface;
  ILaneContainerBaseDisp = dispinterface;
  ILaneContainer = interface;
  ILaneContainerDisp = dispinterface;
  ILaneBase = interface;
  ILaneBaseDisp = dispinterface;
  ILane = interface;
  ILaneDisp = dispinterface;
  IVehicleClassCollection = interface;
  IVehicleClassCollectionDisp = dispinterface;
  IConflictMarkerCollection = interface;
  IConflictMarkerCollectionDisp = dispinterface;
  IParkingLotCollection = interface;
  IParkingLotCollectionDisp = dispinterface;
  IPriorityRuleCollection = interface;
  IPriorityRuleCollectionDisp = dispinterface;
  IVehicleCollection = interface;
  IVehicleCollectionDisp = dispinterface;
  IDesSpeedDecisionCollection = interface;
  IDesSpeedDecisionCollectionDisp = dispinterface;
  IDetectorCollection = interface;
  IDetectorCollectionDisp = dispinterface;
  IReducedSpeedAreaCollection = interface;
  IReducedSpeedAreaCollectionDisp = dispinterface;
  ISignalHeadCollection = interface;
  ISignalHeadCollectionDisp = dispinterface;
  IStopSignCollection = interface;
  IStopSignCollectionDisp = dispinterface;
  ILinkBehaviorTypeBase = interface;
  ILinkBehaviorTypeBaseDisp = dispinterface;
  ILinkBehaviorType = interface;
  ILinkBehaviorTypeDisp = dispinterface;
  IDrivingBehaviorBase = interface;
  IDrivingBehaviorBaseDisp = dispinterface;
  IDrivingBehavior = interface;
  IDrivingBehaviorDisp = dispinterface;
  IVehClassLateralBehaviorCollection = interface;
  IVehClassLateralBehaviorCollectionDisp = dispinterface;
  IVehClassLateralBehaviorContainerBase = interface;
  IVehClassLateralBehaviorContainerBaseDisp = dispinterface;
  IVehClassLateralBehaviorContainer = interface;
  IVehClassLateralBehaviorContainerDisp = dispinterface;
  IVehClassFollowingBehaviorCollection = interface;
  IVehClassFollowingBehaviorCollectionDisp = dispinterface;
  IVehClassFollowingBehaviorContainerBase = interface;
  IVehClassFollowingBehaviorContainerBaseDisp = dispinterface;
  IVehClassFollowingBehaviorContainer = interface;
  IVehClassFollowingBehaviorContainerDisp = dispinterface;
  IFreeDistributionBase = interface;
  IFreeDistributionBaseDisp = dispinterface;
  IFreeDistribution = interface;
  IFreeDistributionDisp = dispinterface;
  IDrivBehavVehClassSpeedMisestDistrCollection = interface;
  IDrivBehavVehClassSpeedMisestDistrCollectionDisp = dispinterface;
  IDrivBehavVehClassSpeedMisestDistrContainerBase = interface;
  IDrivBehavVehClassSpeedMisestDistrContainerBaseDisp = dispinterface;
  IDrivBehavVehClassSpeedMisestDistrContainer = interface;
  IDrivBehavVehClassSpeedMisestDistrContainerDisp = dispinterface;
  IVehClassDrivingBehaviorCollection = interface;
  IVehClassDrivingBehaviorCollectionDisp = dispinterface;
  IVehClassDrivingBehaviorContainerBase = interface;
  IVehClassDrivingBehaviorContainerBaseDisp = dispinterface;
  IVehClassDrivingBehaviorContainer = interface;
  IVehClassDrivingBehaviorContainerDisp = dispinterface;
  IVehicleClassBase = interface;
  IVehicleClassBaseDisp = dispinterface;
  IVehicleClass = interface;
  IVehicleClassDisp = dispinterface;
  IVehicleTypeCollection = interface;
  IVehicleTypeCollectionDisp = dispinterface;
  IVehClassDrivingBehaviorBase = interface;
  IVehClassDrivingBehaviorBaseDisp = dispinterface;
  IVehClassDrivingBehavior = interface;
  IVehClassDrivingBehaviorDisp = dispinterface;
  ILinkPolyPointCollection = interface;
  ILinkPolyPointCollectionDisp = dispinterface;
  ILinkPolyPointContainerBase = interface;
  ILinkPolyPointContainerBaseDisp = dispinterface;
  ILinkPolyPointContainer = interface;
  ILinkPolyPointContainerDisp = dispinterface;
  IDistanceDistributionBase = interface;
  IDistanceDistributionBaseDisp = dispinterface;
  IDistanceDistribution = interface;
  IDistanceDistributionDisp = dispinterface;
  ILinkLnChgDistDistrAttrElementCollection = interface;
  ILinkLnChgDistDistrAttrElementCollectionDisp = dispinterface;
  ILinkLnChgDistDistrAttrElementContainerBase = interface;
  ILinkLnChgDistDistrAttrElementContainerBaseDisp = dispinterface;
  ILinkLnChgDistDistrAttrElementContainer = interface;
  ILinkLnChgDistDistrAttrElementContainerDisp = dispinterface;
  IVehicleRouteStaticCollection = interface;
  IVehicleRouteStaticCollectionDisp = dispinterface;
  IVehicleRouteClosureCollection = interface;
  IVehicleRouteClosureCollectionDisp = dispinterface;
  IVehicleRouteManagedLanesCollection = interface;
  IVehicleRouteManagedLanesCollectionDisp = dispinterface;
  IVehicleRoutePartialCollection = interface;
  IVehicleRoutePartialCollectionDisp = dispinterface;
  IVehicleRouteParkingCollection = interface;
  IVehicleRouteParkingCollectionDisp = dispinterface;
  IVehicleRoutePartialPTCollection = interface;
  IVehicleRoutePartialPTCollectionDisp = dispinterface;
  IPTLineCollection = interface;
  IPTLineCollectionDisp = dispinterface;
  IVehicleInputCollection = interface;
  IVehicleInputCollectionDisp = dispinterface;
  IQueueCounterCollection = interface;
  IQueueCounterCollectionDisp = dispinterface;
  IVehicleTravelTimeMeasurementCollection = interface;
  IVehicleTravelTimeMeasurementCollectionDisp = dispinterface;
  IVehicleRoutingDecisionStaticCollection = interface;
  IVehicleRoutingDecisionStaticCollectionDisp = dispinterface;
  IVehicleRoutingDecisionPartialCollection = interface;
  IVehicleRoutingDecisionPartialCollectionDisp = dispinterface;
  IVehicleRoutingDecisionParkingCollection = interface;
  IVehicleRoutingDecisionParkingCollectionDisp = dispinterface;
  IVehicleRoutingDecisionDynamicCollection = interface;
  IVehicleRoutingDecisionDynamicCollectionDisp = dispinterface;
  IVehicleRoutingDecisionManagedLanesCollection = interface;
  IVehicleRoutingDecisionManagedLanesCollectionDisp = dispinterface;
  IVehicleRoutingDecisionPartialPTCollection = interface;
  IVehicleRoutingDecisionPartialPTCollectionDisp = dispinterface;
  IVehClassCountedDataCollection = interface;
  IVehClassCountedDataCollectionDisp = dispinterface;
  IVehClassCountedDataContainerBase = interface;
  IVehClassCountedDataContainerBaseDisp = dispinterface;
  IVehClassCountedDataContainer = interface;
  IVehClassCountedDataContainerDisp = dispinterface;
  IVehClassCountedDataBase = interface;
  IVehClassCountedDataBaseDisp = dispinterface;
  IVehClassCountedData = interface;
  IVehClassCountedDataDisp = dispinterface;
  IEdgeCollection = interface;
  IEdgeCollectionDisp = dispinterface;
  IVehClassGapCollection = interface;
  IVehClassGapCollectionDisp = dispinterface;
  IVehClassGapContainerBase = interface;
  IVehClassGapContainerBaseDisp = dispinterface;
  IVehClassGapContainer = interface;
  IVehClassGapContainerDisp = dispinterface;
  IVehClassGapBase = interface;
  IVehClassGapBaseDisp = dispinterface;
  IVehClassGap = interface;
  IVehClassGapDisp = dispinterface;
  ICritSpeedFuncCollection = interface;
  ICritSpeedFuncCollectionDisp = dispinterface;
  ICritSpeedFuncContainerBase = interface;
  ICritSpeedFuncContainerBaseDisp = dispinterface;
  ICritSpeedFuncContainer = interface;
  ICritSpeedFuncContainerDisp = dispinterface;
  ICritSpeedFuncBase = interface;
  ICritSpeedFuncBaseDisp = dispinterface;
  ICritSpeedFunc = interface;
  ICritSpeedFuncDisp = dispinterface;
  ICritSpeedFuncDataPtCollection = interface;
  ICritSpeedFuncDataPtCollectionDisp = dispinterface;
  ICritSpeedFuncDataPtContainerBase = interface;
  ICritSpeedFuncDataPtContainerBaseDisp = dispinterface;
  ICritSpeedFuncDataPtContainer = interface;
  ICritSpeedFuncDataPtContainerDisp = dispinterface;
  IDataCollectionMeasurementCollection = interface;
  IDataCollectionMeasurementCollectionDisp = dispinterface;
  IDataCollectionMeasurementContainerBase = interface;
  IDataCollectionMeasurementContainerBaseDisp = dispinterface;
  IDataCollectionMeasurementContainer = interface;
  IDataCollectionMeasurementContainerDisp = dispinterface;
  IDataCollectionMeasurementBase = interface;
  IDataCollectionMeasurementBaseDisp = dispinterface;
  IDataCollectionMeasurement = interface;
  IDataCollectionMeasurementDisp = dispinterface;
  IDataCollectionPointCollection = interface;
  IDataCollectionPointCollectionDisp = dispinterface;
  IDataCollectionPointContainerBase = interface;
  IDataCollectionPointContainerBaseDisp = dispinterface;
  IDataCollectionPointContainer = interface;
  IDataCollectionPointContainerDisp = dispinterface;
  IDataCollectionPointBase = interface;
  IDataCollectionPointBaseDisp = dispinterface;
  IDataCollectionPoint = interface;
  IDataCollectionPointDisp = dispinterface;
  IDelayMeasurementCollection = interface;
  IDelayMeasurementCollectionDisp = dispinterface;
  IDelayMeasurementContainerBase = interface;
  IDelayMeasurementContainerBaseDisp = dispinterface;
  IDelayMeasurementContainer = interface;
  IDelayMeasurementContainerDisp = dispinterface;
  IDelayMeasurementBase = interface;
  IDelayMeasurementBaseDisp = dispinterface;
  IDelayMeasurement = interface;
  IDelayMeasurementDisp = dispinterface;
  IDesAccelerationFunctionCollection = interface;
  IDesAccelerationFunctionCollectionDisp = dispinterface;
  IDesAccelerationFunctionContainerBase = interface;
  IDesAccelerationFunctionContainerBaseDisp = dispinterface;
  IDesAccelerationFunctionContainer = interface;
  IDesAccelerationFunctionContainerDisp = dispinterface;
  IDesAccelerationFunctionBase = interface;
  IDesAccelerationFunctionBaseDisp = dispinterface;
  IDesAccelerationFunction = interface;
  IDesAccelerationFunctionDisp = dispinterface;
  IAccelerationFunctionDataPointCollection = interface;
  IAccelerationFunctionDataPointCollectionDisp = dispinterface;
  IAccelerationFunctionDataPointContainerBase = interface;
  IAccelerationFunctionDataPointContainerBaseDisp = dispinterface;
  IAccelerationFunctionDataPointContainer = interface;
  IAccelerationFunctionDataPointContainerDisp = dispinterface;
  IDesDecelerationFunctionCollection = interface;
  IDesDecelerationFunctionCollectionDisp = dispinterface;
  IDesDecelerationFunctionContainerBase = interface;
  IDesDecelerationFunctionContainerBaseDisp = dispinterface;
  IDesDecelerationFunctionContainer = interface;
  IDesDecelerationFunctionContainerDisp = dispinterface;
  IDesDecelerationFunctionBase = interface;
  IDesDecelerationFunctionBaseDisp = dispinterface;
  IDesDecelerationFunction = interface;
  IDesDecelerationFunctionDisp = dispinterface;
  IDecelerationFunctionDataPointCollection = interface;
  IDecelerationFunctionDataPointCollectionDisp = dispinterface;
  IDecelerationFunctionDataPointContainerBase = interface;
  IDecelerationFunctionDataPointContainerBaseDisp = dispinterface;
  IDecelerationFunctionDataPointContainer = interface;
  IDecelerationFunctionDataPointContainerDisp = dispinterface;
  IDesSpeedDecisionContainerBase = interface;
  IDesSpeedDecisionContainerBaseDisp = dispinterface;
  IDesSpeedDecisionContainer = interface;
  IDesSpeedDecisionContainerDisp = dispinterface;
  IDesSpeedDecisionBase = interface;
  IDesSpeedDecisionBaseDisp = dispinterface;
  IDesSpeedDecision = interface;
  IDesSpeedDecisionDisp = dispinterface;
  IVehClassDesSpeedDistributionCollection = interface;
  IVehClassDesSpeedDistributionCollectionDisp = dispinterface;
  IVehClassDesSpeedDistributionContainerBase = interface;
  IVehClassDesSpeedDistributionContainerBaseDisp = dispinterface;
  IVehClassDesSpeedDistributionContainer = interface;
  IVehClassDesSpeedDistributionContainerDisp = dispinterface;
  IVehClassDesSpeedDistributionBase = interface;
  IVehClassDesSpeedDistributionBaseDisp = dispinterface;
  IVehClassDesSpeedDistribution = interface;
  IVehClassDesSpeedDistributionDisp = dispinterface;
  IDesSpeedDistributionCollection = interface;
  IDesSpeedDistributionCollectionDisp = dispinterface;
  IDesSpeedDistributionContainerBase = interface;
  IDesSpeedDistributionContainerBaseDisp = dispinterface;
  IDesSpeedDistributionContainer = interface;
  IDesSpeedDistributionContainerDisp = dispinterface;
  IDetectorContainerBase = interface;
  IDetectorContainerBaseDisp = dispinterface;
  IDetectorContainer = interface;
  IDetectorContainerDisp = dispinterface;
  IDetectorBase = interface;
  IDetectorBaseDisp = dispinterface;
  IDetector = interface;
  IDetectorDisp = dispinterface;
  ISignalControllerBase = interface;
  ISignalControllerBaseDisp = dispinterface;
  ISignalController = interface;
  ISignalControllerDisp = dispinterface;
  ISignalGroupCollection = interface;
  ISignalGroupCollectionDisp = dispinterface;
  ISignalGroupContainerBase = interface;
  ISignalGroupContainerBaseDisp = dispinterface;
  ISignalGroupContainer = interface;
  ISignalGroupContainerDisp = dispinterface;
  ISignalGroupBase = interface;
  ISignalGroupBaseDisp = dispinterface;
  ISignalGroup = interface;
  ISignalGroupDisp = dispinterface;
  IWTTFileCollection = interface;
  IWTTFileCollectionDisp = dispinterface;
  ISignalOutputConfigurationElementCollection = interface;
  ISignalOutputConfigurationElementCollectionDisp = dispinterface;
  ISignalOutputConfigurationElementContainerBase = interface;
  ISignalOutputConfigurationElementContainerBaseDisp = dispinterface;
  ISignalOutputConfigurationElementContainer = interface;
  ISignalOutputConfigurationElementContainerDisp = dispinterface;
  ISignalOutputConfigurationElementBase = interface;
  ISignalOutputConfigurationElementBaseDisp = dispinterface;
  ISignalOutputConfigurationElement = interface;
  ISignalOutputConfigurationElementDisp = dispinterface;
  IWTTValueFormatBase = interface;
  IWTTValueFormatBaseDisp = dispinterface;
  IWTTValueFormat = interface;
  IWTTValueFormatDisp = dispinterface;
  IPTStopBase = interface;
  IPTStopBaseDisp = dispinterface;
  IPTStop = interface;
  IPTStopDisp = dispinterface;
  IBoardingVolumeCollection = interface;
  IBoardingVolumeCollectionDisp = dispinterface;
  IBoardingVolumeContainerBase = interface;
  IBoardingVolumeContainerBaseDisp = dispinterface;
  IBoardingVolumeContainer = interface;
  IBoardingVolumeContainerDisp = dispinterface;
  IBoardingVolumeBase = interface;
  IBoardingVolumeBaseDisp = dispinterface;
  IBoardingVolume = interface;
  IBoardingVolumeDisp = dispinterface;
  IPTLineStopCollection = interface;
  IPTLineStopCollectionDisp = dispinterface;
  IPartialPTLineStopCollection = interface;
  IPartialPTLineStopCollectionDisp = dispinterface;
  IPedestrianClassCollection = interface;
  IPedestrianClassCollectionDisp = dispinterface;
  IDisplayTypeCollection = interface;
  IDisplayTypeCollectionDisp = dispinterface;
  IDisplayTypeContainerBase = interface;
  IDisplayTypeContainerBaseDisp = dispinterface;
  IDisplayTypeContainer = interface;
  IDisplayTypeContainerDisp = dispinterface;
  IDistanceDistributionCollection = interface;
  IDistanceDistributionCollectionDisp = dispinterface;
  IDistanceDistributionContainerBase = interface;
  IDistanceDistributionContainerBaseDisp = dispinterface;
  IDistanceDistributionContainer = interface;
  IDistanceDistributionContainerDisp = dispinterface;
  IDrivingBehaviorCollection = interface;
  IDrivingBehaviorCollectionDisp = dispinterface;
  IDrivingBehaviorContainerBase = interface;
  IDrivingBehaviorContainerBaseDisp = dispinterface;
  IDrivingBehaviorContainer = interface;
  IDrivingBehaviorContainerDisp = dispinterface;
  IDynamicAssignmentBase = interface;
  IDynamicAssignmentBaseDisp = dispinterface;
  IDynamicAssignment = interface;
  IDynamicAssignmentDisp = dispinterface;
  IDynAssignDemandCollection = interface;
  IDynAssignDemandCollectionDisp = dispinterface;
  IDynAssignDemandContainerBase = interface;
  IDynAssignDemandContainerBaseDisp = dispinterface;
  IDynAssignDemandContainer = interface;
  IDynAssignDemandContainerDisp = dispinterface;
  IDynAssignDemandBase = interface;
  IDynAssignDemandBaseDisp = dispinterface;
  IDynAssignDemand = interface;
  IDynAssignDemandDisp = dispinterface;
  IVehicleCompositionBase = interface;
  IVehicleCompositionBaseDisp = dispinterface;
  IVehicleComposition = interface;
  IVehicleCompositionDisp = dispinterface;
  IVehicleCompositionRelativeFlowCollection = interface;
  IVehicleCompositionRelativeFlowCollectionDisp = dispinterface;
  IVehicleCompositionRelativeFlowContainerBase = interface;
  IVehicleCompositionRelativeFlowContainerBaseDisp = dispinterface;
  IVehicleCompositionRelativeFlowContainer = interface;
  IVehicleCompositionRelativeFlowContainerDisp = dispinterface;
  IVehicleTypeBase = interface;
  IVehicleTypeBaseDisp = dispinterface;
  IVehicleType = interface;
  IVehicleTypeDisp = dispinterface;
  IWeightDistributionBase = interface;
  IWeightDistributionBaseDisp = dispinterface;
  IWeightDistribution = interface;
  IWeightDistributionDisp = dispinterface;
  IPowerDistributionBase = interface;
  IPowerDistributionBaseDisp = dispinterface;
  IPowerDistribution = interface;
  IPowerDistributionDisp = dispinterface;
  IMaxAccelerationFunctionBase = interface;
  IMaxAccelerationFunctionBaseDisp = dispinterface;
  IMaxAccelerationFunction = interface;
  IMaxAccelerationFunctionDisp = dispinterface;
  IMaxDecelerationFunctionBase = interface;
  IMaxDecelerationFunctionBaseDisp = dispinterface;
  IMaxDecelerationFunction = interface;
  IMaxDecelerationFunctionDisp = dispinterface;
  IModel2D3DDistributionBase = interface;
  IModel2D3DDistributionBaseDisp = dispinterface;
  IModel2D3DDistribution = interface;
  IModel2D3DDistributionDisp = dispinterface;
  IModel2D3DDistributionElementCollection = interface;
  IModel2D3DDistributionElementCollectionDisp = dispinterface;
  IModel2D3DDistributionElementContainerBase = interface;
  IModel2D3DDistributionElementContainerBaseDisp = dispinterface;
  IModel2D3DDistributionElementContainer = interface;
  IModel2D3DDistributionElementContainerDisp = dispinterface;
  IModel2D3DBase = interface;
  IModel2D3DBaseDisp = dispinterface;
  IModel2D3D = interface;
  IModel2D3DDisp = dispinterface;
  IModel2D3DSegmentCollection = interface;
  IModel2D3DSegmentCollectionDisp = dispinterface;
  IModel2D3DSegmentContainerBase = interface;
  IModel2D3DSegmentContainerBaseDisp = dispinterface;
  IModel2D3DSegmentContainer = interface;
  IModel2D3DSegmentContainerDisp = dispinterface;
  IModel2D3DSegmentBase = interface;
  IModel2D3DSegmentBaseDisp = dispinterface;
  IModel2D3DSegment = interface;
  IModel2D3DSegmentDisp = dispinterface;
  IDoorCollection = interface;
  IDoorCollectionDisp = dispinterface;
  IDoorContainerBase = interface;
  IDoorContainerBaseDisp = dispinterface;
  IDoorContainer = interface;
  IDoorContainerDisp = dispinterface;
  IModel2D3DDistributionElementBase = interface;
  IModel2D3DDistributionElementBaseDisp = dispinterface;
  IModel2D3DDistributionElement = interface;
  IModel2D3DDistributionElementDisp = dispinterface;
  IParkingLotSelectionParametersCollection = interface;
  IParkingLotSelectionParametersCollectionDisp = dispinterface;
  IParkingLotSelectionParametersContainerBase = interface;
  IParkingLotSelectionParametersContainerBaseDisp = dispinterface;
  IParkingLotSelectionParametersContainer = interface;
  IParkingLotSelectionParametersContainerDisp = dispinterface;
  IOccupancyDistributionBase = interface;
  IOccupancyDistributionBaseDisp = dispinterface;
  IOccupancyDistribution = interface;
  IOccupancyDistributionDisp = dispinterface;
  ILatDriftSpeedFuncBase = interface;
  ILatDriftSpeedFuncBaseDisp = dispinterface;
  ILatDriftSpeedFunc = interface;
  ILatDriftSpeedFuncDisp = dispinterface;
  ILatDriftSpeedFuncDataPtCollection = interface;
  ILatDriftSpeedFuncDataPtCollectionDisp = dispinterface;
  ILatDriftSpeedFuncDataPtContainerBase = interface;
  ILatDriftSpeedFuncDataPtContainerBaseDisp = dispinterface;
  ILatDriftSpeedFuncDataPtContainer = interface;
  ILatDriftSpeedFuncDataPtContainerDisp = dispinterface;
  IVehicleCompositionRelativeFlowBase = interface;
  IVehicleCompositionRelativeFlowBaseDisp = dispinterface;
  IVehicleCompositionRelativeFlow = interface;
  IVehicleCompositionRelativeFlowDisp = dispinterface;
  IMatrixBase = interface;
  IMatrixBaseDisp = dispinterface;
  IMatrix = interface;
  IMatrixDisp = dispinterface;
  IAlternativePathSearchCollection = interface;
  IAlternativePathSearchCollectionDisp = dispinterface;
  IAlternativePathSearchContainerBase = interface;
  IAlternativePathSearchContainerBaseDisp = dispinterface;
  IAlternativePathSearchContainer = interface;
  IAlternativePathSearchContainerDisp = dispinterface;
  IAlternativePathSearchVehicleRoutingDecisionCollection = interface;
  IAlternativePathSearchVehicleRoutingDecisionCollectionDisp = dispinterface;
  IAlternativePathSearchVehicleRoutingDecisionContainerBase = interface;
  IAlternativePathSearchVehicleRoutingDecisionContainerBaseDisp = dispinterface;
  IAlternativePathSearchVehicleRoutingDecisionContainer = interface;
  IAlternativePathSearchVehicleRoutingDecisionContainerDisp = dispinterface;
  IAttributeSelectionCollection = interface;
  IAttributeSelectionCollectionDisp = dispinterface;
  IAttributeSelectionContainerBase = interface;
  IAttributeSelectionContainerBaseDisp = dispinterface;
  IAttributeSelectionContainer = interface;
  IAttributeSelectionContainerDisp = dispinterface;
  IEdgeInitialTrafficCollection = interface;
  IEdgeInitialTrafficCollectionDisp = dispinterface;
  IEdgeInitialTrafficContainerBase = interface;
  IEdgeInitialTrafficContainerBaseDisp = dispinterface;
  IEdgeInitialTrafficContainer = interface;
  IEdgeInitialTrafficContainerDisp = dispinterface;
  IEdgeInitialTrafficBase = interface;
  IEdgeInitialTrafficBaseDisp = dispinterface;
  IEdgeInitialTraffic = interface;
  IEdgeInitialTrafficDisp = dispinterface;
  INodeBase = interface;
  INodeBaseDisp = dispinterface;
  INode = interface;
  INodeDisp = dispinterface;
  ILegOrientationCollection = interface;
  ILegOrientationCollectionDisp = dispinterface;
  ILegOrientationContainerBase = interface;
  ILegOrientationContainerBaseDisp = dispinterface;
  ILegOrientationContainer = interface;
  ILegOrientationContainerDisp = dispinterface;
  ILinkSegmentCollection = interface;
  ILinkSegmentCollectionDisp = dispinterface;
  ILinkSegmentContainerBase = interface;
  ILinkSegmentContainerBaseDisp = dispinterface;
  ILinkSegmentContainer = interface;
  ILinkSegmentContainerDisp = dispinterface;
  IMovementCollection = interface;
  IMovementCollectionDisp = dispinterface;
  IMovementContainerBase = interface;
  IMovementContainerBaseDisp = dispinterface;
  IMovementContainer = interface;
  IMovementContainerDisp = dispinterface;
  IMovementBase = interface;
  IMovementBaseDisp = dispinterface;
  IMovement = interface;
  IMovementDisp = dispinterface;
  INodeCollection = interface;
  INodeCollectionDisp = dispinterface;
  IMesoTurnConflictCollection = interface;
  IMesoTurnConflictCollectionDisp = dispinterface;
  IMesoTurnCollection = interface;
  IMesoTurnCollectionDisp = dispinterface;
  IMesoNodeBase = interface;
  IMesoNodeBaseDisp = dispinterface;
  IMesoNode = interface;
  IMesoNodeDisp = dispinterface;
  IMesoEdgeCollection = interface;
  IMesoEdgeCollectionDisp = dispinterface;
  IParkingLotBase = interface;
  IParkingLotBaseDisp = dispinterface;
  IParkingLot = interface;
  IParkingLotDisp = dispinterface;
  IVehClassDynAssignDesSpeedDistributionCollection = interface;
  IVehClassDynAssignDesSpeedDistributionCollectionDisp = dispinterface;
  IVehClassDynAssignDesSpeedDistributionContainerBase = interface;
  IVehClassDynAssignDesSpeedDistributionContainerBaseDisp = dispinterface;
  IVehClassDynAssignDesSpeedDistributionContainer = interface;
  IVehClassDynAssignDesSpeedDistributionContainerDisp = dispinterface;
  IPathCollection = interface;
  IPathCollectionDisp = dispinterface;
  IZoneBase = interface;
  IZoneBaseDisp = dispinterface;
  IZone = interface;
  IZoneDisp = dispinterface;
  IMesoTurnConflictContainerBase = interface;
  IMesoTurnConflictContainerBaseDisp = dispinterface;
  IMesoTurnConflictContainer = interface;
  IMesoTurnConflictContainerDisp = dispinterface;
  IMesoTurnContainerBase = interface;
  IMesoTurnContainerBaseDisp = dispinterface;
  IMesoTurnContainer = interface;
  IMesoTurnContainerDisp = dispinterface;
  IVehicleRoutingDecisionDynamicBase = interface;
  IVehicleRoutingDecisionDynamicBaseDisp = dispinterface;
  IVehicleRoutingDecisionDynamic = interface;
  IVehicleRoutingDecisionDynamicDisp = dispinterface;
  IVehCompositionInitialVolumeCollection = interface;
  IVehCompositionInitialVolumeCollectionDisp = dispinterface;
  IVehCompositionInitialVolumeContainerBase = interface;
  IVehCompositionInitialVolumeContainerBaseDisp = dispinterface;
  IVehCompositionInitialVolumeContainer = interface;
  IVehCompositionInitialVolumeContainerDisp = dispinterface;
  IEdgeContainerBase = interface;
  IEdgeContainerBaseDisp = dispinterface;
  IEdgeContainer = interface;
  IEdgeContainerDisp = dispinterface;
  IEdgeBase = interface;
  IEdgeBaseDisp = dispinterface;
  IEdge = interface;
  IEdgeDisp = dispinterface;
  ILinkCollection = interface;
  ILinkCollectionDisp = dispinterface;
  IElevatorGroupCollection = interface;
  IElevatorGroupCollectionDisp = dispinterface;
  IElevatorGroupContainerBase = interface;
  IElevatorGroupContainerBaseDisp = dispinterface;
  IElevatorGroupContainer = interface;
  IElevatorGroupContainerDisp = dispinterface;
  IElevatorContainerBase = interface;
  IElevatorContainerBaseDisp = dispinterface;
  IElevatorContainer = interface;
  IElevatorContainerDisp = dispinterface;
  IElevatorBase = interface;
  IElevatorBaseDisp = dispinterface;
  IElevator = interface;
  IElevatorDisp = dispinterface;
  IElevatorDoorCollection = interface;
  IElevatorDoorCollectionDisp = dispinterface;
  IElevatorDoorContainerBase = interface;
  IElevatorDoorContainerBaseDisp = dispinterface;
  IElevatorDoorContainer = interface;
  IElevatorDoorContainerDisp = dispinterface;
  IElevatorDoorBase = interface;
  IElevatorDoorBaseDisp = dispinterface;
  IElevatorDoor = interface;
  IElevatorDoorDisp = dispinterface;
  ILevelCollection = interface;
  ILevelCollectionDisp = dispinterface;
  IEvaluationBase = interface;
  IEvaluationBaseDisp = dispinterface;
  IEvaluation = interface;
  IEvaluationDisp = dispinterface;
  IObjectNoCollection = interface;
  IObjectNoCollectionDisp = dispinterface;
  IObjectNoContainerBase = interface;
  IObjectNoContainerBaseDisp = dispinterface;
  IObjectNoContainer = interface;
  IObjectNoContainerDisp = dispinterface;
  IObjectNoBase = interface;
  IObjectNoBaseDisp = dispinterface;
  IObjectNo = interface;
  IObjectNoDisp = dispinterface;
  ILaneChangesBase = interface;
  ILaneChangesBaseDisp = dispinterface;
  ILaneChanges = interface;
  ILaneChangesDisp = dispinterface;
  IVehicleRecordBase = interface;
  IVehicleRecordBaseDisp = dispinterface;
  IVehicleRecord = interface;
  IVehicleRecordDisp = dispinterface;
  IPedestrianRecordBase = interface;
  IPedestrianRecordBaseDisp = dispinterface;
  IPedestrianRecord = interface;
  IPedestrianRecordDisp = dispinterface;
  IEvaluationPercentileCollection = interface;
  IEvaluationPercentileCollectionDisp = dispinterface;
  IEvaluationPercentileContainerBase = interface;
  IEvaluationPercentileContainerBaseDisp = dispinterface;
  IEvaluationPercentileContainer = interface;
  IEvaluationPercentileContainerDisp = dispinterface;
  IEvaluationPercentileBase = interface;
  IEvaluationPercentileBaseDisp = dispinterface;
  IEvaluationPercentile = interface;
  IEvaluationPercentileDisp = dispinterface;
  IFireEventCollection = interface;
  IFireEventCollectionDisp = dispinterface;
  IFireEventContainerBase = interface;
  IFireEventContainerBaseDisp = dispinterface;
  IFireEventContainer = interface;
  IFireEventContainerDisp = dispinterface;
  IFireEventBase = interface;
  IFireEventBaseDisp = dispinterface;
  IFireEvent = interface;
  IFireEventDisp = dispinterface;
  IPlot3DQuantityCollection = interface;
  IPlot3DQuantityCollectionDisp = dispinterface;
  IPlot3DQuantityContainerBase = interface;
  IPlot3DQuantityContainerBaseDisp = dispinterface;
  IPlot3DQuantityContainer = interface;
  IPlot3DQuantityContainerDisp = dispinterface;
  IPlot3DQuantityBase = interface;
  IPlot3DQuantityBaseDisp = dispinterface;
  IPlot3DQuantity = interface;
  IPlot3DQuantityDisp = dispinterface;
  IFDSMeshCollection = interface;
  IFDSMeshCollectionDisp = dispinterface;
  IFDSMeshContainerBase = interface;
  IFDSMeshContainerBaseDisp = dispinterface;
  IFDSMeshContainer = interface;
  IFDSMeshContainerDisp = dispinterface;
  IFlowBundleCollection = interface;
  IFlowBundleCollectionDisp = dispinterface;
  IFlowBundleContainerBase = interface;
  IFlowBundleContainerBaseDisp = dispinterface;
  IFlowBundleContainer = interface;
  IFlowBundleContainerDisp = dispinterface;
  IFlowBundleBase = interface;
  IFlowBundleBaseDisp = dispinterface;
  IFlowBundle = interface;
  IFlowBundleDisp = dispinterface;
  IFlowBundleLinkCrossSectionCollection = interface;
  IFlowBundleLinkCrossSectionCollectionDisp = dispinterface;
  IFlowBundleLinkCrossSectionContainerBase = interface;
  IFlowBundleLinkCrossSectionContainerBaseDisp = dispinterface;
  IFlowBundleLinkCrossSectionContainer = interface;
  IFlowBundleLinkCrossSectionContainerDisp = dispinterface;
  IFlowBundleLinkCrossSectionBase = interface;
  IFlowBundleLinkCrossSectionBaseDisp = dispinterface;
  IFlowBundleLinkCrossSection = interface;
  IFlowBundleLinkCrossSectionDisp = dispinterface;
  IFreeDistributionCollection = interface;
  IFreeDistributionCollectionDisp = dispinterface;
  IFreeDistributionContainerBase = interface;
  IFreeDistributionContainerBaseDisp = dispinterface;
  IFreeDistributionContainer = interface;
  IFreeDistributionContainerDisp = dispinterface;
  IInformationSign3DCollection = interface;
  IInformationSign3DCollectionDisp = dispinterface;
  IInformationSign3DContainerBase = interface;
  IInformationSign3DContainerBaseDisp = dispinterface;
  IInformationSign3DContainer = interface;
  IInformationSign3DContainerDisp = dispinterface;
  IInformationSign3DBase = interface;
  IInformationSign3DBaseDisp = dispinterface;
  IInformationSign3D = interface;
  IInformationSign3DDisp = dispinterface;
  IInformationSign3DContentRowCollection = interface;
  IInformationSign3DContentRowCollectionDisp = dispinterface;
  IInformationSign3DContentRowContainerBase = interface;
  IInformationSign3DContentRowContainerBaseDisp = dispinterface;
  IInformationSign3DContentRowContainer = interface;
  IInformationSign3DContentRowContainerDisp = dispinterface;
  IInformationSign3DContentRowBase = interface;
  IInformationSign3DContentRowBaseDisp = dispinterface;
  IInformationSign3DContentRow = interface;
  IInformationSign3DContentRowDisp = dispinterface;
  ILatDriftSpeedFuncCollection = interface;
  ILatDriftSpeedFuncCollectionDisp = dispinterface;
  ILatDriftSpeedFuncContainerBase = interface;
  ILatDriftSpeedFuncContainerBaseDisp = dispinterface;
  ILatDriftSpeedFuncContainer = interface;
  ILatDriftSpeedFuncContainerDisp = dispinterface;
  ILevelContainerBase = interface;
  ILevelContainerBaseDisp = dispinterface;
  ILevelContainer = interface;
  ILevelContainerDisp = dispinterface;
  ILinkBehaviorTypeCollection = interface;
  ILinkBehaviorTypeCollectionDisp = dispinterface;
  ILinkBehaviorTypeContainerBase = interface;
  ILinkBehaviorTypeContainerBaseDisp = dispinterface;
  ILinkBehaviorTypeContainer = interface;
  ILinkBehaviorTypeContainerDisp = dispinterface;
  ILinkContainerBase = interface;
  ILinkContainerBaseDisp = dispinterface;
  ILinkContainer = interface;
  ILinkContainerDisp = dispinterface;
  ILocationDistributionCollection = interface;
  ILocationDistributionCollectionDisp = dispinterface;
  ILocationDistributionContainerBase = interface;
  ILocationDistributionContainerBaseDisp = dispinterface;
  ILocationDistributionContainer = interface;
  ILocationDistributionContainerDisp = dispinterface;
  IManagedLanesFacilityCollection = interface;
  IManagedLanesFacilityCollectionDisp = dispinterface;
  IManagedLanesFacilityContainerBase = interface;
  IManagedLanesFacilityContainerBaseDisp = dispinterface;
  IManagedLanesFacilityContainer = interface;
  IManagedLanesFacilityContainerDisp = dispinterface;
  IManagedLanesFacilityBase = interface;
  IManagedLanesFacilityBaseDisp = dispinterface;
  IManagedLanesFacility = interface;
  IManagedLanesFacilityDisp = dispinterface;
  IVehClassDecisionModelCollection = interface;
  IVehClassDecisionModelCollectionDisp = dispinterface;
  IVehClassDecisionModelContainerBase = interface;
  IVehClassDecisionModelContainerBaseDisp = dispinterface;
  IVehClassDecisionModelContainer = interface;
  IVehClassDecisionModelContainerDisp = dispinterface;
  ITimeIntervalPricingModelCollection = interface;
  ITimeIntervalPricingModelCollectionDisp = dispinterface;
  ITimeIntervalPricingModelContainerBase = interface;
  ITimeIntervalPricingModelContainerBaseDisp = dispinterface;
  ITimeIntervalPricingModelContainer = interface;
  ITimeIntervalPricingModelContainerDisp = dispinterface;
  IMatrixCollection = interface;
  IMatrixCollectionDisp = dispinterface;
  IMatrixContainerBase = interface;
  IMatrixContainerBaseDisp = dispinterface;
  IMatrixContainer = interface;
  IMatrixContainerDisp = dispinterface;
  IMaxAccelerationFunctionCollection = interface;
  IMaxAccelerationFunctionCollectionDisp = dispinterface;
  IMaxAccelerationFunctionContainerBase = interface;
  IMaxAccelerationFunctionContainerBaseDisp = dispinterface;
  IMaxAccelerationFunctionContainer = interface;
  IMaxAccelerationFunctionContainerDisp = dispinterface;
  IMaxDecelerationFunctionCollection = interface;
  IMaxDecelerationFunctionCollectionDisp = dispinterface;
  IMaxDecelerationFunctionContainerBase = interface;
  IMaxDecelerationFunctionContainerBaseDisp = dispinterface;
  IMaxDecelerationFunctionContainer = interface;
  IMaxDecelerationFunctionContainerDisp = dispinterface;
  IMesoEdgeContainerBase = interface;
  IMesoEdgeContainerBaseDisp = dispinterface;
  IMesoEdgeContainer = interface;
  IMesoEdgeContainerDisp = dispinterface;
  IMesoEdgeBase = interface;
  IMesoEdgeBaseDisp = dispinterface;
  IMesoEdge = interface;
  IMesoEdgeDisp = dispinterface;
  IMesoLaneCollection = interface;
  IMesoLaneCollectionDisp = dispinterface;
  IMesoLaneContainerBase = interface;
  IMesoLaneContainerBaseDisp = dispinterface;
  IMesoLaneContainer = interface;
  IMesoLaneContainerDisp = dispinterface;
  IMesoLaneBase = interface;
  IMesoLaneBaseDisp = dispinterface;
  IMesoLane = interface;
  IMesoLaneDisp = dispinterface;
  IMesoNodeCollection = interface;
  IMesoNodeCollectionDisp = dispinterface;
  IMesoNodeContainerBase = interface;
  IMesoNodeContainerBaseDisp = dispinterface;
  IMesoNodeContainer = interface;
  IMesoNodeContainerDisp = dispinterface;
  IModel2D3DDistributionCollection = interface;
  IModel2D3DDistributionCollectionDisp = dispinterface;
  IModel2D3DDistributionContainerBase = interface;
  IModel2D3DDistributionContainerBaseDisp = dispinterface;
  IModel2D3DDistributionContainer = interface;
  IModel2D3DDistributionContainerDisp = dispinterface;
  IModel2D3DCollection = interface;
  IModel2D3DCollectionDisp = dispinterface;
  IModel2D3DContainerBase = interface;
  IModel2D3DContainerBaseDisp = dispinterface;
  IModel2D3DContainer = interface;
  IModel2D3DContainerDisp = dispinterface;
  INetParaBase = interface;
  INetParaBaseDisp = dispinterface;
  INetPara = interface;
  INetParaDisp = dispinterface;
  IPedestrianTypeBase = interface;
  IPedestrianTypeBaseDisp = dispinterface;
  IPedestrianType = interface;
  IPedestrianTypeDisp = dispinterface;
  INodeContainerBase = interface;
  INodeContainerBaseDisp = dispinterface;
  INodeContainer = interface;
  INodeContainerDisp = dispinterface;
  IObstacleCollection = interface;
  IObstacleCollectionDisp = dispinterface;
  IObstacleContainerBase = interface;
  IObstacleContainerBaseDisp = dispinterface;
  IObstacleContainer = interface;
  IObstacleContainerDisp = dispinterface;
  IObstacleBase = interface;
  IObstacleBaseDisp = dispinterface;
  IObstacle = interface;
  IObstacleDisp = dispinterface;
  IOccupancyDistributionCollection = interface;
  IOccupancyDistributionCollectionDisp = dispinterface;
  IOccupancyDistributionContainerBase = interface;
  IOccupancyDistributionContainerBaseDisp = dispinterface;
  IOccupancyDistributionContainer = interface;
  IOccupancyDistributionContainerDisp = dispinterface;
  IPTLineContainerBase = interface;
  IPTLineContainerBaseDisp = dispinterface;
  IPTLineContainer = interface;
  IPTLineContainerDisp = dispinterface;
  IPTLineBase = interface;
  IPTLineBaseDisp = dispinterface;
  IPTLine = interface;
  IPTLineDisp = dispinterface;
  IDepartureTimeCollection = interface;
  IDepartureTimeCollectionDisp = dispinterface;
  IDepartureTimeContainerBase = interface;
  IDepartureTimeContainerBaseDisp = dispinterface;
  IDepartureTimeContainer = interface;
  IDepartureTimeContainerDisp = dispinterface;
  IDepartureTimeBase = interface;
  IDepartureTimeBaseDisp = dispinterface;
  IDepartureTime = interface;
  IDepartureTimeDisp = dispinterface;
  IPTLineStopContainerBase = interface;
  IPTLineStopContainerBaseDisp = dispinterface;
  IPTLineStopContainer = interface;
  IPTLineStopContainerDisp = dispinterface;
  IPTStopContainerBase = interface;
  IPTStopContainerBaseDisp = dispinterface;
  IPTStopContainer = interface;
  IPTStopContainerDisp = dispinterface;
  IParkingLotContainerBase = interface;
  IParkingLotContainerBaseDisp = dispinterface;
  IParkingLotContainer = interface;
  IParkingLotContainerDisp = dispinterface;
  IPathContainerBase = interface;
  IPathContainerBaseDisp = dispinterface;
  IPathContainer = interface;
  IPathContainerDisp = dispinterface;
  IPathBase = interface;
  IPathBaseDisp = dispinterface;
  IPath = interface;
  IPathDisp = dispinterface;
  IVehicleBase = interface;
  IVehicleBaseDisp = dispinterface;
  IVehicle = interface;
  IVehicleDisp = dispinterface;
  IVehVehClassSpeedMisestFactCollection = interface;
  IVehVehClassSpeedMisestFactCollectionDisp = dispinterface;
  IVehVehClassSpeedMisestFactContainerBase = interface;
  IVehVehClassSpeedMisestFactContainerBaseDisp = dispinterface;
  IVehVehClassSpeedMisestFactContainer = interface;
  IVehVehClassSpeedMisestFactContainerDisp = dispinterface;
  IVehicleRouteStaticBase = interface;
  IVehicleRouteStaticBaseDisp = dispinterface;
  IVehicleRouteStatic = interface;
  IVehicleRouteStaticDisp = dispinterface;
  IVehicleRoutingDecisionStaticBase = interface;
  IVehicleRoutingDecisionStaticBaseDisp = dispinterface;
  IVehicleRoutingDecisionStatic = interface;
  IVehicleRoutingDecisionStaticDisp = dispinterface;
  IVehicleRouteStaticContainerBase = interface;
  IVehicleRouteStaticContainerBaseDisp = dispinterface;
  IVehicleRouteStaticContainer = interface;
  IVehicleRouteStaticContainerDisp = dispinterface;
  IVehicleRoutePartialBase = interface;
  IVehicleRoutePartialBaseDisp = dispinterface;
  IVehicleRoutePartial = interface;
  IVehicleRoutePartialDisp = dispinterface;
  IVehicleRoutingDecisionPartialBase = interface;
  IVehicleRoutingDecisionPartialBaseDisp = dispinterface;
  IVehicleRoutingDecisionPartial = interface;
  IVehicleRoutingDecisionPartialDisp = dispinterface;
  IVehicleRoutePartialContainerBase = interface;
  IVehicleRoutePartialContainerBaseDisp = dispinterface;
  IVehicleRoutePartialContainer = interface;
  IVehicleRoutePartialContainerDisp = dispinterface;
  IVehicleRouteManagedLanesBase = interface;
  IVehicleRouteManagedLanesBaseDisp = dispinterface;
  IVehicleRouteManagedLanes = interface;
  IVehicleRouteManagedLanesDisp = dispinterface;
  IVehicleRoutingDecisionManagedLanesBase = interface;
  IVehicleRoutingDecisionManagedLanesBaseDisp = dispinterface;
  IVehicleRoutingDecisionManagedLanes = interface;
  IVehicleRoutingDecisionManagedLanesDisp = dispinterface;
  IVehicleRouteManagedLanesContainerBase = interface;
  IVehicleRouteManagedLanesContainerBaseDisp = dispinterface;
  IVehicleRouteManagedLanesContainer = interface;
  IVehicleRouteManagedLanesContainerDisp = dispinterface;
  IVehicleRouteParkingBase = interface;
  IVehicleRouteParkingBaseDisp = dispinterface;
  IVehicleRouteParking = interface;
  IVehicleRouteParkingDisp = dispinterface;
  IVehicleRoutingDecisionParkingBase = interface;
  IVehicleRoutingDecisionParkingBaseDisp = dispinterface;
  IVehicleRoutingDecisionParking = interface;
  IVehicleRoutingDecisionParkingDisp = dispinterface;
  IVehicleRouteParkingContainerBase = interface;
  IVehicleRouteParkingContainerBaseDisp = dispinterface;
  IVehicleRouteParkingContainer = interface;
  IVehicleRouteParkingContainerDisp = dispinterface;
  ITimeIntervalParkingRateCollection = interface;
  ITimeIntervalParkingRateCollectionDisp = dispinterface;
  ITimeIntervalParkingRateContainerBase = interface;
  ITimeIntervalParkingRateContainerBaseDisp = dispinterface;
  ITimeIntervalParkingRateContainer = interface;
  ITimeIntervalParkingRateContainerDisp = dispinterface;
  IVehicleRoutePartialPTBase = interface;
  IVehicleRoutePartialPTBaseDisp = dispinterface;
  IVehicleRoutePartialPT = interface;
  IVehicleRoutePartialPTDisp = dispinterface;
  IPartialPTLineStopContainerBase = interface;
  IPartialPTLineStopContainerBaseDisp = dispinterface;
  IPartialPTLineStopContainer = interface;
  IPartialPTLineStopContainerDisp = dispinterface;
  IVehicleRoutingDecisionPartialPTBase = interface;
  IVehicleRoutingDecisionPartialPTBaseDisp = dispinterface;
  IVehicleRoutingDecisionPartialPT = interface;
  IVehicleRoutingDecisionPartialPTDisp = dispinterface;
  IVehicleRoutePartialPTContainerBase = interface;
  IVehicleRoutePartialPTContainerBaseDisp = dispinterface;
  IVehicleRoutePartialPTContainer = interface;
  IVehicleRoutePartialPTContainerDisp = dispinterface;
  IPavementMarkingCollection = interface;
  IPavementMarkingCollectionDisp = dispinterface;
  IPavementMarkingContainerBase = interface;
  IPavementMarkingContainerBaseDisp = dispinterface;
  IPavementMarkingContainer = interface;
  IPavementMarkingContainerDisp = dispinterface;
  IPavementMarkingBase = interface;
  IPavementMarkingBaseDisp = dispinterface;
  IPavementMarking = interface;
  IPavementMarkingDisp = dispinterface;
  IPedestrianAttributeDecisionCollection = interface;
  IPedestrianAttributeDecisionCollectionDisp = dispinterface;
  IPedestrianAttributeDecisionContainerBase = interface;
  IPedestrianAttributeDecisionContainerBaseDisp = dispinterface;
  IPedestrianAttributeDecisionContainer = interface;
  IPedestrianAttributeDecisionContainerDisp = dispinterface;
  IPedestrianAttributeDecisionBase = interface;
  IPedestrianAttributeDecisionBaseDisp = dispinterface;
  IPedestrianAttributeDecision = interface;
  IPedestrianAttributeDecisionDisp = dispinterface;
  IRampBase = interface;
  IRampBaseDisp = dispinterface;
  IRamp = interface;
  IRampDisp = dispinterface;
  IPedestrianClassContainerBase = interface;
  IPedestrianClassContainerBaseDisp = dispinterface;
  IPedestrianClassContainer = interface;
  IPedestrianClassContainerDisp = dispinterface;
  IPedestrianCompositionCollection = interface;
  IPedestrianCompositionCollectionDisp = dispinterface;
  IPedestrianCompositionContainerBase = interface;
  IPedestrianCompositionContainerBaseDisp = dispinterface;
  IPedestrianCompositionContainer = interface;
  IPedestrianCompositionContainerDisp = dispinterface;
  IPedestrianCompositionBase = interface;
  IPedestrianCompositionBaseDisp = dispinterface;
  IPedestrianComposition = interface;
  IPedestrianCompositionDisp = dispinterface;
  IPedestrianCompositionRelativeFlowCollection = interface;
  IPedestrianCompositionRelativeFlowCollectionDisp = dispinterface;
  IPedestrianCompositionRelativeFlowContainerBase = interface;
  IPedestrianCompositionRelativeFlowContainerBaseDisp = dispinterface;
  IPedestrianCompositionRelativeFlowContainer = interface;
  IPedestrianCompositionRelativeFlowContainerDisp = dispinterface;
  IPedestrianCompositionRelativeFlowBase = interface;
  IPedestrianCompositionRelativeFlowBaseDisp = dispinterface;
  IPedestrianCompositionRelativeFlow = interface;
  IPedestrianCompositionRelativeFlowDisp = dispinterface;
  IPedestrianInputContainerBase = interface;
  IPedestrianInputContainerBaseDisp = dispinterface;
  IPedestrianInputContainer = interface;
  IPedestrianInputContainerDisp = dispinterface;
  IPedestrianInputBase = interface;
  IPedestrianInputBaseDisp = dispinterface;
  IPedestrianInput = interface;
  IPedestrianInputDisp = dispinterface;
  ITimeIntervalPedVolumeCollection = interface;
  ITimeIntervalPedVolumeCollectionDisp = dispinterface;
  ITimeIntervalPedVolumeContainerBase = interface;
  ITimeIntervalPedVolumeContainerBaseDisp = dispinterface;
  ITimeIntervalPedVolumeContainer = interface;
  ITimeIntervalPedVolumeContainerDisp = dispinterface;
  IPedestrianNetworkPerformanceMeasurementBase = interface;
  IPedestrianNetworkPerformanceMeasurementBaseDisp = dispinterface;
  IPedestrianNetworkPerformanceMeasurement = interface;
  IPedestrianNetworkPerformanceMeasurementDisp = dispinterface;
  IPedestrianRoutingDecisionPartialContainerBase = interface;
  IPedestrianRoutingDecisionPartialContainerBaseDisp = dispinterface;
  IPedestrianRoutingDecisionPartialContainer = interface;
  IPedestrianRoutingDecisionPartialContainerDisp = dispinterface;
  IPedestrianRoutingDecisionPartialBase = interface;
  IPedestrianRoutingDecisionPartialBaseDisp = dispinterface;
  IPedestrianRoutingDecisionPartial = interface;
  IPedestrianRoutingDecisionPartialDisp = dispinterface;
  IPedestrianRoutePartialContainerBase = interface;
  IPedestrianRoutePartialContainerBaseDisp = dispinterface;
  IPedestrianRoutePartialContainer = interface;
  IPedestrianRoutePartialContainerDisp = dispinterface;
  IPedestrianRoutePartialBase = interface;
  IPedestrianRoutePartialBaseDisp = dispinterface;
  IPedestrianRoutePartial = interface;
  IPedestrianRoutePartialDisp = dispinterface;
  IPedestrianRouteChoiceAreaCollection = interface;
  IPedestrianRouteChoiceAreaCollectionDisp = dispinterface;
  IPedestrianRouteChoiceAreaContainerBase = interface;
  IPedestrianRouteChoiceAreaContainerBaseDisp = dispinterface;
  IPedestrianRouteChoiceAreaContainer = interface;
  IPedestrianRouteChoiceAreaContainerDisp = dispinterface;
  IPedestrianRouteLocationContainerBase = interface;
  IPedestrianRouteLocationContainerBaseDisp = dispinterface;
  IPedestrianRouteLocationContainer = interface;
  IPedestrianRouteLocationContainerDisp = dispinterface;
  IPedestrianRouteLocationBase = interface;
  IPedestrianRouteLocationBaseDisp = dispinterface;
  IPedestrianRouteLocation = interface;
  IPedestrianRouteLocationDisp = dispinterface;
  IPedestrianRouteStaticBase = interface;
  IPedestrianRouteStaticBaseDisp = dispinterface;
  IPedestrianRouteStatic = interface;
  IPedestrianRouteStaticDisp = dispinterface;
  IPedestrianRoutingDecisionStaticBase = interface;
  IPedestrianRoutingDecisionStaticBaseDisp = dispinterface;
  IPedestrianRoutingDecisionStatic = interface;
  IPedestrianRoutingDecisionStaticDisp = dispinterface;
  IPedestrianRouteStaticContainerBase = interface;
  IPedestrianRouteStaticContainerBaseDisp = dispinterface;
  IPedestrianRouteStaticContainer = interface;
  IPedestrianRouteStaticContainerDisp = dispinterface;
  IPedestrianRoutingDecisionStaticContainerBase = interface;
  IPedestrianRoutingDecisionStaticContainerBaseDisp = dispinterface;
  IPedestrianRoutingDecisionStaticContainer = interface;
  IPedestrianRoutingDecisionStaticContainerDisp = dispinterface;
  IPedestrianTravelTimeMeasurementCollection = interface;
  IPedestrianTravelTimeMeasurementCollectionDisp = dispinterface;
  IPedestrianTravelTimeMeasurementContainerBase = interface;
  IPedestrianTravelTimeMeasurementContainerBaseDisp = dispinterface;
  IPedestrianTravelTimeMeasurementContainer = interface;
  IPedestrianTravelTimeMeasurementContainerDisp = dispinterface;
  IPedestrianTravelTimeMeasurementBase = interface;
  IPedestrianTravelTimeMeasurementBaseDisp = dispinterface;
  IPedestrianTravelTimeMeasurement = interface;
  IPedestrianTravelTimeMeasurementDisp = dispinterface;
  IPedestrianTypeContainerBase = interface;
  IPedestrianTypeContainerBaseDisp = dispinterface;
  IPedestrianTypeContainer = interface;
  IPedestrianTypeContainerDisp = dispinterface;
  IPedestrianContainerBase = interface;
  IPedestrianContainerBaseDisp = dispinterface;
  IPedestrianContainer = interface;
  IPedestrianContainerDisp = dispinterface;
  IPedestrianBase = interface;
  IPedestrianBaseDisp = dispinterface;
  IPedestrian = interface;
  IPedestrianDisp = dispinterface;
  IPowerDistributionCollection = interface;
  IPowerDistributionCollectionDisp = dispinterface;
  IPowerDistributionContainerBase = interface;
  IPowerDistributionContainerBaseDisp = dispinterface;
  IPowerDistributionContainer = interface;
  IPowerDistributionContainerDisp = dispinterface;
  IPriorityRuleContainerBase = interface;
  IPriorityRuleContainerBaseDisp = dispinterface;
  IPriorityRuleContainer = interface;
  IPriorityRuleContainerDisp = dispinterface;
  IPriorityRuleBase = interface;
  IPriorityRuleBaseDisp = dispinterface;
  IPriorityRule = interface;
  IPriorityRuleDisp = dispinterface;
  IConflictMarkerContainerBase = interface;
  IConflictMarkerContainerBaseDisp = dispinterface;
  IConflictMarkerContainer = interface;
  IConflictMarkerContainerDisp = dispinterface;
  IConflictMarkerBase = interface;
  IConflictMarkerBaseDisp = dispinterface;
  IConflictMarker = interface;
  IConflictMarkerDisp = dispinterface;
  IQueueCounterContainerBase = interface;
  IQueueCounterContainerBaseDisp = dispinterface;
  IQueueCounterContainer = interface;
  IQueueCounterContainerDisp = dispinterface;
  IQueueCounterBase = interface;
  IQueueCounterBaseDisp = dispinterface;
  IQueueCounter = interface;
  IQueueCounterDisp = dispinterface;
  IRampCollection = interface;
  IRampCollectionDisp = dispinterface;
  IRampContainerBase = interface;
  IRampContainerBaseDisp = dispinterface;
  IRampContainer = interface;
  IRampContainerDisp = dispinterface;
  IReducedSpeedAreaContainerBase = interface;
  IReducedSpeedAreaContainerBaseDisp = dispinterface;
  IReducedSpeedAreaContainer = interface;
  IReducedSpeedAreaContainerDisp = dispinterface;
  IReducedSpeedAreaBase = interface;
  IReducedSpeedAreaBaseDisp = dispinterface;
  IReducedSpeedArea = interface;
  IReducedSpeedAreaDisp = dispinterface;
  IVehClassSpeedReductionCollection = interface;
  IVehClassSpeedReductionCollectionDisp = dispinterface;
  IVehClassSpeedReductionContainerBase = interface;
  IVehClassSpeedReductionContainerBaseDisp = dispinterface;
  IVehClassSpeedReductionContainer = interface;
  IVehClassSpeedReductionContainerDisp = dispinterface;
  IVehClassSpeedReductionBase = interface;
  IVehClassSpeedReductionBaseDisp = dispinterface;
  IVehClassSpeedReduction = interface;
  IVehClassSpeedReductionDisp = dispinterface;
  ISCCommunicationCollection = interface;
  ISCCommunicationCollectionDisp = dispinterface;
  ISCCommunicationContainerBase = interface;
  ISCCommunicationContainerBaseDisp = dispinterface;
  ISCCommunicationContainer = interface;
  ISCCommunicationContainerDisp = dispinterface;
  ISCCommunicationBase = interface;
  ISCCommunicationBaseDisp = dispinterface;
  ISCCommunication = interface;
  ISCCommunicationDisp = dispinterface;
  IScriptCollection = interface;
  IScriptCollectionDisp = dispinterface;
  IScriptContainerBase = interface;
  IScriptContainerBaseDisp = dispinterface;
  IScriptContainer = interface;
  IScriptContainerDisp = dispinterface;
  IScriptBase = interface;
  IScriptBaseDisp = dispinterface;
  IScript = interface;
  IScriptDisp = dispinterface;
  ISectionContainerBase = interface;
  ISectionContainerBaseDisp = dispinterface;
  ISectionContainer = interface;
  ISectionContainerDisp = dispinterface;
  ISectionBase = interface;
  ISectionBaseDisp = dispinterface;
  ISection = interface;
  ISectionDisp = dispinterface;
  ISignalControllerCollection = interface;
  ISignalControllerCollectionDisp = dispinterface;
  ISignalControllerContainerBase = interface;
  ISignalControllerContainerBaseDisp = dispinterface;
  ISignalControllerContainer = interface;
  ISignalControllerContainerDisp = dispinterface;
  ISignalHeadContainerBase = interface;
  ISignalHeadContainerBaseDisp = dispinterface;
  ISignalHeadContainer = interface;
  ISignalHeadContainerDisp = dispinterface;
  ISignalHeadBase = interface;
  ISignalHeadBaseDisp = dispinterface;
  ISignalHead = interface;
  ISignalHeadDisp = dispinterface;
  ITrafficSignal3DCollection = interface;
  ITrafficSignal3DCollectionDisp = dispinterface;
  ITrafficSignal3DContainerBase = interface;
  ITrafficSignal3DContainerBaseDisp = dispinterface;
  ITrafficSignal3DContainer = interface;
  ITrafficSignal3DContainerDisp = dispinterface;
  ITrafficSignal3DBase = interface;
  ITrafficSignal3DBaseDisp = dispinterface;
  ITrafficSignal3D = interface;
  ITrafficSignal3DDisp = dispinterface;
  ISignalArm3DCollection = interface;
  ISignalArm3DCollectionDisp = dispinterface;
  ISignalArm3DContainerBase = interface;
  ISignalArm3DContainerBaseDisp = dispinterface;
  ISignalArm3DContainer = interface;
  ISignalArm3DContainerDisp = dispinterface;
  ISignalArm3DBase = interface;
  ISignalArm3DBaseDisp = dispinterface;
  ISignalArm3D = interface;
  ISignalArm3DDisp = dispinterface;
  ISignalHead3DCollection = interface;
  ISignalHead3DCollectionDisp = dispinterface;
  ISignalHead3DContainerBase = interface;
  ISignalHead3DContainerBaseDisp = dispinterface;
  ISignalHead3DContainer = interface;
  ISignalHead3DContainerDisp = dispinterface;
  ISignalHead3DBase = interface;
  ISignalHead3DBaseDisp = dispinterface;
  ISignalHead3D = interface;
  ISignalHead3DDisp = dispinterface;
  ITrafficSign3DCollection = interface;
  ITrafficSign3DCollectionDisp = dispinterface;
  ITrafficSign3DContainerBase = interface;
  ITrafficSign3DContainerBaseDisp = dispinterface;
  ITrafficSign3DContainer = interface;
  ITrafficSign3DContainerDisp = dispinterface;
  ITrafficSign3DBase = interface;
  ITrafficSign3DBaseDisp = dispinterface;
  ITrafficSign3D = interface;
  ITrafficSign3DDisp = dispinterface;
  IStreetlight3DCollection = interface;
  IStreetlight3DCollectionDisp = dispinterface;
  IStreetlight3DContainerBase = interface;
  IStreetlight3DContainerBaseDisp = dispinterface;
  IStreetlight3DContainer = interface;
  IStreetlight3DContainerDisp = dispinterface;
  IStreetlight3DBase = interface;
  IStreetlight3DBaseDisp = dispinterface;
  IStreetlight3D = interface;
  IStreetlight3DDisp = dispinterface;
  ISimulationBase = interface;
  ISimulationBaseDisp = dispinterface;
  ISimulation = interface;
  ISimulationDisp = dispinterface;
  ISimulationRunCollection = interface;
  ISimulationRunCollectionDisp = dispinterface;
  ISimulationRunContainerBase = interface;
  ISimulationRunContainerBaseDisp = dispinterface;
  ISimulationRunContainer = interface;
  ISimulationRunContainerDisp = dispinterface;
  ISimulationRunBase = interface;
  ISimulationRunBaseDisp = dispinterface;
  ISimulationRun = interface;
  ISimulationRunDisp = dispinterface;
  IStatic3DModelCollection = interface;
  IStatic3DModelCollectionDisp = dispinterface;
  IStatic3DModelContainerBase = interface;
  IStatic3DModelContainerBaseDisp = dispinterface;
  IStatic3DModelContainer = interface;
  IStatic3DModelContainerDisp = dispinterface;
  IStatic3DModelBase = interface;
  IStatic3DModelBaseDisp = dispinterface;
  IStatic3DModel = interface;
  IStatic3DModelDisp = dispinterface;
  IStopSignContainerBase = interface;
  IStopSignContainerBaseDisp = dispinterface;
  IStopSignContainer = interface;
  IStopSignContainerDisp = dispinterface;
  IStopSignBase = interface;
  IStopSignBaseDisp = dispinterface;
  IStopSign = interface;
  IStopSignDisp = dispinterface;
  IVehClassDwellTimeDistributionCollection = interface;
  IVehClassDwellTimeDistributionCollectionDisp = dispinterface;
  IVehClassDwellTimeDistributionContainerBase = interface;
  IVehClassDwellTimeDistributionContainerBaseDisp = dispinterface;
  IVehClassDwellTimeDistributionContainer = interface;
  IVehClassDwellTimeDistributionContainerDisp = dispinterface;
  IVehClassDwellTimeDistributionBase = interface;
  IVehClassDwellTimeDistributionBaseDisp = dispinterface;
  IVehClassDwellTimeDistribution = interface;
  IVehClassDwellTimeDistributionDisp = dispinterface;
  IStoryboardCollection = interface;
  IStoryboardCollectionDisp = dispinterface;
  IStoryboardContainerBase = interface;
  IStoryboardContainerBaseDisp = dispinterface;
  IStoryboardContainer = interface;
  IStoryboardContainerDisp = dispinterface;
  IStoryboardBase = interface;
  IStoryboardBaseDisp = dispinterface;
  IStoryboard = interface;
  IStoryboardDisp = dispinterface;
  IKeyframeCollection = interface;
  IKeyframeCollectionDisp = dispinterface;
  IKeyframeContainerBase = interface;
  IKeyframeContainerBaseDisp = dispinterface;
  IKeyframeContainer = interface;
  IKeyframeContainerDisp = dispinterface;
  IKeyframeBase = interface;
  IKeyframeBaseDisp = dispinterface;
  IKeyframe = interface;
  IKeyframeDisp = dispinterface;
  ITimeDistributionCollection = interface;
  ITimeDistributionCollectionDisp = dispinterface;
  ITimeDistributionContainerBase = interface;
  ITimeDistributionContainerBaseDisp = dispinterface;
  ITimeDistributionContainer = interface;
  ITimeDistributionContainerDisp = dispinterface;
  ITimeIntervalSetCollection = interface;
  ITimeIntervalSetCollectionDisp = dispinterface;
  ITimeIntervalSetContainerBase = interface;
  ITimeIntervalSetContainerBaseDisp = dispinterface;
  ITimeIntervalSetContainer = interface;
  ITimeIntervalSetContainerDisp = dispinterface;
  ITollPricingCalculationModelCollection = interface;
  ITollPricingCalculationModelCollectionDisp = dispinterface;
  ITollPricingCalculationModelContainerBase = interface;
  ITollPricingCalculationModelContainerBaseDisp = dispinterface;
  ITollPricingCalculationModelContainer = interface;
  ITollPricingCalculationModelContainerDisp = dispinterface;
  ITollPricingCalculationModelBase = interface;
  ITollPricingCalculationModelBaseDisp = dispinterface;
  ITollPricingCalculationModel = interface;
  ITollPricingCalculationModelDisp = dispinterface;
  ITollPricingCalculationModelElementCollection = interface;
  ITollPricingCalculationModelElementCollectionDisp = dispinterface;
  ITollPricingCalculationModelElementContainerBase = interface;
  ITollPricingCalculationModelElementContainerBaseDisp = dispinterface;
  ITollPricingCalculationModelElementContainer = interface;
  ITollPricingCalculationModelElementContainerDisp = dispinterface;
  IUserDefinedAttributeCollection = interface;
  IUserDefinedAttributeCollectionDisp = dispinterface;
  IUserDefinedAttributeContainerBase = interface;
  IUserDefinedAttributeContainerBaseDisp = dispinterface;
  IUserDefinedAttributeContainer = interface;
  IUserDefinedAttributeContainerDisp = dispinterface;
  IUserDefinedAttributeBase = interface;
  IUserDefinedAttributeBaseDisp = dispinterface;
  IUserDefinedAttribute = interface;
  IUserDefinedAttributeDisp = dispinterface;
  IVehicleAttributeDecisionCollection = interface;
  IVehicleAttributeDecisionCollectionDisp = dispinterface;
  IVehicleAttributeDecisionContainerBase = interface;
  IVehicleAttributeDecisionContainerBaseDisp = dispinterface;
  IVehicleAttributeDecisionContainer = interface;
  IVehicleAttributeDecisionContainerDisp = dispinterface;
  IVehicleAttributeDecisionBase = interface;
  IVehicleAttributeDecisionBaseDisp = dispinterface;
  IVehicleAttributeDecision = interface;
  IVehicleAttributeDecisionDisp = dispinterface;
  IVehicleClassContainerBase = interface;
  IVehicleClassContainerBaseDisp = dispinterface;
  IVehicleClassContainer = interface;
  IVehicleClassContainerDisp = dispinterface;
  IVehicleCompositionCollection = interface;
  IVehicleCompositionCollectionDisp = dispinterface;
  IVehicleCompositionContainerBase = interface;
  IVehicleCompositionContainerBaseDisp = dispinterface;
  IVehicleCompositionContainer = interface;
  IVehicleCompositionContainerDisp = dispinterface;
  IVehicleInputContainerBase = interface;
  IVehicleInputContainerBaseDisp = dispinterface;
  IVehicleInputContainer = interface;
  IVehicleInputContainerDisp = dispinterface;
  IVehicleInputBase = interface;
  IVehicleInputBaseDisp = dispinterface;
  IVehicleInput = interface;
  IVehicleInputDisp = dispinterface;
  ITimeIntervalVehVolumeCollection = interface;
  ITimeIntervalVehVolumeCollectionDisp = dispinterface;
  ITimeIntervalVehVolumeContainerBase = interface;
  ITimeIntervalVehVolumeContainerBaseDisp = dispinterface;
  ITimeIntervalVehVolumeContainer = interface;
  ITimeIntervalVehVolumeContainerDisp = dispinterface;
  IVehicleNetworkPerformanceMeasurementBase = interface;
  IVehicleNetworkPerformanceMeasurementBaseDisp = dispinterface;
  IVehicleNetworkPerformanceMeasurement = interface;
  IVehicleNetworkPerformanceMeasurementDisp = dispinterface;
  IVehicleRoutingDecisionClosureCollection = interface;
  IVehicleRoutingDecisionClosureCollectionDisp = dispinterface;
  IVehicleRoutingDecisionClosureContainerBase = interface;
  IVehicleRoutingDecisionClosureContainerBaseDisp = dispinterface;
  IVehicleRoutingDecisionClosureContainer = interface;
  IVehicleRoutingDecisionClosureContainerDisp = dispinterface;
  IVehicleRoutingDecisionClosureBase = interface;
  IVehicleRoutingDecisionClosureBaseDisp = dispinterface;
  IVehicleRoutingDecisionClosure = interface;
  IVehicleRoutingDecisionClosureDisp = dispinterface;
  IVehicleRouteClosureContainerBase = interface;
  IVehicleRouteClosureContainerBaseDisp = dispinterface;
  IVehicleRouteClosureContainer = interface;
  IVehicleRouteClosureContainerDisp = dispinterface;
  IVehicleRouteClosureBase = interface;
  IVehicleRouteClosureBaseDisp = dispinterface;
  IVehicleRouteClosure = interface;
  IVehicleRouteClosureDisp = dispinterface;
  IVehicleRoutingDecisionDynamicContainerBase = interface;
  IVehicleRoutingDecisionDynamicContainerBaseDisp = dispinterface;
  IVehicleRoutingDecisionDynamicContainer = interface;
  IVehicleRoutingDecisionDynamicContainerDisp = dispinterface;
  IVehicleRoutingDecisionManagedLanesContainerBase = interface;
  IVehicleRoutingDecisionManagedLanesContainerBaseDisp = dispinterface;
  IVehicleRoutingDecisionManagedLanesContainer = interface;
  IVehicleRoutingDecisionManagedLanesContainerDisp = dispinterface;
  IVehicleRoutingDecisionParkingContainerBase = interface;
  IVehicleRoutingDecisionParkingContainerBaseDisp = dispinterface;
  IVehicleRoutingDecisionParkingContainer = interface;
  IVehicleRoutingDecisionParkingContainerDisp = dispinterface;
  IVehicleRoutingDecisionPartialContainerBase = interface;
  IVehicleRoutingDecisionPartialContainerBaseDisp = dispinterface;
  IVehicleRoutingDecisionPartialContainer = interface;
  IVehicleRoutingDecisionPartialContainerDisp = dispinterface;
  IVehicleRoutingDecisionPartialPTContainerBase = interface;
  IVehicleRoutingDecisionPartialPTContainerBaseDisp = dispinterface;
  IVehicleRoutingDecisionPartialPTContainer = interface;
  IVehicleRoutingDecisionPartialPTContainerDisp = dispinterface;
  IVehicleRoutingDecisionStaticContainerBase = interface;
  IVehicleRoutingDecisionStaticContainerBaseDisp = dispinterface;
  IVehicleRoutingDecisionStaticContainer = interface;
  IVehicleRoutingDecisionStaticContainerDisp = dispinterface;
  IVehicleTravelTimeMeasurementContainerBase = interface;
  IVehicleTravelTimeMeasurementContainerBaseDisp = dispinterface;
  IVehicleTravelTimeMeasurementContainer = interface;
  IVehicleTravelTimeMeasurementContainerDisp = dispinterface;
  IVehicleTravelTimeMeasurementBase = interface;
  IVehicleTravelTimeMeasurementBaseDisp = dispinterface;
  IVehicleTravelTimeMeasurement = interface;
  IVehicleTravelTimeMeasurementDisp = dispinterface;
  IVehicleTypeContainerBase = interface;
  IVehicleTypeContainerBaseDisp = dispinterface;
  IVehicleTypeContainer = interface;
  IVehicleTypeContainerDisp = dispinterface;
  IVehicleContainerBase = interface;
  IVehicleContainerBaseDisp = dispinterface;
  IVehicleContainer = interface;
  IVehicleContainerDisp = dispinterface;
  IWTTFileContainerBase = interface;
  IWTTFileContainerBaseDisp = dispinterface;
  IWTTFileContainer = interface;
  IWTTFileContainerDisp = dispinterface;
  IWTTFileBase = interface;
  IWTTFileBaseDisp = dispinterface;
  IWTTFile = interface;
  IWTTFileDisp = dispinterface;
  IWalkingBehaviorCollection = interface;
  IWalkingBehaviorCollectionDisp = dispinterface;
  IWalkingBehaviorContainerBase = interface;
  IWalkingBehaviorContainerBaseDisp = dispinterface;
  IWalkingBehaviorContainer = interface;
  IWalkingBehaviorContainerDisp = dispinterface;
  IWeightDistributionCollection = interface;
  IWeightDistributionCollectionDisp = dispinterface;
  IWeightDistributionContainerBase = interface;
  IWeightDistributionContainerBaseDisp = dispinterface;
  IWeightDistributionContainer = interface;
  IWeightDistributionContainerDisp = dispinterface;
  IZoneCollection = interface;
  IZoneCollectionDisp = dispinterface;
  IZoneContainerBase = interface;
  IZoneContainerBaseDisp = dispinterface;
  IZoneContainer = interface;
  IZoneContainerDisp = dispinterface;
  IGraphics = interface;
  IGraphicsDisp = dispinterface;
  INetworkWindow = interface;
  INetworkWindowDisp = dispinterface;
  IScenarioManagementBase = interface;
  IScenarioManagementBaseDisp = dispinterface;
  IScenarioManagement = interface;
  IScenarioManagementDisp = dispinterface;
  IPresentation = interface;
  IPresentationDisp = dispinterface;
  ILicenseInfo = interface;
  ILicenseInfoDisp = dispinterface;
  IOptima = interface;
  IOptimaDisp = dispinterface;
  IAttribute = interface;
  IAttributeDisp = dispinterface;
  IAccelerationFunctionDataPointBase = interface;
  IAccelerationFunctionDataPointBaseDisp = dispinterface;
  IAccelerationFunctionDataPoint = interface;
  IAccelerationFunctionDataPointDisp = dispinterface;
  IAlternativePathSearchBase = interface;
  IAlternativePathSearchBaseDisp = dispinterface;
  IAlternativePathSearch = interface;
  IAlternativePathSearchDisp = dispinterface;
  IAlternativePathSearchVehicleRoutingDecisionBase = interface;
  IAlternativePathSearchVehicleRoutingDecisionBaseDisp = dispinterface;
  IAlternativePathSearchVehicleRoutingDecision = interface;
  IAlternativePathSearchVehicleRoutingDecisionDisp = dispinterface;
  IAttributeSelectionBase = interface;
  IAttributeSelectionBaseDisp = dispinterface;
  IAttributeSelection = interface;
  IAttributeSelectionDisp = dispinterface;
  IBoardDelFuncDataPtBase = interface;
  IBoardDelFuncDataPtBaseDisp = dispinterface;
  IBoardDelFuncDataPt = interface;
  IBoardDelFuncDataPtDisp = dispinterface;
  ICritSpeedFuncDataPtBase = interface;
  ICritSpeedFuncDataPtBaseDisp = dispinterface;
  ICritSpeedFuncDataPt = interface;
  ICritSpeedFuncDataPtDisp = dispinterface;
  IDecelerationFunctionDataPointBase = interface;
  IDecelerationFunctionDataPointBaseDisp = dispinterface;
  IDecelerationFunctionDataPoint = interface;
  IDecelerationFunctionDataPointDisp = dispinterface;
  IDistributionDataPointBase = interface;
  IDistributionDataPointBaseDisp = dispinterface;
  IDistributionDataPoint = interface;
  IDistributionDataPointDisp = dispinterface;
  IDoorBase = interface;
  IDoorBaseDisp = dispinterface;
  IDoor = interface;
  IDoorDisp = dispinterface;
  IDrivBehavVehClassSpeedMisestDistrBase = interface;
  IDrivBehavVehClassSpeedMisestDistrBaseDisp = dispinterface;
  IDrivBehavVehClassSpeedMisestDistr = interface;
  IDrivBehavVehClassSpeedMisestDistrDisp = dispinterface;
  IDurationDistributionDataPointBase = interface;
  IDurationDistributionDataPointBaseDisp = dispinterface;
  IDurationDistributionDataPoint = interface;
  IDurationDistributionDataPointDisp = dispinterface;
  IFDSMeshBase = interface;
  IFDSMeshBaseDisp = dispinterface;
  IPlot3DFileTimestepCollection = interface;
  IPlot3DFileTimestepCollectionDisp = dispinterface;
  IPlot3DFileTimestepContainerBase = interface;
  IPlot3DFileTimestepContainerBaseDisp = dispinterface;
  IPlot3DFileTimestepContainer = interface;
  IPlot3DFileTimestepContainerDisp = dispinterface;
  IFDSMesh = interface;
  IFDSMeshDisp = dispinterface;
  ILatDriftSpeedFuncDataPtBase = interface;
  ILatDriftSpeedFuncDataPtBaseDisp = dispinterface;
  ILatDriftSpeedFuncDataPt = interface;
  ILatDriftSpeedFuncDataPtDisp = dispinterface;
  ILegOrientationBase = interface;
  ILegOrientationBaseDisp = dispinterface;
  ILegOrientation = interface;
  ILegOrientationDisp = dispinterface;
  ILinkLnChgDistDistrAttrElementBase = interface;
  ILinkLnChgDistDistrAttrElementBaseDisp = dispinterface;
  ILinkLnChgDistDistrAttrElement = interface;
  ILinkLnChgDistDistrAttrElementDisp = dispinterface;
  ILinkPolyPointBase = interface;
  ILinkPolyPointBaseDisp = dispinterface;
  ILinkPolyPoint = interface;
  ILinkPolyPointDisp = dispinterface;
  ILinkSegmentBase = interface;
  ILinkSegmentBaseDisp = dispinterface;
  ILinkSegment = interface;
  ILinkSegmentDisp = dispinterface;
  IMesoTurnBase = interface;
  IMesoTurnBaseDisp = dispinterface;
  IMesoTurn = interface;
  IMesoTurnDisp = dispinterface;
  IMesoTurnConflictBase = interface;
  IMesoTurnConflictBaseDisp = dispinterface;
  IMesoTurnConflict = interface;
  IMesoTurnConflictDisp = dispinterface;
  IPTLineStopBase = interface;
  IPTLineStopBaseDisp = dispinterface;
  IPTLineStop = interface;
  IPTLineStopDisp = dispinterface;
  IParkingLotSelectionParametersBase = interface;
  IParkingLotSelectionParametersBaseDisp = dispinterface;
  IParkingLotSelectionParameters = interface;
  IParkingLotSelectionParametersDisp = dispinterface;
  IPartialPTLineStopBase = interface;
  IPartialPTLineStopBaseDisp = dispinterface;
  IPartialPTLineStop = interface;
  IPartialPTLineStopDisp = dispinterface;
  IPedClassQueuingBehaviorBase = interface;
  IPedClassQueuingBehaviorBaseDisp = dispinterface;
  IPedClassQueuingBehavior = interface;
  IPedClassQueuingBehaviorDisp = dispinterface;
  IPedestrianRouteChoiceAreaBase = interface;
  IPedestrianRouteChoiceAreaBaseDisp = dispinterface;
  IPedestrianRouteChoiceArea = interface;
  IPedestrianRouteChoiceAreaDisp = dispinterface;
  IPlot3DFileTimestepBase = interface;
  IPlot3DFileTimestepBaseDisp = dispinterface;
  IPlot3DFileTimestep = interface;
  IPlot3DFileTimestepDisp = dispinterface;
  IPointBase = interface;
  IPointBaseDisp = dispinterface;
  IPoint = interface;
  IPointDisp = dispinterface;
  ISpeedDistributionDataPointBase = interface;
  ISpeedDistributionDataPointBaseDisp = dispinterface;
  ISpeedDistributionDataPoint = interface;
  ISpeedDistributionDataPointDisp = dispinterface;
  ITimeIntervalParkingRateBase = interface;
  ITimeIntervalParkingRateBaseDisp = dispinterface;
  ITimeIntervalParkingRate = interface;
  ITimeIntervalParkingRateDisp = dispinterface;
  ITimeIntervalPedVolumeBase = interface;
  ITimeIntervalPedVolumeBaseDisp = dispinterface;
  ITimeIntervalPedVolume = interface;
  ITimeIntervalPedVolumeDisp = dispinterface;
  ITimeIntervalPricingModelBase = interface;
  ITimeIntervalPricingModelBaseDisp = dispinterface;
  ITimeIntervalPricingModel = interface;
  ITimeIntervalPricingModelDisp = dispinterface;
  ITimeIntervalVehVolumeBase = interface;
  ITimeIntervalVehVolumeBaseDisp = dispinterface;
  ITimeIntervalVehVolume = interface;
  ITimeIntervalVehVolumeDisp = dispinterface;
  ITollPricingCalculationModelElementBase = interface;
  ITollPricingCalculationModelElementBaseDisp = dispinterface;
  ITollPricingCalculationModelElement = interface;
  ITollPricingCalculationModelElementDisp = dispinterface;
  IVehClassDecisionModelBase = interface;
  IVehClassDecisionModelBaseDisp = dispinterface;
  IVehClassDecisionModel = interface;
  IVehClassDecisionModelDisp = dispinterface;
  IVehClassDynAssignDesSpeedDistributionBase = interface;
  IVehClassDynAssignDesSpeedDistributionBaseDisp = dispinterface;
  IVehClassDynAssignDesSpeedDistribution = interface;
  IVehClassDynAssignDesSpeedDistributionDisp = dispinterface;
  IVehClassFollowingBehaviorBase = interface;
  IVehClassFollowingBehaviorBaseDisp = dispinterface;
  IVehClassFollowingBehavior = interface;
  IVehClassFollowingBehaviorDisp = dispinterface;
  IVehClassLateralBehaviorBase = interface;
  IVehClassLateralBehaviorBaseDisp = dispinterface;
  IVehClassLateralBehavior = interface;
  IVehClassLateralBehaviorDisp = dispinterface;
  IVehCompositionInitialVolumeBase = interface;
  IVehCompositionInitialVolumeBaseDisp = dispinterface;
  IVehCompositionInitialVolume = interface;
  IVehCompositionInitialVolumeDisp = dispinterface;
  IVehVehClassSpeedMisestFactBase = interface;
  IVehVehClassSpeedMisestFactBaseDisp = dispinterface;
  IVehVehClassSpeedMisestFact = interface;
  IVehVehClassSpeedMisestFactDisp = dispinterface;
  IWTTValueFormatCollection = interface;
  IWTTValueFormatCollectionDisp = dispinterface;
  IWTTValueFormatContainerBase = interface;
  IWTTValueFormatContainerBaseDisp = dispinterface;
  IWTTValueFormatContainer = interface;
  IWTTValueFormatContainerDisp = dispinterface;

// *********************************************************************//
// Declaration of CoClasses defined in Type Library                       
// (NOTE: Here we map each CoClass to its Default Interface)              
// *********************************************************************//
  Vissim = IVissim;


// *********************************************************************//
// Declaration of structures, unions and aliases.                         
// *********************************************************************//

  ImportType = __MIDL___MIDL_itf_Vissim_0000_0000_0001; 
  EdgeType = __MIDL___MIDL_itf_Vissim_0000_0000_0003; 
  VisumExportType = __MIDL___MIDL_itf_Vissim_0000_0000_0002; 

// *********************************************************************//
// Interface: IObjectBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B80B6035-44FD-4E18-806F-03A437223BDD}
// *********************************************************************//
  IObjectBase = interface(IDispatch)
    ['{B80B6035-44FD-4E18-806F-03A437223BDD}']
    procedure Set_AttValue(const Attribut: WideString; pVal: OleVariant); safecall;
    function Get_AttValue(const Attribut: WideString): OleVariant; safecall;
    property AttValue[const Attribut: WideString]: OleVariant read Get_AttValue write Set_AttValue;
  end;

// *********************************************************************//
// DispIntf:  IObjectBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B80B6035-44FD-4E18-806F-03A437223BDD}
// *********************************************************************//
  IObjectBaseDisp = dispinterface
    ['{B80B6035-44FD-4E18-806F-03A437223BDD}']
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVissim
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A25086D9-6B91-468E-9765-828B3D6F2CA5}
// *********************************************************************//
  IVissim = interface(IObjectBase)
    ['{A25086D9-6B91-468E-9765-828B3D6F2CA5}']
    procedure New; safecall;
    procedure LoadNet(const NetPath: WideString; Additive: WordBool); safecall;
    procedure LoadProject(const ProjectPath: WideString); safecall;
    procedure PlaceUnderScenarioManagement(const ProjectName: WideString; 
                                           const Scenario1Name: WideString); safecall;
    procedure SaveNet(nonDefaultOnly: WordBool); safecall;
    procedure SaveNetAs(const NetPath: WideString; nonDefaultOnly: WordBool); safecall;
    procedure LoadLayout(const LayoutPath: WideString); safecall;
    procedure SaveLayout(const LayoutPath: WideString); safecall;
    procedure ImportANM(const NetPath: WideString; const RoutesPath: WideString; 
                        const InputPath: WideString; ImportType: ImportType; importOptions: SYSINT; 
                        evaluationInterval: SYSINT); safecall;
    procedure ImportCoordinateRoutes(const RoutesPath: WideString; CreateCrossSections: WordBool; 
                                     ImportForDynamicAssignment: WordBool; stdDev: Double; 
                                     snapRadius: Double; maxNoCandLinks: SYSINT); safecall;
    procedure BringToFront; safecall;
    procedure Exit; safecall;
    function Get_Net: INet; safecall;
    function Get_Simulation: ISimulation; safecall;
    function Get_Evaluation: IEvaluation; safecall;
    function Get_Graphics: IGraphics; safecall;
    function Get_ScenarioManagement: IScenarioManagement; safecall;
    procedure ImportSynchro(const synchroFile: WideString; const workingDirectory: WideString; 
                            adaptiveImport: WordBool); safecall;
    function Get_Presentation: IPresentation; safecall;
    procedure ExportVisum(const NetPath: WideString; ExportType: VisumExportType); safecall;
    procedure ImportResults(const Path: WideString); safecall;
    procedure VissimTest(TestNo: SYSINT; const Param1: WideString; const Param2: WideString; 
                         const Param3: WideString); safecall;
    procedure SuspendUpdateGUI; safecall;
    procedure ResumeUpdateGUI(enforceRedraw: WordBool); safecall;
    procedure CalculateVisumAssignment; safecall;
    procedure GenerateModelTransferFile(const NetPath: WideString; 
                                        const TransferFilePath: WideString; reverse: WordBool; 
                                        nonDefaultOnly: WordBool); safecall;
    procedure GenerateModelTransferFileBetweenFiles(const BaseNetPath: WideString; 
                                                    const TargetNetPath: WideString; 
                                                    const TransferFilePath: WideString; 
                                                    nonDefaultOnly: WordBool); safecall;
    procedure ApplyModelTransferFile(const TransferFilePath: WideString); safecall;
    procedure SetResultsFolder(const resultsFolder: WideString); safecall;
    function Get_LicenseInfo: ILicenseInfo; safecall;
    procedure Log(priority: MessagePriority; const message: WideString); safecall;
    function Get_Optima: IOptima; safecall;
    procedure ImportOpenDrive(const openDriveFile: WideString); safecall;
    property Net: INet read Get_Net;
    property Simulation: ISimulation read Get_Simulation;
    property Evaluation: IEvaluation read Get_Evaluation;
    property Graphics: IGraphics read Get_Graphics;
    property ScenarioManagement: IScenarioManagement read Get_ScenarioManagement;
    property Presentation: IPresentation read Get_Presentation;
    property LicenseInfo: ILicenseInfo read Get_LicenseInfo;
    property Optima: IOptima read Get_Optima;
  end;

// *********************************************************************//
// DispIntf:  IVissimDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A25086D9-6B91-468E-9765-828B3D6F2CA5}
// *********************************************************************//
  IVissimDisp = dispinterface
    ['{A25086D9-6B91-468E-9765-828B3D6F2CA5}']
    procedure New; dispid 1610809344;
    procedure LoadNet(const NetPath: WideString; Additive: WordBool); dispid 1610809345;
    procedure LoadProject(const ProjectPath: WideString); dispid 1610809346;
    procedure PlaceUnderScenarioManagement(const ProjectName: WideString; 
                                           const Scenario1Name: WideString); dispid 1610809347;
    procedure SaveNet(nonDefaultOnly: WordBool); dispid 1610809348;
    procedure SaveNetAs(const NetPath: WideString; nonDefaultOnly: WordBool); dispid 1610809349;
    procedure LoadLayout(const LayoutPath: WideString); dispid 1610809350;
    procedure SaveLayout(const LayoutPath: WideString); dispid 1610809351;
    procedure ImportANM(const NetPath: WideString; const RoutesPath: WideString; 
                        const InputPath: WideString; ImportType: ImportType; importOptions: SYSINT; 
                        evaluationInterval: SYSINT); dispid 1610809352;
    procedure ImportCoordinateRoutes(const RoutesPath: WideString; CreateCrossSections: WordBool; 
                                     ImportForDynamicAssignment: WordBool; stdDev: Double; 
                                     snapRadius: Double; maxNoCandLinks: SYSINT); dispid 1610809353;
    procedure BringToFront; dispid 1610809354;
    procedure Exit; dispid 1610809355;
    property Net: INet readonly dispid 1610809356;
    property Simulation: ISimulation readonly dispid 1610809357;
    property Evaluation: IEvaluation readonly dispid 1610809358;
    property Graphics: IGraphics readonly dispid 1610809359;
    property ScenarioManagement: IScenarioManagement readonly dispid 1610809360;
    procedure ImportSynchro(const synchroFile: WideString; const workingDirectory: WideString; 
                            adaptiveImport: WordBool); dispid 1610809361;
    property Presentation: IPresentation readonly dispid 1610809362;
    procedure ExportVisum(const NetPath: WideString; ExportType: VisumExportType); dispid 1610809363;
    procedure ImportResults(const Path: WideString); dispid 1610809364;
    procedure VissimTest(TestNo: SYSINT; const Param1: WideString; const Param2: WideString; 
                         const Param3: WideString); dispid 1610809365;
    procedure SuspendUpdateGUI; dispid 1610809366;
    procedure ResumeUpdateGUI(enforceRedraw: WordBool); dispid 1610809367;
    procedure CalculateVisumAssignment; dispid 1610809368;
    procedure GenerateModelTransferFile(const NetPath: WideString; 
                                        const TransferFilePath: WideString; reverse: WordBool; 
                                        nonDefaultOnly: WordBool); dispid 1610809369;
    procedure GenerateModelTransferFileBetweenFiles(const BaseNetPath: WideString; 
                                                    const TargetNetPath: WideString; 
                                                    const TransferFilePath: WideString; 
                                                    nonDefaultOnly: WordBool); dispid 1610809370;
    procedure ApplyModelTransferFile(const TransferFilePath: WideString); dispid 1610809371;
    procedure SetResultsFolder(const resultsFolder: WideString); dispid 1610809372;
    property LicenseInfo: ILicenseInfo readonly dispid 1610809373;
    procedure Log(priority: MessagePriority; const message: WideString); dispid 1610809374;
    property Optima: IOptima readonly dispid 1610809375;
    procedure ImportOpenDrive(const openDriveFile: WideString); dispid 1610809376;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: INetBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5886A652-AFDC-4315-BDDF-F988301FC40F}
// *********************************************************************//
  INetBase = interface(IObjectBase)
    ['{5886A652-AFDC-4315-BDDF-F988301FC40F}']
    function Get_ANIRecordings: IAnimRecContainer; safecall;
    function Get_Aliases: IAliasContainer; safecall;
    function Get_AreaBehaviorTypes: IAreaBehaviorTypeContainer; safecall;
    function Get_AreaMeasurements: IAreaMeasurementContainer; safecall;
    function Get_Areas: IAreaContainer; safecall;
    function Get_BackgroundImages: IBackgroundImageContainer; safecall;
    function Get_BoardDelFuncs: IBoardDelFuncContainer; safecall;
    function Get_BoardDelTypes: IBoardDelTypeContainer; safecall;
    function Get_CameraPositions: ICameraPositionContainer; safecall;
    function Get_ColorDistributions: IColorDistributionContainer; safecall;
    function Get_ConflictAreas: IConflictAreaContainer; safecall;
    function Get_CritSpeedFuncs: ICritSpeedFuncContainer; safecall;
    function Get_DataCollectionMeasurements: IDataCollectionMeasurementContainer; safecall;
    function Get_DataCollectionPoints: IDataCollectionPointContainer; safecall;
    function Get_DelayMeasurements: IDelayMeasurementContainer; safecall;
    function Get_DesAccelerationFunctions: IDesAccelerationFunctionContainer; safecall;
    function Get_DesDecelerationFunctions: IDesDecelerationFunctionContainer; safecall;
    function Get_DesSpeedDecisions: IDesSpeedDecisionContainer; safecall;
    function Get_DesSpeedDistributions: IDesSpeedDistributionContainer; safecall;
    function Get_Detectors: IDetectorContainer; safecall;
    function Get_DisplayTypes: IDisplayTypeContainer; safecall;
    function Get_DistanceDistributions: IDistanceDistributionContainer; safecall;
    function Get_DrivingBehaviors: IDrivingBehaviorContainer; safecall;
    function Get_DynamicAssignment: IDynamicAssignment; safecall;
    function Get_EdgeInitialTraffics: IEdgeInitialTrafficContainer; safecall;
    function Get_Edges: IEdgeContainer; safecall;
    function Get_ElevatorGroups: IElevatorGroupContainer; safecall;
    function Get_Elevators: IElevatorContainer; safecall;
    function Get_Evaluation: IEvaluation; safecall;
    function Get_FireEvents: IFireEventContainer; safecall;
    function Get_FlowBundles: IFlowBundleContainer; safecall;
    function Get_FreeDistributions: IFreeDistributionContainer; safecall;
    function Get_InformationSigns3D: IInformationSign3DContainer; safecall;
    function Get_LatDriftSpeedFuncs: ILatDriftSpeedFuncContainer; safecall;
    function Get_Levels: ILevelContainer; safecall;
    function Get_LinkBehaviorTypes: ILinkBehaviorTypeContainer; safecall;
    function Get_Links: ILinkContainer; safecall;
    function Get_LocationDistributions: ILocationDistributionContainer; safecall;
    function Get_ManagedLanesFacilities: IManagedLanesFacilityContainer; safecall;
    function Get_Matrices: IMatrixContainer; safecall;
    function Get_MaxAccelerationFunctions: IMaxAccelerationFunctionContainer; safecall;
    function Get_MaxDecelerationFunctions: IMaxDecelerationFunctionContainer; safecall;
    function Get_MesoSimEdges: IMesoEdgeContainer; safecall;
    function Get_MesoSimLanes: IMesoLaneContainer; safecall;
    function Get_MesoSimNodes: IMesoNodeContainer; safecall;
    function Get_Model2D3DDistributions: IModel2D3DDistributionContainer; safecall;
    function Get_Models2D3D: IModel2D3DContainer; safecall;
    function Get_NetPara: INetPara; safecall;
    function Get_Nodes: INodeContainer; safecall;
    function Get_Obstacles: IObstacleContainer; safecall;
    function Get_OccupancyDistributions: IOccupancyDistributionContainer; safecall;
    function Get_PTLines: IPTLineContainer; safecall;
    function Get_PTStops: IPTStopContainer; safecall;
    function Get_ParkingLots: IParkingLotContainer; safecall;
    function Get_Paths: IPathContainer; safecall;
    function Get_PavementMarkings: IPavementMarkingContainer; safecall;
    function Get_PedestrianAttributeDecisions: IPedestrianAttributeDecisionContainer; safecall;
    function Get_PedestrianClasses: IPedestrianClassContainer; safecall;
    function Get_PedestrianCompositions: IPedestrianCompositionContainer; safecall;
    function Get_PedestrianInputs: IPedestrianInputContainer; safecall;
    function Get_PedestrianNetworkPerformanceMeasurement: IPedestrianNetworkPerformanceMeasurement; safecall;
    function Get_PedestrianRoutingDecisionsPartial: IPedestrianRoutingDecisionPartialContainer; safecall;
    function Get_PedestrianRoutingDecisionsStatic: IPedestrianRoutingDecisionStaticContainer; safecall;
    function Get_PedestrianTravelTimeMeasurements: IPedestrianTravelTimeMeasurementContainer; safecall;
    function Get_PedestrianTypes: IPedestrianTypeContainer; safecall;
    function Get_Pedestrians: IPedestrianContainer; safecall;
    function Get_PowerDistributions: IPowerDistributionContainer; safecall;
    function Get_PriorityRules: IPriorityRuleContainer; safecall;
    function Get_QueueCounters: IQueueCounterContainer; safecall;
    function Get_Ramps: IRampContainer; safecall;
    function Get_ReducedSpeedAreas: IReducedSpeedAreaContainer; safecall;
    function Get_SCCommunications: ISCCommunicationContainer; safecall;
    function Get_Scripts: IScriptContainer; safecall;
    function Get_Sections: ISectionContainer; safecall;
    function Get_SignalControllers: ISignalControllerContainer; safecall;
    function Get_SignalHeads: ISignalHeadContainer; safecall;
    function Get_Signals3D: ITrafficSignal3DContainer; safecall;
    function Get_Simulation: ISimulation; safecall;
    function Get_SimulationRuns: ISimulationRunContainer; safecall;
    function Get_Static3DModels: IStatic3DModelContainer; safecall;
    function Get_StopSigns: IStopSignContainer; safecall;
    function Get_Storyboards: IStoryboardContainer; safecall;
    function Get_TimeDistributions: ITimeDistributionContainer; safecall;
    function Get_TimeIntervalSets: ITimeIntervalSetContainer; safecall;
    function Get_TollPricingCalculationModels: ITollPricingCalculationModelContainer; safecall;
    function Get_UserDefinedAttributes: IUserDefinedAttributeContainer; safecall;
    function Get_VehicleAttributeDecisions: IVehicleAttributeDecisionContainer; safecall;
    function Get_VehicleClasses: IVehicleClassContainer; safecall;
    function Get_VehicleCompositions: IVehicleCompositionContainer; safecall;
    function Get_VehicleInputs: IVehicleInputContainer; safecall;
    function Get_VehicleNetworkPerformanceMeasurement: IVehicleNetworkPerformanceMeasurement; safecall;
    function Get_VehicleRoutingDecisionsClosure: IVehicleRoutingDecisionClosureContainer; safecall;
    function Get_VehicleRoutingDecisionsDynamic: IVehicleRoutingDecisionDynamicContainer; safecall;
    function Get_VehicleRoutingDecisionsManagedLanes: IVehicleRoutingDecisionManagedLanesContainer; safecall;
    function Get_VehicleRoutingDecisionsParking: IVehicleRoutingDecisionParkingContainer; safecall;
    function Get_VehicleRoutingDecisionsPartial: IVehicleRoutingDecisionPartialContainer; safecall;
    function Get_VehicleRoutingDecisionsPartialPT: IVehicleRoutingDecisionPartialPTContainer; safecall;
    function Get_VehicleRoutingDecisionsStatic: IVehicleRoutingDecisionStaticContainer; safecall;
    function Get_VehicleTravelTimeMeasurements: IVehicleTravelTimeMeasurementContainer; safecall;
    function Get_VehicleTypes: IVehicleTypeContainer; safecall;
    function Get_Vehicles: IVehicleContainer; safecall;
    function Get_WTTFiles: IWTTFileContainer; safecall;
    function Get_WalkingBehaviors: IWalkingBehaviorContainer; safecall;
    function Get_WeightDistributions: IWeightDistributionContainer; safecall;
    function Get_Zones: IZoneContainer; safecall;
    property ANIRecordings: IAnimRecContainer read Get_ANIRecordings;
    property Aliases: IAliasContainer read Get_Aliases;
    property AreaBehaviorTypes: IAreaBehaviorTypeContainer read Get_AreaBehaviorTypes;
    property AreaMeasurements: IAreaMeasurementContainer read Get_AreaMeasurements;
    property Areas: IAreaContainer read Get_Areas;
    property BackgroundImages: IBackgroundImageContainer read Get_BackgroundImages;
    property BoardDelFuncs: IBoardDelFuncContainer read Get_BoardDelFuncs;
    property BoardDelTypes: IBoardDelTypeContainer read Get_BoardDelTypes;
    property CameraPositions: ICameraPositionContainer read Get_CameraPositions;
    property ColorDistributions: IColorDistributionContainer read Get_ColorDistributions;
    property ConflictAreas: IConflictAreaContainer read Get_ConflictAreas;
    property CritSpeedFuncs: ICritSpeedFuncContainer read Get_CritSpeedFuncs;
    property DataCollectionMeasurements: IDataCollectionMeasurementContainer read Get_DataCollectionMeasurements;
    property DataCollectionPoints: IDataCollectionPointContainer read Get_DataCollectionPoints;
    property DelayMeasurements: IDelayMeasurementContainer read Get_DelayMeasurements;
    property DesAccelerationFunctions: IDesAccelerationFunctionContainer read Get_DesAccelerationFunctions;
    property DesDecelerationFunctions: IDesDecelerationFunctionContainer read Get_DesDecelerationFunctions;
    property DesSpeedDecisions: IDesSpeedDecisionContainer read Get_DesSpeedDecisions;
    property DesSpeedDistributions: IDesSpeedDistributionContainer read Get_DesSpeedDistributions;
    property Detectors: IDetectorContainer read Get_Detectors;
    property DisplayTypes: IDisplayTypeContainer read Get_DisplayTypes;
    property DistanceDistributions: IDistanceDistributionContainer read Get_DistanceDistributions;
    property DrivingBehaviors: IDrivingBehaviorContainer read Get_DrivingBehaviors;
    property DynamicAssignment: IDynamicAssignment read Get_DynamicAssignment;
    property EdgeInitialTraffics: IEdgeInitialTrafficContainer read Get_EdgeInitialTraffics;
    property Edges: IEdgeContainer read Get_Edges;
    property ElevatorGroups: IElevatorGroupContainer read Get_ElevatorGroups;
    property Elevators: IElevatorContainer read Get_Elevators;
    property Evaluation: IEvaluation read Get_Evaluation;
    property FireEvents: IFireEventContainer read Get_FireEvents;
    property FlowBundles: IFlowBundleContainer read Get_FlowBundles;
    property FreeDistributions: IFreeDistributionContainer read Get_FreeDistributions;
    property InformationSigns3D: IInformationSign3DContainer read Get_InformationSigns3D;
    property LatDriftSpeedFuncs: ILatDriftSpeedFuncContainer read Get_LatDriftSpeedFuncs;
    property Levels: ILevelContainer read Get_Levels;
    property LinkBehaviorTypes: ILinkBehaviorTypeContainer read Get_LinkBehaviorTypes;
    property Links: ILinkContainer read Get_Links;
    property LocationDistributions: ILocationDistributionContainer read Get_LocationDistributions;
    property ManagedLanesFacilities: IManagedLanesFacilityContainer read Get_ManagedLanesFacilities;
    property Matrices: IMatrixContainer read Get_Matrices;
    property MaxAccelerationFunctions: IMaxAccelerationFunctionContainer read Get_MaxAccelerationFunctions;
    property MaxDecelerationFunctions: IMaxDecelerationFunctionContainer read Get_MaxDecelerationFunctions;
    property MesoSimEdges: IMesoEdgeContainer read Get_MesoSimEdges;
    property MesoSimLanes: IMesoLaneContainer read Get_MesoSimLanes;
    property MesoSimNodes: IMesoNodeContainer read Get_MesoSimNodes;
    property Model2D3DDistributions: IModel2D3DDistributionContainer read Get_Model2D3DDistributions;
    property Models2D3D: IModel2D3DContainer read Get_Models2D3D;
    property NetPara: INetPara read Get_NetPara;
    property Nodes: INodeContainer read Get_Nodes;
    property Obstacles: IObstacleContainer read Get_Obstacles;
    property OccupancyDistributions: IOccupancyDistributionContainer read Get_OccupancyDistributions;
    property PTLines: IPTLineContainer read Get_PTLines;
    property PTStops: IPTStopContainer read Get_PTStops;
    property ParkingLots: IParkingLotContainer read Get_ParkingLots;
    property Paths: IPathContainer read Get_Paths;
    property PavementMarkings: IPavementMarkingContainer read Get_PavementMarkings;
    property PedestrianAttributeDecisions: IPedestrianAttributeDecisionContainer read Get_PedestrianAttributeDecisions;
    property PedestrianClasses: IPedestrianClassContainer read Get_PedestrianClasses;
    property PedestrianCompositions: IPedestrianCompositionContainer read Get_PedestrianCompositions;
    property PedestrianInputs: IPedestrianInputContainer read Get_PedestrianInputs;
    property PedestrianNetworkPerformanceMeasurement: IPedestrianNetworkPerformanceMeasurement read Get_PedestrianNetworkPerformanceMeasurement;
    property PedestrianRoutingDecisionsPartial: IPedestrianRoutingDecisionPartialContainer read Get_PedestrianRoutingDecisionsPartial;
    property PedestrianRoutingDecisionsStatic: IPedestrianRoutingDecisionStaticContainer read Get_PedestrianRoutingDecisionsStatic;
    property PedestrianTravelTimeMeasurements: IPedestrianTravelTimeMeasurementContainer read Get_PedestrianTravelTimeMeasurements;
    property PedestrianTypes: IPedestrianTypeContainer read Get_PedestrianTypes;
    property Pedestrians: IPedestrianContainer read Get_Pedestrians;
    property PowerDistributions: IPowerDistributionContainer read Get_PowerDistributions;
    property PriorityRules: IPriorityRuleContainer read Get_PriorityRules;
    property QueueCounters: IQueueCounterContainer read Get_QueueCounters;
    property Ramps: IRampContainer read Get_Ramps;
    property ReducedSpeedAreas: IReducedSpeedAreaContainer read Get_ReducedSpeedAreas;
    property SCCommunications: ISCCommunicationContainer read Get_SCCommunications;
    property Scripts: IScriptContainer read Get_Scripts;
    property Sections: ISectionContainer read Get_Sections;
    property SignalControllers: ISignalControllerContainer read Get_SignalControllers;
    property SignalHeads: ISignalHeadContainer read Get_SignalHeads;
    property Signals3D: ITrafficSignal3DContainer read Get_Signals3D;
    property Simulation: ISimulation read Get_Simulation;
    property SimulationRuns: ISimulationRunContainer read Get_SimulationRuns;
    property Static3DModels: IStatic3DModelContainer read Get_Static3DModels;
    property StopSigns: IStopSignContainer read Get_StopSigns;
    property Storyboards: IStoryboardContainer read Get_Storyboards;
    property TimeDistributions: ITimeDistributionContainer read Get_TimeDistributions;
    property TimeIntervalSets: ITimeIntervalSetContainer read Get_TimeIntervalSets;
    property TollPricingCalculationModels: ITollPricingCalculationModelContainer read Get_TollPricingCalculationModels;
    property UserDefinedAttributes: IUserDefinedAttributeContainer read Get_UserDefinedAttributes;
    property VehicleAttributeDecisions: IVehicleAttributeDecisionContainer read Get_VehicleAttributeDecisions;
    property VehicleClasses: IVehicleClassContainer read Get_VehicleClasses;
    property VehicleCompositions: IVehicleCompositionContainer read Get_VehicleCompositions;
    property VehicleInputs: IVehicleInputContainer read Get_VehicleInputs;
    property VehicleNetworkPerformanceMeasurement: IVehicleNetworkPerformanceMeasurement read Get_VehicleNetworkPerformanceMeasurement;
    property VehicleRoutingDecisionsClosure: IVehicleRoutingDecisionClosureContainer read Get_VehicleRoutingDecisionsClosure;
    property VehicleRoutingDecisionsDynamic: IVehicleRoutingDecisionDynamicContainer read Get_VehicleRoutingDecisionsDynamic;
    property VehicleRoutingDecisionsManagedLanes: IVehicleRoutingDecisionManagedLanesContainer read Get_VehicleRoutingDecisionsManagedLanes;
    property VehicleRoutingDecisionsParking: IVehicleRoutingDecisionParkingContainer read Get_VehicleRoutingDecisionsParking;
    property VehicleRoutingDecisionsPartial: IVehicleRoutingDecisionPartialContainer read Get_VehicleRoutingDecisionsPartial;
    property VehicleRoutingDecisionsPartialPT: IVehicleRoutingDecisionPartialPTContainer read Get_VehicleRoutingDecisionsPartialPT;
    property VehicleRoutingDecisionsStatic: IVehicleRoutingDecisionStaticContainer read Get_VehicleRoutingDecisionsStatic;
    property VehicleTravelTimeMeasurements: IVehicleTravelTimeMeasurementContainer read Get_VehicleTravelTimeMeasurements;
    property VehicleTypes: IVehicleTypeContainer read Get_VehicleTypes;
    property Vehicles: IVehicleContainer read Get_Vehicles;
    property WTTFiles: IWTTFileContainer read Get_WTTFiles;
    property WalkingBehaviors: IWalkingBehaviorContainer read Get_WalkingBehaviors;
    property WeightDistributions: IWeightDistributionContainer read Get_WeightDistributions;
    property Zones: IZoneContainer read Get_Zones;
  end;

// *********************************************************************//
// DispIntf:  INetBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5886A652-AFDC-4315-BDDF-F988301FC40F}
// *********************************************************************//
  INetBaseDisp = dispinterface
    ['{5886A652-AFDC-4315-BDDF-F988301FC40F}']
    property ANIRecordings: IAnimRecContainer readonly dispid 1610809344;
    property Aliases: IAliasContainer readonly dispid 1610809345;
    property AreaBehaviorTypes: IAreaBehaviorTypeContainer readonly dispid 1610809346;
    property AreaMeasurements: IAreaMeasurementContainer readonly dispid 1610809347;
    property Areas: IAreaContainer readonly dispid 1610809348;
    property BackgroundImages: IBackgroundImageContainer readonly dispid 1610809349;
    property BoardDelFuncs: IBoardDelFuncContainer readonly dispid 1610809350;
    property BoardDelTypes: IBoardDelTypeContainer readonly dispid 1610809351;
    property CameraPositions: ICameraPositionContainer readonly dispid 1610809352;
    property ColorDistributions: IColorDistributionContainer readonly dispid 1610809353;
    property ConflictAreas: IConflictAreaContainer readonly dispid 1610809354;
    property CritSpeedFuncs: ICritSpeedFuncContainer readonly dispid 1610809355;
    property DataCollectionMeasurements: IDataCollectionMeasurementContainer readonly dispid 1610809356;
    property DataCollectionPoints: IDataCollectionPointContainer readonly dispid 1610809357;
    property DelayMeasurements: IDelayMeasurementContainer readonly dispid 1610809358;
    property DesAccelerationFunctions: IDesAccelerationFunctionContainer readonly dispid 1610809359;
    property DesDecelerationFunctions: IDesDecelerationFunctionContainer readonly dispid 1610809360;
    property DesSpeedDecisions: IDesSpeedDecisionContainer readonly dispid 1610809361;
    property DesSpeedDistributions: IDesSpeedDistributionContainer readonly dispid 1610809362;
    property Detectors: IDetectorContainer readonly dispid 1610809363;
    property DisplayTypes: IDisplayTypeContainer readonly dispid 1610809364;
    property DistanceDistributions: IDistanceDistributionContainer readonly dispid 1610809365;
    property DrivingBehaviors: IDrivingBehaviorContainer readonly dispid 1610809366;
    property DynamicAssignment: IDynamicAssignment readonly dispid 1610809367;
    property EdgeInitialTraffics: IEdgeInitialTrafficContainer readonly dispid 1610809368;
    property Edges: IEdgeContainer readonly dispid 1610809369;
    property ElevatorGroups: IElevatorGroupContainer readonly dispid 1610809370;
    property Elevators: IElevatorContainer readonly dispid 1610809371;
    property Evaluation: IEvaluation readonly dispid 1610809372;
    property FireEvents: IFireEventContainer readonly dispid 1610809373;
    property FlowBundles: IFlowBundleContainer readonly dispid 1610809374;
    property FreeDistributions: IFreeDistributionContainer readonly dispid 1610809375;
    property InformationSigns3D: IInformationSign3DContainer readonly dispid 1610809376;
    property LatDriftSpeedFuncs: ILatDriftSpeedFuncContainer readonly dispid 1610809377;
    property Levels: ILevelContainer readonly dispid 1610809378;
    property LinkBehaviorTypes: ILinkBehaviorTypeContainer readonly dispid 1610809379;
    property Links: ILinkContainer readonly dispid 1610809380;
    property LocationDistributions: ILocationDistributionContainer readonly dispid 1610809381;
    property ManagedLanesFacilities: IManagedLanesFacilityContainer readonly dispid 1610809382;
    property Matrices: IMatrixContainer readonly dispid 1610809383;
    property MaxAccelerationFunctions: IMaxAccelerationFunctionContainer readonly dispid 1610809384;
    property MaxDecelerationFunctions: IMaxDecelerationFunctionContainer readonly dispid 1610809385;
    property MesoSimEdges: IMesoEdgeContainer readonly dispid 1610809386;
    property MesoSimLanes: IMesoLaneContainer readonly dispid 1610809387;
    property MesoSimNodes: IMesoNodeContainer readonly dispid 1610809388;
    property Model2D3DDistributions: IModel2D3DDistributionContainer readonly dispid 1610809389;
    property Models2D3D: IModel2D3DContainer readonly dispid 1610809390;
    property NetPara: INetPara readonly dispid 1610809391;
    property Nodes: INodeContainer readonly dispid 1610809392;
    property Obstacles: IObstacleContainer readonly dispid 1610809393;
    property OccupancyDistributions: IOccupancyDistributionContainer readonly dispid 1610809394;
    property PTLines: IPTLineContainer readonly dispid 1610809395;
    property PTStops: IPTStopContainer readonly dispid 1610809396;
    property ParkingLots: IParkingLotContainer readonly dispid 1610809397;
    property Paths: IPathContainer readonly dispid 1610809398;
    property PavementMarkings: IPavementMarkingContainer readonly dispid 1610809399;
    property PedestrianAttributeDecisions: IPedestrianAttributeDecisionContainer readonly dispid 1610809400;
    property PedestrianClasses: IPedestrianClassContainer readonly dispid 1610809401;
    property PedestrianCompositions: IPedestrianCompositionContainer readonly dispid 1610809402;
    property PedestrianInputs: IPedestrianInputContainer readonly dispid 1610809403;
    property PedestrianNetworkPerformanceMeasurement: IPedestrianNetworkPerformanceMeasurement readonly dispid 1610809404;
    property PedestrianRoutingDecisionsPartial: IPedestrianRoutingDecisionPartialContainer readonly dispid 1610809405;
    property PedestrianRoutingDecisionsStatic: IPedestrianRoutingDecisionStaticContainer readonly dispid 1610809406;
    property PedestrianTravelTimeMeasurements: IPedestrianTravelTimeMeasurementContainer readonly dispid 1610809407;
    property PedestrianTypes: IPedestrianTypeContainer readonly dispid 1610809408;
    property Pedestrians: IPedestrianContainer readonly dispid 1610809409;
    property PowerDistributions: IPowerDistributionContainer readonly dispid 1610809410;
    property PriorityRules: IPriorityRuleContainer readonly dispid 1610809411;
    property QueueCounters: IQueueCounterContainer readonly dispid 1610809412;
    property Ramps: IRampContainer readonly dispid 1610809413;
    property ReducedSpeedAreas: IReducedSpeedAreaContainer readonly dispid 1610809414;
    property SCCommunications: ISCCommunicationContainer readonly dispid 1610809415;
    property Scripts: IScriptContainer readonly dispid 1610809416;
    property Sections: ISectionContainer readonly dispid 1610809417;
    property SignalControllers: ISignalControllerContainer readonly dispid 1610809418;
    property SignalHeads: ISignalHeadContainer readonly dispid 1610809419;
    property Signals3D: ITrafficSignal3DContainer readonly dispid 1610809420;
    property Simulation: ISimulation readonly dispid 1610809421;
    property SimulationRuns: ISimulationRunContainer readonly dispid 1610809422;
    property Static3DModels: IStatic3DModelContainer readonly dispid 1610809423;
    property StopSigns: IStopSignContainer readonly dispid 1610809424;
    property Storyboards: IStoryboardContainer readonly dispid 1610809425;
    property TimeDistributions: ITimeDistributionContainer readonly dispid 1610809426;
    property TimeIntervalSets: ITimeIntervalSetContainer readonly dispid 1610809427;
    property TollPricingCalculationModels: ITollPricingCalculationModelContainer readonly dispid 1610809428;
    property UserDefinedAttributes: IUserDefinedAttributeContainer readonly dispid 1610809429;
    property VehicleAttributeDecisions: IVehicleAttributeDecisionContainer readonly dispid 1610809430;
    property VehicleClasses: IVehicleClassContainer readonly dispid 1610809431;
    property VehicleCompositions: IVehicleCompositionContainer readonly dispid 1610809432;
    property VehicleInputs: IVehicleInputContainer readonly dispid 1610809433;
    property VehicleNetworkPerformanceMeasurement: IVehicleNetworkPerformanceMeasurement readonly dispid 1610809434;
    property VehicleRoutingDecisionsClosure: IVehicleRoutingDecisionClosureContainer readonly dispid 1610809435;
    property VehicleRoutingDecisionsDynamic: IVehicleRoutingDecisionDynamicContainer readonly dispid 1610809436;
    property VehicleRoutingDecisionsManagedLanes: IVehicleRoutingDecisionManagedLanesContainer readonly dispid 1610809437;
    property VehicleRoutingDecisionsParking: IVehicleRoutingDecisionParkingContainer readonly dispid 1610809438;
    property VehicleRoutingDecisionsPartial: IVehicleRoutingDecisionPartialContainer readonly dispid 1610809439;
    property VehicleRoutingDecisionsPartialPT: IVehicleRoutingDecisionPartialPTContainer readonly dispid 1610809440;
    property VehicleRoutingDecisionsStatic: IVehicleRoutingDecisionStaticContainer readonly dispid 1610809441;
    property VehicleTravelTimeMeasurements: IVehicleTravelTimeMeasurementContainer readonly dispid 1610809442;
    property VehicleTypes: IVehicleTypeContainer readonly dispid 1610809443;
    property Vehicles: IVehicleContainer readonly dispid 1610809444;
    property WTTFiles: IWTTFileContainer readonly dispid 1610809445;
    property WalkingBehaviors: IWalkingBehaviorContainer readonly dispid 1610809446;
    property WeightDistributions: IWeightDistributionContainer readonly dispid 1610809447;
    property Zones: IZoneContainer readonly dispid 1610809448;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: INet
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C21E180F-853F-43F5-99A3-389F2527EA89}
// *********************************************************************//
  INet = interface(INetBase)
    ['{C21E180F-853F-43F5-99A3-389F2527EA89}']
  end;

// *********************************************************************//
// DispIntf:  INetDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C21E180F-853F-43F5-99A3-389F2527EA89}
// *********************************************************************//
  INetDisp = dispinterface
    ['{C21E180F-853F-43F5-99A3-389F2527EA89}']
    property ANIRecordings: IAnimRecContainer readonly dispid 1610809344;
    property Aliases: IAliasContainer readonly dispid 1610809345;
    property AreaBehaviorTypes: IAreaBehaviorTypeContainer readonly dispid 1610809346;
    property AreaMeasurements: IAreaMeasurementContainer readonly dispid 1610809347;
    property Areas: IAreaContainer readonly dispid 1610809348;
    property BackgroundImages: IBackgroundImageContainer readonly dispid 1610809349;
    property BoardDelFuncs: IBoardDelFuncContainer readonly dispid 1610809350;
    property BoardDelTypes: IBoardDelTypeContainer readonly dispid 1610809351;
    property CameraPositions: ICameraPositionContainer readonly dispid 1610809352;
    property ColorDistributions: IColorDistributionContainer readonly dispid 1610809353;
    property ConflictAreas: IConflictAreaContainer readonly dispid 1610809354;
    property CritSpeedFuncs: ICritSpeedFuncContainer readonly dispid 1610809355;
    property DataCollectionMeasurements: IDataCollectionMeasurementContainer readonly dispid 1610809356;
    property DataCollectionPoints: IDataCollectionPointContainer readonly dispid 1610809357;
    property DelayMeasurements: IDelayMeasurementContainer readonly dispid 1610809358;
    property DesAccelerationFunctions: IDesAccelerationFunctionContainer readonly dispid 1610809359;
    property DesDecelerationFunctions: IDesDecelerationFunctionContainer readonly dispid 1610809360;
    property DesSpeedDecisions: IDesSpeedDecisionContainer readonly dispid 1610809361;
    property DesSpeedDistributions: IDesSpeedDistributionContainer readonly dispid 1610809362;
    property Detectors: IDetectorContainer readonly dispid 1610809363;
    property DisplayTypes: IDisplayTypeContainer readonly dispid 1610809364;
    property DistanceDistributions: IDistanceDistributionContainer readonly dispid 1610809365;
    property DrivingBehaviors: IDrivingBehaviorContainer readonly dispid 1610809366;
    property DynamicAssignment: IDynamicAssignment readonly dispid 1610809367;
    property EdgeInitialTraffics: IEdgeInitialTrafficContainer readonly dispid 1610809368;
    property Edges: IEdgeContainer readonly dispid 1610809369;
    property ElevatorGroups: IElevatorGroupContainer readonly dispid 1610809370;
    property Elevators: IElevatorContainer readonly dispid 1610809371;
    property Evaluation: IEvaluation readonly dispid 1610809372;
    property FireEvents: IFireEventContainer readonly dispid 1610809373;
    property FlowBundles: IFlowBundleContainer readonly dispid 1610809374;
    property FreeDistributions: IFreeDistributionContainer readonly dispid 1610809375;
    property InformationSigns3D: IInformationSign3DContainer readonly dispid 1610809376;
    property LatDriftSpeedFuncs: ILatDriftSpeedFuncContainer readonly dispid 1610809377;
    property Levels: ILevelContainer readonly dispid 1610809378;
    property LinkBehaviorTypes: ILinkBehaviorTypeContainer readonly dispid 1610809379;
    property Links: ILinkContainer readonly dispid 1610809380;
    property LocationDistributions: ILocationDistributionContainer readonly dispid 1610809381;
    property ManagedLanesFacilities: IManagedLanesFacilityContainer readonly dispid 1610809382;
    property Matrices: IMatrixContainer readonly dispid 1610809383;
    property MaxAccelerationFunctions: IMaxAccelerationFunctionContainer readonly dispid 1610809384;
    property MaxDecelerationFunctions: IMaxDecelerationFunctionContainer readonly dispid 1610809385;
    property MesoSimEdges: IMesoEdgeContainer readonly dispid 1610809386;
    property MesoSimLanes: IMesoLaneContainer readonly dispid 1610809387;
    property MesoSimNodes: IMesoNodeContainer readonly dispid 1610809388;
    property Model2D3DDistributions: IModel2D3DDistributionContainer readonly dispid 1610809389;
    property Models2D3D: IModel2D3DContainer readonly dispid 1610809390;
    property NetPara: INetPara readonly dispid 1610809391;
    property Nodes: INodeContainer readonly dispid 1610809392;
    property Obstacles: IObstacleContainer readonly dispid 1610809393;
    property OccupancyDistributions: IOccupancyDistributionContainer readonly dispid 1610809394;
    property PTLines: IPTLineContainer readonly dispid 1610809395;
    property PTStops: IPTStopContainer readonly dispid 1610809396;
    property ParkingLots: IParkingLotContainer readonly dispid 1610809397;
    property Paths: IPathContainer readonly dispid 1610809398;
    property PavementMarkings: IPavementMarkingContainer readonly dispid 1610809399;
    property PedestrianAttributeDecisions: IPedestrianAttributeDecisionContainer readonly dispid 1610809400;
    property PedestrianClasses: IPedestrianClassContainer readonly dispid 1610809401;
    property PedestrianCompositions: IPedestrianCompositionContainer readonly dispid 1610809402;
    property PedestrianInputs: IPedestrianInputContainer readonly dispid 1610809403;
    property PedestrianNetworkPerformanceMeasurement: IPedestrianNetworkPerformanceMeasurement readonly dispid 1610809404;
    property PedestrianRoutingDecisionsPartial: IPedestrianRoutingDecisionPartialContainer readonly dispid 1610809405;
    property PedestrianRoutingDecisionsStatic: IPedestrianRoutingDecisionStaticContainer readonly dispid 1610809406;
    property PedestrianTravelTimeMeasurements: IPedestrianTravelTimeMeasurementContainer readonly dispid 1610809407;
    property PedestrianTypes: IPedestrianTypeContainer readonly dispid 1610809408;
    property Pedestrians: IPedestrianContainer readonly dispid 1610809409;
    property PowerDistributions: IPowerDistributionContainer readonly dispid 1610809410;
    property PriorityRules: IPriorityRuleContainer readonly dispid 1610809411;
    property QueueCounters: IQueueCounterContainer readonly dispid 1610809412;
    property Ramps: IRampContainer readonly dispid 1610809413;
    property ReducedSpeedAreas: IReducedSpeedAreaContainer readonly dispid 1610809414;
    property SCCommunications: ISCCommunicationContainer readonly dispid 1610809415;
    property Scripts: IScriptContainer readonly dispid 1610809416;
    property Sections: ISectionContainer readonly dispid 1610809417;
    property SignalControllers: ISignalControllerContainer readonly dispid 1610809418;
    property SignalHeads: ISignalHeadContainer readonly dispid 1610809419;
    property Signals3D: ITrafficSignal3DContainer readonly dispid 1610809420;
    property Simulation: ISimulation readonly dispid 1610809421;
    property SimulationRuns: ISimulationRunContainer readonly dispid 1610809422;
    property Static3DModels: IStatic3DModelContainer readonly dispid 1610809423;
    property StopSigns: IStopSignContainer readonly dispid 1610809424;
    property Storyboards: IStoryboardContainer readonly dispid 1610809425;
    property TimeDistributions: ITimeDistributionContainer readonly dispid 1610809426;
    property TimeIntervalSets: ITimeIntervalSetContainer readonly dispid 1610809427;
    property TollPricingCalculationModels: ITollPricingCalculationModelContainer readonly dispid 1610809428;
    property UserDefinedAttributes: IUserDefinedAttributeContainer readonly dispid 1610809429;
    property VehicleAttributeDecisions: IVehicleAttributeDecisionContainer readonly dispid 1610809430;
    property VehicleClasses: IVehicleClassContainer readonly dispid 1610809431;
    property VehicleCompositions: IVehicleCompositionContainer readonly dispid 1610809432;
    property VehicleInputs: IVehicleInputContainer readonly dispid 1610809433;
    property VehicleNetworkPerformanceMeasurement: IVehicleNetworkPerformanceMeasurement readonly dispid 1610809434;
    property VehicleRoutingDecisionsClosure: IVehicleRoutingDecisionClosureContainer readonly dispid 1610809435;
    property VehicleRoutingDecisionsDynamic: IVehicleRoutingDecisionDynamicContainer readonly dispid 1610809436;
    property VehicleRoutingDecisionsManagedLanes: IVehicleRoutingDecisionManagedLanesContainer readonly dispid 1610809437;
    property VehicleRoutingDecisionsParking: IVehicleRoutingDecisionParkingContainer readonly dispid 1610809438;
    property VehicleRoutingDecisionsPartial: IVehicleRoutingDecisionPartialContainer readonly dispid 1610809439;
    property VehicleRoutingDecisionsPartialPT: IVehicleRoutingDecisionPartialPTContainer readonly dispid 1610809440;
    property VehicleRoutingDecisionsStatic: IVehicleRoutingDecisionStaticContainer readonly dispid 1610809441;
    property VehicleTravelTimeMeasurements: IVehicleTravelTimeMeasurementContainer readonly dispid 1610809442;
    property VehicleTypes: IVehicleTypeContainer readonly dispid 1610809443;
    property Vehicles: IVehicleContainer readonly dispid 1610809444;
    property WTTFiles: IWTTFileContainer readonly dispid 1610809445;
    property WalkingBehaviors: IWalkingBehaviorContainer readonly dispid 1610809446;
    property WeightDistributions: IWeightDistributionContainer readonly dispid 1610809447;
    property Zones: IZoneContainer readonly dispid 1610809448;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ICollectionBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {83F66D36-1AB6-4778-AA3F-A74AADD4D997}
// *********************************************************************//
  ICollectionBase = interface(IDispatch)
    ['{83F66D36-1AB6-4778-AA3F-A74AADD4D997}']
    function Get__NewEnum: IUnknown; safecall;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; safecall;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); safecall;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); safecall;
    function GetAll: OleVariant; safecall;
    function Get_Attributes: IAttributes; safecall;
    function Get_Iterator: IIterator; safecall;
    function Get_AttState(const Attribute: WideString): WordBool; safecall;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); safecall;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; safecall;
    function Get_Count: Integer; safecall;
    function Get_FilteredBy(const Formula: WideString): ICollectionBase; safecall;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; safecall;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Attributes: IAttributes read Get_Attributes;
    property Iterator: IIterator read Get_Iterator;
    property AttState[const Attribute: WideString]: WordBool read Get_AttState;
    property Count: Integer read Get_Count;
    property FilteredBy[const Formula: WideString]: ICollectionBase read Get_FilteredBy;
  end;

// *********************************************************************//
// DispIntf:  ICollectionBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {83F66D36-1AB6-4778-AA3F-A74AADD4D997}
// *********************************************************************//
  ICollectionBaseDisp = dispinterface
    ['{83F66D36-1AB6-4778-AA3F-A74AADD4D997}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IAnimRecCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {ACE1C490-0AE2-4744-83E3-B94B8F79CD50}
// *********************************************************************//
  IAnimRecCollection = interface(ICollectionBase)
    ['{ACE1C490-0AE2-4744-83E3-B94B8F79CD50}']
  end;

// *********************************************************************//
// DispIntf:  IAnimRecCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {ACE1C490-0AE2-4744-83E3-B94B8F79CD50}
// *********************************************************************//
  IAnimRecCollectionDisp = dispinterface
    ['{ACE1C490-0AE2-4744-83E3-B94B8F79CD50}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IAnimRecContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DE9CA9C2-4B3B-470F-B39B-B54893D1319C}
// *********************************************************************//
  IAnimRecContainerBase = interface(IAnimRecCollection)
    ['{DE9CA9C2-4B3B-470F-B39B-B54893D1319C}']
    function Get_ItemByKey(Key: OleVariant): IAnimRec; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    property ItemByKey[Key: OleVariant]: IAnimRec read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IAnimRecContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DE9CA9C2-4B3B-470F-B39B-B54893D1319C}
// *********************************************************************//
  IAnimRecContainerBaseDisp = dispinterface
    ['{DE9CA9C2-4B3B-470F-B39B-B54893D1319C}']
    property ItemByKey[Key: OleVariant]: IAnimRec readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IAnimRecContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F80444EF-28A6-4712-B358-70AEE7227022}
// *********************************************************************//
  IAnimRecContainer = interface(IAnimRecContainerBase)
    ['{F80444EF-28A6-4712-B358-70AEE7227022}']
  end;

// *********************************************************************//
// DispIntf:  IAnimRecContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F80444EF-28A6-4712-B358-70AEE7227022}
// *********************************************************************//
  IAnimRecContainerDisp = dispinterface
    ['{F80444EF-28A6-4712-B358-70AEE7227022}']
    property ItemByKey[Key: OleVariant]: IAnimRec readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IAttributes
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8E2F6D17-ABB1-46D0-A972-2CBF1219B98E}
// *********************************************************************//
  IAttributes = interface(IDispatch)
    ['{8E2F6D17-ABB1-46D0-A972-2CBF1219B98E}']
    function GetAll: OleVariant; safecall;
    function Get_ShortName(const AttrID: WideString): WideString; safecall;
    function Get_LongName(const AttrID: WideString): WideString; safecall;
    function Get_TableShortName: WideString; safecall;
    function Get_TableLongName: WideString; safecall;
    property ShortName[const AttrID: WideString]: WideString read Get_ShortName;
    property LongName[const AttrID: WideString]: WideString read Get_LongName;
    property TableShortName: WideString read Get_TableShortName;
    property TableLongName: WideString read Get_TableLongName;
  end;

// *********************************************************************//
// DispIntf:  IAttributesDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8E2F6D17-ABB1-46D0-A972-2CBF1219B98E}
// *********************************************************************//
  IAttributesDisp = dispinterface
    ['{8E2F6D17-ABB1-46D0-A972-2CBF1219B98E}']
    function GetAll: OleVariant; dispid 1610743808;
    property ShortName[const AttrID: WideString]: WideString readonly dispid 1610743809;
    property LongName[const AttrID: WideString]: WideString readonly dispid 1610743810;
    property TableShortName: WideString readonly dispid 1610743811;
    property TableLongName: WideString readonly dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IIterator
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {47A344BE-1AD4-426F-9ED6-617467CEF760}
// *********************************************************************//
  IIterator = interface(IDispatch)
    ['{47A344BE-1AD4-426F-9ED6-617467CEF760}']
    procedure Reset; safecall;
    procedure Next; safecall;
    function Get_Valid: WordBool; safecall;
    function Get_Item: IDispatch; safecall;
    property Valid: WordBool read Get_Valid;
    property Item: IDispatch read Get_Item;
  end;

// *********************************************************************//
// DispIntf:  IIteratorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {47A344BE-1AD4-426F-9ED6-617467CEF760}
// *********************************************************************//
  IIteratorDisp = dispinterface
    ['{47A344BE-1AD4-426F-9ED6-617467CEF760}']
    procedure Reset; dispid 1610743808;
    procedure Next; dispid 1610743809;
    property Valid: WordBool readonly dispid 1610743810;
    property Item: IDispatch readonly dispid 1610743811;
  end;

// *********************************************************************//
// Interface: IAnimRecBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7738C214-9184-4151-AD94-A9541CA40DC5}
// *********************************************************************//
  IAnimRecBase = interface(IObjectBase)
    ['{7738C214-9184-4151-AD94-A9541CA40DC5}']
    function Get_Sections: ISectionCollection; safecall;
    property Sections: ISectionCollection read Get_Sections;
  end;

// *********************************************************************//
// DispIntf:  IAnimRecBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7738C214-9184-4151-AD94-A9541CA40DC5}
// *********************************************************************//
  IAnimRecBaseDisp = dispinterface
    ['{7738C214-9184-4151-AD94-A9541CA40DC5}']
    property Sections: ISectionCollection readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IAnimRec
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C4115F6B-9E00-4F59-82DD-D42A73BE8491}
// *********************************************************************//
  IAnimRec = interface(IAnimRecBase)
    ['{C4115F6B-9E00-4F59-82DD-D42A73BE8491}']
  end;

// *********************************************************************//
// DispIntf:  IAnimRecDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C4115F6B-9E00-4F59-82DD-D42A73BE8491}
// *********************************************************************//
  IAnimRecDisp = dispinterface
    ['{C4115F6B-9E00-4F59-82DD-D42A73BE8491}']
    property Sections: ISectionCollection readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ISectionCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {554BA114-A51E-43D0-A42F-8000FF2E759A}
// *********************************************************************//
  ISectionCollection = interface(ICollectionBase)
    ['{554BA114-A51E-43D0-A42F-8000FF2E759A}']
  end;

// *********************************************************************//
// DispIntf:  ISectionCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {554BA114-A51E-43D0-A42F-8000FF2E759A}
// *********************************************************************//
  ISectionCollectionDisp = dispinterface
    ['{554BA114-A51E-43D0-A42F-8000FF2E759A}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IAliasCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {84A9D293-2B08-4DD8-9A1A-7C43404CEDB5}
// *********************************************************************//
  IAliasCollection = interface(ICollectionBase)
    ['{84A9D293-2B08-4DD8-9A1A-7C43404CEDB5}']
  end;

// *********************************************************************//
// DispIntf:  IAliasCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {84A9D293-2B08-4DD8-9A1A-7C43404CEDB5}
// *********************************************************************//
  IAliasCollectionDisp = dispinterface
    ['{84A9D293-2B08-4DD8-9A1A-7C43404CEDB5}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IAliasContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {239F7AF8-E421-4040-8E46-CE8478163105}
// *********************************************************************//
  IAliasContainerBase = interface(IAliasCollection)
    ['{239F7AF8-E421-4040-8E46-CE8478163105}']
    function Get_ItemByKey(Key: OleVariant): IAlias; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddAlias(Key: OleVariant; const ObjType: WideString; const Attr: WideString; 
                      const Name: WideString): IAlias; safecall;
    procedure RemoveAlias(const Alias: IAlias); safecall;
    property ItemByKey[Key: OleVariant]: IAlias read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IAliasContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {239F7AF8-E421-4040-8E46-CE8478163105}
// *********************************************************************//
  IAliasContainerBaseDisp = dispinterface
    ['{239F7AF8-E421-4040-8E46-CE8478163105}']
    property ItemByKey[Key: OleVariant]: IAlias readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddAlias(Key: OleVariant; const ObjType: WideString; const Attr: WideString; 
                      const Name: WideString): IAlias; dispid 1610874882;
    procedure RemoveAlias(const Alias: IAlias); dispid 1610874883;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IAliasContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A24A6F8D-E8C9-4FD4-9C28-873558C144C4}
// *********************************************************************//
  IAliasContainer = interface(IAliasContainerBase)
    ['{A24A6F8D-E8C9-4FD4-9C28-873558C144C4}']
  end;

// *********************************************************************//
// DispIntf:  IAliasContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A24A6F8D-E8C9-4FD4-9C28-873558C144C4}
// *********************************************************************//
  IAliasContainerDisp = dispinterface
    ['{A24A6F8D-E8C9-4FD4-9C28-873558C144C4}']
    property ItemByKey[Key: OleVariant]: IAlias readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddAlias(Key: OleVariant; const ObjType: WideString; const Attr: WideString; 
                      const Name: WideString): IAlias; dispid 1610874882;
    procedure RemoveAlias(const Alias: IAlias); dispid 1610874883;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IAliasBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7BBE1FB5-7291-467F-A398-F828395EB26E}
// *********************************************************************//
  IAliasBase = interface(IObjectBase)
    ['{7BBE1FB5-7291-467F-A398-F828395EB26E}']
  end;

// *********************************************************************//
// DispIntf:  IAliasBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7BBE1FB5-7291-467F-A398-F828395EB26E}
// *********************************************************************//
  IAliasBaseDisp = dispinterface
    ['{7BBE1FB5-7291-467F-A398-F828395EB26E}']
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IAlias
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FD3599E7-E919-4595-A878-D925B37D4EA7}
// *********************************************************************//
  IAlias = interface(IAliasBase)
    ['{FD3599E7-E919-4595-A878-D925B37D4EA7}']
  end;

// *********************************************************************//
// DispIntf:  IAliasDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FD3599E7-E919-4595-A878-D925B37D4EA7}
// *********************************************************************//
  IAliasDisp = dispinterface
    ['{FD3599E7-E919-4595-A878-D925B37D4EA7}']
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IAreaBehaviorTypeCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EF9FB328-6502-4751-8F3E-9184307AF647}
// *********************************************************************//
  IAreaBehaviorTypeCollection = interface(ICollectionBase)
    ['{EF9FB328-6502-4751-8F3E-9184307AF647}']
  end;

// *********************************************************************//
// DispIntf:  IAreaBehaviorTypeCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EF9FB328-6502-4751-8F3E-9184307AF647}
// *********************************************************************//
  IAreaBehaviorTypeCollectionDisp = dispinterface
    ['{EF9FB328-6502-4751-8F3E-9184307AF647}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IAreaBehaviorTypeContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F5B46D67-FAA5-4541-8924-0D93B3C8EC10}
// *********************************************************************//
  IAreaBehaviorTypeContainerBase = interface(IAreaBehaviorTypeCollection)
    ['{F5B46D67-FAA5-4541-8924-0D93B3C8EC10}']
    function Get_ItemByKey(Key: OleVariant): IAreaBehaviorType; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddAreaBehaviorType(Key: OleVariant): IAreaBehaviorType; safecall;
    function DuplicateAreaBehaviorType(Source: OleVariant; NewKey: OleVariant): IAreaBehaviorType; safecall;
    procedure RemoveAreaBehaviorType(const AreaBehaviorType: IAreaBehaviorType); safecall;
    property ItemByKey[Key: OleVariant]: IAreaBehaviorType read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IAreaBehaviorTypeContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F5B46D67-FAA5-4541-8924-0D93B3C8EC10}
// *********************************************************************//
  IAreaBehaviorTypeContainerBaseDisp = dispinterface
    ['{F5B46D67-FAA5-4541-8924-0D93B3C8EC10}']
    property ItemByKey[Key: OleVariant]: IAreaBehaviorType readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddAreaBehaviorType(Key: OleVariant): IAreaBehaviorType; dispid 1610874882;
    function DuplicateAreaBehaviorType(Source: OleVariant; NewKey: OleVariant): IAreaBehaviorType; dispid 1610874883;
    procedure RemoveAreaBehaviorType(const AreaBehaviorType: IAreaBehaviorType); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IAreaBehaviorTypeContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E1A56550-ED7C-46A9-9D8A-1C8FA37EE414}
// *********************************************************************//
  IAreaBehaviorTypeContainer = interface(IAreaBehaviorTypeContainerBase)
    ['{E1A56550-ED7C-46A9-9D8A-1C8FA37EE414}']
  end;

// *********************************************************************//
// DispIntf:  IAreaBehaviorTypeContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E1A56550-ED7C-46A9-9D8A-1C8FA37EE414}
// *********************************************************************//
  IAreaBehaviorTypeContainerDisp = dispinterface
    ['{E1A56550-ED7C-46A9-9D8A-1C8FA37EE414}']
    property ItemByKey[Key: OleVariant]: IAreaBehaviorType readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddAreaBehaviorType(Key: OleVariant): IAreaBehaviorType; dispid 1610874882;
    function DuplicateAreaBehaviorType(Source: OleVariant; NewKey: OleVariant): IAreaBehaviorType; dispid 1610874883;
    procedure RemoveAreaBehaviorType(const AreaBehaviorType: IAreaBehaviorType); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IAreaBehaviorTypeBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A1F0B59E-7710-425D-8C58-ED69099FA717}
// *********************************************************************//
  IAreaBehaviorTypeBase = interface(IObjectBase)
    ['{A1F0B59E-7710-425D-8C58-ED69099FA717}']
    function Get_AreaBehavTypeElements: IAreaBehaviorTypeElementContainer; safecall;
    property AreaBehavTypeElements: IAreaBehaviorTypeElementContainer read Get_AreaBehavTypeElements;
  end;

// *********************************************************************//
// DispIntf:  IAreaBehaviorTypeBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A1F0B59E-7710-425D-8C58-ED69099FA717}
// *********************************************************************//
  IAreaBehaviorTypeBaseDisp = dispinterface
    ['{A1F0B59E-7710-425D-8C58-ED69099FA717}']
    property AreaBehavTypeElements: IAreaBehaviorTypeElementContainer readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IAreaBehaviorType
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1C8C18FA-D6DC-4AF2-8779-E6D52BD881DC}
// *********************************************************************//
  IAreaBehaviorType = interface(IAreaBehaviorTypeBase)
    ['{1C8C18FA-D6DC-4AF2-8779-E6D52BD881DC}']
  end;

// *********************************************************************//
// DispIntf:  IAreaBehaviorTypeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1C8C18FA-D6DC-4AF2-8779-E6D52BD881DC}
// *********************************************************************//
  IAreaBehaviorTypeDisp = dispinterface
    ['{1C8C18FA-D6DC-4AF2-8779-E6D52BD881DC}']
    property AreaBehavTypeElements: IAreaBehaviorTypeElementContainer readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IAreaBehaviorTypeElementCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7BCEEACC-BED5-4A52-BDC5-5E32A35D85E0}
// *********************************************************************//
  IAreaBehaviorTypeElementCollection = interface(ICollectionBase)
    ['{7BCEEACC-BED5-4A52-BDC5-5E32A35D85E0}']
  end;

// *********************************************************************//
// DispIntf:  IAreaBehaviorTypeElementCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7BCEEACC-BED5-4A52-BDC5-5E32A35D85E0}
// *********************************************************************//
  IAreaBehaviorTypeElementCollectionDisp = dispinterface
    ['{7BCEEACC-BED5-4A52-BDC5-5E32A35D85E0}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IAreaBehaviorTypeElementContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {65961C68-F275-442C-85E3-3D187A2E259E}
// *********************************************************************//
  IAreaBehaviorTypeElementContainerBase = interface(IAreaBehaviorTypeElementCollection)
    ['{65961C68-F275-442C-85E3-3D187A2E259E}']
    procedure RemoveAreaBehaviorTypeElement(const AreaBehaviorTypeElement: IAreaBehaviorTypeElement); safecall;
  end;

// *********************************************************************//
// DispIntf:  IAreaBehaviorTypeElementContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {65961C68-F275-442C-85E3-3D187A2E259E}
// *********************************************************************//
  IAreaBehaviorTypeElementContainerBaseDisp = dispinterface
    ['{65961C68-F275-442C-85E3-3D187A2E259E}']
    procedure RemoveAreaBehaviorTypeElement(const AreaBehaviorTypeElement: IAreaBehaviorTypeElement); dispid 1610874880;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IAreaBehaviorTypeElementContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {72F8B210-2304-4FFA-B419-8F6F414C7EA7}
// *********************************************************************//
  IAreaBehaviorTypeElementContainer = interface(IAreaBehaviorTypeElementContainerBase)
    ['{72F8B210-2304-4FFA-B419-8F6F414C7EA7}']
    function AddAreaBehaviorTypeElement(const PedClass: IPedestrianClass): IAreaBehaviorTypeElement; safecall;
  end;

// *********************************************************************//
// DispIntf:  IAreaBehaviorTypeElementContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {72F8B210-2304-4FFA-B419-8F6F414C7EA7}
// *********************************************************************//
  IAreaBehaviorTypeElementContainerDisp = dispinterface
    ['{72F8B210-2304-4FFA-B419-8F6F414C7EA7}']
    function AddAreaBehaviorTypeElement(const PedClass: IPedestrianClass): IAreaBehaviorTypeElement; dispid 1610940416;
    procedure RemoveAreaBehaviorTypeElement(const AreaBehaviorTypeElement: IAreaBehaviorTypeElement); dispid 1610874880;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IAreaBehaviorTypeElementBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5418641A-2355-479F-BA1D-84B51F3D0225}
// *********************************************************************//
  IAreaBehaviorTypeElementBase = interface(IObjectBase)
    ['{5418641A-2355-479F-BA1D-84B51F3D0225}']
    function Get_PedClass: IPedestrianClass; safecall;
    function Get_WalkBehav: IWalkingBehavior; safecall;
    function Get_AreaBehavType: IAreaBehaviorType; safecall;
    function Get_TimeInt: ITimeInterval; safecall;
    function Get_DesSpeedDistr: IDesSpeedDistribution; safecall;
    property PedClass: IPedestrianClass read Get_PedClass;
    property WalkBehav: IWalkingBehavior read Get_WalkBehav;
    property AreaBehavType: IAreaBehaviorType read Get_AreaBehavType;
    property TimeInt: ITimeInterval read Get_TimeInt;
    property DesSpeedDistr: IDesSpeedDistribution read Get_DesSpeedDistr;
  end;

// *********************************************************************//
// DispIntf:  IAreaBehaviorTypeElementBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5418641A-2355-479F-BA1D-84B51F3D0225}
// *********************************************************************//
  IAreaBehaviorTypeElementBaseDisp = dispinterface
    ['{5418641A-2355-479F-BA1D-84B51F3D0225}']
    property PedClass: IPedestrianClass readonly dispid 1610809344;
    property WalkBehav: IWalkingBehavior readonly dispid 1610809345;
    property AreaBehavType: IAreaBehaviorType readonly dispid 1610809346;
    property TimeInt: ITimeInterval readonly dispid 1610809347;
    property DesSpeedDistr: IDesSpeedDistribution readonly dispid 1610809348;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IAreaBehaviorTypeElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B43E692F-2B02-41CE-A4C3-B1BBF6DF87C4}
// *********************************************************************//
  IAreaBehaviorTypeElement = interface(IAreaBehaviorTypeElementBase)
    ['{B43E692F-2B02-41CE-A4C3-B1BBF6DF87C4}']
  end;

// *********************************************************************//
// DispIntf:  IAreaBehaviorTypeElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B43E692F-2B02-41CE-A4C3-B1BBF6DF87C4}
// *********************************************************************//
  IAreaBehaviorTypeElementDisp = dispinterface
    ['{B43E692F-2B02-41CE-A4C3-B1BBF6DF87C4}']
    property PedClass: IPedestrianClass readonly dispid 1610809344;
    property WalkBehav: IWalkingBehavior readonly dispid 1610809345;
    property AreaBehavType: IAreaBehaviorType readonly dispid 1610809346;
    property TimeInt: ITimeInterval readonly dispid 1610809347;
    property DesSpeedDistr: IDesSpeedDistribution readonly dispid 1610809348;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPedestrianClassBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7A07DFED-857F-4A9A-BCB7-D16CA3922518}
// *********************************************************************//
  IPedestrianClassBase = interface(IObjectBase)
    ['{7A07DFED-857F-4A9A-BCB7-D16CA3922518}']
    function Get_PedTypes: IPedestrianTypeCollection; safecall;
    property PedTypes: IPedestrianTypeCollection read Get_PedTypes;
  end;

// *********************************************************************//
// DispIntf:  IPedestrianClassBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7A07DFED-857F-4A9A-BCB7-D16CA3922518}
// *********************************************************************//
  IPedestrianClassBaseDisp = dispinterface
    ['{7A07DFED-857F-4A9A-BCB7-D16CA3922518}']
    property PedTypes: IPedestrianTypeCollection readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPedestrianClass
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {ED674E34-3BCB-4C39-A8A4-B947DB88A2B8}
// *********************************************************************//
  IPedestrianClass = interface(IPedestrianClassBase)
    ['{ED674E34-3BCB-4C39-A8A4-B947DB88A2B8}']
  end;

// *********************************************************************//
// DispIntf:  IPedestrianClassDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {ED674E34-3BCB-4C39-A8A4-B947DB88A2B8}
// *********************************************************************//
  IPedestrianClassDisp = dispinterface
    ['{ED674E34-3BCB-4C39-A8A4-B947DB88A2B8}']
    property PedTypes: IPedestrianTypeCollection readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPedestrianTypeCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BEEA11CB-EBBA-4932-9AD2-B940F753FAD1}
// *********************************************************************//
  IPedestrianTypeCollection = interface(ICollectionBase)
    ['{BEEA11CB-EBBA-4932-9AD2-B940F753FAD1}']
  end;

// *********************************************************************//
// DispIntf:  IPedestrianTypeCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BEEA11CB-EBBA-4932-9AD2-B940F753FAD1}
// *********************************************************************//
  IPedestrianTypeCollectionDisp = dispinterface
    ['{BEEA11CB-EBBA-4932-9AD2-B940F753FAD1}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IWalkingBehaviorBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E1800015-69C8-4D84-BB7D-145838B2ED50}
// *********************************************************************//
  IWalkingBehaviorBase = interface(IObjectBase)
    ['{E1800015-69C8-4D84-BB7D-145838B2ED50}']
  end;

// *********************************************************************//
// DispIntf:  IWalkingBehaviorBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E1800015-69C8-4D84-BB7D-145838B2ED50}
// *********************************************************************//
  IWalkingBehaviorBaseDisp = dispinterface
    ['{E1800015-69C8-4D84-BB7D-145838B2ED50}']
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IWalkingBehavior
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4AEE9F36-70C2-47B0-9361-8CD9E7F7E0EE}
// *********************************************************************//
  IWalkingBehavior = interface(IWalkingBehaviorBase)
    ['{4AEE9F36-70C2-47B0-9361-8CD9E7F7E0EE}']
  end;

// *********************************************************************//
// DispIntf:  IWalkingBehaviorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4AEE9F36-70C2-47B0-9361-8CD9E7F7E0EE}
// *********************************************************************//
  IWalkingBehaviorDisp = dispinterface
    ['{4AEE9F36-70C2-47B0-9361-8CD9E7F7E0EE}']
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ITimeIntervalBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {402C304F-F60E-4E2E-94D5-BE33059A3830}
// *********************************************************************//
  ITimeIntervalBase = interface(IObjectBase)
    ['{402C304F-F60E-4E2E-94D5-BE33059A3830}']
    function Get_TmIntSet: ITimeIntervalSet; safecall;
    property TmIntSet: ITimeIntervalSet read Get_TmIntSet;
  end;

// *********************************************************************//
// DispIntf:  ITimeIntervalBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {402C304F-F60E-4E2E-94D5-BE33059A3830}
// *********************************************************************//
  ITimeIntervalBaseDisp = dispinterface
    ['{402C304F-F60E-4E2E-94D5-BE33059A3830}']
    property TmIntSet: ITimeIntervalSet readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ITimeInterval
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {912CB8FA-B7A5-4D64-A257-3813CC4E306C}
// *********************************************************************//
  ITimeInterval = interface(ITimeIntervalBase)
    ['{912CB8FA-B7A5-4D64-A257-3813CC4E306C}']
  end;

// *********************************************************************//
// DispIntf:  ITimeIntervalDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {912CB8FA-B7A5-4D64-A257-3813CC4E306C}
// *********************************************************************//
  ITimeIntervalDisp = dispinterface
    ['{912CB8FA-B7A5-4D64-A257-3813CC4E306C}']
    property TmIntSet: ITimeIntervalSet readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ITimeIntervalSetBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D8ADB95E-1FDB-4598-815B-6406AB6CC379}
// *********************************************************************//
  ITimeIntervalSetBase = interface(IObjectBase)
    ['{D8ADB95E-1FDB-4598-815B-6406AB6CC379}']
    function Get_TimeInts: ITimeIntervalContainer; safecall;
    property TimeInts: ITimeIntervalContainer read Get_TimeInts;
  end;

// *********************************************************************//
// DispIntf:  ITimeIntervalSetBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D8ADB95E-1FDB-4598-815B-6406AB6CC379}
// *********************************************************************//
  ITimeIntervalSetBaseDisp = dispinterface
    ['{D8ADB95E-1FDB-4598-815B-6406AB6CC379}']
    property TimeInts: ITimeIntervalContainer readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ITimeIntervalSet
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5B7CD8E5-A852-4E78-8878-046ECCA07913}
// *********************************************************************//
  ITimeIntervalSet = interface(ITimeIntervalSetBase)
    ['{5B7CD8E5-A852-4E78-8878-046ECCA07913}']
  end;

// *********************************************************************//
// DispIntf:  ITimeIntervalSetDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5B7CD8E5-A852-4E78-8878-046ECCA07913}
// *********************************************************************//
  ITimeIntervalSetDisp = dispinterface
    ['{5B7CD8E5-A852-4E78-8878-046ECCA07913}']
    property TimeInts: ITimeIntervalContainer readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ITimeIntervalCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {52CFCD37-992C-4042-8D5D-F0E2D3790671}
// *********************************************************************//
  ITimeIntervalCollection = interface(ICollectionBase)
    ['{52CFCD37-992C-4042-8D5D-F0E2D3790671}']
  end;

// *********************************************************************//
// DispIntf:  ITimeIntervalCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {52CFCD37-992C-4042-8D5D-F0E2D3790671}
// *********************************************************************//
  ITimeIntervalCollectionDisp = dispinterface
    ['{52CFCD37-992C-4042-8D5D-F0E2D3790671}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ITimeIntervalContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AFA2BD3A-9D2D-4218-A0AD-C98B6A929912}
// *********************************************************************//
  ITimeIntervalContainerBase = interface(ITimeIntervalCollection)
    ['{AFA2BD3A-9D2D-4218-A0AD-C98B6A929912}']
    function Get_ItemByKey(Key: OleVariant): ITimeInterval; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddTimeInterval(Key: OleVariant): ITimeInterval; safecall;
    procedure RemoveTimeInterval(const TimeInterval: ITimeInterval); safecall;
    property ItemByKey[Key: OleVariant]: ITimeInterval read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  ITimeIntervalContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AFA2BD3A-9D2D-4218-A0AD-C98B6A929912}
// *********************************************************************//
  ITimeIntervalContainerBaseDisp = dispinterface
    ['{AFA2BD3A-9D2D-4218-A0AD-C98B6A929912}']
    property ItemByKey[Key: OleVariant]: ITimeInterval readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddTimeInterval(Key: OleVariant): ITimeInterval; dispid 1610874882;
    procedure RemoveTimeInterval(const TimeInterval: ITimeInterval); dispid 1610874883;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ITimeIntervalContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9D87123C-5CAD-4E49-A88C-82FEBFBBB1F1}
// *********************************************************************//
  ITimeIntervalContainer = interface(ITimeIntervalContainerBase)
    ['{9D87123C-5CAD-4E49-A88C-82FEBFBBB1F1}']
  end;

// *********************************************************************//
// DispIntf:  ITimeIntervalContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9D87123C-5CAD-4E49-A88C-82FEBFBBB1F1}
// *********************************************************************//
  ITimeIntervalContainerDisp = dispinterface
    ['{9D87123C-5CAD-4E49-A88C-82FEBFBBB1F1}']
    property ItemByKey[Key: OleVariant]: ITimeInterval readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddTimeInterval(Key: OleVariant): ITimeInterval; dispid 1610874882;
    procedure RemoveTimeInterval(const TimeInterval: ITimeInterval); dispid 1610874883;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDesSpeedDistributionBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {15FFB39A-3ABC-4163-89E8-9DCDDB4ACEB0}
// *********************************************************************//
  IDesSpeedDistributionBase = interface(IObjectBase)
    ['{15FFB39A-3ABC-4163-89E8-9DCDDB4ACEB0}']
    function Get_SpeedDistrDatPts: ISpeedDistributionDataPointContainer; safecall;
    property SpeedDistrDatPts: ISpeedDistributionDataPointContainer read Get_SpeedDistrDatPts;
  end;

// *********************************************************************//
// DispIntf:  IDesSpeedDistributionBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {15FFB39A-3ABC-4163-89E8-9DCDDB4ACEB0}
// *********************************************************************//
  IDesSpeedDistributionBaseDisp = dispinterface
    ['{15FFB39A-3ABC-4163-89E8-9DCDDB4ACEB0}']
    property SpeedDistrDatPts: ISpeedDistributionDataPointContainer readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IDesSpeedDistribution
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {45B8F17D-8F23-486F-AB45-02C3D91E0B53}
// *********************************************************************//
  IDesSpeedDistribution = interface(IDesSpeedDistributionBase)
    ['{45B8F17D-8F23-486F-AB45-02C3D91E0B53}']
  end;

// *********************************************************************//
// DispIntf:  IDesSpeedDistributionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {45B8F17D-8F23-486F-AB45-02C3D91E0B53}
// *********************************************************************//
  IDesSpeedDistributionDisp = dispinterface
    ['{45B8F17D-8F23-486F-AB45-02C3D91E0B53}']
    property SpeedDistrDatPts: ISpeedDistributionDataPointContainer readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ISpeedDistributionDataPointCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F7E6D302-5C0B-453E-8232-832C6C468CD5}
// *********************************************************************//
  ISpeedDistributionDataPointCollection = interface(ICollectionBase)
    ['{F7E6D302-5C0B-453E-8232-832C6C468CD5}']
  end;

// *********************************************************************//
// DispIntf:  ISpeedDistributionDataPointCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F7E6D302-5C0B-453E-8232-832C6C468CD5}
// *********************************************************************//
  ISpeedDistributionDataPointCollectionDisp = dispinterface
    ['{F7E6D302-5C0B-453E-8232-832C6C468CD5}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ISpeedDistributionDataPointContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FAE2246B-1FD0-41A2-852E-48A3C19F9B93}
// *********************************************************************//
  ISpeedDistributionDataPointContainerBase = interface(ISpeedDistributionDataPointCollection)
    ['{FAE2246B-1FD0-41A2-852E-48A3C19F9B93}']
    procedure ReplaceAll(Elements: OleVariant); safecall;
  end;

// *********************************************************************//
// DispIntf:  ISpeedDistributionDataPointContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FAE2246B-1FD0-41A2-852E-48A3C19F9B93}
// *********************************************************************//
  ISpeedDistributionDataPointContainerBaseDisp = dispinterface
    ['{FAE2246B-1FD0-41A2-852E-48A3C19F9B93}']
    procedure ReplaceAll(Elements: OleVariant); dispid 1610874880;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ISpeedDistributionDataPointContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {694A3375-09D2-4CC8-9F97-0ECC868093AB}
// *********************************************************************//
  ISpeedDistributionDataPointContainer = interface(ISpeedDistributionDataPointContainerBase)
    ['{694A3375-09D2-4CC8-9F97-0ECC868093AB}']
  end;

// *********************************************************************//
// DispIntf:  ISpeedDistributionDataPointContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {694A3375-09D2-4CC8-9F97-0ECC868093AB}
// *********************************************************************//
  ISpeedDistributionDataPointContainerDisp = dispinterface
    ['{694A3375-09D2-4CC8-9F97-0ECC868093AB}']
    procedure ReplaceAll(Elements: OleVariant); dispid 1610874880;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IAreaMeasurementCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {12F6B625-BC88-4104-A0DA-9CF67EB3A617}
// *********************************************************************//
  IAreaMeasurementCollection = interface(ICollectionBase)
    ['{12F6B625-BC88-4104-A0DA-9CF67EB3A617}']
  end;

// *********************************************************************//
// DispIntf:  IAreaMeasurementCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {12F6B625-BC88-4104-A0DA-9CF67EB3A617}
// *********************************************************************//
  IAreaMeasurementCollectionDisp = dispinterface
    ['{12F6B625-BC88-4104-A0DA-9CF67EB3A617}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IAreaMeasurementContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {340DC969-861A-4C94-9578-3CA3E8AE630B}
// *********************************************************************//
  IAreaMeasurementContainerBase = interface(IAreaMeasurementCollection)
    ['{340DC969-861A-4C94-9578-3CA3E8AE630B}']
    function Get_ItemByKey(Key: OleVariant): IAreaMeasurement; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    property ItemByKey[Key: OleVariant]: IAreaMeasurement read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IAreaMeasurementContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {340DC969-861A-4C94-9578-3CA3E8AE630B}
// *********************************************************************//
  IAreaMeasurementContainerBaseDisp = dispinterface
    ['{340DC969-861A-4C94-9578-3CA3E8AE630B}']
    property ItemByKey[Key: OleVariant]: IAreaMeasurement readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IAreaMeasurementContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DE2FD7E5-3872-4BF1-998B-1CE194DA5B6B}
// *********************************************************************//
  IAreaMeasurementContainer = interface(IAreaMeasurementContainerBase)
    ['{DE2FD7E5-3872-4BF1-998B-1CE194DA5B6B}']
  end;

// *********************************************************************//
// DispIntf:  IAreaMeasurementContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DE2FD7E5-3872-4BF1-998B-1CE194DA5B6B}
// *********************************************************************//
  IAreaMeasurementContainerDisp = dispinterface
    ['{DE2FD7E5-3872-4BF1-998B-1CE194DA5B6B}']
    property ItemByKey[Key: OleVariant]: IAreaMeasurement readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IAreaMeasurementBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B304829A-074E-4BC0-9334-191EC032C61B}
// *********************************************************************//
  IAreaMeasurementBase = interface(IObjectBase)
    ['{B304829A-074E-4BC0-9334-191EC032C61B}']
    function Get_Sections: ISectionCollection; safecall;
    property Sections: ISectionCollection read Get_Sections;
  end;

// *********************************************************************//
// DispIntf:  IAreaMeasurementBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B304829A-074E-4BC0-9334-191EC032C61B}
// *********************************************************************//
  IAreaMeasurementBaseDisp = dispinterface
    ['{B304829A-074E-4BC0-9334-191EC032C61B}']
    property Sections: ISectionCollection readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IAreaMeasurement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DFE70CB0-6432-457B-BBB3-CE93E27D6F35}
// *********************************************************************//
  IAreaMeasurement = interface(IAreaMeasurementBase)
    ['{DFE70CB0-6432-457B-BBB3-CE93E27D6F35}']
  end;

// *********************************************************************//
// DispIntf:  IAreaMeasurementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DFE70CB0-6432-457B-BBB3-CE93E27D6F35}
// *********************************************************************//
  IAreaMeasurementDisp = dispinterface
    ['{DFE70CB0-6432-457B-BBB3-CE93E27D6F35}']
    property Sections: ISectionCollection readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IAreaCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {96C2F998-428C-4BB5-9462-0DC20A19F767}
// *********************************************************************//
  IAreaCollection = interface(ICollectionBase)
    ['{96C2F998-428C-4BB5-9462-0DC20A19F767}']
  end;

// *********************************************************************//
// DispIntf:  IAreaCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {96C2F998-428C-4BB5-9462-0DC20A19F767}
// *********************************************************************//
  IAreaCollectionDisp = dispinterface
    ['{96C2F998-428C-4BB5-9462-0DC20A19F767}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IAreaContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {947B1B80-9E39-44B5-B7E0-F3EABDADE311}
// *********************************************************************//
  IAreaContainerBase = interface(IAreaCollection)
    ['{947B1B80-9E39-44B5-B7E0-F3EABDADE311}']
    function Get_ItemByKey(Key: OleVariant): IArea; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddArea(Key: OleVariant; const WktPolygon: WideString): IArea; safecall;
    function DuplicateArea(Source: OleVariant; NewKey: OleVariant): IArea; safecall;
    procedure RemoveArea(const Area: IArea); safecall;
    property ItemByKey[Key: OleVariant]: IArea read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IAreaContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {947B1B80-9E39-44B5-B7E0-F3EABDADE311}
// *********************************************************************//
  IAreaContainerBaseDisp = dispinterface
    ['{947B1B80-9E39-44B5-B7E0-F3EABDADE311}']
    property ItemByKey[Key: OleVariant]: IArea readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddArea(Key: OleVariant; const WktPolygon: WideString): IArea; dispid 1610874882;
    function DuplicateArea(Source: OleVariant; NewKey: OleVariant): IArea; dispid 1610874883;
    procedure RemoveArea(const Area: IArea); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IAreaContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A4FEDA90-436D-4192-BE73-3AC1121F2F52}
// *********************************************************************//
  IAreaContainer = interface(IAreaContainerBase)
    ['{A4FEDA90-436D-4192-BE73-3AC1121F2F52}']
  end;

// *********************************************************************//
// DispIntf:  IAreaContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A4FEDA90-436D-4192-BE73-3AC1121F2F52}
// *********************************************************************//
  IAreaContainerDisp = dispinterface
    ['{A4FEDA90-436D-4192-BE73-3AC1121F2F52}']
    property ItemByKey[Key: OleVariant]: IArea readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddArea(Key: OleVariant; const WktPolygon: WideString): IArea; dispid 1610874882;
    function DuplicateArea(Source: OleVariant; NewKey: OleVariant): IArea; dispid 1610874883;
    procedure RemoveArea(const Area: IArea); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IAreaBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C26CF3F6-3A07-4AF1-B9E6-AF2247D11459}
// *********************************************************************//
  IAreaBase = interface(IObjectBase)
    ['{C26CF3F6-3A07-4AF1-B9E6-AF2247D11459}']
    function Get_Points: IPointContainer; safecall;
    function Get_AreaBehavType: IAreaBehaviorType; safecall;
    function Get_DisplayType: IDisplayType; safecall;
    function Get_TmDistr: ITimeDistribution; safecall;
    function Get_PTDoorDistr: ILocationDistribution; safecall;
    function Get_Level: ILevel; safecall;
    function Get_PTStops: IPTStopCollection; safecall;
    function Get_PedClassQueueBehav: IPedClassQueuingBehaviorContainer; safecall;
    function Get_PedInput: IPedestrianInputCollection; safecall;
    function Get_PedRoutDestSta: IPedestrianRouteLocationCollection; safecall;
    function Get_PedRoutLocSta: IPedestrianRouteLocationCollection; safecall;
    function Get_PedRoutDecSta: IPedestrianRoutingDecisionStaticCollection; safecall;
    function Get_PedRoutDecPart: IPedestrianRoutingDecisionPartialCollection; safecall;
    function Get_PedRoutDestPart: IPedestrianRouteLocationCollection; safecall;
    function Get_PedRoutLocPart: IPedestrianRouteLocationCollection; safecall;
    function Get_ElevGrp: IElevatorGroup; safecall;
    function Get_Peds: IPedestrianCollection; safecall;
    function Get_PedRoutSta: IPedestrianRouteStaticCollection; safecall;
    function Get_PedRoutPart: IPedestrianRoutePartialCollection; safecall;
    property Points: IPointContainer read Get_Points;
    property AreaBehavType: IAreaBehaviorType read Get_AreaBehavType;
    property DisplayType: IDisplayType read Get_DisplayType;
    property TmDistr: ITimeDistribution read Get_TmDistr;
    property PTDoorDistr: ILocationDistribution read Get_PTDoorDistr;
    property Level: ILevel read Get_Level;
    property PTStops: IPTStopCollection read Get_PTStops;
    property PedClassQueueBehav: IPedClassQueuingBehaviorContainer read Get_PedClassQueueBehav;
    property PedInput: IPedestrianInputCollection read Get_PedInput;
    property PedRoutDestSta: IPedestrianRouteLocationCollection read Get_PedRoutDestSta;
    property PedRoutLocSta: IPedestrianRouteLocationCollection read Get_PedRoutLocSta;
    property PedRoutDecSta: IPedestrianRoutingDecisionStaticCollection read Get_PedRoutDecSta;
    property PedRoutDecPart: IPedestrianRoutingDecisionPartialCollection read Get_PedRoutDecPart;
    property PedRoutDestPart: IPedestrianRouteLocationCollection read Get_PedRoutDestPart;
    property PedRoutLocPart: IPedestrianRouteLocationCollection read Get_PedRoutLocPart;
    property ElevGrp: IElevatorGroup read Get_ElevGrp;
    property Peds: IPedestrianCollection read Get_Peds;
    property PedRoutSta: IPedestrianRouteStaticCollection read Get_PedRoutSta;
    property PedRoutPart: IPedestrianRoutePartialCollection read Get_PedRoutPart;
  end;

// *********************************************************************//
// DispIntf:  IAreaBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C26CF3F6-3A07-4AF1-B9E6-AF2247D11459}
// *********************************************************************//
  IAreaBaseDisp = dispinterface
    ['{C26CF3F6-3A07-4AF1-B9E6-AF2247D11459}']
    property Points: IPointContainer readonly dispid 1610809344;
    property AreaBehavType: IAreaBehaviorType readonly dispid 1610809345;
    property DisplayType: IDisplayType readonly dispid 1610809346;
    property TmDistr: ITimeDistribution readonly dispid 1610809347;
    property PTDoorDistr: ILocationDistribution readonly dispid 1610809348;
    property Level: ILevel readonly dispid 1610809349;
    property PTStops: IPTStopCollection readonly dispid 1610809350;
    property PedClassQueueBehav: IPedClassQueuingBehaviorContainer readonly dispid 1610809351;
    property PedInput: IPedestrianInputCollection readonly dispid 1610809352;
    property PedRoutDestSta: IPedestrianRouteLocationCollection readonly dispid 1610809353;
    property PedRoutLocSta: IPedestrianRouteLocationCollection readonly dispid 1610809354;
    property PedRoutDecSta: IPedestrianRoutingDecisionStaticCollection readonly dispid 1610809355;
    property PedRoutDecPart: IPedestrianRoutingDecisionPartialCollection readonly dispid 1610809356;
    property PedRoutDestPart: IPedestrianRouteLocationCollection readonly dispid 1610809357;
    property PedRoutLocPart: IPedestrianRouteLocationCollection readonly dispid 1610809358;
    property ElevGrp: IElevatorGroup readonly dispid 1610809359;
    property Peds: IPedestrianCollection readonly dispid 1610809360;
    property PedRoutSta: IPedestrianRouteStaticCollection readonly dispid 1610809361;
    property PedRoutPart: IPedestrianRoutePartialCollection readonly dispid 1610809362;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IArea
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BC755905-AA79-43F0-AAEE-5121D08305CC}
// *********************************************************************//
  IArea = interface(IAreaBase)
    ['{BC755905-AA79-43F0-AAEE-5121D08305CC}']
  end;

// *********************************************************************//
// DispIntf:  IAreaDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BC755905-AA79-43F0-AAEE-5121D08305CC}
// *********************************************************************//
  IAreaDisp = dispinterface
    ['{BC755905-AA79-43F0-AAEE-5121D08305CC}']
    property Points: IPointContainer readonly dispid 1610809344;
    property AreaBehavType: IAreaBehaviorType readonly dispid 1610809345;
    property DisplayType: IDisplayType readonly dispid 1610809346;
    property TmDistr: ITimeDistribution readonly dispid 1610809347;
    property PTDoorDistr: ILocationDistribution readonly dispid 1610809348;
    property Level: ILevel readonly dispid 1610809349;
    property PTStops: IPTStopCollection readonly dispid 1610809350;
    property PedClassQueueBehav: IPedClassQueuingBehaviorContainer readonly dispid 1610809351;
    property PedInput: IPedestrianInputCollection readonly dispid 1610809352;
    property PedRoutDestSta: IPedestrianRouteLocationCollection readonly dispid 1610809353;
    property PedRoutLocSta: IPedestrianRouteLocationCollection readonly dispid 1610809354;
    property PedRoutDecSta: IPedestrianRoutingDecisionStaticCollection readonly dispid 1610809355;
    property PedRoutDecPart: IPedestrianRoutingDecisionPartialCollection readonly dispid 1610809356;
    property PedRoutDestPart: IPedestrianRouteLocationCollection readonly dispid 1610809357;
    property PedRoutLocPart: IPedestrianRouteLocationCollection readonly dispid 1610809358;
    property ElevGrp: IElevatorGroup readonly dispid 1610809359;
    property Peds: IPedestrianCollection readonly dispid 1610809360;
    property PedRoutSta: IPedestrianRouteStaticCollection readonly dispid 1610809361;
    property PedRoutPart: IPedestrianRoutePartialCollection readonly dispid 1610809362;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPointCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D1AB808E-42B3-4139-9285-928266A32D79}
// *********************************************************************//
  IPointCollection = interface(ICollectionBase)
    ['{D1AB808E-42B3-4139-9285-928266A32D79}']
  end;

// *********************************************************************//
// DispIntf:  IPointCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D1AB808E-42B3-4139-9285-928266A32D79}
// *********************************************************************//
  IPointCollectionDisp = dispinterface
    ['{D1AB808E-42B3-4139-9285-928266A32D79}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPointContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0FE74A24-401E-4F78-8CB9-E4873D6A2564}
// *********************************************************************//
  IPointContainerBase = interface(IPointCollection)
    ['{0FE74A24-401E-4F78-8CB9-E4873D6A2564}']
  end;

// *********************************************************************//
// DispIntf:  IPointContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0FE74A24-401E-4F78-8CB9-E4873D6A2564}
// *********************************************************************//
  IPointContainerBaseDisp = dispinterface
    ['{0FE74A24-401E-4F78-8CB9-E4873D6A2564}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPointContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7C4639A1-A556-4DA6-A4A2-A3BB0DD5E47C}
// *********************************************************************//
  IPointContainer = interface(IPointContainerBase)
    ['{7C4639A1-A556-4DA6-A4A2-A3BB0DD5E47C}']
  end;

// *********************************************************************//
// DispIntf:  IPointContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7C4639A1-A556-4DA6-A4A2-A3BB0DD5E47C}
// *********************************************************************//
  IPointContainerDisp = dispinterface
    ['{7C4639A1-A556-4DA6-A4A2-A3BB0DD5E47C}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDisplayTypeBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F9710891-974E-4C3A-BAF1-A7227FFEA045}
// *********************************************************************//
  IDisplayTypeBase = interface(IObjectBase)
    ['{F9710891-974E-4C3A-BAF1-A7227FFEA045}']
  end;

// *********************************************************************//
// DispIntf:  IDisplayTypeBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F9710891-974E-4C3A-BAF1-A7227FFEA045}
// *********************************************************************//
  IDisplayTypeBaseDisp = dispinterface
    ['{F9710891-974E-4C3A-BAF1-A7227FFEA045}']
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IDisplayType
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {27DCFA7A-84B2-4B97-99A0-69549246C29B}
// *********************************************************************//
  IDisplayType = interface(IDisplayTypeBase)
    ['{27DCFA7A-84B2-4B97-99A0-69549246C29B}']
  end;

// *********************************************************************//
// DispIntf:  IDisplayTypeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {27DCFA7A-84B2-4B97-99A0-69549246C29B}
// *********************************************************************//
  IDisplayTypeDisp = dispinterface
    ['{27DCFA7A-84B2-4B97-99A0-69549246C29B}']
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ITimeDistributionBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {96BFC5A7-0136-47AC-B411-C2D269CD94C5}
// *********************************************************************//
  ITimeDistributionBase = interface(IObjectBase)
    ['{96BFC5A7-0136-47AC-B411-C2D269CD94C5}']
    function Get_DurDistrDataPts: IDurationDistributionDataPointContainer; safecall;
    property DurDistrDataPts: IDurationDistributionDataPointContainer read Get_DurDistrDataPts;
  end;

// *********************************************************************//
// DispIntf:  ITimeDistributionBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {96BFC5A7-0136-47AC-B411-C2D269CD94C5}
// *********************************************************************//
  ITimeDistributionBaseDisp = dispinterface
    ['{96BFC5A7-0136-47AC-B411-C2D269CD94C5}']
    property DurDistrDataPts: IDurationDistributionDataPointContainer readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ITimeDistribution
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {88E1F583-C897-47EE-BEA3-908E5B94B847}
// *********************************************************************//
  ITimeDistribution = interface(ITimeDistributionBase)
    ['{88E1F583-C897-47EE-BEA3-908E5B94B847}']
  end;

// *********************************************************************//
// DispIntf:  ITimeDistributionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {88E1F583-C897-47EE-BEA3-908E5B94B847}
// *********************************************************************//
  ITimeDistributionDisp = dispinterface
    ['{88E1F583-C897-47EE-BEA3-908E5B94B847}']
    property DurDistrDataPts: IDurationDistributionDataPointContainer readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IDurationDistributionDataPointCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {17979425-831C-4DDB-8F8E-F445551B61F3}
// *********************************************************************//
  IDurationDistributionDataPointCollection = interface(ICollectionBase)
    ['{17979425-831C-4DDB-8F8E-F445551B61F3}']
  end;

// *********************************************************************//
// DispIntf:  IDurationDistributionDataPointCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {17979425-831C-4DDB-8F8E-F445551B61F3}
// *********************************************************************//
  IDurationDistributionDataPointCollectionDisp = dispinterface
    ['{17979425-831C-4DDB-8F8E-F445551B61F3}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDurationDistributionDataPointContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1F16A91E-23D7-47DA-BF07-9A9FB9686FEE}
// *********************************************************************//
  IDurationDistributionDataPointContainerBase = interface(IDurationDistributionDataPointCollection)
    ['{1F16A91E-23D7-47DA-BF07-9A9FB9686FEE}']
    procedure ReplaceAll(Elements: OleVariant); safecall;
  end;

// *********************************************************************//
// DispIntf:  IDurationDistributionDataPointContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1F16A91E-23D7-47DA-BF07-9A9FB9686FEE}
// *********************************************************************//
  IDurationDistributionDataPointContainerBaseDisp = dispinterface
    ['{1F16A91E-23D7-47DA-BF07-9A9FB9686FEE}']
    procedure ReplaceAll(Elements: OleVariant); dispid 1610874880;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDurationDistributionDataPointContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {825AE225-329E-4CCF-8E80-BAF5A8AD4357}
// *********************************************************************//
  IDurationDistributionDataPointContainer = interface(IDurationDistributionDataPointContainerBase)
    ['{825AE225-329E-4CCF-8E80-BAF5A8AD4357}']
  end;

// *********************************************************************//
// DispIntf:  IDurationDistributionDataPointContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {825AE225-329E-4CCF-8E80-BAF5A8AD4357}
// *********************************************************************//
  IDurationDistributionDataPointContainerDisp = dispinterface
    ['{825AE225-329E-4CCF-8E80-BAF5A8AD4357}']
    procedure ReplaceAll(Elements: OleVariant); dispid 1610874880;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ILocationDistributionBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {986BAAE0-BB4D-4998-A23D-3DE3679EBE93}
// *********************************************************************//
  ILocationDistributionBase = interface(IObjectBase)
    ['{986BAAE0-BB4D-4998-A23D-3DE3679EBE93}']
    function Get_DistrDataPts: IDistributionDataPointContainer; safecall;
    property DistrDataPts: IDistributionDataPointContainer read Get_DistrDataPts;
  end;

// *********************************************************************//
// DispIntf:  ILocationDistributionBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {986BAAE0-BB4D-4998-A23D-3DE3679EBE93}
// *********************************************************************//
  ILocationDistributionBaseDisp = dispinterface
    ['{986BAAE0-BB4D-4998-A23D-3DE3679EBE93}']
    property DistrDataPts: IDistributionDataPointContainer readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ILocationDistribution
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4A8C4CE3-CFBB-43D6-B52F-B0F5802CEE41}
// *********************************************************************//
  ILocationDistribution = interface(ILocationDistributionBase)
    ['{4A8C4CE3-CFBB-43D6-B52F-B0F5802CEE41}']
  end;

// *********************************************************************//
// DispIntf:  ILocationDistributionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4A8C4CE3-CFBB-43D6-B52F-B0F5802CEE41}
// *********************************************************************//
  ILocationDistributionDisp = dispinterface
    ['{4A8C4CE3-CFBB-43D6-B52F-B0F5802CEE41}']
    property DistrDataPts: IDistributionDataPointContainer readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IDistributionDataPointCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7B304716-FDC3-4823-9C92-ED01526060D2}
// *********************************************************************//
  IDistributionDataPointCollection = interface(ICollectionBase)
    ['{7B304716-FDC3-4823-9C92-ED01526060D2}']
  end;

// *********************************************************************//
// DispIntf:  IDistributionDataPointCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7B304716-FDC3-4823-9C92-ED01526060D2}
// *********************************************************************//
  IDistributionDataPointCollectionDisp = dispinterface
    ['{7B304716-FDC3-4823-9C92-ED01526060D2}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDistributionDataPointContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8DC8CBB8-289D-4694-94CF-7E2A75506C51}
// *********************************************************************//
  IDistributionDataPointContainerBase = interface(IDistributionDataPointCollection)
    ['{8DC8CBB8-289D-4694-94CF-7E2A75506C51}']
    procedure ReplaceAll(Elements: OleVariant); safecall;
  end;

// *********************************************************************//
// DispIntf:  IDistributionDataPointContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8DC8CBB8-289D-4694-94CF-7E2A75506C51}
// *********************************************************************//
  IDistributionDataPointContainerBaseDisp = dispinterface
    ['{8DC8CBB8-289D-4694-94CF-7E2A75506C51}']
    procedure ReplaceAll(Elements: OleVariant); dispid 1610874880;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDistributionDataPointContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {724E5135-DA8F-4D39-B63C-6190D65CF8E9}
// *********************************************************************//
  IDistributionDataPointContainer = interface(IDistributionDataPointContainerBase)
    ['{724E5135-DA8F-4D39-B63C-6190D65CF8E9}']
  end;

// *********************************************************************//
// DispIntf:  IDistributionDataPointContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {724E5135-DA8F-4D39-B63C-6190D65CF8E9}
// *********************************************************************//
  IDistributionDataPointContainerDisp = dispinterface
    ['{724E5135-DA8F-4D39-B63C-6190D65CF8E9}']
    procedure ReplaceAll(Elements: OleVariant); dispid 1610874880;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ILevelBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {27779D84-0FE7-4F5D-BB3B-E0F4E9322F24}
// *********************************************************************//
  ILevelBase = interface(IObjectBase)
    ['{27779D84-0FE7-4F5D-BB3B-E0F4E9322F24}']
  end;

// *********************************************************************//
// DispIntf:  ILevelBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {27779D84-0FE7-4F5D-BB3B-E0F4E9322F24}
// *********************************************************************//
  ILevelBaseDisp = dispinterface
    ['{27779D84-0FE7-4F5D-BB3B-E0F4E9322F24}']
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ILevel
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CE367CDC-2D6B-4767-B8A8-5BE23910C7DC}
// *********************************************************************//
  ILevel = interface(ILevelBase)
    ['{CE367CDC-2D6B-4767-B8A8-5BE23910C7DC}']
  end;

// *********************************************************************//
// DispIntf:  ILevelDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CE367CDC-2D6B-4767-B8A8-5BE23910C7DC}
// *********************************************************************//
  ILevelDisp = dispinterface
    ['{CE367CDC-2D6B-4767-B8A8-5BE23910C7DC}']
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPTStopCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6DC9684E-CBCF-4FA4-B437-8AEB39B91FC1}
// *********************************************************************//
  IPTStopCollection = interface(ICollectionBase)
    ['{6DC9684E-CBCF-4FA4-B437-8AEB39B91FC1}']
  end;

// *********************************************************************//
// DispIntf:  IPTStopCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6DC9684E-CBCF-4FA4-B437-8AEB39B91FC1}
// *********************************************************************//
  IPTStopCollectionDisp = dispinterface
    ['{6DC9684E-CBCF-4FA4-B437-8AEB39B91FC1}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPedClassQueuingBehaviorCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {304B219A-2AFD-4111-BC03-0BB6D7DD4B30}
// *********************************************************************//
  IPedClassQueuingBehaviorCollection = interface(ICollectionBase)
    ['{304B219A-2AFD-4111-BC03-0BB6D7DD4B30}']
  end;

// *********************************************************************//
// DispIntf:  IPedClassQueuingBehaviorCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {304B219A-2AFD-4111-BC03-0BB6D7DD4B30}
// *********************************************************************//
  IPedClassQueuingBehaviorCollectionDisp = dispinterface
    ['{304B219A-2AFD-4111-BC03-0BB6D7DD4B30}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPedClassQueuingBehaviorContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3A6A9B5B-CF18-4137-BB19-D487734E0946}
// *********************************************************************//
  IPedClassQueuingBehaviorContainerBase = interface(IPedClassQueuingBehaviorCollection)
    ['{3A6A9B5B-CF18-4137-BB19-D487734E0946}']
  end;

// *********************************************************************//
// DispIntf:  IPedClassQueuingBehaviorContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3A6A9B5B-CF18-4137-BB19-D487734E0946}
// *********************************************************************//
  IPedClassQueuingBehaviorContainerBaseDisp = dispinterface
    ['{3A6A9B5B-CF18-4137-BB19-D487734E0946}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPedClassQueuingBehaviorContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EFF436FC-1AB6-422B-8E4A-99139BB0D5D8}
// *********************************************************************//
  IPedClassQueuingBehaviorContainer = interface(IPedClassQueuingBehaviorContainerBase)
    ['{EFF436FC-1AB6-422B-8E4A-99139BB0D5D8}']
  end;

// *********************************************************************//
// DispIntf:  IPedClassQueuingBehaviorContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EFF436FC-1AB6-422B-8E4A-99139BB0D5D8}
// *********************************************************************//
  IPedClassQueuingBehaviorContainerDisp = dispinterface
    ['{EFF436FC-1AB6-422B-8E4A-99139BB0D5D8}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPedestrianInputCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CA3ACFE2-D22E-4909-ADB6-5DA62CBBEA5C}
// *********************************************************************//
  IPedestrianInputCollection = interface(ICollectionBase)
    ['{CA3ACFE2-D22E-4909-ADB6-5DA62CBBEA5C}']
  end;

// *********************************************************************//
// DispIntf:  IPedestrianInputCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CA3ACFE2-D22E-4909-ADB6-5DA62CBBEA5C}
// *********************************************************************//
  IPedestrianInputCollectionDisp = dispinterface
    ['{CA3ACFE2-D22E-4909-ADB6-5DA62CBBEA5C}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPedestrianRouteLocationCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {05B943AA-384E-446E-8E02-B518DDD4DC66}
// *********************************************************************//
  IPedestrianRouteLocationCollection = interface(ICollectionBase)
    ['{05B943AA-384E-446E-8E02-B518DDD4DC66}']
  end;

// *********************************************************************//
// DispIntf:  IPedestrianRouteLocationCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {05B943AA-384E-446E-8E02-B518DDD4DC66}
// *********************************************************************//
  IPedestrianRouteLocationCollectionDisp = dispinterface
    ['{05B943AA-384E-446E-8E02-B518DDD4DC66}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPedestrianRoutingDecisionStaticCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6EEB05ED-6FD0-4C83-A7D7-041CCE731E35}
// *********************************************************************//
  IPedestrianRoutingDecisionStaticCollection = interface(ICollectionBase)
    ['{6EEB05ED-6FD0-4C83-A7D7-041CCE731E35}']
  end;

// *********************************************************************//
// DispIntf:  IPedestrianRoutingDecisionStaticCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6EEB05ED-6FD0-4C83-A7D7-041CCE731E35}
// *********************************************************************//
  IPedestrianRoutingDecisionStaticCollectionDisp = dispinterface
    ['{6EEB05ED-6FD0-4C83-A7D7-041CCE731E35}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPedestrianRoutingDecisionPartialCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5099FB41-C6B9-4739-A48C-8310469AE834}
// *********************************************************************//
  IPedestrianRoutingDecisionPartialCollection = interface(ICollectionBase)
    ['{5099FB41-C6B9-4739-A48C-8310469AE834}']
  end;

// *********************************************************************//
// DispIntf:  IPedestrianRoutingDecisionPartialCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5099FB41-C6B9-4739-A48C-8310469AE834}
// *********************************************************************//
  IPedestrianRoutingDecisionPartialCollectionDisp = dispinterface
    ['{5099FB41-C6B9-4739-A48C-8310469AE834}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IElevatorGroupBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {ED2BDD36-B31F-45AE-9125-0E38267411DA}
// *********************************************************************//
  IElevatorGroupBase = interface(IObjectBase)
    ['{ED2BDD36-B31F-45AE-9125-0E38267411DA}']
    function Get_WaitAreas: IAreaCollection; safecall;
    function Get_MainLvl: ILevel; safecall;
    function Get_Elevators: IElevatorCollection; safecall;
    function Get_AreaBehavTypInCab: IAreaBehaviorType; safecall;
    function Get_AreaBehavTypAlight: IAreaBehaviorType; safecall;
    property WaitAreas: IAreaCollection read Get_WaitAreas;
    property MainLvl: ILevel read Get_MainLvl;
    property Elevators: IElevatorCollection read Get_Elevators;
    property AreaBehavTypInCab: IAreaBehaviorType read Get_AreaBehavTypInCab;
    property AreaBehavTypAlight: IAreaBehaviorType read Get_AreaBehavTypAlight;
  end;

// *********************************************************************//
// DispIntf:  IElevatorGroupBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {ED2BDD36-B31F-45AE-9125-0E38267411DA}
// *********************************************************************//
  IElevatorGroupBaseDisp = dispinterface
    ['{ED2BDD36-B31F-45AE-9125-0E38267411DA}']
    property WaitAreas: IAreaCollection readonly dispid 1610809344;
    property MainLvl: ILevel readonly dispid 1610809345;
    property Elevators: IElevatorCollection readonly dispid 1610809346;
    property AreaBehavTypInCab: IAreaBehaviorType readonly dispid 1610809347;
    property AreaBehavTypAlight: IAreaBehaviorType readonly dispid 1610809348;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IElevatorGroup
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E673DD9D-AD63-4C5C-8FE7-30602A2EE84D}
// *********************************************************************//
  IElevatorGroup = interface(IElevatorGroupBase)
    ['{E673DD9D-AD63-4C5C-8FE7-30602A2EE84D}']
  end;

// *********************************************************************//
// DispIntf:  IElevatorGroupDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E673DD9D-AD63-4C5C-8FE7-30602A2EE84D}
// *********************************************************************//
  IElevatorGroupDisp = dispinterface
    ['{E673DD9D-AD63-4C5C-8FE7-30602A2EE84D}']
    property WaitAreas: IAreaCollection readonly dispid 1610809344;
    property MainLvl: ILevel readonly dispid 1610809345;
    property Elevators: IElevatorCollection readonly dispid 1610809346;
    property AreaBehavTypInCab: IAreaBehaviorType readonly dispid 1610809347;
    property AreaBehavTypAlight: IAreaBehaviorType readonly dispid 1610809348;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IElevatorCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1DC91A7E-178D-44E5-BF6D-E5759FE2CBC5}
// *********************************************************************//
  IElevatorCollection = interface(ICollectionBase)
    ['{1DC91A7E-178D-44E5-BF6D-E5759FE2CBC5}']
  end;

// *********************************************************************//
// DispIntf:  IElevatorCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1DC91A7E-178D-44E5-BF6D-E5759FE2CBC5}
// *********************************************************************//
  IElevatorCollectionDisp = dispinterface
    ['{1DC91A7E-178D-44E5-BF6D-E5759FE2CBC5}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPedestrianCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {520CFB8B-83A2-4632-B085-8BD20B2A0F8F}
// *********************************************************************//
  IPedestrianCollection = interface(ICollectionBase)
    ['{520CFB8B-83A2-4632-B085-8BD20B2A0F8F}']
  end;

// *********************************************************************//
// DispIntf:  IPedestrianCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {520CFB8B-83A2-4632-B085-8BD20B2A0F8F}
// *********************************************************************//
  IPedestrianCollectionDisp = dispinterface
    ['{520CFB8B-83A2-4632-B085-8BD20B2A0F8F}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPedestrianRouteStaticCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BDA79967-4885-4D18-A96E-7B06658FB3CC}
// *********************************************************************//
  IPedestrianRouteStaticCollection = interface(ICollectionBase)
    ['{BDA79967-4885-4D18-A96E-7B06658FB3CC}']
  end;

// *********************************************************************//
// DispIntf:  IPedestrianRouteStaticCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BDA79967-4885-4D18-A96E-7B06658FB3CC}
// *********************************************************************//
  IPedestrianRouteStaticCollectionDisp = dispinterface
    ['{BDA79967-4885-4D18-A96E-7B06658FB3CC}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPedestrianRoutePartialCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A2A259A0-30D9-4BC9-886F-185C12FFCB36}
// *********************************************************************//
  IPedestrianRoutePartialCollection = interface(ICollectionBase)
    ['{A2A259A0-30D9-4BC9-886F-185C12FFCB36}']
  end;

// *********************************************************************//
// DispIntf:  IPedestrianRoutePartialCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A2A259A0-30D9-4BC9-886F-185C12FFCB36}
// *********************************************************************//
  IPedestrianRoutePartialCollectionDisp = dispinterface
    ['{A2A259A0-30D9-4BC9-886F-185C12FFCB36}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IBackgroundImageCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A45F32F1-1428-44E8-A5BE-D6F78BBF6895}
// *********************************************************************//
  IBackgroundImageCollection = interface(ICollectionBase)
    ['{A45F32F1-1428-44E8-A5BE-D6F78BBF6895}']
  end;

// *********************************************************************//
// DispIntf:  IBackgroundImageCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A45F32F1-1428-44E8-A5BE-D6F78BBF6895}
// *********************************************************************//
  IBackgroundImageCollectionDisp = dispinterface
    ['{A45F32F1-1428-44E8-A5BE-D6F78BBF6895}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IBackgroundImageContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AFF3DC3F-3B2C-4138-BBAF-375C3C9DD35B}
// *********************************************************************//
  IBackgroundImageContainerBase = interface(IBackgroundImageCollection)
    ['{AFF3DC3F-3B2C-4138-BBAF-375C3C9DD35B}']
    function Get_ItemByKey(Key: OleVariant): IBackgroundImage; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddBackgroundImage(Key: OleVariant; const PathFilename: WideString; 
                                const CoordTRWktPoint: WideString; const CoordBLWktPoint: WideString): IBackgroundImage; safecall;
    procedure RemoveBackgroundImage(const BackgroundImage: IBackgroundImage); safecall;
    property ItemByKey[Key: OleVariant]: IBackgroundImage read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IBackgroundImageContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AFF3DC3F-3B2C-4138-BBAF-375C3C9DD35B}
// *********************************************************************//
  IBackgroundImageContainerBaseDisp = dispinterface
    ['{AFF3DC3F-3B2C-4138-BBAF-375C3C9DD35B}']
    property ItemByKey[Key: OleVariant]: IBackgroundImage readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddBackgroundImage(Key: OleVariant; const PathFilename: WideString; 
                                const CoordTRWktPoint: WideString; const CoordBLWktPoint: WideString): IBackgroundImage; dispid 1610874882;
    procedure RemoveBackgroundImage(const BackgroundImage: IBackgroundImage); dispid 1610874883;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IBackgroundImageContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C52660A3-5C3F-443E-925A-9DFF42DE3CDD}
// *********************************************************************//
  IBackgroundImageContainer = interface(IBackgroundImageContainerBase)
    ['{C52660A3-5C3F-443E-925A-9DFF42DE3CDD}']
  end;

// *********************************************************************//
// DispIntf:  IBackgroundImageContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C52660A3-5C3F-443E-925A-9DFF42DE3CDD}
// *********************************************************************//
  IBackgroundImageContainerDisp = dispinterface
    ['{C52660A3-5C3F-443E-925A-9DFF42DE3CDD}']
    property ItemByKey[Key: OleVariant]: IBackgroundImage readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddBackgroundImage(Key: OleVariant; const PathFilename: WideString; 
                                const CoordTRWktPoint: WideString; const CoordBLWktPoint: WideString): IBackgroundImage; dispid 1610874882;
    procedure RemoveBackgroundImage(const BackgroundImage: IBackgroundImage); dispid 1610874883;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IBackgroundImageBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E610918C-287C-44C1-8552-8B9D6EDB6692}
// *********************************************************************//
  IBackgroundImageBase = interface(IObjectBase)
    ['{E610918C-287C-44C1-8552-8B9D6EDB6692}']
    function Get_Level: ILevel; safecall;
    property Level: ILevel read Get_Level;
  end;

// *********************************************************************//
// DispIntf:  IBackgroundImageBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E610918C-287C-44C1-8552-8B9D6EDB6692}
// *********************************************************************//
  IBackgroundImageBaseDisp = dispinterface
    ['{E610918C-287C-44C1-8552-8B9D6EDB6692}']
    property Level: ILevel readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IBackgroundImage
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D86A159E-9B22-493B-BCF1-FAB445E25A57}
// *********************************************************************//
  IBackgroundImage = interface(IBackgroundImageBase)
    ['{D86A159E-9B22-493B-BCF1-FAB445E25A57}']
  end;

// *********************************************************************//
// DispIntf:  IBackgroundImageDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D86A159E-9B22-493B-BCF1-FAB445E25A57}
// *********************************************************************//
  IBackgroundImageDisp = dispinterface
    ['{D86A159E-9B22-493B-BCF1-FAB445E25A57}']
    property Level: ILevel readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IBoardDelFuncCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E16811B5-8945-45E4-ADD7-497856B23463}
// *********************************************************************//
  IBoardDelFuncCollection = interface(ICollectionBase)
    ['{E16811B5-8945-45E4-ADD7-497856B23463}']
  end;

// *********************************************************************//
// DispIntf:  IBoardDelFuncCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E16811B5-8945-45E4-ADD7-497856B23463}
// *********************************************************************//
  IBoardDelFuncCollectionDisp = dispinterface
    ['{E16811B5-8945-45E4-ADD7-497856B23463}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IBoardDelFuncContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9081AC7F-0A94-49E7-A19A-2E2DEDD7C895}
// *********************************************************************//
  IBoardDelFuncContainerBase = interface(IBoardDelFuncCollection)
    ['{9081AC7F-0A94-49E7-A19A-2E2DEDD7C895}']
    function Get_ItemByKey(Key: OleVariant): IBoardDelFunc; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddBoardDelFunc(Key: OleVariant; BoardDelFuncDataPts: OleVariant): IBoardDelFunc; safecall;
    function DuplicateBoardDelFunc(Source: OleVariant; NewKey: OleVariant): IBoardDelFunc; safecall;
    procedure RemoveBoardDelFunc(const BoardDelFunc: IBoardDelFunc); safecall;
    property ItemByKey[Key: OleVariant]: IBoardDelFunc read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IBoardDelFuncContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9081AC7F-0A94-49E7-A19A-2E2DEDD7C895}
// *********************************************************************//
  IBoardDelFuncContainerBaseDisp = dispinterface
    ['{9081AC7F-0A94-49E7-A19A-2E2DEDD7C895}']
    property ItemByKey[Key: OleVariant]: IBoardDelFunc readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddBoardDelFunc(Key: OleVariant; BoardDelFuncDataPts: OleVariant): IBoardDelFunc; dispid 1610874882;
    function DuplicateBoardDelFunc(Source: OleVariant; NewKey: OleVariant): IBoardDelFunc; dispid 1610874883;
    procedure RemoveBoardDelFunc(const BoardDelFunc: IBoardDelFunc); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IBoardDelFuncContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1BBFBD92-A8AC-4F8F-ADFA-E4E340B86452}
// *********************************************************************//
  IBoardDelFuncContainer = interface(IBoardDelFuncContainerBase)
    ['{1BBFBD92-A8AC-4F8F-ADFA-E4E340B86452}']
  end;

// *********************************************************************//
// DispIntf:  IBoardDelFuncContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1BBFBD92-A8AC-4F8F-ADFA-E4E340B86452}
// *********************************************************************//
  IBoardDelFuncContainerDisp = dispinterface
    ['{1BBFBD92-A8AC-4F8F-ADFA-E4E340B86452}']
    property ItemByKey[Key: OleVariant]: IBoardDelFunc readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddBoardDelFunc(Key: OleVariant; BoardDelFuncDataPts: OleVariant): IBoardDelFunc; dispid 1610874882;
    function DuplicateBoardDelFunc(Source: OleVariant; NewKey: OleVariant): IBoardDelFunc; dispid 1610874883;
    procedure RemoveBoardDelFunc(const BoardDelFunc: IBoardDelFunc); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IBoardDelFuncBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {86C759A0-E96A-4B01-9C7D-406D8F08BD22}
// *********************************************************************//
  IBoardDelFuncBase = interface(IObjectBase)
    ['{86C759A0-E96A-4B01-9C7D-406D8F08BD22}']
    function Get_BoardDelFuncDataPts: IBoardDelFuncDataPtContainer; safecall;
    property BoardDelFuncDataPts: IBoardDelFuncDataPtContainer read Get_BoardDelFuncDataPts;
  end;

// *********************************************************************//
// DispIntf:  IBoardDelFuncBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {86C759A0-E96A-4B01-9C7D-406D8F08BD22}
// *********************************************************************//
  IBoardDelFuncBaseDisp = dispinterface
    ['{86C759A0-E96A-4B01-9C7D-406D8F08BD22}']
    property BoardDelFuncDataPts: IBoardDelFuncDataPtContainer readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IBoardDelFunc
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8F0B12E8-E4FD-432E-89A3-E309F37AE58B}
// *********************************************************************//
  IBoardDelFunc = interface(IBoardDelFuncBase)
    ['{8F0B12E8-E4FD-432E-89A3-E309F37AE58B}']
  end;

// *********************************************************************//
// DispIntf:  IBoardDelFuncDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8F0B12E8-E4FD-432E-89A3-E309F37AE58B}
// *********************************************************************//
  IBoardDelFuncDisp = dispinterface
    ['{8F0B12E8-E4FD-432E-89A3-E309F37AE58B}']
    property BoardDelFuncDataPts: IBoardDelFuncDataPtContainer readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IBoardDelFuncDataPtCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {09625447-402B-4B50-A716-ABF97F603A45}
// *********************************************************************//
  IBoardDelFuncDataPtCollection = interface(ICollectionBase)
    ['{09625447-402B-4B50-A716-ABF97F603A45}']
  end;

// *********************************************************************//
// DispIntf:  IBoardDelFuncDataPtCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {09625447-402B-4B50-A716-ABF97F603A45}
// *********************************************************************//
  IBoardDelFuncDataPtCollectionDisp = dispinterface
    ['{09625447-402B-4B50-A716-ABF97F603A45}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IBoardDelFuncDataPtContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6B575D54-DE8D-4EBA-8652-72454FEA6DE5}
// *********************************************************************//
  IBoardDelFuncDataPtContainerBase = interface(IBoardDelFuncDataPtCollection)
    ['{6B575D54-DE8D-4EBA-8652-72454FEA6DE5}']
    procedure ReplaceAll(Elements: OleVariant); safecall;
  end;

// *********************************************************************//
// DispIntf:  IBoardDelFuncDataPtContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6B575D54-DE8D-4EBA-8652-72454FEA6DE5}
// *********************************************************************//
  IBoardDelFuncDataPtContainerBaseDisp = dispinterface
    ['{6B575D54-DE8D-4EBA-8652-72454FEA6DE5}']
    procedure ReplaceAll(Elements: OleVariant); dispid 1610874880;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IBoardDelFuncDataPtContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3BAA194D-AF25-42DB-9B21-3607DD55F64D}
// *********************************************************************//
  IBoardDelFuncDataPtContainer = interface(IBoardDelFuncDataPtContainerBase)
    ['{3BAA194D-AF25-42DB-9B21-3607DD55F64D}']
  end;

// *********************************************************************//
// DispIntf:  IBoardDelFuncDataPtContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3BAA194D-AF25-42DB-9B21-3607DD55F64D}
// *********************************************************************//
  IBoardDelFuncDataPtContainerDisp = dispinterface
    ['{3BAA194D-AF25-42DB-9B21-3607DD55F64D}']
    procedure ReplaceAll(Elements: OleVariant); dispid 1610874880;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IBoardDelTypeCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {01F35E07-34E0-4575-AFAE-ECE368FFFBF6}
// *********************************************************************//
  IBoardDelTypeCollection = interface(ICollectionBase)
    ['{01F35E07-34E0-4575-AFAE-ECE368FFFBF6}']
  end;

// *********************************************************************//
// DispIntf:  IBoardDelTypeCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {01F35E07-34E0-4575-AFAE-ECE368FFFBF6}
// *********************************************************************//
  IBoardDelTypeCollectionDisp = dispinterface
    ['{01F35E07-34E0-4575-AFAE-ECE368FFFBF6}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IBoardDelTypeContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F65B6DDC-0385-46CB-BA66-30348A8BEEA4}
// *********************************************************************//
  IBoardDelTypeContainerBase = interface(IBoardDelTypeCollection)
    ['{F65B6DDC-0385-46CB-BA66-30348A8BEEA4}']
    function Get_ItemByKey(Key: OleVariant): IBoardDelType; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddBoardDelType(Key: OleVariant): IBoardDelType; safecall;
    function DuplicateBoardDelType(Source: OleVariant; NewKey: OleVariant): IBoardDelType; safecall;
    procedure RemoveBoardDelType(const BoardDelType: IBoardDelType); safecall;
    property ItemByKey[Key: OleVariant]: IBoardDelType read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IBoardDelTypeContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F65B6DDC-0385-46CB-BA66-30348A8BEEA4}
// *********************************************************************//
  IBoardDelTypeContainerBaseDisp = dispinterface
    ['{F65B6DDC-0385-46CB-BA66-30348A8BEEA4}']
    property ItemByKey[Key: OleVariant]: IBoardDelType readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddBoardDelType(Key: OleVariant): IBoardDelType; dispid 1610874882;
    function DuplicateBoardDelType(Source: OleVariant; NewKey: OleVariant): IBoardDelType; dispid 1610874883;
    procedure RemoveBoardDelType(const BoardDelType: IBoardDelType); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IBoardDelTypeContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {16433D3A-B202-4BEF-B4CD-9F3906901FD2}
// *********************************************************************//
  IBoardDelTypeContainer = interface(IBoardDelTypeContainerBase)
    ['{16433D3A-B202-4BEF-B4CD-9F3906901FD2}']
  end;

// *********************************************************************//
// DispIntf:  IBoardDelTypeContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {16433D3A-B202-4BEF-B4CD-9F3906901FD2}
// *********************************************************************//
  IBoardDelTypeContainerDisp = dispinterface
    ['{16433D3A-B202-4BEF-B4CD-9F3906901FD2}']
    property ItemByKey[Key: OleVariant]: IBoardDelType readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddBoardDelType(Key: OleVariant): IBoardDelType; dispid 1610874882;
    function DuplicateBoardDelType(Source: OleVariant; NewKey: OleVariant): IBoardDelType; dispid 1610874883;
    procedure RemoveBoardDelType(const BoardDelType: IBoardDelType); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IBoardDelTypeBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {56BDB990-8E5C-4AD5-BE48-50DDC2742F72}
// *********************************************************************//
  IBoardDelTypeBase = interface(IObjectBase)
    ['{56BDB990-8E5C-4AD5-BE48-50DDC2742F72}']
    function Get_BoardDelTypeElements: IBoardDelTypeElementContainer; safecall;
    property BoardDelTypeElements: IBoardDelTypeElementContainer read Get_BoardDelTypeElements;
  end;

// *********************************************************************//
// DispIntf:  IBoardDelTypeBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {56BDB990-8E5C-4AD5-BE48-50DDC2742F72}
// *********************************************************************//
  IBoardDelTypeBaseDisp = dispinterface
    ['{56BDB990-8E5C-4AD5-BE48-50DDC2742F72}']
    property BoardDelTypeElements: IBoardDelTypeElementContainer readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IBoardDelType
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E3CB5B6E-EC34-4310-9184-69449A3D98EA}
// *********************************************************************//
  IBoardDelType = interface(IBoardDelTypeBase)
    ['{E3CB5B6E-EC34-4310-9184-69449A3D98EA}']
  end;

// *********************************************************************//
// DispIntf:  IBoardDelTypeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E3CB5B6E-EC34-4310-9184-69449A3D98EA}
// *********************************************************************//
  IBoardDelTypeDisp = dispinterface
    ['{E3CB5B6E-EC34-4310-9184-69449A3D98EA}']
    property BoardDelTypeElements: IBoardDelTypeElementContainer readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IBoardDelTypeElementCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {88157691-E33A-4DD1-A315-0CD359EF7C28}
// *********************************************************************//
  IBoardDelTypeElementCollection = interface(ICollectionBase)
    ['{88157691-E33A-4DD1-A315-0CD359EF7C28}']
  end;

// *********************************************************************//
// DispIntf:  IBoardDelTypeElementCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {88157691-E33A-4DD1-A315-0CD359EF7C28}
// *********************************************************************//
  IBoardDelTypeElementCollectionDisp = dispinterface
    ['{88157691-E33A-4DD1-A315-0CD359EF7C28}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IBoardDelTypeElementContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4BD72948-E8DB-4217-B050-0B75A551DEC2}
// *********************************************************************//
  IBoardDelTypeElementContainerBase = interface(IBoardDelTypeElementCollection)
    ['{4BD72948-E8DB-4217-B050-0B75A551DEC2}']
    procedure RemoveBoardDelTypeElement(const BoardDelTypeElement: IBoardDelTypeElement); safecall;
  end;

// *********************************************************************//
// DispIntf:  IBoardDelTypeElementContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4BD72948-E8DB-4217-B050-0B75A551DEC2}
// *********************************************************************//
  IBoardDelTypeElementContainerBaseDisp = dispinterface
    ['{4BD72948-E8DB-4217-B050-0B75A551DEC2}']
    procedure RemoveBoardDelTypeElement(const BoardDelTypeElement: IBoardDelTypeElement); dispid 1610874880;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IBoardDelTypeElementContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C622E672-9D08-429C-A55F-79CCBCF8C9E9}
// *********************************************************************//
  IBoardDelTypeElementContainer = interface(IBoardDelTypeElementContainerBase)
    ['{C622E672-9D08-429C-A55F-79CCBCF8C9E9}']
    function AddBoardDelTypeElement(const PedClass: IPedestrianClass): IBoardDelTypeElement; safecall;
  end;

// *********************************************************************//
// DispIntf:  IBoardDelTypeElementContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C622E672-9D08-429C-A55F-79CCBCF8C9E9}
// *********************************************************************//
  IBoardDelTypeElementContainerDisp = dispinterface
    ['{C622E672-9D08-429C-A55F-79CCBCF8C9E9}']
    function AddBoardDelTypeElement(const PedClass: IPedestrianClass): IBoardDelTypeElement; dispid 1610940416;
    procedure RemoveBoardDelTypeElement(const BoardDelTypeElement: IBoardDelTypeElement); dispid 1610874880;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IBoardDelTypeElementBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {00D7CC2F-4D6C-4F1A-B0DE-91179850DA67}
// *********************************************************************//
  IBoardDelTypeElementBase = interface(IObjectBase)
    ['{00D7CC2F-4D6C-4F1A-B0DE-91179850DA67}']
    function Get_BoardDelType: IBoardDelType; safecall;
    function Get_PedClass: IPedestrianClass; safecall;
    function Get_BoardDelFunc: IBoardDelFunc; safecall;
    property BoardDelType: IBoardDelType read Get_BoardDelType;
    property PedClass: IPedestrianClass read Get_PedClass;
    property BoardDelFunc: IBoardDelFunc read Get_BoardDelFunc;
  end;

// *********************************************************************//
// DispIntf:  IBoardDelTypeElementBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {00D7CC2F-4D6C-4F1A-B0DE-91179850DA67}
// *********************************************************************//
  IBoardDelTypeElementBaseDisp = dispinterface
    ['{00D7CC2F-4D6C-4F1A-B0DE-91179850DA67}']
    property BoardDelType: IBoardDelType readonly dispid 1610809344;
    property PedClass: IPedestrianClass readonly dispid 1610809345;
    property BoardDelFunc: IBoardDelFunc readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IBoardDelTypeElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {33965030-8698-46DD-B871-6ED9C875846A}
// *********************************************************************//
  IBoardDelTypeElement = interface(IBoardDelTypeElementBase)
    ['{33965030-8698-46DD-B871-6ED9C875846A}']
  end;

// *********************************************************************//
// DispIntf:  IBoardDelTypeElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {33965030-8698-46DD-B871-6ED9C875846A}
// *********************************************************************//
  IBoardDelTypeElementDisp = dispinterface
    ['{33965030-8698-46DD-B871-6ED9C875846A}']
    property BoardDelType: IBoardDelType readonly dispid 1610809344;
    property PedClass: IPedestrianClass readonly dispid 1610809345;
    property BoardDelFunc: IBoardDelFunc readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ICameraPositionCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E28F9DDA-A9AA-43E2-9579-4BF2A2EBF3A7}
// *********************************************************************//
  ICameraPositionCollection = interface(ICollectionBase)
    ['{E28F9DDA-A9AA-43E2-9579-4BF2A2EBF3A7}']
  end;

// *********************************************************************//
// DispIntf:  ICameraPositionCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E28F9DDA-A9AA-43E2-9579-4BF2A2EBF3A7}
// *********************************************************************//
  ICameraPositionCollectionDisp = dispinterface
    ['{E28F9DDA-A9AA-43E2-9579-4BF2A2EBF3A7}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ICameraPositionContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4E3BF665-BB41-4906-A101-2A5E8F886DE4}
// *********************************************************************//
  ICameraPositionContainerBase = interface(ICameraPositionCollection)
    ['{4E3BF665-BB41-4906-A101-2A5E8F886DE4}']
    function Get_ItemByKey(Key: OleVariant): ICameraPosition; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddCameraPosition(Key: OleVariant; const CoordWktPoint3D: WideString): ICameraPosition; safecall;
    function DuplicateCameraPosition(Source: OleVariant; NewKey: OleVariant): ICameraPosition; safecall;
    procedure RemoveCameraPosition(const CameraPosition: ICameraPosition); safecall;
    property ItemByKey[Key: OleVariant]: ICameraPosition read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  ICameraPositionContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4E3BF665-BB41-4906-A101-2A5E8F886DE4}
// *********************************************************************//
  ICameraPositionContainerBaseDisp = dispinterface
    ['{4E3BF665-BB41-4906-A101-2A5E8F886DE4}']
    property ItemByKey[Key: OleVariant]: ICameraPosition readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddCameraPosition(Key: OleVariant; const CoordWktPoint3D: WideString): ICameraPosition; dispid 1610874882;
    function DuplicateCameraPosition(Source: OleVariant; NewKey: OleVariant): ICameraPosition; dispid 1610874883;
    procedure RemoveCameraPosition(const CameraPosition: ICameraPosition); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ICameraPositionContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {70336FDA-7A7B-4468-A7AA-8F3EC9C336C8}
// *********************************************************************//
  ICameraPositionContainer = interface(ICameraPositionContainerBase)
    ['{70336FDA-7A7B-4468-A7AA-8F3EC9C336C8}']
  end;

// *********************************************************************//
// DispIntf:  ICameraPositionContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {70336FDA-7A7B-4468-A7AA-8F3EC9C336C8}
// *********************************************************************//
  ICameraPositionContainerDisp = dispinterface
    ['{70336FDA-7A7B-4468-A7AA-8F3EC9C336C8}']
    property ItemByKey[Key: OleVariant]: ICameraPosition readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddCameraPosition(Key: OleVariant; const CoordWktPoint3D: WideString): ICameraPosition; dispid 1610874882;
    function DuplicateCameraPosition(Source: OleVariant; NewKey: OleVariant): ICameraPosition; dispid 1610874883;
    procedure RemoveCameraPosition(const CameraPosition: ICameraPosition); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ICameraPositionBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5AEAF3F4-CEFC-4AE4-956C-1D3DD152DD8E}
// *********************************************************************//
  ICameraPositionBase = interface(IObjectBase)
    ['{5AEAF3F4-CEFC-4AE4-956C-1D3DD152DD8E}']
  end;

// *********************************************************************//
// DispIntf:  ICameraPositionBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5AEAF3F4-CEFC-4AE4-956C-1D3DD152DD8E}
// *********************************************************************//
  ICameraPositionBaseDisp = dispinterface
    ['{5AEAF3F4-CEFC-4AE4-956C-1D3DD152DD8E}']
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ICameraPosition
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1E8D8546-C0BE-419B-8800-EF846D1C52AF}
// *********************************************************************//
  ICameraPosition = interface(ICameraPositionBase)
    ['{1E8D8546-C0BE-419B-8800-EF846D1C52AF}']
  end;

// *********************************************************************//
// DispIntf:  ICameraPositionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1E8D8546-C0BE-419B-8800-EF846D1C52AF}
// *********************************************************************//
  ICameraPositionDisp = dispinterface
    ['{1E8D8546-C0BE-419B-8800-EF846D1C52AF}']
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IColorDistributionCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A1CDFEFC-A0B5-4EC3-80A0-27918CC3D46F}
// *********************************************************************//
  IColorDistributionCollection = interface(ICollectionBase)
    ['{A1CDFEFC-A0B5-4EC3-80A0-27918CC3D46F}']
  end;

// *********************************************************************//
// DispIntf:  IColorDistributionCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A1CDFEFC-A0B5-4EC3-80A0-27918CC3D46F}
// *********************************************************************//
  IColorDistributionCollectionDisp = dispinterface
    ['{A1CDFEFC-A0B5-4EC3-80A0-27918CC3D46F}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IColorDistributionContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BD2A3EB7-7AD0-440B-BE85-EBF8E19AB1E8}
// *********************************************************************//
  IColorDistributionContainerBase = interface(IColorDistributionCollection)
    ['{BD2A3EB7-7AD0-440B-BE85-EBF8E19AB1E8}']
    function Get_ItemByKey(Key: OleVariant): IColorDistribution; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddColorDistribution(Key: OleVariant; ColorDistrEl: OleVariant): IColorDistribution; safecall;
    function DuplicateColorDistribution(Source: OleVariant; NewKey: OleVariant): IColorDistribution; safecall;
    procedure RemoveColorDistribution(const ColorDistribution: IColorDistribution); safecall;
    property ItemByKey[Key: OleVariant]: IColorDistribution read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IColorDistributionContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BD2A3EB7-7AD0-440B-BE85-EBF8E19AB1E8}
// *********************************************************************//
  IColorDistributionContainerBaseDisp = dispinterface
    ['{BD2A3EB7-7AD0-440B-BE85-EBF8E19AB1E8}']
    property ItemByKey[Key: OleVariant]: IColorDistribution readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddColorDistribution(Key: OleVariant; ColorDistrEl: OleVariant): IColorDistribution; dispid 1610874882;
    function DuplicateColorDistribution(Source: OleVariant; NewKey: OleVariant): IColorDistribution; dispid 1610874883;
    procedure RemoveColorDistribution(const ColorDistribution: IColorDistribution); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IColorDistributionContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CC521C1F-C550-49A0-867E-E33A1B988B44}
// *********************************************************************//
  IColorDistributionContainer = interface(IColorDistributionContainerBase)
    ['{CC521C1F-C550-49A0-867E-E33A1B988B44}']
  end;

// *********************************************************************//
// DispIntf:  IColorDistributionContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CC521C1F-C550-49A0-867E-E33A1B988B44}
// *********************************************************************//
  IColorDistributionContainerDisp = dispinterface
    ['{CC521C1F-C550-49A0-867E-E33A1B988B44}']
    property ItemByKey[Key: OleVariant]: IColorDistribution readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddColorDistribution(Key: OleVariant; ColorDistrEl: OleVariant): IColorDistribution; dispid 1610874882;
    function DuplicateColorDistribution(Source: OleVariant; NewKey: OleVariant): IColorDistribution; dispid 1610874883;
    procedure RemoveColorDistribution(const ColorDistribution: IColorDistribution); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IColorDistributionBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D02E0B89-0752-43A5-AC68-A42291B2DB19}
// *********************************************************************//
  IColorDistributionBase = interface(IObjectBase)
    ['{D02E0B89-0752-43A5-AC68-A42291B2DB19}']
    function Get_ColorDistrEl: IColorDistributionElementContainer; safecall;
    property ColorDistrEl: IColorDistributionElementContainer read Get_ColorDistrEl;
  end;

// *********************************************************************//
// DispIntf:  IColorDistributionBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D02E0B89-0752-43A5-AC68-A42291B2DB19}
// *********************************************************************//
  IColorDistributionBaseDisp = dispinterface
    ['{D02E0B89-0752-43A5-AC68-A42291B2DB19}']
    property ColorDistrEl: IColorDistributionElementContainer readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IColorDistribution
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E793EC9-9D96-4DE1-8C69-6DD308FFFD41}
// *********************************************************************//
  IColorDistribution = interface(IColorDistributionBase)
    ['{3E793EC9-9D96-4DE1-8C69-6DD308FFFD41}']
  end;

// *********************************************************************//
// DispIntf:  IColorDistributionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E793EC9-9D96-4DE1-8C69-6DD308FFFD41}
// *********************************************************************//
  IColorDistributionDisp = dispinterface
    ['{3E793EC9-9D96-4DE1-8C69-6DD308FFFD41}']
    property ColorDistrEl: IColorDistributionElementContainer readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IColorDistributionElementCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {64EAEE66-7F80-430C-9EFC-FAE9C8920825}
// *********************************************************************//
  IColorDistributionElementCollection = interface(ICollectionBase)
    ['{64EAEE66-7F80-430C-9EFC-FAE9C8920825}']
  end;

// *********************************************************************//
// DispIntf:  IColorDistributionElementCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {64EAEE66-7F80-430C-9EFC-FAE9C8920825}
// *********************************************************************//
  IColorDistributionElementCollectionDisp = dispinterface
    ['{64EAEE66-7F80-430C-9EFC-FAE9C8920825}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IColorDistributionElementContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8AF2148D-3EC7-4222-AADF-65551D4253A2}
// *********************************************************************//
  IColorDistributionElementContainerBase = interface(IColorDistributionElementCollection)
    ['{8AF2148D-3EC7-4222-AADF-65551D4253A2}']
    function AddColorDistributionElement(Key: OleVariant; const Color: WideString): IColorDistributionElement; safecall;
    procedure ReplaceAll(Elements: OleVariant); safecall;
    procedure RemoveColorDistributionElement(const ColorDistributionElement: IColorDistributionElement); safecall;
  end;

// *********************************************************************//
// DispIntf:  IColorDistributionElementContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8AF2148D-3EC7-4222-AADF-65551D4253A2}
// *********************************************************************//
  IColorDistributionElementContainerBaseDisp = dispinterface
    ['{8AF2148D-3EC7-4222-AADF-65551D4253A2}']
    function AddColorDistributionElement(Key: OleVariant; const Color: WideString): IColorDistributionElement; dispid 1610874880;
    procedure ReplaceAll(Elements: OleVariant); dispid 1610874881;
    procedure RemoveColorDistributionElement(const ColorDistributionElement: IColorDistributionElement); dispid 1610874882;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IColorDistributionElementContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {83F1B405-335D-4ECA-8AAA-D9FF32BFC7C4}
// *********************************************************************//
  IColorDistributionElementContainer = interface(IColorDistributionElementContainerBase)
    ['{83F1B405-335D-4ECA-8AAA-D9FF32BFC7C4}']
  end;

// *********************************************************************//
// DispIntf:  IColorDistributionElementContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {83F1B405-335D-4ECA-8AAA-D9FF32BFC7C4}
// *********************************************************************//
  IColorDistributionElementContainerDisp = dispinterface
    ['{83F1B405-335D-4ECA-8AAA-D9FF32BFC7C4}']
    function AddColorDistributionElement(Key: OleVariant; const Color: WideString): IColorDistributionElement; dispid 1610874880;
    procedure ReplaceAll(Elements: OleVariant); dispid 1610874881;
    procedure RemoveColorDistributionElement(const ColorDistributionElement: IColorDistributionElement); dispid 1610874882;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IColorDistributionElementBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {401780EE-7659-480F-B79E-4CD157681C62}
// *********************************************************************//
  IColorDistributionElementBase = interface(IObjectBase)
    ['{401780EE-7659-480F-B79E-4CD157681C62}']
    function Get_ColorDistr: IColorDistribution; safecall;
    property ColorDistr: IColorDistribution read Get_ColorDistr;
  end;

// *********************************************************************//
// DispIntf:  IColorDistributionElementBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {401780EE-7659-480F-B79E-4CD157681C62}
// *********************************************************************//
  IColorDistributionElementBaseDisp = dispinterface
    ['{401780EE-7659-480F-B79E-4CD157681C62}']
    property ColorDistr: IColorDistribution readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IColorDistributionElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {68B4AABB-AE69-4F3B-A3D9-02A3B78262D4}
// *********************************************************************//
  IColorDistributionElement = interface(IColorDistributionElementBase)
    ['{68B4AABB-AE69-4F3B-A3D9-02A3B78262D4}']
  end;

// *********************************************************************//
// DispIntf:  IColorDistributionElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {68B4AABB-AE69-4F3B-A3D9-02A3B78262D4}
// *********************************************************************//
  IColorDistributionElementDisp = dispinterface
    ['{68B4AABB-AE69-4F3B-A3D9-02A3B78262D4}']
    property ColorDistr: IColorDistribution readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IConflictAreaCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CC982D58-32BC-4AE0-9F86-E1DA758B592F}
// *********************************************************************//
  IConflictAreaCollection = interface(ICollectionBase)
    ['{CC982D58-32BC-4AE0-9F86-E1DA758B592F}']
  end;

// *********************************************************************//
// DispIntf:  IConflictAreaCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CC982D58-32BC-4AE0-9F86-E1DA758B592F}
// *********************************************************************//
  IConflictAreaCollectionDisp = dispinterface
    ['{CC982D58-32BC-4AE0-9F86-E1DA758B592F}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IConflictAreaContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7442D3EF-E1AC-4A9C-AD31-4EB67461FC4B}
// *********************************************************************//
  IConflictAreaContainerBase = interface(IConflictAreaCollection)
    ['{7442D3EF-E1AC-4A9C-AD31-4EB67461FC4B}']
    function Get_ItemByKey(Key: OleVariant): IConflictArea; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    property ItemByKey[Key: OleVariant]: IConflictArea read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IConflictAreaContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7442D3EF-E1AC-4A9C-AD31-4EB67461FC4B}
// *********************************************************************//
  IConflictAreaContainerBaseDisp = dispinterface
    ['{7442D3EF-E1AC-4A9C-AD31-4EB67461FC4B}']
    property ItemByKey[Key: OleVariant]: IConflictArea readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IConflictAreaContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {826B7012-855C-4EF4-8AFB-ABAEFDFA72BD}
// *********************************************************************//
  IConflictAreaContainer = interface(IConflictAreaContainerBase)
    ['{826B7012-855C-4EF4-8AFB-ABAEFDFA72BD}']
  end;

// *********************************************************************//
// DispIntf:  IConflictAreaContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {826B7012-855C-4EF4-8AFB-ABAEFDFA72BD}
// *********************************************************************//
  IConflictAreaContainerDisp = dispinterface
    ['{826B7012-855C-4EF4-8AFB-ABAEFDFA72BD}']
    property ItemByKey[Key: OleVariant]: IConflictArea readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IConflictAreaBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B67D7AB2-0950-4807-81DF-59A112AC514E}
// *********************************************************************//
  IConflictAreaBase = interface(IObjectBase)
    ['{B67D7AB2-0950-4807-81DF-59A112AC514E}']
    function Get_Link2: ILink; safecall;
    function Get_Link1: ILink; safecall;
    function Get_VehClassGaps: IVehClassGapContainer; safecall;
    property Link2: ILink read Get_Link2;
    property Link1: ILink read Get_Link1;
    property VehClassGaps: IVehClassGapContainer read Get_VehClassGaps;
  end;

// *********************************************************************//
// DispIntf:  IConflictAreaBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B67D7AB2-0950-4807-81DF-59A112AC514E}
// *********************************************************************//
  IConflictAreaBaseDisp = dispinterface
    ['{B67D7AB2-0950-4807-81DF-59A112AC514E}']
    property Link2: ILink readonly dispid 1610809344;
    property Link1: ILink readonly dispid 1610809345;
    property VehClassGaps: IVehClassGapContainer readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IConflictArea
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {380FF088-041F-4BB1-B90D-B870CFA4F26E}
// *********************************************************************//
  IConflictArea = interface(IConflictAreaBase)
    ['{380FF088-041F-4BB1-B90D-B870CFA4F26E}']
  end;

// *********************************************************************//
// DispIntf:  IConflictAreaDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {380FF088-041F-4BB1-B90D-B870CFA4F26E}
// *********************************************************************//
  IConflictAreaDisp = dispinterface
    ['{380FF088-041F-4BB1-B90D-B870CFA4F26E}']
    property Link2: ILink readonly dispid 1610809344;
    property Link1: ILink readonly dispid 1610809345;
    property VehClassGaps: IVehClassGapContainer readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ILinkBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B1B21330-1A7D-4030-B339-BF548020D13F}
// *********************************************************************//
  ILinkBase = interface(IObjectBase)
    ['{B1B21330-1A7D-4030-B339-BF548020D13F}']
    function Get_Lanes: ILaneContainer; safecall;
    function Get_BlockedVehClassesDynAssign: IVehicleClassCollection; safecall;
    function Get_FromLane: ILane; safecall;
    function Get_ToLane: ILane; safecall;
    function Get_LinkPolyPts: ILinkPolyPointContainer; safecall;
    function Get_LinkBehavType: ILinkBehaviorType; safecall;
    function Get_DisplayType: IDisplayType; safecall;
    function Get_LnChgDistDistrDef: IDistanceDistribution; safecall;
    function Get_LnChgDistDistrs: ILinkLnChgDistDistrAttrElementContainer; safecall;
    function Get_FromLink: ILink; safecall;
    function Get_ToLink: ILink; safecall;
    function Get_Level: ILevel; safecall;
    function Get_AreaBehavType: IAreaBehaviorType; safecall;
    function Get_RvsPedLink: ILink; safecall;
    function Get_Vehs: IVehicleCollection; safecall;
    function Get_VehRoutSta: IVehicleRouteStaticCollection; safecall;
    function Get_VehRoutClos: IVehicleRouteClosureCollection; safecall;
    function Get_VehRoutMngLns: IVehicleRouteManagedLanesCollection; safecall;
    function Get_VehRoutPart: IVehicleRoutePartialCollection; safecall;
    function Get_VehRoutPark: IVehicleRouteParkingCollection; safecall;
    function Get_PartPTRout: IVehicleRoutePartialPTCollection; safecall;
    function Get_PTLines: IPTLineCollection; safecall;
    function Get_VehInputs: IVehicleInputCollection; safecall;
    function Get_ConflictAreas: IConflictAreaCollection; safecall;
    function Get_ParkLots: IParkingLotCollection; safecall;
    function Get_QueueCounters: IQueueCounterCollection; safecall;
    function Get_VehTravTmMeas: IVehicleTravelTimeMeasurementCollection; safecall;
    function Get_VehRoutDecsSta: IVehicleRoutingDecisionStaticCollection; safecall;
    function Get_VehRoutDecsPart: IVehicleRoutingDecisionPartialCollection; safecall;
    function Get_VehRoutDecsPark: IVehicleRoutingDecisionParkingCollection; safecall;
    function Get_VehRoutDecsDyn: IVehicleRoutingDecisionDynamicCollection; safecall;
    function Get_VehRoutDecsMngLns: IVehicleRoutingDecisionManagedLanesCollection; safecall;
    function Get_VehRoutDecsPartPT: IVehicleRoutingDecisionPartialPTCollection; safecall;
    function Get_VehClassCountedDatas: IVehClassCountedDataContainer; safecall;
    function Get_Peds: IPedestrianCollection; safecall;
    function Get_DynAssignEdges: IEdgeCollection; safecall;
    function Get_DynAssignTurns: IEdgeCollection; safecall;
    function Get_EvalEdges: IEdgeCollection; safecall;
    function Get_EvalTurns: IEdgeCollection; safecall;
    property Lanes: ILaneContainer read Get_Lanes;
    property BlockedVehClassesDynAssign: IVehicleClassCollection read Get_BlockedVehClassesDynAssign;
    property FromLane: ILane read Get_FromLane;
    property ToLane: ILane read Get_ToLane;
    property LinkPolyPts: ILinkPolyPointContainer read Get_LinkPolyPts;
    property LinkBehavType: ILinkBehaviorType read Get_LinkBehavType;
    property DisplayType: IDisplayType read Get_DisplayType;
    property LnChgDistDistrDef: IDistanceDistribution read Get_LnChgDistDistrDef;
    property LnChgDistDistrs: ILinkLnChgDistDistrAttrElementContainer read Get_LnChgDistDistrs;
    property FromLink: ILink read Get_FromLink;
    property ToLink: ILink read Get_ToLink;
    property Level: ILevel read Get_Level;
    property AreaBehavType: IAreaBehaviorType read Get_AreaBehavType;
    property RvsPedLink: ILink read Get_RvsPedLink;
    property Vehs: IVehicleCollection read Get_Vehs;
    property VehRoutSta: IVehicleRouteStaticCollection read Get_VehRoutSta;
    property VehRoutClos: IVehicleRouteClosureCollection read Get_VehRoutClos;
    property VehRoutMngLns: IVehicleRouteManagedLanesCollection read Get_VehRoutMngLns;
    property VehRoutPart: IVehicleRoutePartialCollection read Get_VehRoutPart;
    property VehRoutPark: IVehicleRouteParkingCollection read Get_VehRoutPark;
    property PartPTRout: IVehicleRoutePartialPTCollection read Get_PartPTRout;
    property PTLines: IPTLineCollection read Get_PTLines;
    property VehInputs: IVehicleInputCollection read Get_VehInputs;
    property ConflictAreas: IConflictAreaCollection read Get_ConflictAreas;
    property ParkLots: IParkingLotCollection read Get_ParkLots;
    property QueueCounters: IQueueCounterCollection read Get_QueueCounters;
    property VehTravTmMeas: IVehicleTravelTimeMeasurementCollection read Get_VehTravTmMeas;
    property VehRoutDecsSta: IVehicleRoutingDecisionStaticCollection read Get_VehRoutDecsSta;
    property VehRoutDecsPart: IVehicleRoutingDecisionPartialCollection read Get_VehRoutDecsPart;
    property VehRoutDecsPark: IVehicleRoutingDecisionParkingCollection read Get_VehRoutDecsPark;
    property VehRoutDecsDyn: IVehicleRoutingDecisionDynamicCollection read Get_VehRoutDecsDyn;
    property VehRoutDecsMngLns: IVehicleRoutingDecisionManagedLanesCollection read Get_VehRoutDecsMngLns;
    property VehRoutDecsPartPT: IVehicleRoutingDecisionPartialPTCollection read Get_VehRoutDecsPartPT;
    property VehClassCountedDatas: IVehClassCountedDataContainer read Get_VehClassCountedDatas;
    property Peds: IPedestrianCollection read Get_Peds;
    property DynAssignEdges: IEdgeCollection read Get_DynAssignEdges;
    property DynAssignTurns: IEdgeCollection read Get_DynAssignTurns;
    property EvalEdges: IEdgeCollection read Get_EvalEdges;
    property EvalTurns: IEdgeCollection read Get_EvalTurns;
  end;

// *********************************************************************//
// DispIntf:  ILinkBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B1B21330-1A7D-4030-B339-BF548020D13F}
// *********************************************************************//
  ILinkBaseDisp = dispinterface
    ['{B1B21330-1A7D-4030-B339-BF548020D13F}']
    property Lanes: ILaneContainer readonly dispid 1610809344;
    property BlockedVehClassesDynAssign: IVehicleClassCollection readonly dispid 1610809345;
    property FromLane: ILane readonly dispid 1610809346;
    property ToLane: ILane readonly dispid 1610809347;
    property LinkPolyPts: ILinkPolyPointContainer readonly dispid 1610809348;
    property LinkBehavType: ILinkBehaviorType readonly dispid 1610809349;
    property DisplayType: IDisplayType readonly dispid 1610809350;
    property LnChgDistDistrDef: IDistanceDistribution readonly dispid 1610809351;
    property LnChgDistDistrs: ILinkLnChgDistDistrAttrElementContainer readonly dispid 1610809352;
    property FromLink: ILink readonly dispid 1610809353;
    property ToLink: ILink readonly dispid 1610809354;
    property Level: ILevel readonly dispid 1610809355;
    property AreaBehavType: IAreaBehaviorType readonly dispid 1610809356;
    property RvsPedLink: ILink readonly dispid 1610809357;
    property Vehs: IVehicleCollection readonly dispid 1610809358;
    property VehRoutSta: IVehicleRouteStaticCollection readonly dispid 1610809359;
    property VehRoutClos: IVehicleRouteClosureCollection readonly dispid 1610809360;
    property VehRoutMngLns: IVehicleRouteManagedLanesCollection readonly dispid 1610809361;
    property VehRoutPart: IVehicleRoutePartialCollection readonly dispid 1610809362;
    property VehRoutPark: IVehicleRouteParkingCollection readonly dispid 1610809363;
    property PartPTRout: IVehicleRoutePartialPTCollection readonly dispid 1610809364;
    property PTLines: IPTLineCollection readonly dispid 1610809365;
    property VehInputs: IVehicleInputCollection readonly dispid 1610809366;
    property ConflictAreas: IConflictAreaCollection readonly dispid 1610809367;
    property ParkLots: IParkingLotCollection readonly dispid 1610809368;
    property QueueCounters: IQueueCounterCollection readonly dispid 1610809369;
    property VehTravTmMeas: IVehicleTravelTimeMeasurementCollection readonly dispid 1610809370;
    property VehRoutDecsSta: IVehicleRoutingDecisionStaticCollection readonly dispid 1610809371;
    property VehRoutDecsPart: IVehicleRoutingDecisionPartialCollection readonly dispid 1610809372;
    property VehRoutDecsPark: IVehicleRoutingDecisionParkingCollection readonly dispid 1610809373;
    property VehRoutDecsDyn: IVehicleRoutingDecisionDynamicCollection readonly dispid 1610809374;
    property VehRoutDecsMngLns: IVehicleRoutingDecisionManagedLanesCollection readonly dispid 1610809375;
    property VehRoutDecsPartPT: IVehicleRoutingDecisionPartialPTCollection readonly dispid 1610809376;
    property VehClassCountedDatas: IVehClassCountedDataContainer readonly dispid 1610809377;
    property Peds: IPedestrianCollection readonly dispid 1610809378;
    property DynAssignEdges: IEdgeCollection readonly dispid 1610809379;
    property DynAssignTurns: IEdgeCollection readonly dispid 1610809380;
    property EvalEdges: IEdgeCollection readonly dispid 1610809381;
    property EvalTurns: IEdgeCollection readonly dispid 1610809382;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ILink
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0D980298-675C-4BE7-9BED-4E91084A4381}
// *********************************************************************//
  ILink = interface(ILinkBase)
    ['{0D980298-675C-4BE7-9BED-4E91084A4381}']
    procedure RecalculateSpline; safecall;
    procedure RecalculateSplineHeight; safecall;
    procedure MoveLinkDuringSimulation(dx: Double; dy: Double; dz: Double; rotAngle: Double); safecall;
    procedure MoveLinkToPointDuringSimulation(x: Double; y: Double; z: Double); safecall;
    function Get_Points3D: ILinkPolyPointContainer; safecall;
    procedure InvertDirection; safecall;
    function SplitLink(splitPos: Double; desiredSplitDistance: Double; generateConnector: WordBool): ILink; safecall;
    property Points3D: ILinkPolyPointContainer read Get_Points3D;
  end;

// *********************************************************************//
// DispIntf:  ILinkDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0D980298-675C-4BE7-9BED-4E91084A4381}
// *********************************************************************//
  ILinkDisp = dispinterface
    ['{0D980298-675C-4BE7-9BED-4E91084A4381}']
    procedure RecalculateSpline; dispid 1610874880;
    procedure RecalculateSplineHeight; dispid 1610874881;
    procedure MoveLinkDuringSimulation(dx: Double; dy: Double; dz: Double; rotAngle: Double); dispid 1610874882;
    procedure MoveLinkToPointDuringSimulation(x: Double; y: Double; z: Double); dispid 1610874883;
    property Points3D: ILinkPolyPointContainer readonly dispid 1610874884;
    procedure InvertDirection; dispid 1610874885;
    function SplitLink(splitPos: Double; desiredSplitDistance: Double; generateConnector: WordBool): ILink; dispid 1610874886;
    property Lanes: ILaneContainer readonly dispid 1610809344;
    property BlockedVehClassesDynAssign: IVehicleClassCollection readonly dispid 1610809345;
    property FromLane: ILane readonly dispid 1610809346;
    property ToLane: ILane readonly dispid 1610809347;
    property LinkPolyPts: ILinkPolyPointContainer readonly dispid 1610809348;
    property LinkBehavType: ILinkBehaviorType readonly dispid 1610809349;
    property DisplayType: IDisplayType readonly dispid 1610809350;
    property LnChgDistDistrDef: IDistanceDistribution readonly dispid 1610809351;
    property LnChgDistDistrs: ILinkLnChgDistDistrAttrElementContainer readonly dispid 1610809352;
    property FromLink: ILink readonly dispid 1610809353;
    property ToLink: ILink readonly dispid 1610809354;
    property Level: ILevel readonly dispid 1610809355;
    property AreaBehavType: IAreaBehaviorType readonly dispid 1610809356;
    property RvsPedLink: ILink readonly dispid 1610809357;
    property Vehs: IVehicleCollection readonly dispid 1610809358;
    property VehRoutSta: IVehicleRouteStaticCollection readonly dispid 1610809359;
    property VehRoutClos: IVehicleRouteClosureCollection readonly dispid 1610809360;
    property VehRoutMngLns: IVehicleRouteManagedLanesCollection readonly dispid 1610809361;
    property VehRoutPart: IVehicleRoutePartialCollection readonly dispid 1610809362;
    property VehRoutPark: IVehicleRouteParkingCollection readonly dispid 1610809363;
    property PartPTRout: IVehicleRoutePartialPTCollection readonly dispid 1610809364;
    property PTLines: IPTLineCollection readonly dispid 1610809365;
    property VehInputs: IVehicleInputCollection readonly dispid 1610809366;
    property ConflictAreas: IConflictAreaCollection readonly dispid 1610809367;
    property ParkLots: IParkingLotCollection readonly dispid 1610809368;
    property QueueCounters: IQueueCounterCollection readonly dispid 1610809369;
    property VehTravTmMeas: IVehicleTravelTimeMeasurementCollection readonly dispid 1610809370;
    property VehRoutDecsSta: IVehicleRoutingDecisionStaticCollection readonly dispid 1610809371;
    property VehRoutDecsPart: IVehicleRoutingDecisionPartialCollection readonly dispid 1610809372;
    property VehRoutDecsPark: IVehicleRoutingDecisionParkingCollection readonly dispid 1610809373;
    property VehRoutDecsDyn: IVehicleRoutingDecisionDynamicCollection readonly dispid 1610809374;
    property VehRoutDecsMngLns: IVehicleRoutingDecisionManagedLanesCollection readonly dispid 1610809375;
    property VehRoutDecsPartPT: IVehicleRoutingDecisionPartialPTCollection readonly dispid 1610809376;
    property VehClassCountedDatas: IVehClassCountedDataContainer readonly dispid 1610809377;
    property Peds: IPedestrianCollection readonly dispid 1610809378;
    property DynAssignEdges: IEdgeCollection readonly dispid 1610809379;
    property DynAssignTurns: IEdgeCollection readonly dispid 1610809380;
    property EvalEdges: IEdgeCollection readonly dispid 1610809381;
    property EvalTurns: IEdgeCollection readonly dispid 1610809382;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ILaneCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5937C064-94BD-447A-AAE4-B0DDB5E7ED26}
// *********************************************************************//
  ILaneCollection = interface(ICollectionBase)
    ['{5937C064-94BD-447A-AAE4-B0DDB5E7ED26}']
  end;

// *********************************************************************//
// DispIntf:  ILaneCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5937C064-94BD-447A-AAE4-B0DDB5E7ED26}
// *********************************************************************//
  ILaneCollectionDisp = dispinterface
    ['{5937C064-94BD-447A-AAE4-B0DDB5E7ED26}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ILaneContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6EC23949-7C58-4B5C-8FE2-245E49CD4838}
// *********************************************************************//
  ILaneContainerBase = interface(ILaneCollection)
    ['{6EC23949-7C58-4B5C-8FE2-245E49CD4838}']
    function Get_ItemByKey(Key: OleVariant): ILane; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddLane(Key: OleVariant; Width: Double): ILane; safecall;
    procedure RemoveLane(const Lane: ILane); safecall;
    property ItemByKey[Key: OleVariant]: ILane read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  ILaneContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6EC23949-7C58-4B5C-8FE2-245E49CD4838}
// *********************************************************************//
  ILaneContainerBaseDisp = dispinterface
    ['{6EC23949-7C58-4B5C-8FE2-245E49CD4838}']
    property ItemByKey[Key: OleVariant]: ILane readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddLane(Key: OleVariant; Width: Double): ILane; dispid 1610874882;
    procedure RemoveLane(const Lane: ILane); dispid 1610874883;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ILaneContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {ECE2CA64-52A4-4782-A6B6-1D266D459B17}
// *********************************************************************//
  ILaneContainer = interface(ILaneContainerBase)
    ['{ECE2CA64-52A4-4782-A6B6-1D266D459B17}']
  end;

// *********************************************************************//
// DispIntf:  ILaneContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {ECE2CA64-52A4-4782-A6B6-1D266D459B17}
// *********************************************************************//
  ILaneContainerDisp = dispinterface
    ['{ECE2CA64-52A4-4782-A6B6-1D266D459B17}']
    property ItemByKey[Key: OleVariant]: ILane readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddLane(Key: OleVariant; Width: Double): ILane; dispid 1610874882;
    procedure RemoveLane(const Lane: ILane); dispid 1610874883;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ILaneBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C5F3D40C-E78E-4776-B612-1EBE5267A1FA}
// *********************************************************************//
  ILaneBase = interface(IObjectBase)
    ['{C5F3D40C-E78E-4776-B612-1EBE5267A1FA}']
    function Get_Link: ILink; safecall;
    function Get_BlockedVehClasses: IVehicleClassCollection; safecall;
    function Get_NoLnChLVehClasses: IVehicleClassCollection; safecall;
    function Get_NoLnChRVehClasses: IVehicleClassCollection; safecall;
    function Get_DisplayType: IDisplayType; safecall;
    function Get_ConflictMarkers: IConflictMarkerCollection; safecall;
    function Get_ParkLots: IParkingLotCollection; safecall;
    function Get_PrioRules: IPriorityRuleCollection; safecall;
    function Get_Vehs: IVehicleCollection; safecall;
    function Get_DesSpeedDecs: IDesSpeedDecisionCollection; safecall;
    function Get_Detectors: IDetectorCollection; safecall;
    function Get_RedSpeedAreas: IReducedSpeedAreaCollection; safecall;
    function Get_PTStops: IPTStopCollection; safecall;
    function Get_SigHeads: ISignalHeadCollection; safecall;
    function Get_StopSigns: IStopSignCollection; safecall;
    function Get_LinkBehavType: ILinkBehaviorType; safecall;
    property Link: ILink read Get_Link;
    property BlockedVehClasses: IVehicleClassCollection read Get_BlockedVehClasses;
    property NoLnChLVehClasses: IVehicleClassCollection read Get_NoLnChLVehClasses;
    property NoLnChRVehClasses: IVehicleClassCollection read Get_NoLnChRVehClasses;
    property DisplayType: IDisplayType read Get_DisplayType;
    property ConflictMarkers: IConflictMarkerCollection read Get_ConflictMarkers;
    property ParkLots: IParkingLotCollection read Get_ParkLots;
    property PrioRules: IPriorityRuleCollection read Get_PrioRules;
    property Vehs: IVehicleCollection read Get_Vehs;
    property DesSpeedDecs: IDesSpeedDecisionCollection read Get_DesSpeedDecs;
    property Detectors: IDetectorCollection read Get_Detectors;
    property RedSpeedAreas: IReducedSpeedAreaCollection read Get_RedSpeedAreas;
    property PTStops: IPTStopCollection read Get_PTStops;
    property SigHeads: ISignalHeadCollection read Get_SigHeads;
    property StopSigns: IStopSignCollection read Get_StopSigns;
    property LinkBehavType: ILinkBehaviorType read Get_LinkBehavType;
  end;

// *********************************************************************//
// DispIntf:  ILaneBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C5F3D40C-E78E-4776-B612-1EBE5267A1FA}
// *********************************************************************//
  ILaneBaseDisp = dispinterface
    ['{C5F3D40C-E78E-4776-B612-1EBE5267A1FA}']
    property Link: ILink readonly dispid 1610809344;
    property BlockedVehClasses: IVehicleClassCollection readonly dispid 1610809345;
    property NoLnChLVehClasses: IVehicleClassCollection readonly dispid 1610809346;
    property NoLnChRVehClasses: IVehicleClassCollection readonly dispid 1610809347;
    property DisplayType: IDisplayType readonly dispid 1610809348;
    property ConflictMarkers: IConflictMarkerCollection readonly dispid 1610809349;
    property ParkLots: IParkingLotCollection readonly dispid 1610809350;
    property PrioRules: IPriorityRuleCollection readonly dispid 1610809351;
    property Vehs: IVehicleCollection readonly dispid 1610809352;
    property DesSpeedDecs: IDesSpeedDecisionCollection readonly dispid 1610809353;
    property Detectors: IDetectorCollection readonly dispid 1610809354;
    property RedSpeedAreas: IReducedSpeedAreaCollection readonly dispid 1610809355;
    property PTStops: IPTStopCollection readonly dispid 1610809356;
    property SigHeads: ISignalHeadCollection readonly dispid 1610809357;
    property StopSigns: IStopSignCollection readonly dispid 1610809358;
    property LinkBehavType: ILinkBehaviorType readonly dispid 1610809359;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ILane
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5E5A9DEA-0865-42A3-AA1C-51E0FACA251E}
// *********************************************************************//
  ILane = interface(ILaneBase)
    ['{5E5A9DEA-0865-42A3-AA1C-51E0FACA251E}']
  end;

// *********************************************************************//
// DispIntf:  ILaneDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5E5A9DEA-0865-42A3-AA1C-51E0FACA251E}
// *********************************************************************//
  ILaneDisp = dispinterface
    ['{5E5A9DEA-0865-42A3-AA1C-51E0FACA251E}']
    property Link: ILink readonly dispid 1610809344;
    property BlockedVehClasses: IVehicleClassCollection readonly dispid 1610809345;
    property NoLnChLVehClasses: IVehicleClassCollection readonly dispid 1610809346;
    property NoLnChRVehClasses: IVehicleClassCollection readonly dispid 1610809347;
    property DisplayType: IDisplayType readonly dispid 1610809348;
    property ConflictMarkers: IConflictMarkerCollection readonly dispid 1610809349;
    property ParkLots: IParkingLotCollection readonly dispid 1610809350;
    property PrioRules: IPriorityRuleCollection readonly dispid 1610809351;
    property Vehs: IVehicleCollection readonly dispid 1610809352;
    property DesSpeedDecs: IDesSpeedDecisionCollection readonly dispid 1610809353;
    property Detectors: IDetectorCollection readonly dispid 1610809354;
    property RedSpeedAreas: IReducedSpeedAreaCollection readonly dispid 1610809355;
    property PTStops: IPTStopCollection readonly dispid 1610809356;
    property SigHeads: ISignalHeadCollection readonly dispid 1610809357;
    property StopSigns: IStopSignCollection readonly dispid 1610809358;
    property LinkBehavType: ILinkBehaviorType readonly dispid 1610809359;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehicleClassCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5401212D-9307-47FE-83E9-E19CDF8D1B70}
// *********************************************************************//
  IVehicleClassCollection = interface(ICollectionBase)
    ['{5401212D-9307-47FE-83E9-E19CDF8D1B70}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleClassCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5401212D-9307-47FE-83E9-E19CDF8D1B70}
// *********************************************************************//
  IVehicleClassCollectionDisp = dispinterface
    ['{5401212D-9307-47FE-83E9-E19CDF8D1B70}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IConflictMarkerCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0B862041-C562-4C3B-B05A-7DB3E0DCA6CF}
// *********************************************************************//
  IConflictMarkerCollection = interface(ICollectionBase)
    ['{0B862041-C562-4C3B-B05A-7DB3E0DCA6CF}']
  end;

// *********************************************************************//
// DispIntf:  IConflictMarkerCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0B862041-C562-4C3B-B05A-7DB3E0DCA6CF}
// *********************************************************************//
  IConflictMarkerCollectionDisp = dispinterface
    ['{0B862041-C562-4C3B-B05A-7DB3E0DCA6CF}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IParkingLotCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {73637705-0FA2-4AA0-B099-D0178E58B023}
// *********************************************************************//
  IParkingLotCollection = interface(ICollectionBase)
    ['{73637705-0FA2-4AA0-B099-D0178E58B023}']
  end;

// *********************************************************************//
// DispIntf:  IParkingLotCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {73637705-0FA2-4AA0-B099-D0178E58B023}
// *********************************************************************//
  IParkingLotCollectionDisp = dispinterface
    ['{73637705-0FA2-4AA0-B099-D0178E58B023}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPriorityRuleCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7F5E7267-7046-4353-A9E2-F23E128F1FD1}
// *********************************************************************//
  IPriorityRuleCollection = interface(ICollectionBase)
    ['{7F5E7267-7046-4353-A9E2-F23E128F1FD1}']
  end;

// *********************************************************************//
// DispIntf:  IPriorityRuleCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7F5E7267-7046-4353-A9E2-F23E128F1FD1}
// *********************************************************************//
  IPriorityRuleCollectionDisp = dispinterface
    ['{7F5E7267-7046-4353-A9E2-F23E128F1FD1}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4A3A9693-8CDD-49A0-8A86-DA87836919F1}
// *********************************************************************//
  IVehicleCollection = interface(ICollectionBase)
    ['{4A3A9693-8CDD-49A0-8A86-DA87836919F1}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4A3A9693-8CDD-49A0-8A86-DA87836919F1}
// *********************************************************************//
  IVehicleCollectionDisp = dispinterface
    ['{4A3A9693-8CDD-49A0-8A86-DA87836919F1}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDesSpeedDecisionCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {19B58B1D-8657-4B79-ABB6-851C8555EE62}
// *********************************************************************//
  IDesSpeedDecisionCollection = interface(ICollectionBase)
    ['{19B58B1D-8657-4B79-ABB6-851C8555EE62}']
  end;

// *********************************************************************//
// DispIntf:  IDesSpeedDecisionCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {19B58B1D-8657-4B79-ABB6-851C8555EE62}
// *********************************************************************//
  IDesSpeedDecisionCollectionDisp = dispinterface
    ['{19B58B1D-8657-4B79-ABB6-851C8555EE62}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDetectorCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FA981AA5-5762-4A18-8722-68C8EFB0060F}
// *********************************************************************//
  IDetectorCollection = interface(ICollectionBase)
    ['{FA981AA5-5762-4A18-8722-68C8EFB0060F}']
  end;

// *********************************************************************//
// DispIntf:  IDetectorCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FA981AA5-5762-4A18-8722-68C8EFB0060F}
// *********************************************************************//
  IDetectorCollectionDisp = dispinterface
    ['{FA981AA5-5762-4A18-8722-68C8EFB0060F}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IReducedSpeedAreaCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0F7EA801-D650-4C92-B6CF-94EFBE09E72B}
// *********************************************************************//
  IReducedSpeedAreaCollection = interface(ICollectionBase)
    ['{0F7EA801-D650-4C92-B6CF-94EFBE09E72B}']
  end;

// *********************************************************************//
// DispIntf:  IReducedSpeedAreaCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0F7EA801-D650-4C92-B6CF-94EFBE09E72B}
// *********************************************************************//
  IReducedSpeedAreaCollectionDisp = dispinterface
    ['{0F7EA801-D650-4C92-B6CF-94EFBE09E72B}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ISignalHeadCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8A996187-8985-4A3B-AAA5-D91B5EC46595}
// *********************************************************************//
  ISignalHeadCollection = interface(ICollectionBase)
    ['{8A996187-8985-4A3B-AAA5-D91B5EC46595}']
  end;

// *********************************************************************//
// DispIntf:  ISignalHeadCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8A996187-8985-4A3B-AAA5-D91B5EC46595}
// *********************************************************************//
  ISignalHeadCollectionDisp = dispinterface
    ['{8A996187-8985-4A3B-AAA5-D91B5EC46595}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IStopSignCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {20B24EEA-80BF-4B21-A71F-24E1E9AB1E2A}
// *********************************************************************//
  IStopSignCollection = interface(ICollectionBase)
    ['{20B24EEA-80BF-4B21-A71F-24E1E9AB1E2A}']
  end;

// *********************************************************************//
// DispIntf:  IStopSignCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {20B24EEA-80BF-4B21-A71F-24E1E9AB1E2A}
// *********************************************************************//
  IStopSignCollectionDisp = dispinterface
    ['{20B24EEA-80BF-4B21-A71F-24E1E9AB1E2A}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ILinkBehaviorTypeBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F80CD790-9658-4395-A5D9-C6CE54657E63}
// *********************************************************************//
  ILinkBehaviorTypeBase = interface(IObjectBase)
    ['{F80CD790-9658-4395-A5D9-C6CE54657E63}']
    function Get_DrivBehavDef: IDrivingBehavior; safecall;
    function Get_VehClassDrivBehav: IVehClassDrivingBehaviorContainer; safecall;
    property DrivBehavDef: IDrivingBehavior read Get_DrivBehavDef;
    property VehClassDrivBehav: IVehClassDrivingBehaviorContainer read Get_VehClassDrivBehav;
  end;

// *********************************************************************//
// DispIntf:  ILinkBehaviorTypeBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F80CD790-9658-4395-A5D9-C6CE54657E63}
// *********************************************************************//
  ILinkBehaviorTypeBaseDisp = dispinterface
    ['{F80CD790-9658-4395-A5D9-C6CE54657E63}']
    property DrivBehavDef: IDrivingBehavior readonly dispid 1610809344;
    property VehClassDrivBehav: IVehClassDrivingBehaviorContainer readonly dispid 1610809345;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ILinkBehaviorType
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {226209A8-508B-434B-862C-9A6284E486F7}
// *********************************************************************//
  ILinkBehaviorType = interface(ILinkBehaviorTypeBase)
    ['{226209A8-508B-434B-862C-9A6284E486F7}']
  end;

// *********************************************************************//
// DispIntf:  ILinkBehaviorTypeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {226209A8-508B-434B-862C-9A6284E486F7}
// *********************************************************************//
  ILinkBehaviorTypeDisp = dispinterface
    ['{226209A8-508B-434B-862C-9A6284E486F7}']
    property DrivBehavDef: IDrivingBehavior readonly dispid 1610809344;
    property VehClassDrivBehav: IVehClassDrivingBehaviorContainer readonly dispid 1610809345;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IDrivingBehaviorBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {63D8C6D3-7E81-4DF1-A7E1-BE0C3636BB37}
// *********************************************************************//
  IDrivingBehaviorBase = interface(IObjectBase)
    ['{63D8C6D3-7E81-4DF1-A7E1-BE0C3636BB37}']
    function Get_VehClassLatBehav: IVehClassLateralBehaviorContainer; safecall;
    function Get_W99cc1Distr: ITimeDistribution; safecall;
    function Get_ReactTmDistr: ITimeDistribution; safecall;
    function Get_VehClassFollowBehav: IVehClassFollowingBehaviorContainer; safecall;
    function Get_DistractLnAngleDistr: IFreeDistribution; safecall;
    function Get_DistractDurDistr: ITimeDistribution; safecall;
    function Get_SpeedMisestDistrDef: IFreeDistribution; safecall;
    function Get_VehClassSpeedMisestDistr: IDrivBehavVehClassSpeedMisestDistrContainer; safecall;
    property VehClassLatBehav: IVehClassLateralBehaviorContainer read Get_VehClassLatBehav;
    property W99cc1Distr: ITimeDistribution read Get_W99cc1Distr;
    property ReactTmDistr: ITimeDistribution read Get_ReactTmDistr;
    property VehClassFollowBehav: IVehClassFollowingBehaviorContainer read Get_VehClassFollowBehav;
    property DistractLnAngleDistr: IFreeDistribution read Get_DistractLnAngleDistr;
    property DistractDurDistr: ITimeDistribution read Get_DistractDurDistr;
    property SpeedMisestDistrDef: IFreeDistribution read Get_SpeedMisestDistrDef;
    property VehClassSpeedMisestDistr: IDrivBehavVehClassSpeedMisestDistrContainer read Get_VehClassSpeedMisestDistr;
  end;

// *********************************************************************//
// DispIntf:  IDrivingBehaviorBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {63D8C6D3-7E81-4DF1-A7E1-BE0C3636BB37}
// *********************************************************************//
  IDrivingBehaviorBaseDisp = dispinterface
    ['{63D8C6D3-7E81-4DF1-A7E1-BE0C3636BB37}']
    property VehClassLatBehav: IVehClassLateralBehaviorContainer readonly dispid 1610809344;
    property W99cc1Distr: ITimeDistribution readonly dispid 1610809345;
    property ReactTmDistr: ITimeDistribution readonly dispid 1610809346;
    property VehClassFollowBehav: IVehClassFollowingBehaviorContainer readonly dispid 1610809347;
    property DistractLnAngleDistr: IFreeDistribution readonly dispid 1610809348;
    property DistractDurDistr: ITimeDistribution readonly dispid 1610809349;
    property SpeedMisestDistrDef: IFreeDistribution readonly dispid 1610809350;
    property VehClassSpeedMisestDistr: IDrivBehavVehClassSpeedMisestDistrContainer readonly dispid 1610809351;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IDrivingBehavior
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {23D3FF33-020B-4097-99CA-4A72B05D4E1D}
// *********************************************************************//
  IDrivingBehavior = interface(IDrivingBehaviorBase)
    ['{23D3FF33-020B-4097-99CA-4A72B05D4E1D}']
  end;

// *********************************************************************//
// DispIntf:  IDrivingBehaviorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {23D3FF33-020B-4097-99CA-4A72B05D4E1D}
// *********************************************************************//
  IDrivingBehaviorDisp = dispinterface
    ['{23D3FF33-020B-4097-99CA-4A72B05D4E1D}']
    property VehClassLatBehav: IVehClassLateralBehaviorContainer readonly dispid 1610809344;
    property W99cc1Distr: ITimeDistribution readonly dispid 1610809345;
    property ReactTmDistr: ITimeDistribution readonly dispid 1610809346;
    property VehClassFollowBehav: IVehClassFollowingBehaviorContainer readonly dispid 1610809347;
    property DistractLnAngleDistr: IFreeDistribution readonly dispid 1610809348;
    property DistractDurDistr: ITimeDistribution readonly dispid 1610809349;
    property SpeedMisestDistrDef: IFreeDistribution readonly dispid 1610809350;
    property VehClassSpeedMisestDistr: IDrivBehavVehClassSpeedMisestDistrContainer readonly dispid 1610809351;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehClassLateralBehaviorCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B9F4AE3C-ACA4-41D3-8B3D-B811E998CB15}
// *********************************************************************//
  IVehClassLateralBehaviorCollection = interface(ICollectionBase)
    ['{B9F4AE3C-ACA4-41D3-8B3D-B811E998CB15}']
  end;

// *********************************************************************//
// DispIntf:  IVehClassLateralBehaviorCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B9F4AE3C-ACA4-41D3-8B3D-B811E998CB15}
// *********************************************************************//
  IVehClassLateralBehaviorCollectionDisp = dispinterface
    ['{B9F4AE3C-ACA4-41D3-8B3D-B811E998CB15}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehClassLateralBehaviorContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {627E9F88-AD41-4BD9-B22F-75EDD39490A6}
// *********************************************************************//
  IVehClassLateralBehaviorContainerBase = interface(IVehClassLateralBehaviorCollection)
    ['{627E9F88-AD41-4BD9-B22F-75EDD39490A6}']
  end;

// *********************************************************************//
// DispIntf:  IVehClassLateralBehaviorContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {627E9F88-AD41-4BD9-B22F-75EDD39490A6}
// *********************************************************************//
  IVehClassLateralBehaviorContainerBaseDisp = dispinterface
    ['{627E9F88-AD41-4BD9-B22F-75EDD39490A6}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehClassLateralBehaviorContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F544CC14-D573-41BA-8880-EC52A44A505E}
// *********************************************************************//
  IVehClassLateralBehaviorContainer = interface(IVehClassLateralBehaviorContainerBase)
    ['{F544CC14-D573-41BA-8880-EC52A44A505E}']
  end;

// *********************************************************************//
// DispIntf:  IVehClassLateralBehaviorContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F544CC14-D573-41BA-8880-EC52A44A505E}
// *********************************************************************//
  IVehClassLateralBehaviorContainerDisp = dispinterface
    ['{F544CC14-D573-41BA-8880-EC52A44A505E}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehClassFollowingBehaviorCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AE06AB7D-B3A6-4F73-A0B1-9061CE14A1F5}
// *********************************************************************//
  IVehClassFollowingBehaviorCollection = interface(ICollectionBase)
    ['{AE06AB7D-B3A6-4F73-A0B1-9061CE14A1F5}']
  end;

// *********************************************************************//
// DispIntf:  IVehClassFollowingBehaviorCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AE06AB7D-B3A6-4F73-A0B1-9061CE14A1F5}
// *********************************************************************//
  IVehClassFollowingBehaviorCollectionDisp = dispinterface
    ['{AE06AB7D-B3A6-4F73-A0B1-9061CE14A1F5}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehClassFollowingBehaviorContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0516FC7F-09F4-4B45-98D6-D49E17075556}
// *********************************************************************//
  IVehClassFollowingBehaviorContainerBase = interface(IVehClassFollowingBehaviorCollection)
    ['{0516FC7F-09F4-4B45-98D6-D49E17075556}']
  end;

// *********************************************************************//
// DispIntf:  IVehClassFollowingBehaviorContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0516FC7F-09F4-4B45-98D6-D49E17075556}
// *********************************************************************//
  IVehClassFollowingBehaviorContainerBaseDisp = dispinterface
    ['{0516FC7F-09F4-4B45-98D6-D49E17075556}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehClassFollowingBehaviorContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {70F05EE3-50C1-4C49-A143-1B5919F91E8B}
// *********************************************************************//
  IVehClassFollowingBehaviorContainer = interface(IVehClassFollowingBehaviorContainerBase)
    ['{70F05EE3-50C1-4C49-A143-1B5919F91E8B}']
  end;

// *********************************************************************//
// DispIntf:  IVehClassFollowingBehaviorContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {70F05EE3-50C1-4C49-A143-1B5919F91E8B}
// *********************************************************************//
  IVehClassFollowingBehaviorContainerDisp = dispinterface
    ['{70F05EE3-50C1-4C49-A143-1B5919F91E8B}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IFreeDistributionBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0A9D7E1C-3731-45E9-BA24-DA1631943440}
// *********************************************************************//
  IFreeDistributionBase = interface(IObjectBase)
    ['{0A9D7E1C-3731-45E9-BA24-DA1631943440}']
    function Get_DistrDataPts: IDistributionDataPointContainer; safecall;
    property DistrDataPts: IDistributionDataPointContainer read Get_DistrDataPts;
  end;

// *********************************************************************//
// DispIntf:  IFreeDistributionBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0A9D7E1C-3731-45E9-BA24-DA1631943440}
// *********************************************************************//
  IFreeDistributionBaseDisp = dispinterface
    ['{0A9D7E1C-3731-45E9-BA24-DA1631943440}']
    property DistrDataPts: IDistributionDataPointContainer readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IFreeDistribution
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E127B380-0F0C-4F0A-83C1-7E650A836A29}
// *********************************************************************//
  IFreeDistribution = interface(IFreeDistributionBase)
    ['{E127B380-0F0C-4F0A-83C1-7E650A836A29}']
  end;

// *********************************************************************//
// DispIntf:  IFreeDistributionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E127B380-0F0C-4F0A-83C1-7E650A836A29}
// *********************************************************************//
  IFreeDistributionDisp = dispinterface
    ['{E127B380-0F0C-4F0A-83C1-7E650A836A29}']
    property DistrDataPts: IDistributionDataPointContainer readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IDrivBehavVehClassSpeedMisestDistrCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E91B54AB-6768-4251-97B9-B33C7AEC9F92}
// *********************************************************************//
  IDrivBehavVehClassSpeedMisestDistrCollection = interface(ICollectionBase)
    ['{E91B54AB-6768-4251-97B9-B33C7AEC9F92}']
  end;

// *********************************************************************//
// DispIntf:  IDrivBehavVehClassSpeedMisestDistrCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E91B54AB-6768-4251-97B9-B33C7AEC9F92}
// *********************************************************************//
  IDrivBehavVehClassSpeedMisestDistrCollectionDisp = dispinterface
    ['{E91B54AB-6768-4251-97B9-B33C7AEC9F92}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDrivBehavVehClassSpeedMisestDistrContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B665FEA9-55A7-458C-A7F8-42C06A4B766B}
// *********************************************************************//
  IDrivBehavVehClassSpeedMisestDistrContainerBase = interface(IDrivBehavVehClassSpeedMisestDistrCollection)
    ['{B665FEA9-55A7-458C-A7F8-42C06A4B766B}']
  end;

// *********************************************************************//
// DispIntf:  IDrivBehavVehClassSpeedMisestDistrContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B665FEA9-55A7-458C-A7F8-42C06A4B766B}
// *********************************************************************//
  IDrivBehavVehClassSpeedMisestDistrContainerBaseDisp = dispinterface
    ['{B665FEA9-55A7-458C-A7F8-42C06A4B766B}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDrivBehavVehClassSpeedMisestDistrContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2928F4C5-CE8F-4B6A-A43E-0E68D185C725}
// *********************************************************************//
  IDrivBehavVehClassSpeedMisestDistrContainer = interface(IDrivBehavVehClassSpeedMisestDistrContainerBase)
    ['{2928F4C5-CE8F-4B6A-A43E-0E68D185C725}']
  end;

// *********************************************************************//
// DispIntf:  IDrivBehavVehClassSpeedMisestDistrContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2928F4C5-CE8F-4B6A-A43E-0E68D185C725}
// *********************************************************************//
  IDrivBehavVehClassSpeedMisestDistrContainerDisp = dispinterface
    ['{2928F4C5-CE8F-4B6A-A43E-0E68D185C725}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehClassDrivingBehaviorCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FCB19AB6-0B4C-4B89-8122-02B23BEC9169}
// *********************************************************************//
  IVehClassDrivingBehaviorCollection = interface(ICollectionBase)
    ['{FCB19AB6-0B4C-4B89-8122-02B23BEC9169}']
  end;

// *********************************************************************//
// DispIntf:  IVehClassDrivingBehaviorCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FCB19AB6-0B4C-4B89-8122-02B23BEC9169}
// *********************************************************************//
  IVehClassDrivingBehaviorCollectionDisp = dispinterface
    ['{FCB19AB6-0B4C-4B89-8122-02B23BEC9169}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehClassDrivingBehaviorContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {600709AF-9CC6-4A16-AECA-0814F4F99549}
// *********************************************************************//
  IVehClassDrivingBehaviorContainerBase = interface(IVehClassDrivingBehaviorCollection)
    ['{600709AF-9CC6-4A16-AECA-0814F4F99549}']
    function AddVehClassDrivingBehavior(const VehClass: IVehicleClass): IVehClassDrivingBehavior; safecall;
    procedure RemoveVehClassDrivingBehavior(const VehClassDrivingBehavior: IVehClassDrivingBehavior); safecall;
  end;

// *********************************************************************//
// DispIntf:  IVehClassDrivingBehaviorContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {600709AF-9CC6-4A16-AECA-0814F4F99549}
// *********************************************************************//
  IVehClassDrivingBehaviorContainerBaseDisp = dispinterface
    ['{600709AF-9CC6-4A16-AECA-0814F4F99549}']
    function AddVehClassDrivingBehavior(const VehClass: IVehicleClass): IVehClassDrivingBehavior; dispid 1610874880;
    procedure RemoveVehClassDrivingBehavior(const VehClassDrivingBehavior: IVehClassDrivingBehavior); dispid 1610874881;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehClassDrivingBehaviorContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {44BDC1DC-E61F-4725-AED1-B595E5278DA5}
// *********************************************************************//
  IVehClassDrivingBehaviorContainer = interface(IVehClassDrivingBehaviorContainerBase)
    ['{44BDC1DC-E61F-4725-AED1-B595E5278DA5}']
  end;

// *********************************************************************//
// DispIntf:  IVehClassDrivingBehaviorContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {44BDC1DC-E61F-4725-AED1-B595E5278DA5}
// *********************************************************************//
  IVehClassDrivingBehaviorContainerDisp = dispinterface
    ['{44BDC1DC-E61F-4725-AED1-B595E5278DA5}']
    function AddVehClassDrivingBehavior(const VehClass: IVehicleClass): IVehClassDrivingBehavior; dispid 1610874880;
    procedure RemoveVehClassDrivingBehavior(const VehClassDrivingBehavior: IVehClassDrivingBehavior); dispid 1610874881;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleClassBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E2B68544-8740-4C0B-AB97-2DC604A00CBD}
// *********************************************************************//
  IVehicleClassBase = interface(IObjectBase)
    ['{E2B68544-8740-4C0B-AB97-2DC604A00CBD}']
    function Get_VehTypes: IVehicleTypeCollection; safecall;
    property VehTypes: IVehicleTypeCollection read Get_VehTypes;
  end;

// *********************************************************************//
// DispIntf:  IVehicleClassBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E2B68544-8740-4C0B-AB97-2DC604A00CBD}
// *********************************************************************//
  IVehicleClassBaseDisp = dispinterface
    ['{E2B68544-8740-4C0B-AB97-2DC604A00CBD}']
    property VehTypes: IVehicleTypeCollection readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehicleClass
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30E8268A-C848-40C4-89FD-17EC7A8C51E5}
// *********************************************************************//
  IVehicleClass = interface(IVehicleClassBase)
    ['{30E8268A-C848-40C4-89FD-17EC7A8C51E5}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleClassDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30E8268A-C848-40C4-89FD-17EC7A8C51E5}
// *********************************************************************//
  IVehicleClassDisp = dispinterface
    ['{30E8268A-C848-40C4-89FD-17EC7A8C51E5}']
    property VehTypes: IVehicleTypeCollection readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehicleTypeCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6AF79ACE-D38E-4564-9AFF-F87C7053E968}
// *********************************************************************//
  IVehicleTypeCollection = interface(ICollectionBase)
    ['{6AF79ACE-D38E-4564-9AFF-F87C7053E968}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleTypeCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6AF79ACE-D38E-4564-9AFF-F87C7053E968}
// *********************************************************************//
  IVehicleTypeCollectionDisp = dispinterface
    ['{6AF79ACE-D38E-4564-9AFF-F87C7053E968}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehClassDrivingBehaviorBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F3C68BD4-DAC2-4DE1-AB36-47A348F34DA0}
// *********************************************************************//
  IVehClassDrivingBehaviorBase = interface(IObjectBase)
    ['{F3C68BD4-DAC2-4DE1-AB36-47A348F34DA0}']
    function Get_VehClass: IVehicleClass; safecall;
    function Get_DrivBehav: IDrivingBehavior; safecall;
    function Get_LinkBehavType: ILinkBehaviorType; safecall;
    property VehClass: IVehicleClass read Get_VehClass;
    property DrivBehav: IDrivingBehavior read Get_DrivBehav;
    property LinkBehavType: ILinkBehaviorType read Get_LinkBehavType;
  end;

// *********************************************************************//
// DispIntf:  IVehClassDrivingBehaviorBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F3C68BD4-DAC2-4DE1-AB36-47A348F34DA0}
// *********************************************************************//
  IVehClassDrivingBehaviorBaseDisp = dispinterface
    ['{F3C68BD4-DAC2-4DE1-AB36-47A348F34DA0}']
    property VehClass: IVehicleClass readonly dispid 1610809344;
    property DrivBehav: IDrivingBehavior readonly dispid 1610809345;
    property LinkBehavType: ILinkBehaviorType readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehClassDrivingBehavior
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BA18E00B-0CB9-40B6-A776-7D43ED676E9C}
// *********************************************************************//
  IVehClassDrivingBehavior = interface(IVehClassDrivingBehaviorBase)
    ['{BA18E00B-0CB9-40B6-A776-7D43ED676E9C}']
  end;

// *********************************************************************//
// DispIntf:  IVehClassDrivingBehaviorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BA18E00B-0CB9-40B6-A776-7D43ED676E9C}
// *********************************************************************//
  IVehClassDrivingBehaviorDisp = dispinterface
    ['{BA18E00B-0CB9-40B6-A776-7D43ED676E9C}']
    property VehClass: IVehicleClass readonly dispid 1610809344;
    property DrivBehav: IDrivingBehavior readonly dispid 1610809345;
    property LinkBehavType: ILinkBehaviorType readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ILinkPolyPointCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4F4D3DF1-AFB3-43A8-9A73-222DEE72B632}
// *********************************************************************//
  ILinkPolyPointCollection = interface(ICollectionBase)
    ['{4F4D3DF1-AFB3-43A8-9A73-222DEE72B632}']
  end;

// *********************************************************************//
// DispIntf:  ILinkPolyPointCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4F4D3DF1-AFB3-43A8-9A73-222DEE72B632}
// *********************************************************************//
  ILinkPolyPointCollectionDisp = dispinterface
    ['{4F4D3DF1-AFB3-43A8-9A73-222DEE72B632}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ILinkPolyPointContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BDD03DE6-9F79-4665-B8D7-EBB288448BB1}
// *********************************************************************//
  ILinkPolyPointContainerBase = interface(ILinkPolyPointCollection)
    ['{BDD03DE6-9F79-4665-B8D7-EBB288448BB1}']
  end;

// *********************************************************************//
// DispIntf:  ILinkPolyPointContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BDD03DE6-9F79-4665-B8D7-EBB288448BB1}
// *********************************************************************//
  ILinkPolyPointContainerBaseDisp = dispinterface
    ['{BDD03DE6-9F79-4665-B8D7-EBB288448BB1}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ILinkPolyPointContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C05CC291-6693-422E-9D5B-007C442194C9}
// *********************************************************************//
  ILinkPolyPointContainer = interface(ILinkPolyPointContainerBase)
    ['{C05CC291-6693-422E-9D5B-007C442194C9}']
  end;

// *********************************************************************//
// DispIntf:  ILinkPolyPointContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C05CC291-6693-422E-9D5B-007C442194C9}
// *********************************************************************//
  ILinkPolyPointContainerDisp = dispinterface
    ['{C05CC291-6693-422E-9D5B-007C442194C9}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDistanceDistributionBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7AB3230E-8CF3-41F1-B2EB-05C1DEF8904A}
// *********************************************************************//
  IDistanceDistributionBase = interface(IObjectBase)
    ['{7AB3230E-8CF3-41F1-B2EB-05C1DEF8904A}']
    function Get_DistrDataPts: IDistributionDataPointContainer; safecall;
    property DistrDataPts: IDistributionDataPointContainer read Get_DistrDataPts;
  end;

// *********************************************************************//
// DispIntf:  IDistanceDistributionBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7AB3230E-8CF3-41F1-B2EB-05C1DEF8904A}
// *********************************************************************//
  IDistanceDistributionBaseDisp = dispinterface
    ['{7AB3230E-8CF3-41F1-B2EB-05C1DEF8904A}']
    property DistrDataPts: IDistributionDataPointContainer readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IDistanceDistribution
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0568D6FF-EC95-4BF8-8D3A-C7A1C34D63E9}
// *********************************************************************//
  IDistanceDistribution = interface(IDistanceDistributionBase)
    ['{0568D6FF-EC95-4BF8-8D3A-C7A1C34D63E9}']
  end;

// *********************************************************************//
// DispIntf:  IDistanceDistributionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0568D6FF-EC95-4BF8-8D3A-C7A1C34D63E9}
// *********************************************************************//
  IDistanceDistributionDisp = dispinterface
    ['{0568D6FF-EC95-4BF8-8D3A-C7A1C34D63E9}']
    property DistrDataPts: IDistributionDataPointContainer readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ILinkLnChgDistDistrAttrElementCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1FAE09E5-3E6C-42BF-8A9E-E0A9DB7BF44E}
// *********************************************************************//
  ILinkLnChgDistDistrAttrElementCollection = interface(ICollectionBase)
    ['{1FAE09E5-3E6C-42BF-8A9E-E0A9DB7BF44E}']
  end;

// *********************************************************************//
// DispIntf:  ILinkLnChgDistDistrAttrElementCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1FAE09E5-3E6C-42BF-8A9E-E0A9DB7BF44E}
// *********************************************************************//
  ILinkLnChgDistDistrAttrElementCollectionDisp = dispinterface
    ['{1FAE09E5-3E6C-42BF-8A9E-E0A9DB7BF44E}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ILinkLnChgDistDistrAttrElementContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5C05A012-BB4C-4055-BF03-F4A00D8FB7DD}
// *********************************************************************//
  ILinkLnChgDistDistrAttrElementContainerBase = interface(ILinkLnChgDistDistrAttrElementCollection)
    ['{5C05A012-BB4C-4055-BF03-F4A00D8FB7DD}']
  end;

// *********************************************************************//
// DispIntf:  ILinkLnChgDistDistrAttrElementContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5C05A012-BB4C-4055-BF03-F4A00D8FB7DD}
// *********************************************************************//
  ILinkLnChgDistDistrAttrElementContainerBaseDisp = dispinterface
    ['{5C05A012-BB4C-4055-BF03-F4A00D8FB7DD}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ILinkLnChgDistDistrAttrElementContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {10BA84FA-C391-4F96-8BA8-FC9A138BA5C9}
// *********************************************************************//
  ILinkLnChgDistDistrAttrElementContainer = interface(ILinkLnChgDistDistrAttrElementContainerBase)
    ['{10BA84FA-C391-4F96-8BA8-FC9A138BA5C9}']
  end;

// *********************************************************************//
// DispIntf:  ILinkLnChgDistDistrAttrElementContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {10BA84FA-C391-4F96-8BA8-FC9A138BA5C9}
// *********************************************************************//
  ILinkLnChgDistDistrAttrElementContainerDisp = dispinterface
    ['{10BA84FA-C391-4F96-8BA8-FC9A138BA5C9}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleRouteStaticCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E9295000-45FA-4C58-A8E2-C02A1EB73FE5}
// *********************************************************************//
  IVehicleRouteStaticCollection = interface(ICollectionBase)
    ['{E9295000-45FA-4C58-A8E2-C02A1EB73FE5}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleRouteStaticCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E9295000-45FA-4C58-A8E2-C02A1EB73FE5}
// *********************************************************************//
  IVehicleRouteStaticCollectionDisp = dispinterface
    ['{E9295000-45FA-4C58-A8E2-C02A1EB73FE5}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleRouteClosureCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {60DC2D28-F6A0-4135-8704-A0753CF2F2F5}
// *********************************************************************//
  IVehicleRouteClosureCollection = interface(ICollectionBase)
    ['{60DC2D28-F6A0-4135-8704-A0753CF2F2F5}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleRouteClosureCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {60DC2D28-F6A0-4135-8704-A0753CF2F2F5}
// *********************************************************************//
  IVehicleRouteClosureCollectionDisp = dispinterface
    ['{60DC2D28-F6A0-4135-8704-A0753CF2F2F5}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleRouteManagedLanesCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4E989C46-8B2B-4BA8-8553-10B011732612}
// *********************************************************************//
  IVehicleRouteManagedLanesCollection = interface(ICollectionBase)
    ['{4E989C46-8B2B-4BA8-8553-10B011732612}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleRouteManagedLanesCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4E989C46-8B2B-4BA8-8553-10B011732612}
// *********************************************************************//
  IVehicleRouteManagedLanesCollectionDisp = dispinterface
    ['{4E989C46-8B2B-4BA8-8553-10B011732612}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleRoutePartialCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2ED32491-EA48-4FEF-AFFF-CBEA04906551}
// *********************************************************************//
  IVehicleRoutePartialCollection = interface(ICollectionBase)
    ['{2ED32491-EA48-4FEF-AFFF-CBEA04906551}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleRoutePartialCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2ED32491-EA48-4FEF-AFFF-CBEA04906551}
// *********************************************************************//
  IVehicleRoutePartialCollectionDisp = dispinterface
    ['{2ED32491-EA48-4FEF-AFFF-CBEA04906551}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleRouteParkingCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EEC67EAD-7228-4185-9594-FF469028D3DD}
// *********************************************************************//
  IVehicleRouteParkingCollection = interface(ICollectionBase)
    ['{EEC67EAD-7228-4185-9594-FF469028D3DD}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleRouteParkingCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EEC67EAD-7228-4185-9594-FF469028D3DD}
// *********************************************************************//
  IVehicleRouteParkingCollectionDisp = dispinterface
    ['{EEC67EAD-7228-4185-9594-FF469028D3DD}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleRoutePartialPTCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {138D8E39-A4D0-498A-BB86-25A73E59BCEC}
// *********************************************************************//
  IVehicleRoutePartialPTCollection = interface(ICollectionBase)
    ['{138D8E39-A4D0-498A-BB86-25A73E59BCEC}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleRoutePartialPTCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {138D8E39-A4D0-498A-BB86-25A73E59BCEC}
// *********************************************************************//
  IVehicleRoutePartialPTCollectionDisp = dispinterface
    ['{138D8E39-A4D0-498A-BB86-25A73E59BCEC}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPTLineCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {733F6073-0032-4BF2-93A3-D0CAEF578FF3}
// *********************************************************************//
  IPTLineCollection = interface(ICollectionBase)
    ['{733F6073-0032-4BF2-93A3-D0CAEF578FF3}']
  end;

// *********************************************************************//
// DispIntf:  IPTLineCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {733F6073-0032-4BF2-93A3-D0CAEF578FF3}
// *********************************************************************//
  IPTLineCollectionDisp = dispinterface
    ['{733F6073-0032-4BF2-93A3-D0CAEF578FF3}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleInputCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E1765972-3475-416E-9C38-443D31DA64D9}
// *********************************************************************//
  IVehicleInputCollection = interface(ICollectionBase)
    ['{E1765972-3475-416E-9C38-443D31DA64D9}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleInputCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E1765972-3475-416E-9C38-443D31DA64D9}
// *********************************************************************//
  IVehicleInputCollectionDisp = dispinterface
    ['{E1765972-3475-416E-9C38-443D31DA64D9}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IQueueCounterCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BE71D5EC-8DD1-4DE9-8399-E0B2D81085E9}
// *********************************************************************//
  IQueueCounterCollection = interface(ICollectionBase)
    ['{BE71D5EC-8DD1-4DE9-8399-E0B2D81085E9}']
  end;

// *********************************************************************//
// DispIntf:  IQueueCounterCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BE71D5EC-8DD1-4DE9-8399-E0B2D81085E9}
// *********************************************************************//
  IQueueCounterCollectionDisp = dispinterface
    ['{BE71D5EC-8DD1-4DE9-8399-E0B2D81085E9}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleTravelTimeMeasurementCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B6DA90F7-FA1A-44BD-891A-2203B396C671}
// *********************************************************************//
  IVehicleTravelTimeMeasurementCollection = interface(ICollectionBase)
    ['{B6DA90F7-FA1A-44BD-891A-2203B396C671}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleTravelTimeMeasurementCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B6DA90F7-FA1A-44BD-891A-2203B396C671}
// *********************************************************************//
  IVehicleTravelTimeMeasurementCollectionDisp = dispinterface
    ['{B6DA90F7-FA1A-44BD-891A-2203B396C671}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleRoutingDecisionStaticCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0865F608-9EFC-436A-BB9C-A505F85038D4}
// *********************************************************************//
  IVehicleRoutingDecisionStaticCollection = interface(ICollectionBase)
    ['{0865F608-9EFC-436A-BB9C-A505F85038D4}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleRoutingDecisionStaticCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0865F608-9EFC-436A-BB9C-A505F85038D4}
// *********************************************************************//
  IVehicleRoutingDecisionStaticCollectionDisp = dispinterface
    ['{0865F608-9EFC-436A-BB9C-A505F85038D4}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleRoutingDecisionPartialCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F0FB1E11-0786-43A5-ABB1-DF207FF14A24}
// *********************************************************************//
  IVehicleRoutingDecisionPartialCollection = interface(ICollectionBase)
    ['{F0FB1E11-0786-43A5-ABB1-DF207FF14A24}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleRoutingDecisionPartialCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F0FB1E11-0786-43A5-ABB1-DF207FF14A24}
// *********************************************************************//
  IVehicleRoutingDecisionPartialCollectionDisp = dispinterface
    ['{F0FB1E11-0786-43A5-ABB1-DF207FF14A24}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleRoutingDecisionParkingCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7B53879B-2986-496B-8B9D-901B1DF9D4FB}
// *********************************************************************//
  IVehicleRoutingDecisionParkingCollection = interface(ICollectionBase)
    ['{7B53879B-2986-496B-8B9D-901B1DF9D4FB}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleRoutingDecisionParkingCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7B53879B-2986-496B-8B9D-901B1DF9D4FB}
// *********************************************************************//
  IVehicleRoutingDecisionParkingCollectionDisp = dispinterface
    ['{7B53879B-2986-496B-8B9D-901B1DF9D4FB}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleRoutingDecisionDynamicCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8AAD6E76-6D47-4202-8C28-83724F67B7EB}
// *********************************************************************//
  IVehicleRoutingDecisionDynamicCollection = interface(ICollectionBase)
    ['{8AAD6E76-6D47-4202-8C28-83724F67B7EB}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleRoutingDecisionDynamicCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8AAD6E76-6D47-4202-8C28-83724F67B7EB}
// *********************************************************************//
  IVehicleRoutingDecisionDynamicCollectionDisp = dispinterface
    ['{8AAD6E76-6D47-4202-8C28-83724F67B7EB}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleRoutingDecisionManagedLanesCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1BE4407A-98B6-4742-8BC4-7DD6B187A6F3}
// *********************************************************************//
  IVehicleRoutingDecisionManagedLanesCollection = interface(ICollectionBase)
    ['{1BE4407A-98B6-4742-8BC4-7DD6B187A6F3}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleRoutingDecisionManagedLanesCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1BE4407A-98B6-4742-8BC4-7DD6B187A6F3}
// *********************************************************************//
  IVehicleRoutingDecisionManagedLanesCollectionDisp = dispinterface
    ['{1BE4407A-98B6-4742-8BC4-7DD6B187A6F3}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleRoutingDecisionPartialPTCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {97472746-0D32-494D-9BDC-9A8D6E98461D}
// *********************************************************************//
  IVehicleRoutingDecisionPartialPTCollection = interface(ICollectionBase)
    ['{97472746-0D32-494D-9BDC-9A8D6E98461D}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleRoutingDecisionPartialPTCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {97472746-0D32-494D-9BDC-9A8D6E98461D}
// *********************************************************************//
  IVehicleRoutingDecisionPartialPTCollectionDisp = dispinterface
    ['{97472746-0D32-494D-9BDC-9A8D6E98461D}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehClassCountedDataCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EBBC5EAD-8995-4D5E-8758-0A0637B9CA9B}
// *********************************************************************//
  IVehClassCountedDataCollection = interface(ICollectionBase)
    ['{EBBC5EAD-8995-4D5E-8758-0A0637B9CA9B}']
  end;

// *********************************************************************//
// DispIntf:  IVehClassCountedDataCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EBBC5EAD-8995-4D5E-8758-0A0637B9CA9B}
// *********************************************************************//
  IVehClassCountedDataCollectionDisp = dispinterface
    ['{EBBC5EAD-8995-4D5E-8758-0A0637B9CA9B}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehClassCountedDataContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {555424A1-B901-41CB-B82D-7A8D9F940B60}
// *********************************************************************//
  IVehClassCountedDataContainerBase = interface(IVehClassCountedDataCollection)
    ['{555424A1-B901-41CB-B82D-7A8D9F940B60}']
    function AddVehClassCountedData(CntData: Double; const VehClass: IVehicleClass): IVehClassCountedData; safecall;
    procedure RemoveVehClassCountedData(const VehClassCountedData: IVehClassCountedData); safecall;
  end;

// *********************************************************************//
// DispIntf:  IVehClassCountedDataContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {555424A1-B901-41CB-B82D-7A8D9F940B60}
// *********************************************************************//
  IVehClassCountedDataContainerBaseDisp = dispinterface
    ['{555424A1-B901-41CB-B82D-7A8D9F940B60}']
    function AddVehClassCountedData(CntData: Double; const VehClass: IVehicleClass): IVehClassCountedData; dispid 1610874880;
    procedure RemoveVehClassCountedData(const VehClassCountedData: IVehClassCountedData); dispid 1610874881;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehClassCountedDataContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C0BD728D-F4D5-42AC-B23B-8AFD76549F8F}
// *********************************************************************//
  IVehClassCountedDataContainer = interface(IVehClassCountedDataContainerBase)
    ['{C0BD728D-F4D5-42AC-B23B-8AFD76549F8F}']
  end;

// *********************************************************************//
// DispIntf:  IVehClassCountedDataContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C0BD728D-F4D5-42AC-B23B-8AFD76549F8F}
// *********************************************************************//
  IVehClassCountedDataContainerDisp = dispinterface
    ['{C0BD728D-F4D5-42AC-B23B-8AFD76549F8F}']
    function AddVehClassCountedData(CntData: Double; const VehClass: IVehicleClass): IVehClassCountedData; dispid 1610874880;
    procedure RemoveVehClassCountedData(const VehClassCountedData: IVehClassCountedData); dispid 1610874881;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehClassCountedDataBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B8FC79AB-4E37-467E-A396-7D0F3AE33BFD}
// *********************************************************************//
  IVehClassCountedDataBase = interface(IObjectBase)
    ['{B8FC79AB-4E37-467E-A396-7D0F3AE33BFD}']
    function Get_VehClass: IVehicleClass; safecall;
    function Get_Link: ILink; safecall;
    property VehClass: IVehicleClass read Get_VehClass;
    property Link: ILink read Get_Link;
  end;

// *********************************************************************//
// DispIntf:  IVehClassCountedDataBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B8FC79AB-4E37-467E-A396-7D0F3AE33BFD}
// *********************************************************************//
  IVehClassCountedDataBaseDisp = dispinterface
    ['{B8FC79AB-4E37-467E-A396-7D0F3AE33BFD}']
    property VehClass: IVehicleClass readonly dispid 1610809344;
    property Link: ILink readonly dispid 1610809345;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehClassCountedData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BFE4C8A1-E3A6-4EF4-8FA7-4B9CB7E93987}
// *********************************************************************//
  IVehClassCountedData = interface(IVehClassCountedDataBase)
    ['{BFE4C8A1-E3A6-4EF4-8FA7-4B9CB7E93987}']
  end;

// *********************************************************************//
// DispIntf:  IVehClassCountedDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BFE4C8A1-E3A6-4EF4-8FA7-4B9CB7E93987}
// *********************************************************************//
  IVehClassCountedDataDisp = dispinterface
    ['{BFE4C8A1-E3A6-4EF4-8FA7-4B9CB7E93987}']
    property VehClass: IVehicleClass readonly dispid 1610809344;
    property Link: ILink readonly dispid 1610809345;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IEdgeCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DD33BC2B-9E3C-4656-8D18-3BC97C733D03}
// *********************************************************************//
  IEdgeCollection = interface(ICollectionBase)
    ['{DD33BC2B-9E3C-4656-8D18-3BC97C733D03}']
  end;

// *********************************************************************//
// DispIntf:  IEdgeCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DD33BC2B-9E3C-4656-8D18-3BC97C733D03}
// *********************************************************************//
  IEdgeCollectionDisp = dispinterface
    ['{DD33BC2B-9E3C-4656-8D18-3BC97C733D03}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehClassGapCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FE14AB7D-8A28-4DB6-8361-2B5F7F06EFE6}
// *********************************************************************//
  IVehClassGapCollection = interface(ICollectionBase)
    ['{FE14AB7D-8A28-4DB6-8361-2B5F7F06EFE6}']
  end;

// *********************************************************************//
// DispIntf:  IVehClassGapCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FE14AB7D-8A28-4DB6-8361-2B5F7F06EFE6}
// *********************************************************************//
  IVehClassGapCollectionDisp = dispinterface
    ['{FE14AB7D-8A28-4DB6-8361-2B5F7F06EFE6}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehClassGapContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3C024044-656F-4CD4-9AB8-53630D4B695D}
// *********************************************************************//
  IVehClassGapContainerBase = interface(IVehClassGapCollection)
    ['{3C024044-656F-4CD4-9AB8-53630D4B695D}']
    function AddVehClassGap(const VehClass: IVehicleClass): IVehClassGap; safecall;
    procedure RemoveVehClassGap(const VehClassGap: IVehClassGap); safecall;
  end;

// *********************************************************************//
// DispIntf:  IVehClassGapContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3C024044-656F-4CD4-9AB8-53630D4B695D}
// *********************************************************************//
  IVehClassGapContainerBaseDisp = dispinterface
    ['{3C024044-656F-4CD4-9AB8-53630D4B695D}']
    function AddVehClassGap(const VehClass: IVehicleClass): IVehClassGap; dispid 1610874880;
    procedure RemoveVehClassGap(const VehClassGap: IVehClassGap); dispid 1610874881;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehClassGapContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {97874A53-BD22-4718-BE2B-7EAF65743534}
// *********************************************************************//
  IVehClassGapContainer = interface(IVehClassGapContainerBase)
    ['{97874A53-BD22-4718-BE2B-7EAF65743534}']
  end;

// *********************************************************************//
// DispIntf:  IVehClassGapContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {97874A53-BD22-4718-BE2B-7EAF65743534}
// *********************************************************************//
  IVehClassGapContainerDisp = dispinterface
    ['{97874A53-BD22-4718-BE2B-7EAF65743534}']
    function AddVehClassGap(const VehClass: IVehicleClass): IVehClassGap; dispid 1610874880;
    procedure RemoveVehClassGap(const VehClassGap: IVehClassGap); dispid 1610874881;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehClassGapBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B335A237-C88A-4FF7-8980-F7F6F191D56F}
// *********************************************************************//
  IVehClassGapBase = interface(IObjectBase)
    ['{B335A237-C88A-4FF7-8980-F7F6F191D56F}']
    function Get_VehClass: IVehicleClass; safecall;
    function Get_ConflictArea: IConflictArea; safecall;
    property VehClass: IVehicleClass read Get_VehClass;
    property ConflictArea: IConflictArea read Get_ConflictArea;
  end;

// *********************************************************************//
// DispIntf:  IVehClassGapBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B335A237-C88A-4FF7-8980-F7F6F191D56F}
// *********************************************************************//
  IVehClassGapBaseDisp = dispinterface
    ['{B335A237-C88A-4FF7-8980-F7F6F191D56F}']
    property VehClass: IVehicleClass readonly dispid 1610809344;
    property ConflictArea: IConflictArea readonly dispid 1610809345;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehClassGap
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3A2B5D97-CCB4-4495-9076-E04E682436B9}
// *********************************************************************//
  IVehClassGap = interface(IVehClassGapBase)
    ['{3A2B5D97-CCB4-4495-9076-E04E682436B9}']
  end;

// *********************************************************************//
// DispIntf:  IVehClassGapDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3A2B5D97-CCB4-4495-9076-E04E682436B9}
// *********************************************************************//
  IVehClassGapDisp = dispinterface
    ['{3A2B5D97-CCB4-4495-9076-E04E682436B9}']
    property VehClass: IVehicleClass readonly dispid 1610809344;
    property ConflictArea: IConflictArea readonly dispid 1610809345;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ICritSpeedFuncCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CC6F96C5-3DCD-4FAC-8217-68450BFA1998}
// *********************************************************************//
  ICritSpeedFuncCollection = interface(ICollectionBase)
    ['{CC6F96C5-3DCD-4FAC-8217-68450BFA1998}']
  end;

// *********************************************************************//
// DispIntf:  ICritSpeedFuncCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CC6F96C5-3DCD-4FAC-8217-68450BFA1998}
// *********************************************************************//
  ICritSpeedFuncCollectionDisp = dispinterface
    ['{CC6F96C5-3DCD-4FAC-8217-68450BFA1998}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ICritSpeedFuncContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FEF6F256-0C39-41F4-BB89-A8921900CBA4}
// *********************************************************************//
  ICritSpeedFuncContainerBase = interface(ICritSpeedFuncCollection)
    ['{FEF6F256-0C39-41F4-BB89-A8921900CBA4}']
    function Get_ItemByKey(Key: OleVariant): ICritSpeedFunc; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddCritSpeedFunc(Key: OleVariant; CritSpeedFuncDataPts: OleVariant): ICritSpeedFunc; safecall;
    function DuplicateCritSpeedFunc(Source: OleVariant; NewKey: OleVariant): ICritSpeedFunc; safecall;
    procedure RemoveCritSpeedFunc(const CritSpeedFunc: ICritSpeedFunc); safecall;
    property ItemByKey[Key: OleVariant]: ICritSpeedFunc read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  ICritSpeedFuncContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FEF6F256-0C39-41F4-BB89-A8921900CBA4}
// *********************************************************************//
  ICritSpeedFuncContainerBaseDisp = dispinterface
    ['{FEF6F256-0C39-41F4-BB89-A8921900CBA4}']
    property ItemByKey[Key: OleVariant]: ICritSpeedFunc readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddCritSpeedFunc(Key: OleVariant; CritSpeedFuncDataPts: OleVariant): ICritSpeedFunc; dispid 1610874882;
    function DuplicateCritSpeedFunc(Source: OleVariant; NewKey: OleVariant): ICritSpeedFunc; dispid 1610874883;
    procedure RemoveCritSpeedFunc(const CritSpeedFunc: ICritSpeedFunc); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ICritSpeedFuncContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {916A4D98-DC3C-4437-ACB0-226F94FF6C8C}
// *********************************************************************//
  ICritSpeedFuncContainer = interface(ICritSpeedFuncContainerBase)
    ['{916A4D98-DC3C-4437-ACB0-226F94FF6C8C}']
  end;

// *********************************************************************//
// DispIntf:  ICritSpeedFuncContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {916A4D98-DC3C-4437-ACB0-226F94FF6C8C}
// *********************************************************************//
  ICritSpeedFuncContainerDisp = dispinterface
    ['{916A4D98-DC3C-4437-ACB0-226F94FF6C8C}']
    property ItemByKey[Key: OleVariant]: ICritSpeedFunc readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddCritSpeedFunc(Key: OleVariant; CritSpeedFuncDataPts: OleVariant): ICritSpeedFunc; dispid 1610874882;
    function DuplicateCritSpeedFunc(Source: OleVariant; NewKey: OleVariant): ICritSpeedFunc; dispid 1610874883;
    procedure RemoveCritSpeedFunc(const CritSpeedFunc: ICritSpeedFunc); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ICritSpeedFuncBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5F1202C9-179E-416E-A156-82ED55303F69}
// *********************************************************************//
  ICritSpeedFuncBase = interface(IObjectBase)
    ['{5F1202C9-179E-416E-A156-82ED55303F69}']
    function Get_CritSpeedFuncDataPts: ICritSpeedFuncDataPtContainer; safecall;
    property CritSpeedFuncDataPts: ICritSpeedFuncDataPtContainer read Get_CritSpeedFuncDataPts;
  end;

// *********************************************************************//
// DispIntf:  ICritSpeedFuncBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5F1202C9-179E-416E-A156-82ED55303F69}
// *********************************************************************//
  ICritSpeedFuncBaseDisp = dispinterface
    ['{5F1202C9-179E-416E-A156-82ED55303F69}']
    property CritSpeedFuncDataPts: ICritSpeedFuncDataPtContainer readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ICritSpeedFunc
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FEC69871-1839-4602-A0AF-677C1DEABFBA}
// *********************************************************************//
  ICritSpeedFunc = interface(ICritSpeedFuncBase)
    ['{FEC69871-1839-4602-A0AF-677C1DEABFBA}']
  end;

// *********************************************************************//
// DispIntf:  ICritSpeedFuncDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FEC69871-1839-4602-A0AF-677C1DEABFBA}
// *********************************************************************//
  ICritSpeedFuncDisp = dispinterface
    ['{FEC69871-1839-4602-A0AF-677C1DEABFBA}']
    property CritSpeedFuncDataPts: ICritSpeedFuncDataPtContainer readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ICritSpeedFuncDataPtCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {99AB1ABB-D73E-4FEA-B96A-E08920E7B542}
// *********************************************************************//
  ICritSpeedFuncDataPtCollection = interface(ICollectionBase)
    ['{99AB1ABB-D73E-4FEA-B96A-E08920E7B542}']
  end;

// *********************************************************************//
// DispIntf:  ICritSpeedFuncDataPtCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {99AB1ABB-D73E-4FEA-B96A-E08920E7B542}
// *********************************************************************//
  ICritSpeedFuncDataPtCollectionDisp = dispinterface
    ['{99AB1ABB-D73E-4FEA-B96A-E08920E7B542}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ICritSpeedFuncDataPtContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C9A75872-7637-4481-A600-6FCB0268A09E}
// *********************************************************************//
  ICritSpeedFuncDataPtContainerBase = interface(ICritSpeedFuncDataPtCollection)
    ['{C9A75872-7637-4481-A600-6FCB0268A09E}']
    procedure ReplaceAll(Elements: OleVariant); safecall;
  end;

// *********************************************************************//
// DispIntf:  ICritSpeedFuncDataPtContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C9A75872-7637-4481-A600-6FCB0268A09E}
// *********************************************************************//
  ICritSpeedFuncDataPtContainerBaseDisp = dispinterface
    ['{C9A75872-7637-4481-A600-6FCB0268A09E}']
    procedure ReplaceAll(Elements: OleVariant); dispid 1610874880;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ICritSpeedFuncDataPtContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {73FB94FE-982F-4D9F-A778-8E3853AB46EA}
// *********************************************************************//
  ICritSpeedFuncDataPtContainer = interface(ICritSpeedFuncDataPtContainerBase)
    ['{73FB94FE-982F-4D9F-A778-8E3853AB46EA}']
  end;

// *********************************************************************//
// DispIntf:  ICritSpeedFuncDataPtContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {73FB94FE-982F-4D9F-A778-8E3853AB46EA}
// *********************************************************************//
  ICritSpeedFuncDataPtContainerDisp = dispinterface
    ['{73FB94FE-982F-4D9F-A778-8E3853AB46EA}']
    procedure ReplaceAll(Elements: OleVariant); dispid 1610874880;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDataCollectionMeasurementCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B93A0D61-35D2-42B7-BFAB-F4DED9D74201}
// *********************************************************************//
  IDataCollectionMeasurementCollection = interface(ICollectionBase)
    ['{B93A0D61-35D2-42B7-BFAB-F4DED9D74201}']
  end;

// *********************************************************************//
// DispIntf:  IDataCollectionMeasurementCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B93A0D61-35D2-42B7-BFAB-F4DED9D74201}
// *********************************************************************//
  IDataCollectionMeasurementCollectionDisp = dispinterface
    ['{B93A0D61-35D2-42B7-BFAB-F4DED9D74201}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDataCollectionMeasurementContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {55E032D8-17E9-4D3D-95C5-BE14D9B48F1F}
// *********************************************************************//
  IDataCollectionMeasurementContainerBase = interface(IDataCollectionMeasurementCollection)
    ['{55E032D8-17E9-4D3D-95C5-BE14D9B48F1F}']
    function Get_ItemByKey(Key: OleVariant): IDataCollectionMeasurement; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddDataCollectionMeasurement(Key: OleVariant): IDataCollectionMeasurement; safecall;
    function DuplicateDataCollectionMeasurement(Source: OleVariant; NewKey: OleVariant): IDataCollectionMeasurement; safecall;
    procedure RemoveDataCollectionMeasurement(const DataCollectionMeasurement: IDataCollectionMeasurement); safecall;
    property ItemByKey[Key: OleVariant]: IDataCollectionMeasurement read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IDataCollectionMeasurementContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {55E032D8-17E9-4D3D-95C5-BE14D9B48F1F}
// *********************************************************************//
  IDataCollectionMeasurementContainerBaseDisp = dispinterface
    ['{55E032D8-17E9-4D3D-95C5-BE14D9B48F1F}']
    property ItemByKey[Key: OleVariant]: IDataCollectionMeasurement readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddDataCollectionMeasurement(Key: OleVariant): IDataCollectionMeasurement; dispid 1610874882;
    function DuplicateDataCollectionMeasurement(Source: OleVariant; NewKey: OleVariant): IDataCollectionMeasurement; dispid 1610874883;
    procedure RemoveDataCollectionMeasurement(const DataCollectionMeasurement: IDataCollectionMeasurement); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDataCollectionMeasurementContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {29B9505D-687A-48AE-851A-7ADC7B97C313}
// *********************************************************************//
  IDataCollectionMeasurementContainer = interface(IDataCollectionMeasurementContainerBase)
    ['{29B9505D-687A-48AE-851A-7ADC7B97C313}']
  end;

// *********************************************************************//
// DispIntf:  IDataCollectionMeasurementContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {29B9505D-687A-48AE-851A-7ADC7B97C313}
// *********************************************************************//
  IDataCollectionMeasurementContainerDisp = dispinterface
    ['{29B9505D-687A-48AE-851A-7ADC7B97C313}']
    property ItemByKey[Key: OleVariant]: IDataCollectionMeasurement readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddDataCollectionMeasurement(Key: OleVariant): IDataCollectionMeasurement; dispid 1610874882;
    function DuplicateDataCollectionMeasurement(Source: OleVariant; NewKey: OleVariant): IDataCollectionMeasurement; dispid 1610874883;
    procedure RemoveDataCollectionMeasurement(const DataCollectionMeasurement: IDataCollectionMeasurement); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDataCollectionMeasurementBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {609767DF-8364-4A3A-8FD5-BDA952237959}
// *********************************************************************//
  IDataCollectionMeasurementBase = interface(IObjectBase)
    ['{609767DF-8364-4A3A-8FD5-BDA952237959}']
    function Get_DataCollectionPoints: IDataCollectionPointCollection; safecall;
    property DataCollectionPoints: IDataCollectionPointCollection read Get_DataCollectionPoints;
  end;

// *********************************************************************//
// DispIntf:  IDataCollectionMeasurementBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {609767DF-8364-4A3A-8FD5-BDA952237959}
// *********************************************************************//
  IDataCollectionMeasurementBaseDisp = dispinterface
    ['{609767DF-8364-4A3A-8FD5-BDA952237959}']
    property DataCollectionPoints: IDataCollectionPointCollection readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IDataCollectionMeasurement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {40CE2831-0F09-4296-9CF5-B1FB7720CBF7}
// *********************************************************************//
  IDataCollectionMeasurement = interface(IDataCollectionMeasurementBase)
    ['{40CE2831-0F09-4296-9CF5-B1FB7720CBF7}']
  end;

// *********************************************************************//
// DispIntf:  IDataCollectionMeasurementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {40CE2831-0F09-4296-9CF5-B1FB7720CBF7}
// *********************************************************************//
  IDataCollectionMeasurementDisp = dispinterface
    ['{40CE2831-0F09-4296-9CF5-B1FB7720CBF7}']
    property DataCollectionPoints: IDataCollectionPointCollection readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IDataCollectionPointCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {13058068-0DA7-4C68-84F5-71395BDA9332}
// *********************************************************************//
  IDataCollectionPointCollection = interface(ICollectionBase)
    ['{13058068-0DA7-4C68-84F5-71395BDA9332}']
  end;

// *********************************************************************//
// DispIntf:  IDataCollectionPointCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {13058068-0DA7-4C68-84F5-71395BDA9332}
// *********************************************************************//
  IDataCollectionPointCollectionDisp = dispinterface
    ['{13058068-0DA7-4C68-84F5-71395BDA9332}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDataCollectionPointContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {46594A61-B657-413A-A3A1-7395AEEEB72C}
// *********************************************************************//
  IDataCollectionPointContainerBase = interface(IDataCollectionPointCollection)
    ['{46594A61-B657-413A-A3A1-7395AEEEB72C}']
    function Get_ItemByKey(Key: OleVariant): IDataCollectionPoint; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddDataCollectionPoint(Key: OleVariant; const Lane: ILane; Pos: Double): IDataCollectionPoint; safecall;
    function DuplicateDataCollectionPoint(Source: OleVariant; NewKey: OleVariant): IDataCollectionPoint; safecall;
    procedure RemoveDataCollectionPoint(const DataCollectionPoint: IDataCollectionPoint); safecall;
    property ItemByKey[Key: OleVariant]: IDataCollectionPoint read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IDataCollectionPointContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {46594A61-B657-413A-A3A1-7395AEEEB72C}
// *********************************************************************//
  IDataCollectionPointContainerBaseDisp = dispinterface
    ['{46594A61-B657-413A-A3A1-7395AEEEB72C}']
    property ItemByKey[Key: OleVariant]: IDataCollectionPoint readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddDataCollectionPoint(Key: OleVariant; const Lane: ILane; Pos: Double): IDataCollectionPoint; dispid 1610874882;
    function DuplicateDataCollectionPoint(Source: OleVariant; NewKey: OleVariant): IDataCollectionPoint; dispid 1610874883;
    procedure RemoveDataCollectionPoint(const DataCollectionPoint: IDataCollectionPoint); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDataCollectionPointContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6AFEB068-CEDA-41E0-A862-B5406B456812}
// *********************************************************************//
  IDataCollectionPointContainer = interface(IDataCollectionPointContainerBase)
    ['{6AFEB068-CEDA-41E0-A862-B5406B456812}']
  end;

// *********************************************************************//
// DispIntf:  IDataCollectionPointContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6AFEB068-CEDA-41E0-A862-B5406B456812}
// *********************************************************************//
  IDataCollectionPointContainerDisp = dispinterface
    ['{6AFEB068-CEDA-41E0-A862-B5406B456812}']
    property ItemByKey[Key: OleVariant]: IDataCollectionPoint readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddDataCollectionPoint(Key: OleVariant; const Lane: ILane; Pos: Double): IDataCollectionPoint; dispid 1610874882;
    function DuplicateDataCollectionPoint(Source: OleVariant; NewKey: OleVariant): IDataCollectionPoint; dispid 1610874883;
    procedure RemoveDataCollectionPoint(const DataCollectionPoint: IDataCollectionPoint); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDataCollectionPointBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C81A7D0F-C8CD-450A-93D8-2D536E3731C5}
// *********************************************************************//
  IDataCollectionPointBase = interface(IObjectBase)
    ['{C81A7D0F-C8CD-450A-93D8-2D536E3731C5}']
    function Get_DataCollMeas: IDataCollectionMeasurementCollection; safecall;
    function Get_Lane: ILane; safecall;
    property DataCollMeas: IDataCollectionMeasurementCollection read Get_DataCollMeas;
    property Lane: ILane read Get_Lane;
  end;

// *********************************************************************//
// DispIntf:  IDataCollectionPointBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C81A7D0F-C8CD-450A-93D8-2D536E3731C5}
// *********************************************************************//
  IDataCollectionPointBaseDisp = dispinterface
    ['{C81A7D0F-C8CD-450A-93D8-2D536E3731C5}']
    property DataCollMeas: IDataCollectionMeasurementCollection readonly dispid 1610809344;
    property Lane: ILane readonly dispid 1610809345;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IDataCollectionPoint
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {499C9D4D-0E5B-459B-98C0-33082718A67D}
// *********************************************************************//
  IDataCollectionPoint = interface(IDataCollectionPointBase)
    ['{499C9D4D-0E5B-459B-98C0-33082718A67D}']
  end;

// *********************************************************************//
// DispIntf:  IDataCollectionPointDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {499C9D4D-0E5B-459B-98C0-33082718A67D}
// *********************************************************************//
  IDataCollectionPointDisp = dispinterface
    ['{499C9D4D-0E5B-459B-98C0-33082718A67D}']
    property DataCollMeas: IDataCollectionMeasurementCollection readonly dispid 1610809344;
    property Lane: ILane readonly dispid 1610809345;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IDelayMeasurementCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8DE19A4A-1EB2-41DE-A232-A5E6906F83DA}
// *********************************************************************//
  IDelayMeasurementCollection = interface(ICollectionBase)
    ['{8DE19A4A-1EB2-41DE-A232-A5E6906F83DA}']
  end;

// *********************************************************************//
// DispIntf:  IDelayMeasurementCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8DE19A4A-1EB2-41DE-A232-A5E6906F83DA}
// *********************************************************************//
  IDelayMeasurementCollectionDisp = dispinterface
    ['{8DE19A4A-1EB2-41DE-A232-A5E6906F83DA}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDelayMeasurementContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {806585EE-FA24-4273-9AA1-A9CCA222FD2C}
// *********************************************************************//
  IDelayMeasurementContainerBase = interface(IDelayMeasurementCollection)
    ['{806585EE-FA24-4273-9AA1-A9CCA222FD2C}']
    function Get_ItemByKey(Key: OleVariant): IDelayMeasurement; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddDelayMeasurement(Key: OleVariant): IDelayMeasurement; safecall;
    function DuplicateDelayMeasurement(Source: OleVariant; NewKey: OleVariant): IDelayMeasurement; safecall;
    procedure RemoveDelayMeasurement(const DelayMeasurement: IDelayMeasurement); safecall;
    property ItemByKey[Key: OleVariant]: IDelayMeasurement read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IDelayMeasurementContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {806585EE-FA24-4273-9AA1-A9CCA222FD2C}
// *********************************************************************//
  IDelayMeasurementContainerBaseDisp = dispinterface
    ['{806585EE-FA24-4273-9AA1-A9CCA222FD2C}']
    property ItemByKey[Key: OleVariant]: IDelayMeasurement readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddDelayMeasurement(Key: OleVariant): IDelayMeasurement; dispid 1610874882;
    function DuplicateDelayMeasurement(Source: OleVariant; NewKey: OleVariant): IDelayMeasurement; dispid 1610874883;
    procedure RemoveDelayMeasurement(const DelayMeasurement: IDelayMeasurement); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDelayMeasurementContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C06BC7D1-BA0A-48B7-B131-FF29798C83C2}
// *********************************************************************//
  IDelayMeasurementContainer = interface(IDelayMeasurementContainerBase)
    ['{C06BC7D1-BA0A-48B7-B131-FF29798C83C2}']
  end;

// *********************************************************************//
// DispIntf:  IDelayMeasurementContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C06BC7D1-BA0A-48B7-B131-FF29798C83C2}
// *********************************************************************//
  IDelayMeasurementContainerDisp = dispinterface
    ['{C06BC7D1-BA0A-48B7-B131-FF29798C83C2}']
    property ItemByKey[Key: OleVariant]: IDelayMeasurement readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddDelayMeasurement(Key: OleVariant): IDelayMeasurement; dispid 1610874882;
    function DuplicateDelayMeasurement(Source: OleVariant; NewKey: OleVariant): IDelayMeasurement; dispid 1610874883;
    procedure RemoveDelayMeasurement(const DelayMeasurement: IDelayMeasurement); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDelayMeasurementBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6C75C70A-5734-46F5-99EF-33CEC6D4232E}
// *********************************************************************//
  IDelayMeasurementBase = interface(IObjectBase)
    ['{6C75C70A-5734-46F5-99EF-33CEC6D4232E}']
    function Get_VehTravTmMeas: IVehicleTravelTimeMeasurementCollection; safecall;
    property VehTravTmMeas: IVehicleTravelTimeMeasurementCollection read Get_VehTravTmMeas;
  end;

// *********************************************************************//
// DispIntf:  IDelayMeasurementBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6C75C70A-5734-46F5-99EF-33CEC6D4232E}
// *********************************************************************//
  IDelayMeasurementBaseDisp = dispinterface
    ['{6C75C70A-5734-46F5-99EF-33CEC6D4232E}']
    property VehTravTmMeas: IVehicleTravelTimeMeasurementCollection readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IDelayMeasurement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D707F5DA-DE6D-45D0-9204-A354D980C96F}
// *********************************************************************//
  IDelayMeasurement = interface(IDelayMeasurementBase)
    ['{D707F5DA-DE6D-45D0-9204-A354D980C96F}']
  end;

// *********************************************************************//
// DispIntf:  IDelayMeasurementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D707F5DA-DE6D-45D0-9204-A354D980C96F}
// *********************************************************************//
  IDelayMeasurementDisp = dispinterface
    ['{D707F5DA-DE6D-45D0-9204-A354D980C96F}']
    property VehTravTmMeas: IVehicleTravelTimeMeasurementCollection readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IDesAccelerationFunctionCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0120AE30-8BFB-4A30-9E64-5DB19070D7DB}
// *********************************************************************//
  IDesAccelerationFunctionCollection = interface(ICollectionBase)
    ['{0120AE30-8BFB-4A30-9E64-5DB19070D7DB}']
  end;

// *********************************************************************//
// DispIntf:  IDesAccelerationFunctionCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0120AE30-8BFB-4A30-9E64-5DB19070D7DB}
// *********************************************************************//
  IDesAccelerationFunctionCollectionDisp = dispinterface
    ['{0120AE30-8BFB-4A30-9E64-5DB19070D7DB}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDesAccelerationFunctionContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7CBC48DC-B15E-443B-9D30-B3F09C02E96F}
// *********************************************************************//
  IDesAccelerationFunctionContainerBase = interface(IDesAccelerationFunctionCollection)
    ['{7CBC48DC-B15E-443B-9D30-B3F09C02E96F}']
    function Get_ItemByKey(Key: OleVariant): IDesAccelerationFunction; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddDesAccelerationFunction(Key: OleVariant; AccelFuncDataPts: OleVariant): IDesAccelerationFunction; safecall;
    function DuplicateDesAccelerationFunction(Source: OleVariant; NewKey: OleVariant): IDesAccelerationFunction; safecall;
    procedure RemoveDesAccelerationFunction(const DesAccelerationFunction: IDesAccelerationFunction); safecall;
    property ItemByKey[Key: OleVariant]: IDesAccelerationFunction read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IDesAccelerationFunctionContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7CBC48DC-B15E-443B-9D30-B3F09C02E96F}
// *********************************************************************//
  IDesAccelerationFunctionContainerBaseDisp = dispinterface
    ['{7CBC48DC-B15E-443B-9D30-B3F09C02E96F}']
    property ItemByKey[Key: OleVariant]: IDesAccelerationFunction readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddDesAccelerationFunction(Key: OleVariant; AccelFuncDataPts: OleVariant): IDesAccelerationFunction; dispid 1610874882;
    function DuplicateDesAccelerationFunction(Source: OleVariant; NewKey: OleVariant): IDesAccelerationFunction; dispid 1610874883;
    procedure RemoveDesAccelerationFunction(const DesAccelerationFunction: IDesAccelerationFunction); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDesAccelerationFunctionContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {42370C71-5EDF-44FD-8ACE-A9A387F3D834}
// *********************************************************************//
  IDesAccelerationFunctionContainer = interface(IDesAccelerationFunctionContainerBase)
    ['{42370C71-5EDF-44FD-8ACE-A9A387F3D834}']
  end;

// *********************************************************************//
// DispIntf:  IDesAccelerationFunctionContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {42370C71-5EDF-44FD-8ACE-A9A387F3D834}
// *********************************************************************//
  IDesAccelerationFunctionContainerDisp = dispinterface
    ['{42370C71-5EDF-44FD-8ACE-A9A387F3D834}']
    property ItemByKey[Key: OleVariant]: IDesAccelerationFunction readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddDesAccelerationFunction(Key: OleVariant; AccelFuncDataPts: OleVariant): IDesAccelerationFunction; dispid 1610874882;
    function DuplicateDesAccelerationFunction(Source: OleVariant; NewKey: OleVariant): IDesAccelerationFunction; dispid 1610874883;
    procedure RemoveDesAccelerationFunction(const DesAccelerationFunction: IDesAccelerationFunction); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDesAccelerationFunctionBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FE80C373-5D9B-4AF8-9B3E-F7E8CB2682F9}
// *********************************************************************//
  IDesAccelerationFunctionBase = interface(IObjectBase)
    ['{FE80C373-5D9B-4AF8-9B3E-F7E8CB2682F9}']
    function Get_AccelFuncDataPts: IAccelerationFunctionDataPointContainer; safecall;
    property AccelFuncDataPts: IAccelerationFunctionDataPointContainer read Get_AccelFuncDataPts;
  end;

// *********************************************************************//
// DispIntf:  IDesAccelerationFunctionBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FE80C373-5D9B-4AF8-9B3E-F7E8CB2682F9}
// *********************************************************************//
  IDesAccelerationFunctionBaseDisp = dispinterface
    ['{FE80C373-5D9B-4AF8-9B3E-F7E8CB2682F9}']
    property AccelFuncDataPts: IAccelerationFunctionDataPointContainer readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IDesAccelerationFunction
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4A997039-E055-49D2-944F-B5690C4B3805}
// *********************************************************************//
  IDesAccelerationFunction = interface(IDesAccelerationFunctionBase)
    ['{4A997039-E055-49D2-944F-B5690C4B3805}']
  end;

// *********************************************************************//
// DispIntf:  IDesAccelerationFunctionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4A997039-E055-49D2-944F-B5690C4B3805}
// *********************************************************************//
  IDesAccelerationFunctionDisp = dispinterface
    ['{4A997039-E055-49D2-944F-B5690C4B3805}']
    property AccelFuncDataPts: IAccelerationFunctionDataPointContainer readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IAccelerationFunctionDataPointCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D33505A3-F195-4390-B47D-4DA70960AE05}
// *********************************************************************//
  IAccelerationFunctionDataPointCollection = interface(ICollectionBase)
    ['{D33505A3-F195-4390-B47D-4DA70960AE05}']
  end;

// *********************************************************************//
// DispIntf:  IAccelerationFunctionDataPointCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D33505A3-F195-4390-B47D-4DA70960AE05}
// *********************************************************************//
  IAccelerationFunctionDataPointCollectionDisp = dispinterface
    ['{D33505A3-F195-4390-B47D-4DA70960AE05}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IAccelerationFunctionDataPointContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9E0AFE67-A54C-4794-AAAC-259A2B92D171}
// *********************************************************************//
  IAccelerationFunctionDataPointContainerBase = interface(IAccelerationFunctionDataPointCollection)
    ['{9E0AFE67-A54C-4794-AAAC-259A2B92D171}']
    procedure ReplaceAll(Elements: OleVariant); safecall;
  end;

// *********************************************************************//
// DispIntf:  IAccelerationFunctionDataPointContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9E0AFE67-A54C-4794-AAAC-259A2B92D171}
// *********************************************************************//
  IAccelerationFunctionDataPointContainerBaseDisp = dispinterface
    ['{9E0AFE67-A54C-4794-AAAC-259A2B92D171}']
    procedure ReplaceAll(Elements: OleVariant); dispid 1610874880;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IAccelerationFunctionDataPointContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {12919CC6-FE21-42B5-9814-2E57FB1B46CA}
// *********************************************************************//
  IAccelerationFunctionDataPointContainer = interface(IAccelerationFunctionDataPointContainerBase)
    ['{12919CC6-FE21-42B5-9814-2E57FB1B46CA}']
  end;

// *********************************************************************//
// DispIntf:  IAccelerationFunctionDataPointContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {12919CC6-FE21-42B5-9814-2E57FB1B46CA}
// *********************************************************************//
  IAccelerationFunctionDataPointContainerDisp = dispinterface
    ['{12919CC6-FE21-42B5-9814-2E57FB1B46CA}']
    procedure ReplaceAll(Elements: OleVariant); dispid 1610874880;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDesDecelerationFunctionCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5F69B273-95C0-4C6D-8052-D5834C848D4A}
// *********************************************************************//
  IDesDecelerationFunctionCollection = interface(ICollectionBase)
    ['{5F69B273-95C0-4C6D-8052-D5834C848D4A}']
  end;

// *********************************************************************//
// DispIntf:  IDesDecelerationFunctionCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5F69B273-95C0-4C6D-8052-D5834C848D4A}
// *********************************************************************//
  IDesDecelerationFunctionCollectionDisp = dispinterface
    ['{5F69B273-95C0-4C6D-8052-D5834C848D4A}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDesDecelerationFunctionContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6F9773A5-50F0-4FA9-B86D-38564947C8CC}
// *********************************************************************//
  IDesDecelerationFunctionContainerBase = interface(IDesDecelerationFunctionCollection)
    ['{6F9773A5-50F0-4FA9-B86D-38564947C8CC}']
    function Get_ItemByKey(Key: OleVariant): IDesDecelerationFunction; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddDesDecelerationFunction(Key: OleVariant; DecelFuncDataPts: OleVariant): IDesDecelerationFunction; safecall;
    function DuplicateDesDecelerationFunction(Source: OleVariant; NewKey: OleVariant): IDesDecelerationFunction; safecall;
    procedure RemoveDesDecelerationFunction(const DesDecelerationFunction: IDesDecelerationFunction); safecall;
    property ItemByKey[Key: OleVariant]: IDesDecelerationFunction read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IDesDecelerationFunctionContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6F9773A5-50F0-4FA9-B86D-38564947C8CC}
// *********************************************************************//
  IDesDecelerationFunctionContainerBaseDisp = dispinterface
    ['{6F9773A5-50F0-4FA9-B86D-38564947C8CC}']
    property ItemByKey[Key: OleVariant]: IDesDecelerationFunction readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddDesDecelerationFunction(Key: OleVariant; DecelFuncDataPts: OleVariant): IDesDecelerationFunction; dispid 1610874882;
    function DuplicateDesDecelerationFunction(Source: OleVariant; NewKey: OleVariant): IDesDecelerationFunction; dispid 1610874883;
    procedure RemoveDesDecelerationFunction(const DesDecelerationFunction: IDesDecelerationFunction); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDesDecelerationFunctionContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {32E26E78-6559-4FC9-A434-F15E972F8664}
// *********************************************************************//
  IDesDecelerationFunctionContainer = interface(IDesDecelerationFunctionContainerBase)
    ['{32E26E78-6559-4FC9-A434-F15E972F8664}']
  end;

// *********************************************************************//
// DispIntf:  IDesDecelerationFunctionContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {32E26E78-6559-4FC9-A434-F15E972F8664}
// *********************************************************************//
  IDesDecelerationFunctionContainerDisp = dispinterface
    ['{32E26E78-6559-4FC9-A434-F15E972F8664}']
    property ItemByKey[Key: OleVariant]: IDesDecelerationFunction readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddDesDecelerationFunction(Key: OleVariant; DecelFuncDataPts: OleVariant): IDesDecelerationFunction; dispid 1610874882;
    function DuplicateDesDecelerationFunction(Source: OleVariant; NewKey: OleVariant): IDesDecelerationFunction; dispid 1610874883;
    procedure RemoveDesDecelerationFunction(const DesDecelerationFunction: IDesDecelerationFunction); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDesDecelerationFunctionBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E83D83E5-49F8-44C4-A29D-C0388BA4D938}
// *********************************************************************//
  IDesDecelerationFunctionBase = interface(IObjectBase)
    ['{E83D83E5-49F8-44C4-A29D-C0388BA4D938}']
    function Get_DecelFuncDataPts: IDecelerationFunctionDataPointContainer; safecall;
    property DecelFuncDataPts: IDecelerationFunctionDataPointContainer read Get_DecelFuncDataPts;
  end;

// *********************************************************************//
// DispIntf:  IDesDecelerationFunctionBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E83D83E5-49F8-44C4-A29D-C0388BA4D938}
// *********************************************************************//
  IDesDecelerationFunctionBaseDisp = dispinterface
    ['{E83D83E5-49F8-44C4-A29D-C0388BA4D938}']
    property DecelFuncDataPts: IDecelerationFunctionDataPointContainer readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IDesDecelerationFunction
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CFD591D9-17C7-4D33-BC5E-1A7BF0C31546}
// *********************************************************************//
  IDesDecelerationFunction = interface(IDesDecelerationFunctionBase)
    ['{CFD591D9-17C7-4D33-BC5E-1A7BF0C31546}']
  end;

// *********************************************************************//
// DispIntf:  IDesDecelerationFunctionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CFD591D9-17C7-4D33-BC5E-1A7BF0C31546}
// *********************************************************************//
  IDesDecelerationFunctionDisp = dispinterface
    ['{CFD591D9-17C7-4D33-BC5E-1A7BF0C31546}']
    property DecelFuncDataPts: IDecelerationFunctionDataPointContainer readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IDecelerationFunctionDataPointCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {05A65948-44FA-4DBF-9117-47631D8037C0}
// *********************************************************************//
  IDecelerationFunctionDataPointCollection = interface(ICollectionBase)
    ['{05A65948-44FA-4DBF-9117-47631D8037C0}']
  end;

// *********************************************************************//
// DispIntf:  IDecelerationFunctionDataPointCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {05A65948-44FA-4DBF-9117-47631D8037C0}
// *********************************************************************//
  IDecelerationFunctionDataPointCollectionDisp = dispinterface
    ['{05A65948-44FA-4DBF-9117-47631D8037C0}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDecelerationFunctionDataPointContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2AA793CF-18B1-4F2E-AB44-EB76F284F3B6}
// *********************************************************************//
  IDecelerationFunctionDataPointContainerBase = interface(IDecelerationFunctionDataPointCollection)
    ['{2AA793CF-18B1-4F2E-AB44-EB76F284F3B6}']
    procedure ReplaceAll(Elements: OleVariant); safecall;
  end;

// *********************************************************************//
// DispIntf:  IDecelerationFunctionDataPointContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2AA793CF-18B1-4F2E-AB44-EB76F284F3B6}
// *********************************************************************//
  IDecelerationFunctionDataPointContainerBaseDisp = dispinterface
    ['{2AA793CF-18B1-4F2E-AB44-EB76F284F3B6}']
    procedure ReplaceAll(Elements: OleVariant); dispid 1610874880;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDecelerationFunctionDataPointContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {727628EC-2A1B-40C3-89DC-9672CF5453F0}
// *********************************************************************//
  IDecelerationFunctionDataPointContainer = interface(IDecelerationFunctionDataPointContainerBase)
    ['{727628EC-2A1B-40C3-89DC-9672CF5453F0}']
  end;

// *********************************************************************//
// DispIntf:  IDecelerationFunctionDataPointContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {727628EC-2A1B-40C3-89DC-9672CF5453F0}
// *********************************************************************//
  IDecelerationFunctionDataPointContainerDisp = dispinterface
    ['{727628EC-2A1B-40C3-89DC-9672CF5453F0}']
    procedure ReplaceAll(Elements: OleVariant); dispid 1610874880;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDesSpeedDecisionContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {982C96E7-BC68-463B-82A7-1199C8A9BB59}
// *********************************************************************//
  IDesSpeedDecisionContainerBase = interface(IDesSpeedDecisionCollection)
    ['{982C96E7-BC68-463B-82A7-1199C8A9BB59}']
    function Get_ItemByKey(Key: OleVariant): IDesSpeedDecision; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddDesSpeedDecision(Key: OleVariant; const Lane: ILane; Pos: Double): IDesSpeedDecision; safecall;
    function DuplicateDesSpeedDecision(Source: OleVariant; NewKey: OleVariant): IDesSpeedDecision; safecall;
    procedure RemoveDesSpeedDecision(const DesSpeedDecision: IDesSpeedDecision); safecall;
    property ItemByKey[Key: OleVariant]: IDesSpeedDecision read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IDesSpeedDecisionContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {982C96E7-BC68-463B-82A7-1199C8A9BB59}
// *********************************************************************//
  IDesSpeedDecisionContainerBaseDisp = dispinterface
    ['{982C96E7-BC68-463B-82A7-1199C8A9BB59}']
    property ItemByKey[Key: OleVariant]: IDesSpeedDecision readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddDesSpeedDecision(Key: OleVariant; const Lane: ILane; Pos: Double): IDesSpeedDecision; dispid 1610874882;
    function DuplicateDesSpeedDecision(Source: OleVariant; NewKey: OleVariant): IDesSpeedDecision; dispid 1610874883;
    procedure RemoveDesSpeedDecision(const DesSpeedDecision: IDesSpeedDecision); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDesSpeedDecisionContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {72106B84-A613-4373-8397-9566711F4C5C}
// *********************************************************************//
  IDesSpeedDecisionContainer = interface(IDesSpeedDecisionContainerBase)
    ['{72106B84-A613-4373-8397-9566711F4C5C}']
  end;

// *********************************************************************//
// DispIntf:  IDesSpeedDecisionContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {72106B84-A613-4373-8397-9566711F4C5C}
// *********************************************************************//
  IDesSpeedDecisionContainerDisp = dispinterface
    ['{72106B84-A613-4373-8397-9566711F4C5C}']
    property ItemByKey[Key: OleVariant]: IDesSpeedDecision readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddDesSpeedDecision(Key: OleVariant; const Lane: ILane; Pos: Double): IDesSpeedDecision; dispid 1610874882;
    function DuplicateDesSpeedDecision(Source: OleVariant; NewKey: OleVariant): IDesSpeedDecision; dispid 1610874883;
    procedure RemoveDesSpeedDecision(const DesSpeedDecision: IDesSpeedDecision); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDesSpeedDecisionBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1642D367-CAA3-4E6B-BD11-F8442B935256}
// *********************************************************************//
  IDesSpeedDecisionBase = interface(IObjectBase)
    ['{1642D367-CAA3-4E6B-BD11-F8442B935256}']
    function Get_VehClassDesSpeedDistr: IVehClassDesSpeedDistributionContainer; safecall;
    function Get_Lane: ILane; safecall;
    property VehClassDesSpeedDistr: IVehClassDesSpeedDistributionContainer read Get_VehClassDesSpeedDistr;
    property Lane: ILane read Get_Lane;
  end;

// *********************************************************************//
// DispIntf:  IDesSpeedDecisionBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1642D367-CAA3-4E6B-BD11-F8442B935256}
// *********************************************************************//
  IDesSpeedDecisionBaseDisp = dispinterface
    ['{1642D367-CAA3-4E6B-BD11-F8442B935256}']
    property VehClassDesSpeedDistr: IVehClassDesSpeedDistributionContainer readonly dispid 1610809344;
    property Lane: ILane readonly dispid 1610809345;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IDesSpeedDecision
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F16C9121-68D2-4397-BFE3-5565758421EB}
// *********************************************************************//
  IDesSpeedDecision = interface(IDesSpeedDecisionBase)
    ['{F16C9121-68D2-4397-BFE3-5565758421EB}']
  end;

// *********************************************************************//
// DispIntf:  IDesSpeedDecisionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F16C9121-68D2-4397-BFE3-5565758421EB}
// *********************************************************************//
  IDesSpeedDecisionDisp = dispinterface
    ['{F16C9121-68D2-4397-BFE3-5565758421EB}']
    property VehClassDesSpeedDistr: IVehClassDesSpeedDistributionContainer readonly dispid 1610809344;
    property Lane: ILane readonly dispid 1610809345;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehClassDesSpeedDistributionCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BD6F6E1E-5BF7-45CF-B083-33DB56BBA777}
// *********************************************************************//
  IVehClassDesSpeedDistributionCollection = interface(ICollectionBase)
    ['{BD6F6E1E-5BF7-45CF-B083-33DB56BBA777}']
  end;

// *********************************************************************//
// DispIntf:  IVehClassDesSpeedDistributionCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BD6F6E1E-5BF7-45CF-B083-33DB56BBA777}
// *********************************************************************//
  IVehClassDesSpeedDistributionCollectionDisp = dispinterface
    ['{BD6F6E1E-5BF7-45CF-B083-33DB56BBA777}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehClassDesSpeedDistributionContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A8524D14-830B-4A71-8B82-BC3C45793102}
// *********************************************************************//
  IVehClassDesSpeedDistributionContainerBase = interface(IVehClassDesSpeedDistributionCollection)
    ['{A8524D14-830B-4A71-8B82-BC3C45793102}']
    function AddVehClassDesSpeedDistribution(const VehClass: IVehicleClass): IVehClassDesSpeedDistribution; safecall;
    procedure RemoveVehClassDesSpeedDistribution(const VehClassDesSpeedDistribution: IVehClassDesSpeedDistribution); safecall;
  end;

// *********************************************************************//
// DispIntf:  IVehClassDesSpeedDistributionContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A8524D14-830B-4A71-8B82-BC3C45793102}
// *********************************************************************//
  IVehClassDesSpeedDistributionContainerBaseDisp = dispinterface
    ['{A8524D14-830B-4A71-8B82-BC3C45793102}']
    function AddVehClassDesSpeedDistribution(const VehClass: IVehicleClass): IVehClassDesSpeedDistribution; dispid 1610874880;
    procedure RemoveVehClassDesSpeedDistribution(const VehClassDesSpeedDistribution: IVehClassDesSpeedDistribution); dispid 1610874881;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehClassDesSpeedDistributionContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D5681C04-9E47-4748-8CA7-F62F33A0B42F}
// *********************************************************************//
  IVehClassDesSpeedDistributionContainer = interface(IVehClassDesSpeedDistributionContainerBase)
    ['{D5681C04-9E47-4748-8CA7-F62F33A0B42F}']
  end;

// *********************************************************************//
// DispIntf:  IVehClassDesSpeedDistributionContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D5681C04-9E47-4748-8CA7-F62F33A0B42F}
// *********************************************************************//
  IVehClassDesSpeedDistributionContainerDisp = dispinterface
    ['{D5681C04-9E47-4748-8CA7-F62F33A0B42F}']
    function AddVehClassDesSpeedDistribution(const VehClass: IVehicleClass): IVehClassDesSpeedDistribution; dispid 1610874880;
    procedure RemoveVehClassDesSpeedDistribution(const VehClassDesSpeedDistribution: IVehClassDesSpeedDistribution); dispid 1610874881;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehClassDesSpeedDistributionBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F4114759-5223-4B5A-A42D-9A5377E458F4}
// *********************************************************************//
  IVehClassDesSpeedDistributionBase = interface(IObjectBase)
    ['{F4114759-5223-4B5A-A42D-9A5377E458F4}']
    function Get_DesSpeedDistr: IDesSpeedDistribution; safecall;
    function Get_VehClass: IVehicleClass; safecall;
    function Get_DesSpeedDec: IDesSpeedDecision; safecall;
    property DesSpeedDistr: IDesSpeedDistribution read Get_DesSpeedDistr;
    property VehClass: IVehicleClass read Get_VehClass;
    property DesSpeedDec: IDesSpeedDecision read Get_DesSpeedDec;
  end;

// *********************************************************************//
// DispIntf:  IVehClassDesSpeedDistributionBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F4114759-5223-4B5A-A42D-9A5377E458F4}
// *********************************************************************//
  IVehClassDesSpeedDistributionBaseDisp = dispinterface
    ['{F4114759-5223-4B5A-A42D-9A5377E458F4}']
    property DesSpeedDistr: IDesSpeedDistribution readonly dispid 1610809344;
    property VehClass: IVehicleClass readonly dispid 1610809345;
    property DesSpeedDec: IDesSpeedDecision readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehClassDesSpeedDistribution
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {89928B1B-B3DF-4F0B-847B-D1EB81997B33}
// *********************************************************************//
  IVehClassDesSpeedDistribution = interface(IVehClassDesSpeedDistributionBase)
    ['{89928B1B-B3DF-4F0B-847B-D1EB81997B33}']
  end;

// *********************************************************************//
// DispIntf:  IVehClassDesSpeedDistributionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {89928B1B-B3DF-4F0B-847B-D1EB81997B33}
// *********************************************************************//
  IVehClassDesSpeedDistributionDisp = dispinterface
    ['{89928B1B-B3DF-4F0B-847B-D1EB81997B33}']
    property DesSpeedDistr: IDesSpeedDistribution readonly dispid 1610809344;
    property VehClass: IVehicleClass readonly dispid 1610809345;
    property DesSpeedDec: IDesSpeedDecision readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IDesSpeedDistributionCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E80C3337-1D29-4291-88CE-87DF481CE228}
// *********************************************************************//
  IDesSpeedDistributionCollection = interface(ICollectionBase)
    ['{E80C3337-1D29-4291-88CE-87DF481CE228}']
  end;

// *********************************************************************//
// DispIntf:  IDesSpeedDistributionCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E80C3337-1D29-4291-88CE-87DF481CE228}
// *********************************************************************//
  IDesSpeedDistributionCollectionDisp = dispinterface
    ['{E80C3337-1D29-4291-88CE-87DF481CE228}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDesSpeedDistributionContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A4B19E29-38E6-45F7-97A2-6A59ECEF8CD0}
// *********************************************************************//
  IDesSpeedDistributionContainerBase = interface(IDesSpeedDistributionCollection)
    ['{A4B19E29-38E6-45F7-97A2-6A59ECEF8CD0}']
    function Get_ItemByKey(Key: OleVariant): IDesSpeedDistribution; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddDesSpeedDistribution(Key: OleVariant; SpeedDistrDatPts: OleVariant): IDesSpeedDistribution; safecall;
    function DuplicateDesSpeedDistribution(Source: OleVariant; NewKey: OleVariant): IDesSpeedDistribution; safecall;
    procedure RemoveDesSpeedDistribution(const DesSpeedDistribution: IDesSpeedDistribution); safecall;
    property ItemByKey[Key: OleVariant]: IDesSpeedDistribution read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IDesSpeedDistributionContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A4B19E29-38E6-45F7-97A2-6A59ECEF8CD0}
// *********************************************************************//
  IDesSpeedDistributionContainerBaseDisp = dispinterface
    ['{A4B19E29-38E6-45F7-97A2-6A59ECEF8CD0}']
    property ItemByKey[Key: OleVariant]: IDesSpeedDistribution readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddDesSpeedDistribution(Key: OleVariant; SpeedDistrDatPts: OleVariant): IDesSpeedDistribution; dispid 1610874882;
    function DuplicateDesSpeedDistribution(Source: OleVariant; NewKey: OleVariant): IDesSpeedDistribution; dispid 1610874883;
    procedure RemoveDesSpeedDistribution(const DesSpeedDistribution: IDesSpeedDistribution); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDesSpeedDistributionContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {ACD5745B-498F-4BD2-8CC9-7EA12E2A7B26}
// *********************************************************************//
  IDesSpeedDistributionContainer = interface(IDesSpeedDistributionContainerBase)
    ['{ACD5745B-498F-4BD2-8CC9-7EA12E2A7B26}']
  end;

// *********************************************************************//
// DispIntf:  IDesSpeedDistributionContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {ACD5745B-498F-4BD2-8CC9-7EA12E2A7B26}
// *********************************************************************//
  IDesSpeedDistributionContainerDisp = dispinterface
    ['{ACD5745B-498F-4BD2-8CC9-7EA12E2A7B26}']
    property ItemByKey[Key: OleVariant]: IDesSpeedDistribution readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddDesSpeedDistribution(Key: OleVariant; SpeedDistrDatPts: OleVariant): IDesSpeedDistribution; dispid 1610874882;
    function DuplicateDesSpeedDistribution(Source: OleVariant; NewKey: OleVariant): IDesSpeedDistribution; dispid 1610874883;
    procedure RemoveDesSpeedDistribution(const DesSpeedDistribution: IDesSpeedDistribution); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDetectorContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F2FFA954-81CC-4B1B-B4AC-17ECD5A03514}
// *********************************************************************//
  IDetectorContainerBase = interface(IDetectorCollection)
    ['{F2FFA954-81CC-4B1B-B4AC-17ECD5A03514}']
    function Get_ItemByKey(Key: OleVariant): IDetector; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddDetector(Key: OleVariant; const Lane: ILane; Pos: Double): IDetector; safecall;
    function DuplicateDetector(Source: OleVariant; NewKey: OleVariant): IDetector; safecall;
    procedure RemoveDetector(const Detector: IDetector); safecall;
    property ItemByKey[Key: OleVariant]: IDetector read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IDetectorContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F2FFA954-81CC-4B1B-B4AC-17ECD5A03514}
// *********************************************************************//
  IDetectorContainerBaseDisp = dispinterface
    ['{F2FFA954-81CC-4B1B-B4AC-17ECD5A03514}']
    property ItemByKey[Key: OleVariant]: IDetector readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddDetector(Key: OleVariant; const Lane: ILane; Pos: Double): IDetector; dispid 1610874882;
    function DuplicateDetector(Source: OleVariant; NewKey: OleVariant): IDetector; dispid 1610874883;
    procedure RemoveDetector(const Detector: IDetector); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDetectorContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FAFC0038-9516-45BD-8D7C-F592A2366A65}
// *********************************************************************//
  IDetectorContainer = interface(IDetectorContainerBase)
    ['{FAFC0038-9516-45BD-8D7C-F592A2366A65}']
  end;

// *********************************************************************//
// DispIntf:  IDetectorContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FAFC0038-9516-45BD-8D7C-F592A2366A65}
// *********************************************************************//
  IDetectorContainerDisp = dispinterface
    ['{FAFC0038-9516-45BD-8D7C-F592A2366A65}']
    property ItemByKey[Key: OleVariant]: IDetector readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddDetector(Key: OleVariant; const Lane: ILane; Pos: Double): IDetector; dispid 1610874882;
    function DuplicateDetector(Source: OleVariant; NewKey: OleVariant): IDetector; dispid 1610874883;
    procedure RemoveDetector(const Detector: IDetector); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDetectorBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {112EFCBD-5D5E-40D1-BB7B-5EDEBED0604E}
// *********************************************************************//
  IDetectorBase = interface(IObjectBase)
    ['{112EFCBD-5D5E-40D1-BB7B-5EDEBED0604E}']
    function Get_SC: ISignalController; safecall;
    function Get_PTStop: IPTStop; safecall;
    function Get_PTLines: IPTLineCollection; safecall;
    function Get_Lane: ILane; safecall;
    function Get_VehClasses: IVehicleClassCollection; safecall;
    function Get_PedClasses: IPedestrianClassCollection; safecall;
    property SC: ISignalController read Get_SC;
    property PTStop: IPTStop read Get_PTStop;
    property PTLines: IPTLineCollection read Get_PTLines;
    property Lane: ILane read Get_Lane;
    property VehClasses: IVehicleClassCollection read Get_VehClasses;
    property PedClasses: IPedestrianClassCollection read Get_PedClasses;
  end;

// *********************************************************************//
// DispIntf:  IDetectorBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {112EFCBD-5D5E-40D1-BB7B-5EDEBED0604E}
// *********************************************************************//
  IDetectorBaseDisp = dispinterface
    ['{112EFCBD-5D5E-40D1-BB7B-5EDEBED0604E}']
    property SC: ISignalController readonly dispid 1610809344;
    property PTStop: IPTStop readonly dispid 1610809345;
    property PTLines: IPTLineCollection readonly dispid 1610809346;
    property Lane: ILane readonly dispid 1610809347;
    property VehClasses: IVehicleClassCollection readonly dispid 1610809348;
    property PedClasses: IPedestrianClassCollection readonly dispid 1610809349;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IDetector
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6ECFF179-28C9-40E5-BD3D-0F9FE1D33F21}
// *********************************************************************//
  IDetector = interface(IDetectorBase)
    ['{6ECFF179-28C9-40E5-BD3D-0F9FE1D33F21}']
  end;

// *********************************************************************//
// DispIntf:  IDetectorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6ECFF179-28C9-40E5-BD3D-0F9FE1D33F21}
// *********************************************************************//
  IDetectorDisp = dispinterface
    ['{6ECFF179-28C9-40E5-BD3D-0F9FE1D33F21}']
    property SC: ISignalController readonly dispid 1610809344;
    property PTStop: IPTStop readonly dispid 1610809345;
    property PTLines: IPTLineCollection readonly dispid 1610809346;
    property Lane: ILane readonly dispid 1610809347;
    property VehClasses: IVehicleClassCollection readonly dispid 1610809348;
    property PedClasses: IPedestrianClassCollection readonly dispid 1610809349;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ISignalControllerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EE696511-FB92-438A-9A1E-221300583221}
// *********************************************************************//
  ISignalControllerBase = interface(IObjectBase)
    ['{EE696511-FB92-438A-9A1E-221300583221}']
    function Get_SGs: ISignalGroupContainer; safecall;
    function Get_WTTFiles: IWTTFileCollection; safecall;
    function Get_SigTmsTabConfig: ISignalOutputConfigurationElementContainer; safecall;
    function Get_SCDetRecConf: ISignalOutputConfigurationElementContainer; safecall;
    function Get_Detectors: IDetectorCollection; safecall;
    property SGs: ISignalGroupContainer read Get_SGs;
    property WTTFiles: IWTTFileCollection read Get_WTTFiles;
    property SigTmsTabConfig: ISignalOutputConfigurationElementContainer read Get_SigTmsTabConfig;
    property SCDetRecConf: ISignalOutputConfigurationElementContainer read Get_SCDetRecConf;
    property Detectors: IDetectorCollection read Get_Detectors;
  end;

// *********************************************************************//
// DispIntf:  ISignalControllerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EE696511-FB92-438A-9A1E-221300583221}
// *********************************************************************//
  ISignalControllerBaseDisp = dispinterface
    ['{EE696511-FB92-438A-9A1E-221300583221}']
    property SGs: ISignalGroupContainer readonly dispid 1610809344;
    property WTTFiles: IWTTFileCollection readonly dispid 1610809345;
    property SigTmsTabConfig: ISignalOutputConfigurationElementContainer readonly dispid 1610809346;
    property SCDetRecConf: ISignalOutputConfigurationElementContainer readonly dispid 1610809347;
    property Detectors: IDetectorCollection readonly dispid 1610809348;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ISignalController
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C0211C17-6ECF-41E5-A804-E02D8CA4FA9A}
// *********************************************************************//
  ISignalController = interface(ISignalControllerBase)
    ['{C0211C17-6ECF-41E5-A804-E02D8CA4FA9A}']
    function ReadChannel(channelId: SYSINT): OleVariant; safecall;
    procedure WriteChannel(channelId: SYSINT; Value: OleVariant); safecall;
    procedure GetSCDetRecResult(const typeName: WideString; varNo: SYSINT; 
                                out retValueFormat: IWTTValueFormat; out retValue: SYSINT); safecall;
    procedure Optimize; safecall;
  end;

// *********************************************************************//
// DispIntf:  ISignalControllerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C0211C17-6ECF-41E5-A804-E02D8CA4FA9A}
// *********************************************************************//
  ISignalControllerDisp = dispinterface
    ['{C0211C17-6ECF-41E5-A804-E02D8CA4FA9A}']
    function ReadChannel(channelId: SYSINT): OleVariant; dispid 1610874880;
    procedure WriteChannel(channelId: SYSINT; Value: OleVariant); dispid 1610874881;
    procedure GetSCDetRecResult(const typeName: WideString; varNo: SYSINT; 
                                out retValueFormat: IWTTValueFormat; out retValue: SYSINT); dispid 1610874882;
    procedure Optimize; dispid 1610874883;
    property SGs: ISignalGroupContainer readonly dispid 1610809344;
    property WTTFiles: IWTTFileCollection readonly dispid 1610809345;
    property SigTmsTabConfig: ISignalOutputConfigurationElementContainer readonly dispid 1610809346;
    property SCDetRecConf: ISignalOutputConfigurationElementContainer readonly dispid 1610809347;
    property Detectors: IDetectorCollection readonly dispid 1610809348;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ISignalGroupCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {87C1F22A-0C53-491C-A69F-41C2E5DA7343}
// *********************************************************************//
  ISignalGroupCollection = interface(ICollectionBase)
    ['{87C1F22A-0C53-491C-A69F-41C2E5DA7343}']
  end;

// *********************************************************************//
// DispIntf:  ISignalGroupCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {87C1F22A-0C53-491C-A69F-41C2E5DA7343}
// *********************************************************************//
  ISignalGroupCollectionDisp = dispinterface
    ['{87C1F22A-0C53-491C-A69F-41C2E5DA7343}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ISignalGroupContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {65E8949E-632A-41D6-87AD-15A399501FB3}
// *********************************************************************//
  ISignalGroupContainerBase = interface(ISignalGroupCollection)
    ['{65E8949E-632A-41D6-87AD-15A399501FB3}']
    function Get_ItemByKey(Key: OleVariant): ISignalGroup; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddSignalGroup(Key: OleVariant): ISignalGroup; safecall;
    function DuplicateSignalGroup(Source: OleVariant; NewKey: OleVariant): ISignalGroup; safecall;
    procedure RemoveSignalGroup(const SignalGroup: ISignalGroup); safecall;
    property ItemByKey[Key: OleVariant]: ISignalGroup read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  ISignalGroupContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {65E8949E-632A-41D6-87AD-15A399501FB3}
// *********************************************************************//
  ISignalGroupContainerBaseDisp = dispinterface
    ['{65E8949E-632A-41D6-87AD-15A399501FB3}']
    property ItemByKey[Key: OleVariant]: ISignalGroup readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddSignalGroup(Key: OleVariant): ISignalGroup; dispid 1610874882;
    function DuplicateSignalGroup(Source: OleVariant; NewKey: OleVariant): ISignalGroup; dispid 1610874883;
    procedure RemoveSignalGroup(const SignalGroup: ISignalGroup); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ISignalGroupContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AE7A179A-3368-4557-B27F-83161662236E}
// *********************************************************************//
  ISignalGroupContainer = interface(ISignalGroupContainerBase)
    ['{AE7A179A-3368-4557-B27F-83161662236E}']
  end;

// *********************************************************************//
// DispIntf:  ISignalGroupContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AE7A179A-3368-4557-B27F-83161662236E}
// *********************************************************************//
  ISignalGroupContainerDisp = dispinterface
    ['{AE7A179A-3368-4557-B27F-83161662236E}']
    property ItemByKey[Key: OleVariant]: ISignalGroup readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddSignalGroup(Key: OleVariant): ISignalGroup; dispid 1610874882;
    function DuplicateSignalGroup(Source: OleVariant; NewKey: OleVariant): ISignalGroup; dispid 1610874883;
    procedure RemoveSignalGroup(const SignalGroup: ISignalGroup); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ISignalGroupBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A4F19A8E-DDED-4472-8E80-66C7258174CE}
// *********************************************************************//
  ISignalGroupBase = interface(IObjectBase)
    ['{A4F19A8E-DDED-4472-8E80-66C7258174CE}']
    function Get_SC: ISignalController; safecall;
    function Get_SigHeads: ISignalHeadCollection; safecall;
    property SC: ISignalController read Get_SC;
    property SigHeads: ISignalHeadCollection read Get_SigHeads;
  end;

// *********************************************************************//
// DispIntf:  ISignalGroupBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A4F19A8E-DDED-4472-8E80-66C7258174CE}
// *********************************************************************//
  ISignalGroupBaseDisp = dispinterface
    ['{A4F19A8E-DDED-4472-8E80-66C7258174CE}']
    property SC: ISignalController readonly dispid 1610809344;
    property SigHeads: ISignalHeadCollection readonly dispid 1610809345;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ISignalGroup
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9C83A8FB-1D6F-41EC-8D32-C4853B559073}
// *********************************************************************//
  ISignalGroup = interface(ISignalGroupBase)
    ['{9C83A8FB-1D6F-41EC-8D32-C4853B559073}']
  end;

// *********************************************************************//
// DispIntf:  ISignalGroupDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9C83A8FB-1D6F-41EC-8D32-C4853B559073}
// *********************************************************************//
  ISignalGroupDisp = dispinterface
    ['{9C83A8FB-1D6F-41EC-8D32-C4853B559073}']
    property SC: ISignalController readonly dispid 1610809344;
    property SigHeads: ISignalHeadCollection readonly dispid 1610809345;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IWTTFileCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {831DD47D-81AE-44C4-A5E9-58688D8999B9}
// *********************************************************************//
  IWTTFileCollection = interface(ICollectionBase)
    ['{831DD47D-81AE-44C4-A5E9-58688D8999B9}']
  end;

// *********************************************************************//
// DispIntf:  IWTTFileCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {831DD47D-81AE-44C4-A5E9-58688D8999B9}
// *********************************************************************//
  IWTTFileCollectionDisp = dispinterface
    ['{831DD47D-81AE-44C4-A5E9-58688D8999B9}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ISignalOutputConfigurationElementCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {97246E0F-335A-4E85-AEE6-FE31F155A963}
// *********************************************************************//
  ISignalOutputConfigurationElementCollection = interface(ICollectionBase)
    ['{97246E0F-335A-4E85-AEE6-FE31F155A963}']
  end;

// *********************************************************************//
// DispIntf:  ISignalOutputConfigurationElementCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {97246E0F-335A-4E85-AEE6-FE31F155A963}
// *********************************************************************//
  ISignalOutputConfigurationElementCollectionDisp = dispinterface
    ['{97246E0F-335A-4E85-AEE6-FE31F155A963}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ISignalOutputConfigurationElementContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F1FA1C40-8722-4C72-B967-144E42C3C8C8}
// *********************************************************************//
  ISignalOutputConfigurationElementContainerBase = interface(ISignalOutputConfigurationElementCollection)
    ['{F1FA1C40-8722-4C72-B967-144E42C3C8C8}']
    function AddSignalOutputConfigurationElement(Key: OleVariant): ISignalOutputConfigurationElement; safecall;
    procedure RemoveSignalOutputConfigurationElement(const SignalOutputConfigurationElement: ISignalOutputConfigurationElement); safecall;
  end;

// *********************************************************************//
// DispIntf:  ISignalOutputConfigurationElementContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F1FA1C40-8722-4C72-B967-144E42C3C8C8}
// *********************************************************************//
  ISignalOutputConfigurationElementContainerBaseDisp = dispinterface
    ['{F1FA1C40-8722-4C72-B967-144E42C3C8C8}']
    function AddSignalOutputConfigurationElement(Key: OleVariant): ISignalOutputConfigurationElement; dispid 1610874880;
    procedure RemoveSignalOutputConfigurationElement(const SignalOutputConfigurationElement: ISignalOutputConfigurationElement); dispid 1610874881;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ISignalOutputConfigurationElementContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4E8C3515-32D1-42A3-8EAF-D4D78EF57518}
// *********************************************************************//
  ISignalOutputConfigurationElementContainer = interface(ISignalOutputConfigurationElementContainerBase)
    ['{4E8C3515-32D1-42A3-8EAF-D4D78EF57518}']
  end;

// *********************************************************************//
// DispIntf:  ISignalOutputConfigurationElementContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4E8C3515-32D1-42A3-8EAF-D4D78EF57518}
// *********************************************************************//
  ISignalOutputConfigurationElementContainerDisp = dispinterface
    ['{4E8C3515-32D1-42A3-8EAF-D4D78EF57518}']
    function AddSignalOutputConfigurationElement(Key: OleVariant): ISignalOutputConfigurationElement; dispid 1610874880;
    procedure RemoveSignalOutputConfigurationElement(const SignalOutputConfigurationElement: ISignalOutputConfigurationElement); dispid 1610874881;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ISignalOutputConfigurationElementBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {088BF208-1F77-4ED3-B84C-A8925054F9A5}
// *********************************************************************//
  ISignalOutputConfigurationElementBase = interface(IObjectBase)
    ['{088BF208-1F77-4ED3-B84C-A8925054F9A5}']
    function Get_SG: ISignalGroup; safecall;
    function Get_SC: ISignalController; safecall;
    property SG: ISignalGroup read Get_SG;
    property SC: ISignalController read Get_SC;
  end;

// *********************************************************************//
// DispIntf:  ISignalOutputConfigurationElementBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {088BF208-1F77-4ED3-B84C-A8925054F9A5}
// *********************************************************************//
  ISignalOutputConfigurationElementBaseDisp = dispinterface
    ['{088BF208-1F77-4ED3-B84C-A8925054F9A5}']
    property SG: ISignalGroup readonly dispid 1610809344;
    property SC: ISignalController readonly dispid 1610809345;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ISignalOutputConfigurationElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0FA1A6DD-E899-4710-B862-5B11D2C0832B}
// *********************************************************************//
  ISignalOutputConfigurationElement = interface(ISignalOutputConfigurationElementBase)
    ['{0FA1A6DD-E899-4710-B862-5B11D2C0832B}']
  end;

// *********************************************************************//
// DispIntf:  ISignalOutputConfigurationElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0FA1A6DD-E899-4710-B862-5B11D2C0832B}
// *********************************************************************//
  ISignalOutputConfigurationElementDisp = dispinterface
    ['{0FA1A6DD-E899-4710-B862-5B11D2C0832B}']
    property SG: ISignalGroup readonly dispid 1610809344;
    property SC: ISignalController readonly dispid 1610809345;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IWTTValueFormatBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {56FB59A1-23B3-413E-AA17-6C5283A83B7C}
// *********************************************************************//
  IWTTValueFormatBase = interface(IObjectBase)
    ['{56FB59A1-23B3-413E-AA17-6C5283A83B7C}']
  end;

// *********************************************************************//
// DispIntf:  IWTTValueFormatBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {56FB59A1-23B3-413E-AA17-6C5283A83B7C}
// *********************************************************************//
  IWTTValueFormatBaseDisp = dispinterface
    ['{56FB59A1-23B3-413E-AA17-6C5283A83B7C}']
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IWTTValueFormat
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {89E1A8A3-D08E-4CAD-BB4D-7FAD45B65F47}
// *********************************************************************//
  IWTTValueFormat = interface(IWTTValueFormatBase)
    ['{89E1A8A3-D08E-4CAD-BB4D-7FAD45B65F47}']
  end;

// *********************************************************************//
// DispIntf:  IWTTValueFormatDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {89E1A8A3-D08E-4CAD-BB4D-7FAD45B65F47}
// *********************************************************************//
  IWTTValueFormatDisp = dispinterface
    ['{89E1A8A3-D08E-4CAD-BB4D-7FAD45B65F47}']
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPTStopBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {73463A4E-0145-4632-89D6-84ED14012873}
// *********************************************************************//
  IPTStopBase = interface(IObjectBase)
    ['{73463A4E-0145-4632-89D6-84ED14012873}']
    function Get_BoardVols: IBoardingVolumeContainer; safecall;
    function Get_PTLineStops: IPTLineStopCollection; safecall;
    function Get_PTLinesAct: IPTLineCollection; safecall;
    function Get_PartPTLineStops: IPartialPTLineStopCollection; safecall;
    function Get_VehRoutPartPTAct: IVehicleRoutePartialPTCollection; safecall;
    function Get_Vehs: IVehicleCollection; safecall;
    function Get_AreasPT: IAreaCollection; safecall;
    function Get_Lane: ILane; safecall;
    property BoardVols: IBoardingVolumeContainer read Get_BoardVols;
    property PTLineStops: IPTLineStopCollection read Get_PTLineStops;
    property PTLinesAct: IPTLineCollection read Get_PTLinesAct;
    property PartPTLineStops: IPartialPTLineStopCollection read Get_PartPTLineStops;
    property VehRoutPartPTAct: IVehicleRoutePartialPTCollection read Get_VehRoutPartPTAct;
    property Vehs: IVehicleCollection read Get_Vehs;
    property AreasPT: IAreaCollection read Get_AreasPT;
    property Lane: ILane read Get_Lane;
  end;

// *********************************************************************//
// DispIntf:  IPTStopBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {73463A4E-0145-4632-89D6-84ED14012873}
// *********************************************************************//
  IPTStopBaseDisp = dispinterface
    ['{73463A4E-0145-4632-89D6-84ED14012873}']
    property BoardVols: IBoardingVolumeContainer readonly dispid 1610809344;
    property PTLineStops: IPTLineStopCollection readonly dispid 1610809345;
    property PTLinesAct: IPTLineCollection readonly dispid 1610809346;
    property PartPTLineStops: IPartialPTLineStopCollection readonly dispid 1610809347;
    property VehRoutPartPTAct: IVehicleRoutePartialPTCollection readonly dispid 1610809348;
    property Vehs: IVehicleCollection readonly dispid 1610809349;
    property AreasPT: IAreaCollection readonly dispid 1610809350;
    property Lane: ILane readonly dispid 1610809351;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPTStop
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F9FBEC8A-7590-4929-A719-A2A23E9A0790}
// *********************************************************************//
  IPTStop = interface(IPTStopBase)
    ['{F9FBEC8A-7590-4929-A719-A2A23E9A0790}']
  end;

// *********************************************************************//
// DispIntf:  IPTStopDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F9FBEC8A-7590-4929-A719-A2A23E9A0790}
// *********************************************************************//
  IPTStopDisp = dispinterface
    ['{F9FBEC8A-7590-4929-A719-A2A23E9A0790}']
    property BoardVols: IBoardingVolumeContainer readonly dispid 1610809344;
    property PTLineStops: IPTLineStopCollection readonly dispid 1610809345;
    property PTLinesAct: IPTLineCollection readonly dispid 1610809346;
    property PartPTLineStops: IPartialPTLineStopCollection readonly dispid 1610809347;
    property VehRoutPartPTAct: IVehicleRoutePartialPTCollection readonly dispid 1610809348;
    property Vehs: IVehicleCollection readonly dispid 1610809349;
    property AreasPT: IAreaCollection readonly dispid 1610809350;
    property Lane: ILane readonly dispid 1610809351;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IBoardingVolumeCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B673EB0F-8608-45D8-916F-8052551A5813}
// *********************************************************************//
  IBoardingVolumeCollection = interface(ICollectionBase)
    ['{B673EB0F-8608-45D8-916F-8052551A5813}']
  end;

// *********************************************************************//
// DispIntf:  IBoardingVolumeCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B673EB0F-8608-45D8-916F-8052551A5813}
// *********************************************************************//
  IBoardingVolumeCollectionDisp = dispinterface
    ['{B673EB0F-8608-45D8-916F-8052551A5813}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IBoardingVolumeContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {39F8B8FB-94DB-4E90-811C-BD2CF8E75710}
// *********************************************************************//
  IBoardingVolumeContainerBase = interface(IBoardingVolumeCollection)
    ['{39F8B8FB-94DB-4E90-811C-BD2CF8E75710}']
    function AddBoardingVolume(Key: OleVariant): IBoardingVolume; safecall;
    function DuplicateBoardingVolume(Source: OleVariant; NewKey: OleVariant): IBoardingVolume; safecall;
    procedure RemoveBoardingVolume(const BoardingVolume: IBoardingVolume); safecall;
  end;

// *********************************************************************//
// DispIntf:  IBoardingVolumeContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {39F8B8FB-94DB-4E90-811C-BD2CF8E75710}
// *********************************************************************//
  IBoardingVolumeContainerBaseDisp = dispinterface
    ['{39F8B8FB-94DB-4E90-811C-BD2CF8E75710}']
    function AddBoardingVolume(Key: OleVariant): IBoardingVolume; dispid 1610874880;
    function DuplicateBoardingVolume(Source: OleVariant; NewKey: OleVariant): IBoardingVolume; dispid 1610874881;
    procedure RemoveBoardingVolume(const BoardingVolume: IBoardingVolume); dispid 1610874882;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IBoardingVolumeContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {076049C1-0215-49A7-974C-94DEA5473694}
// *********************************************************************//
  IBoardingVolumeContainer = interface(IBoardingVolumeContainerBase)
    ['{076049C1-0215-49A7-974C-94DEA5473694}']
  end;

// *********************************************************************//
// DispIntf:  IBoardingVolumeContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {076049C1-0215-49A7-974C-94DEA5473694}
// *********************************************************************//
  IBoardingVolumeContainerDisp = dispinterface
    ['{076049C1-0215-49A7-974C-94DEA5473694}']
    function AddBoardingVolume(Key: OleVariant): IBoardingVolume; dispid 1610874880;
    function DuplicateBoardingVolume(Source: OleVariant; NewKey: OleVariant): IBoardingVolume; dispid 1610874881;
    procedure RemoveBoardingVolume(const BoardingVolume: IBoardingVolume); dispid 1610874882;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IBoardingVolumeBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1741CD70-AB33-4847-AF3D-4068929E7BB8}
// *********************************************************************//
  IBoardingVolumeBase = interface(IObjectBase)
    ['{1741CD70-AB33-4847-AF3D-4068929E7BB8}']
    function Get_PTStop: IPTStop; safecall;
    function Get_PTLines: IPTLineCollection; safecall;
    property PTStop: IPTStop read Get_PTStop;
    property PTLines: IPTLineCollection read Get_PTLines;
  end;

// *********************************************************************//
// DispIntf:  IBoardingVolumeBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1741CD70-AB33-4847-AF3D-4068929E7BB8}
// *********************************************************************//
  IBoardingVolumeBaseDisp = dispinterface
    ['{1741CD70-AB33-4847-AF3D-4068929E7BB8}']
    property PTStop: IPTStop readonly dispid 1610809344;
    property PTLines: IPTLineCollection readonly dispid 1610809345;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IBoardingVolume
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E9BDDC3B-7904-4A8B-B320-2F89E23AEA74}
// *********************************************************************//
  IBoardingVolume = interface(IBoardingVolumeBase)
    ['{E9BDDC3B-7904-4A8B-B320-2F89E23AEA74}']
  end;

// *********************************************************************//
// DispIntf:  IBoardingVolumeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E9BDDC3B-7904-4A8B-B320-2F89E23AEA74}
// *********************************************************************//
  IBoardingVolumeDisp = dispinterface
    ['{E9BDDC3B-7904-4A8B-B320-2F89E23AEA74}']
    property PTStop: IPTStop readonly dispid 1610809344;
    property PTLines: IPTLineCollection readonly dispid 1610809345;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPTLineStopCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {69156FCE-F1D8-412E-93CB-A3772DBCD536}
// *********************************************************************//
  IPTLineStopCollection = interface(ICollectionBase)
    ['{69156FCE-F1D8-412E-93CB-A3772DBCD536}']
  end;

// *********************************************************************//
// DispIntf:  IPTLineStopCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {69156FCE-F1D8-412E-93CB-A3772DBCD536}
// *********************************************************************//
  IPTLineStopCollectionDisp = dispinterface
    ['{69156FCE-F1D8-412E-93CB-A3772DBCD536}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPartialPTLineStopCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {61822A19-5CB1-4368-8FB5-38E0C2423D6B}
// *********************************************************************//
  IPartialPTLineStopCollection = interface(ICollectionBase)
    ['{61822A19-5CB1-4368-8FB5-38E0C2423D6B}']
  end;

// *********************************************************************//
// DispIntf:  IPartialPTLineStopCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {61822A19-5CB1-4368-8FB5-38E0C2423D6B}
// *********************************************************************//
  IPartialPTLineStopCollectionDisp = dispinterface
    ['{61822A19-5CB1-4368-8FB5-38E0C2423D6B}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPedestrianClassCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7078076C-6AB8-402B-A8F7-AF2C5BB865C1}
// *********************************************************************//
  IPedestrianClassCollection = interface(ICollectionBase)
    ['{7078076C-6AB8-402B-A8F7-AF2C5BB865C1}']
  end;

// *********************************************************************//
// DispIntf:  IPedestrianClassCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7078076C-6AB8-402B-A8F7-AF2C5BB865C1}
// *********************************************************************//
  IPedestrianClassCollectionDisp = dispinterface
    ['{7078076C-6AB8-402B-A8F7-AF2C5BB865C1}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDisplayTypeCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EA41AC6D-CE4D-465C-B04D-7F1276958880}
// *********************************************************************//
  IDisplayTypeCollection = interface(ICollectionBase)
    ['{EA41AC6D-CE4D-465C-B04D-7F1276958880}']
  end;

// *********************************************************************//
// DispIntf:  IDisplayTypeCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EA41AC6D-CE4D-465C-B04D-7F1276958880}
// *********************************************************************//
  IDisplayTypeCollectionDisp = dispinterface
    ['{EA41AC6D-CE4D-465C-B04D-7F1276958880}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDisplayTypeContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1EFA46B5-8AE5-435C-B82D-F8DEF9380659}
// *********************************************************************//
  IDisplayTypeContainerBase = interface(IDisplayTypeCollection)
    ['{1EFA46B5-8AE5-435C-B82D-F8DEF9380659}']
    function Get_ItemByKey(Key: OleVariant): IDisplayType; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddDisplayType(Key: OleVariant): IDisplayType; safecall;
    function DuplicateDisplayType(Source: OleVariant; NewKey: OleVariant): IDisplayType; safecall;
    procedure RemoveDisplayType(const DisplayType: IDisplayType); safecall;
    property ItemByKey[Key: OleVariant]: IDisplayType read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IDisplayTypeContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1EFA46B5-8AE5-435C-B82D-F8DEF9380659}
// *********************************************************************//
  IDisplayTypeContainerBaseDisp = dispinterface
    ['{1EFA46B5-8AE5-435C-B82D-F8DEF9380659}']
    property ItemByKey[Key: OleVariant]: IDisplayType readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddDisplayType(Key: OleVariant): IDisplayType; dispid 1610874882;
    function DuplicateDisplayType(Source: OleVariant; NewKey: OleVariant): IDisplayType; dispid 1610874883;
    procedure RemoveDisplayType(const DisplayType: IDisplayType); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDisplayTypeContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C27FD3E3-30DF-489F-ADA9-C1A485370E4B}
// *********************************************************************//
  IDisplayTypeContainer = interface(IDisplayTypeContainerBase)
    ['{C27FD3E3-30DF-489F-ADA9-C1A485370E4B}']
  end;

// *********************************************************************//
// DispIntf:  IDisplayTypeContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C27FD3E3-30DF-489F-ADA9-C1A485370E4B}
// *********************************************************************//
  IDisplayTypeContainerDisp = dispinterface
    ['{C27FD3E3-30DF-489F-ADA9-C1A485370E4B}']
    property ItemByKey[Key: OleVariant]: IDisplayType readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddDisplayType(Key: OleVariant): IDisplayType; dispid 1610874882;
    function DuplicateDisplayType(Source: OleVariant; NewKey: OleVariant): IDisplayType; dispid 1610874883;
    procedure RemoveDisplayType(const DisplayType: IDisplayType); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDistanceDistributionCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {47708F23-A1AB-4837-836E-95CA256B8C03}
// *********************************************************************//
  IDistanceDistributionCollection = interface(ICollectionBase)
    ['{47708F23-A1AB-4837-836E-95CA256B8C03}']
  end;

// *********************************************************************//
// DispIntf:  IDistanceDistributionCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {47708F23-A1AB-4837-836E-95CA256B8C03}
// *********************************************************************//
  IDistanceDistributionCollectionDisp = dispinterface
    ['{47708F23-A1AB-4837-836E-95CA256B8C03}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDistanceDistributionContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8ABA4939-3DC8-4CDD-B05B-1EF1E531A2A7}
// *********************************************************************//
  IDistanceDistributionContainerBase = interface(IDistanceDistributionCollection)
    ['{8ABA4939-3DC8-4CDD-B05B-1EF1E531A2A7}']
    function Get_ItemByKey(Key: OleVariant): IDistanceDistribution; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddDistanceDistribution(Key: OleVariant; DistrDataPts: OleVariant): IDistanceDistribution; safecall;
    function DuplicateDistanceDistribution(Source: OleVariant; NewKey: OleVariant): IDistanceDistribution; safecall;
    procedure RemoveDistanceDistribution(const DistanceDistribution: IDistanceDistribution); safecall;
    property ItemByKey[Key: OleVariant]: IDistanceDistribution read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IDistanceDistributionContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8ABA4939-3DC8-4CDD-B05B-1EF1E531A2A7}
// *********************************************************************//
  IDistanceDistributionContainerBaseDisp = dispinterface
    ['{8ABA4939-3DC8-4CDD-B05B-1EF1E531A2A7}']
    property ItemByKey[Key: OleVariant]: IDistanceDistribution readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddDistanceDistribution(Key: OleVariant; DistrDataPts: OleVariant): IDistanceDistribution; dispid 1610874882;
    function DuplicateDistanceDistribution(Source: OleVariant; NewKey: OleVariant): IDistanceDistribution; dispid 1610874883;
    procedure RemoveDistanceDistribution(const DistanceDistribution: IDistanceDistribution); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDistanceDistributionContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BFFC87E7-6E8E-461D-8B3A-AF2D8565F5B6}
// *********************************************************************//
  IDistanceDistributionContainer = interface(IDistanceDistributionContainerBase)
    ['{BFFC87E7-6E8E-461D-8B3A-AF2D8565F5B6}']
  end;

// *********************************************************************//
// DispIntf:  IDistanceDistributionContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BFFC87E7-6E8E-461D-8B3A-AF2D8565F5B6}
// *********************************************************************//
  IDistanceDistributionContainerDisp = dispinterface
    ['{BFFC87E7-6E8E-461D-8B3A-AF2D8565F5B6}']
    property ItemByKey[Key: OleVariant]: IDistanceDistribution readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddDistanceDistribution(Key: OleVariant; DistrDataPts: OleVariant): IDistanceDistribution; dispid 1610874882;
    function DuplicateDistanceDistribution(Source: OleVariant; NewKey: OleVariant): IDistanceDistribution; dispid 1610874883;
    procedure RemoveDistanceDistribution(const DistanceDistribution: IDistanceDistribution); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDrivingBehaviorCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {299B9113-78D8-448D-90B8-A057BC478F92}
// *********************************************************************//
  IDrivingBehaviorCollection = interface(ICollectionBase)
    ['{299B9113-78D8-448D-90B8-A057BC478F92}']
  end;

// *********************************************************************//
// DispIntf:  IDrivingBehaviorCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {299B9113-78D8-448D-90B8-A057BC478F92}
// *********************************************************************//
  IDrivingBehaviorCollectionDisp = dispinterface
    ['{299B9113-78D8-448D-90B8-A057BC478F92}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDrivingBehaviorContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EE1FA6BF-FCAE-4BDB-9175-C5BDF7F1459B}
// *********************************************************************//
  IDrivingBehaviorContainerBase = interface(IDrivingBehaviorCollection)
    ['{EE1FA6BF-FCAE-4BDB-9175-C5BDF7F1459B}']
    function Get_ItemByKey(Key: OleVariant): IDrivingBehavior; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddDrivingBehavior(Key: OleVariant): IDrivingBehavior; safecall;
    function DuplicateDrivingBehavior(Source: OleVariant; NewKey: OleVariant): IDrivingBehavior; safecall;
    procedure RemoveDrivingBehavior(const DrivingBehavior: IDrivingBehavior); safecall;
    property ItemByKey[Key: OleVariant]: IDrivingBehavior read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IDrivingBehaviorContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EE1FA6BF-FCAE-4BDB-9175-C5BDF7F1459B}
// *********************************************************************//
  IDrivingBehaviorContainerBaseDisp = dispinterface
    ['{EE1FA6BF-FCAE-4BDB-9175-C5BDF7F1459B}']
    property ItemByKey[Key: OleVariant]: IDrivingBehavior readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddDrivingBehavior(Key: OleVariant): IDrivingBehavior; dispid 1610874882;
    function DuplicateDrivingBehavior(Source: OleVariant; NewKey: OleVariant): IDrivingBehavior; dispid 1610874883;
    procedure RemoveDrivingBehavior(const DrivingBehavior: IDrivingBehavior); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDrivingBehaviorContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BD07E333-8C8E-425F-9E5B-6BD1F44E6071}
// *********************************************************************//
  IDrivingBehaviorContainer = interface(IDrivingBehaviorContainerBase)
    ['{BD07E333-8C8E-425F-9E5B-6BD1F44E6071}']
  end;

// *********************************************************************//
// DispIntf:  IDrivingBehaviorContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BD07E333-8C8E-425F-9E5B-6BD1F44E6071}
// *********************************************************************//
  IDrivingBehaviorContainerDisp = dispinterface
    ['{BD07E333-8C8E-425F-9E5B-6BD1F44E6071}']
    property ItemByKey[Key: OleVariant]: IDrivingBehavior readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddDrivingBehavior(Key: OleVariant): IDrivingBehavior; dispid 1610874882;
    function DuplicateDrivingBehavior(Source: OleVariant; NewKey: OleVariant): IDrivingBehavior; dispid 1610874883;
    procedure RemoveDrivingBehavior(const DrivingBehavior: IDrivingBehavior); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDynamicAssignmentBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CB912C9D-6975-474C-8F61-5A7670B0E304}
// *********************************************************************//
  IDynamicAssignmentBase = interface(IObjectBase)
    ['{CB912C9D-6975-474C-8F61-5A7670B0E304}']
    function Get_DynAssignDemands: IDynAssignDemandContainer; safecall;
    function Get_AltPathSearches: IAlternativePathSearchContainer; safecall;
    function Get_AltPathSearchesVehRoutDec: IAlternativePathSearchVehicleRoutingDecisionContainer; safecall;
    function Get_VehClasses: IVehicleClassCollection; safecall;
    function Get_Matrix: IMatrix; safecall;
    function Get_CntDataAttr: IAttributeSelectionContainer; safecall;
    function Get_PathVolAttr: IAttributeSelectionContainer; safecall;
    property DynAssignDemands: IDynAssignDemandContainer read Get_DynAssignDemands;
    property AltPathSearches: IAlternativePathSearchContainer read Get_AltPathSearches;
    property AltPathSearchesVehRoutDec: IAlternativePathSearchVehicleRoutingDecisionContainer read Get_AltPathSearchesVehRoutDec;
    property VehClasses: IVehicleClassCollection read Get_VehClasses;
    property Matrix: IMatrix read Get_Matrix;
    property CntDataAttr: IAttributeSelectionContainer read Get_CntDataAttr;
    property PathVolAttr: IAttributeSelectionContainer read Get_PathVolAttr;
  end;

// *********************************************************************//
// DispIntf:  IDynamicAssignmentBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CB912C9D-6975-474C-8F61-5A7670B0E304}
// *********************************************************************//
  IDynamicAssignmentBaseDisp = dispinterface
    ['{CB912C9D-6975-474C-8F61-5A7670B0E304}']
    property DynAssignDemands: IDynAssignDemandContainer readonly dispid 1610809344;
    property AltPathSearches: IAlternativePathSearchContainer readonly dispid 1610809345;
    property AltPathSearchesVehRoutDec: IAlternativePathSearchVehicleRoutingDecisionContainer readonly dispid 1610809346;
    property VehClasses: IVehicleClassCollection readonly dispid 1610809347;
    property Matrix: IMatrix readonly dispid 1610809348;
    property CntDataAttr: IAttributeSelectionContainer readonly dispid 1610809349;
    property PathVolAttr: IAttributeSelectionContainer readonly dispid 1610809350;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IDynamicAssignment
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9FC3E94F-FAEA-46E9-B460-72CA96E5CBCB}
// *********************************************************************//
  IDynamicAssignment = interface(IDynamicAssignmentBase)
    ['{9FC3E94F-FAEA-46E9-B460-72CA96E5CBCB}']
    function CreateGraph(EdgeType: EdgeType): WordBool; safecall;
    procedure RunMatrixCorrection; safecall;
    function CreateMatrixFromWegFile(dtaInterval: SYSINT): IMatrix; safecall;
  end;

// *********************************************************************//
// DispIntf:  IDynamicAssignmentDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9FC3E94F-FAEA-46E9-B460-72CA96E5CBCB}
// *********************************************************************//
  IDynamicAssignmentDisp = dispinterface
    ['{9FC3E94F-FAEA-46E9-B460-72CA96E5CBCB}']
    function CreateGraph(EdgeType: EdgeType): WordBool; dispid 1610874880;
    procedure RunMatrixCorrection; dispid 1610874881;
    function CreateMatrixFromWegFile(dtaInterval: SYSINT): IMatrix; dispid 1610874882;
    property DynAssignDemands: IDynAssignDemandContainer readonly dispid 1610809344;
    property AltPathSearches: IAlternativePathSearchContainer readonly dispid 1610809345;
    property AltPathSearchesVehRoutDec: IAlternativePathSearchVehicleRoutingDecisionContainer readonly dispid 1610809346;
    property VehClasses: IVehicleClassCollection readonly dispid 1610809347;
    property Matrix: IMatrix readonly dispid 1610809348;
    property CntDataAttr: IAttributeSelectionContainer readonly dispid 1610809349;
    property PathVolAttr: IAttributeSelectionContainer readonly dispid 1610809350;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IDynAssignDemandCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3301C974-E748-47FC-9318-81D38A97AF21}
// *********************************************************************//
  IDynAssignDemandCollection = interface(ICollectionBase)
    ['{3301C974-E748-47FC-9318-81D38A97AF21}']
  end;

// *********************************************************************//
// DispIntf:  IDynAssignDemandCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3301C974-E748-47FC-9318-81D38A97AF21}
// *********************************************************************//
  IDynAssignDemandCollectionDisp = dispinterface
    ['{3301C974-E748-47FC-9318-81D38A97AF21}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDynAssignDemandContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {779A9BD3-FCC4-41B1-965B-2718E6E33B5A}
// *********************************************************************//
  IDynAssignDemandContainerBase = interface(IDynAssignDemandCollection)
    ['{779A9BD3-FCC4-41B1-965B-2718E6E33B5A}']
    function Get_ItemByKey(Key: OleVariant): IDynAssignDemand; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddDynAssignDemand(Key: OleVariant): IDynAssignDemand; safecall;
    procedure RemoveDynAssignDemand(const DynAssignDemand: IDynAssignDemand); safecall;
    property ItemByKey[Key: OleVariant]: IDynAssignDemand read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IDynAssignDemandContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {779A9BD3-FCC4-41B1-965B-2718E6E33B5A}
// *********************************************************************//
  IDynAssignDemandContainerBaseDisp = dispinterface
    ['{779A9BD3-FCC4-41B1-965B-2718E6E33B5A}']
    property ItemByKey[Key: OleVariant]: IDynAssignDemand readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddDynAssignDemand(Key: OleVariant): IDynAssignDemand; dispid 1610874882;
    procedure RemoveDynAssignDemand(const DynAssignDemand: IDynAssignDemand); dispid 1610874883;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDynAssignDemandContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1B1BE465-8657-46FB-801E-2F0A83C4E4C3}
// *********************************************************************//
  IDynAssignDemandContainer = interface(IDynAssignDemandContainerBase)
    ['{1B1BE465-8657-46FB-801E-2F0A83C4E4C3}']
  end;

// *********************************************************************//
// DispIntf:  IDynAssignDemandContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1B1BE465-8657-46FB-801E-2F0A83C4E4C3}
// *********************************************************************//
  IDynAssignDemandContainerDisp = dispinterface
    ['{1B1BE465-8657-46FB-801E-2F0A83C4E4C3}']
    property ItemByKey[Key: OleVariant]: IDynAssignDemand readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddDynAssignDemand(Key: OleVariant): IDynAssignDemand; dispid 1610874882;
    procedure RemoveDynAssignDemand(const DynAssignDemand: IDynAssignDemand); dispid 1610874883;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDynAssignDemandBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6E52FA64-CF5A-4C7F-8EB4-5F451CA012A6}
// *********************************************************************//
  IDynAssignDemandBase = interface(IObjectBase)
    ['{6E52FA64-CF5A-4C7F-8EB4-5F451CA012A6}']
    function Get_VehComp: IVehicleComposition; safecall;
    function Get_DynAssign: IDynamicAssignment; safecall;
    function Get_Matrix: IMatrix; safecall;
    property VehComp: IVehicleComposition read Get_VehComp;
    property DynAssign: IDynamicAssignment read Get_DynAssign;
    property Matrix: IMatrix read Get_Matrix;
  end;

// *********************************************************************//
// DispIntf:  IDynAssignDemandBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6E52FA64-CF5A-4C7F-8EB4-5F451CA012A6}
// *********************************************************************//
  IDynAssignDemandBaseDisp = dispinterface
    ['{6E52FA64-CF5A-4C7F-8EB4-5F451CA012A6}']
    property VehComp: IVehicleComposition readonly dispid 1610809344;
    property DynAssign: IDynamicAssignment readonly dispid 1610809345;
    property Matrix: IMatrix readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IDynAssignDemand
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E8876A54-6D72-40B0-BE7C-57191C74D15A}
// *********************************************************************//
  IDynAssignDemand = interface(IDynAssignDemandBase)
    ['{E8876A54-6D72-40B0-BE7C-57191C74D15A}']
  end;

// *********************************************************************//
// DispIntf:  IDynAssignDemandDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E8876A54-6D72-40B0-BE7C-57191C74D15A}
// *********************************************************************//
  IDynAssignDemandDisp = dispinterface
    ['{E8876A54-6D72-40B0-BE7C-57191C74D15A}']
    property VehComp: IVehicleComposition readonly dispid 1610809344;
    property DynAssign: IDynamicAssignment readonly dispid 1610809345;
    property Matrix: IMatrix readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehicleCompositionBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B29BA632-A8D8-4D32-BC98-FDA2C827884C}
// *********************************************************************//
  IVehicleCompositionBase = interface(IObjectBase)
    ['{B29BA632-A8D8-4D32-BC98-FDA2C827884C}']
    function Get_VehCompRelFlows: IVehicleCompositionRelativeFlowContainer; safecall;
    property VehCompRelFlows: IVehicleCompositionRelativeFlowContainer read Get_VehCompRelFlows;
  end;

// *********************************************************************//
// DispIntf:  IVehicleCompositionBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B29BA632-A8D8-4D32-BC98-FDA2C827884C}
// *********************************************************************//
  IVehicleCompositionBaseDisp = dispinterface
    ['{B29BA632-A8D8-4D32-BC98-FDA2C827884C}']
    property VehCompRelFlows: IVehicleCompositionRelativeFlowContainer readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehicleComposition
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7243EB33-36F9-47C0-9BD1-910D02F58C92}
// *********************************************************************//
  IVehicleComposition = interface(IVehicleCompositionBase)
    ['{7243EB33-36F9-47C0-9BD1-910D02F58C92}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleCompositionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7243EB33-36F9-47C0-9BD1-910D02F58C92}
// *********************************************************************//
  IVehicleCompositionDisp = dispinterface
    ['{7243EB33-36F9-47C0-9BD1-910D02F58C92}']
    property VehCompRelFlows: IVehicleCompositionRelativeFlowContainer readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehicleCompositionRelativeFlowCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9E4046FB-092F-4705-893E-F400C659BC11}
// *********************************************************************//
  IVehicleCompositionRelativeFlowCollection = interface(ICollectionBase)
    ['{9E4046FB-092F-4705-893E-F400C659BC11}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleCompositionRelativeFlowCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9E4046FB-092F-4705-893E-F400C659BC11}
// *********************************************************************//
  IVehicleCompositionRelativeFlowCollectionDisp = dispinterface
    ['{9E4046FB-092F-4705-893E-F400C659BC11}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleCompositionRelativeFlowContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {95585E85-3FF4-484B-BEDF-636441136CFA}
// *********************************************************************//
  IVehicleCompositionRelativeFlowContainerBase = interface(IVehicleCompositionRelativeFlowCollection)
    ['{95585E85-3FF4-484B-BEDF-636441136CFA}']
    function AddVehicleCompositionRelativeFlow(const VehType: IVehicleType; 
                                               const DesSpeedDistr: IDesSpeedDistribution): IVehicleCompositionRelativeFlow; safecall;
    procedure RemoveVehicleCompositionRelativeFlow(const VehicleCompositionRelativeFlow: IVehicleCompositionRelativeFlow); safecall;
  end;

// *********************************************************************//
// DispIntf:  IVehicleCompositionRelativeFlowContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {95585E85-3FF4-484B-BEDF-636441136CFA}
// *********************************************************************//
  IVehicleCompositionRelativeFlowContainerBaseDisp = dispinterface
    ['{95585E85-3FF4-484B-BEDF-636441136CFA}']
    function AddVehicleCompositionRelativeFlow(const VehType: IVehicleType; 
                                               const DesSpeedDistr: IDesSpeedDistribution): IVehicleCompositionRelativeFlow; dispid 1610874880;
    procedure RemoveVehicleCompositionRelativeFlow(const VehicleCompositionRelativeFlow: IVehicleCompositionRelativeFlow); dispid 1610874881;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleCompositionRelativeFlowContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {568CB3D7-1890-41AD-A53E-40D6D6D829B5}
// *********************************************************************//
  IVehicleCompositionRelativeFlowContainer = interface(IVehicleCompositionRelativeFlowContainerBase)
    ['{568CB3D7-1890-41AD-A53E-40D6D6D829B5}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleCompositionRelativeFlowContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {568CB3D7-1890-41AD-A53E-40D6D6D829B5}
// *********************************************************************//
  IVehicleCompositionRelativeFlowContainerDisp = dispinterface
    ['{568CB3D7-1890-41AD-A53E-40D6D6D829B5}']
    function AddVehicleCompositionRelativeFlow(const VehType: IVehicleType; 
                                               const DesSpeedDistr: IDesSpeedDistribution): IVehicleCompositionRelativeFlow; dispid 1610874880;
    procedure RemoveVehicleCompositionRelativeFlow(const VehicleCompositionRelativeFlow: IVehicleCompositionRelativeFlow); dispid 1610874881;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleTypeBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AA423210-F1C3-4004-B1ED-B65E7DD97D1E}
// *********************************************************************//
  IVehicleTypeBase = interface(IObjectBase)
    ['{AA423210-F1C3-4004-B1ED-B65E7DD97D1E}']
    function Get_ColorDistr1: IColorDistribution; safecall;
    function Get_WeightDistr: IWeightDistribution; safecall;
    function Get_PowerDistr: IPowerDistribution; safecall;
    function Get_MaxAccelFunc: IMaxAccelerationFunction; safecall;
    function Get_DesAccelFunc: IDesAccelerationFunction; safecall;
    function Get_MaxDecelFunc: IMaxDecelerationFunction; safecall;
    function Get_DesDecelFunc: IDesDecelerationFunction; safecall;
    function Get_Model2D3DDistr: IModel2D3DDistribution; safecall;
    function Get_ParkLotSelPars: IParkingLotSelectionParametersContainer; safecall;
    function Get_OccupDistr: IOccupancyDistribution; safecall;
    function Get_ColorDistr2: IColorDistribution; safecall;
    function Get_ColorDistr3: IColorDistribution; safecall;
    function Get_ColorDistr4: IColorDistribution; safecall;
    function Get_VehClasses: IVehicleClassCollection; safecall;
    function Get_CritSpeedFunc: ICritSpeedFunc; safecall;
    function Get_LatDriftSpeedFunc: ILatDriftSpeedFunc; safecall;
    property ColorDistr1: IColorDistribution read Get_ColorDistr1;
    property WeightDistr: IWeightDistribution read Get_WeightDistr;
    property PowerDistr: IPowerDistribution read Get_PowerDistr;
    property MaxAccelFunc: IMaxAccelerationFunction read Get_MaxAccelFunc;
    property DesAccelFunc: IDesAccelerationFunction read Get_DesAccelFunc;
    property MaxDecelFunc: IMaxDecelerationFunction read Get_MaxDecelFunc;
    property DesDecelFunc: IDesDecelerationFunction read Get_DesDecelFunc;
    property Model2D3DDistr: IModel2D3DDistribution read Get_Model2D3DDistr;
    property ParkLotSelPars: IParkingLotSelectionParametersContainer read Get_ParkLotSelPars;
    property OccupDistr: IOccupancyDistribution read Get_OccupDistr;
    property ColorDistr2: IColorDistribution read Get_ColorDistr2;
    property ColorDistr3: IColorDistribution read Get_ColorDistr3;
    property ColorDistr4: IColorDistribution read Get_ColorDistr4;
    property VehClasses: IVehicleClassCollection read Get_VehClasses;
    property CritSpeedFunc: ICritSpeedFunc read Get_CritSpeedFunc;
    property LatDriftSpeedFunc: ILatDriftSpeedFunc read Get_LatDriftSpeedFunc;
  end;

// *********************************************************************//
// DispIntf:  IVehicleTypeBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AA423210-F1C3-4004-B1ED-B65E7DD97D1E}
// *********************************************************************//
  IVehicleTypeBaseDisp = dispinterface
    ['{AA423210-F1C3-4004-B1ED-B65E7DD97D1E}']
    property ColorDistr1: IColorDistribution readonly dispid 1610809344;
    property WeightDistr: IWeightDistribution readonly dispid 1610809345;
    property PowerDistr: IPowerDistribution readonly dispid 1610809346;
    property MaxAccelFunc: IMaxAccelerationFunction readonly dispid 1610809347;
    property DesAccelFunc: IDesAccelerationFunction readonly dispid 1610809348;
    property MaxDecelFunc: IMaxDecelerationFunction readonly dispid 1610809349;
    property DesDecelFunc: IDesDecelerationFunction readonly dispid 1610809350;
    property Model2D3DDistr: IModel2D3DDistribution readonly dispid 1610809351;
    property ParkLotSelPars: IParkingLotSelectionParametersContainer readonly dispid 1610809352;
    property OccupDistr: IOccupancyDistribution readonly dispid 1610809353;
    property ColorDistr2: IColorDistribution readonly dispid 1610809354;
    property ColorDistr3: IColorDistribution readonly dispid 1610809355;
    property ColorDistr4: IColorDistribution readonly dispid 1610809356;
    property VehClasses: IVehicleClassCollection readonly dispid 1610809357;
    property CritSpeedFunc: ICritSpeedFunc readonly dispid 1610809358;
    property LatDriftSpeedFunc: ILatDriftSpeedFunc readonly dispid 1610809359;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehicleType
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E065AD8D-4708-477E-BD79-027FE10F9535}
// *********************************************************************//
  IVehicleType = interface(IVehicleTypeBase)
    ['{E065AD8D-4708-477E-BD79-027FE10F9535}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleTypeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E065AD8D-4708-477E-BD79-027FE10F9535}
// *********************************************************************//
  IVehicleTypeDisp = dispinterface
    ['{E065AD8D-4708-477E-BD79-027FE10F9535}']
    property ColorDistr1: IColorDistribution readonly dispid 1610809344;
    property WeightDistr: IWeightDistribution readonly dispid 1610809345;
    property PowerDistr: IPowerDistribution readonly dispid 1610809346;
    property MaxAccelFunc: IMaxAccelerationFunction readonly dispid 1610809347;
    property DesAccelFunc: IDesAccelerationFunction readonly dispid 1610809348;
    property MaxDecelFunc: IMaxDecelerationFunction readonly dispid 1610809349;
    property DesDecelFunc: IDesDecelerationFunction readonly dispid 1610809350;
    property Model2D3DDistr: IModel2D3DDistribution readonly dispid 1610809351;
    property ParkLotSelPars: IParkingLotSelectionParametersContainer readonly dispid 1610809352;
    property OccupDistr: IOccupancyDistribution readonly dispid 1610809353;
    property ColorDistr2: IColorDistribution readonly dispid 1610809354;
    property ColorDistr3: IColorDistribution readonly dispid 1610809355;
    property ColorDistr4: IColorDistribution readonly dispid 1610809356;
    property VehClasses: IVehicleClassCollection readonly dispid 1610809357;
    property CritSpeedFunc: ICritSpeedFunc readonly dispid 1610809358;
    property LatDriftSpeedFunc: ILatDriftSpeedFunc readonly dispid 1610809359;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IWeightDistributionBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FC232410-4C62-4C73-B7A9-D2CFA8978F09}
// *********************************************************************//
  IWeightDistributionBase = interface(IObjectBase)
    ['{FC232410-4C62-4C73-B7A9-D2CFA8978F09}']
    function Get_DistrDataPts: IDistributionDataPointContainer; safecall;
    property DistrDataPts: IDistributionDataPointContainer read Get_DistrDataPts;
  end;

// *********************************************************************//
// DispIntf:  IWeightDistributionBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FC232410-4C62-4C73-B7A9-D2CFA8978F09}
// *********************************************************************//
  IWeightDistributionBaseDisp = dispinterface
    ['{FC232410-4C62-4C73-B7A9-D2CFA8978F09}']
    property DistrDataPts: IDistributionDataPointContainer readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IWeightDistribution
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8C0BA0AF-2E6D-4217-AFE2-F399A5617CCF}
// *********************************************************************//
  IWeightDistribution = interface(IWeightDistributionBase)
    ['{8C0BA0AF-2E6D-4217-AFE2-F399A5617CCF}']
  end;

// *********************************************************************//
// DispIntf:  IWeightDistributionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8C0BA0AF-2E6D-4217-AFE2-F399A5617CCF}
// *********************************************************************//
  IWeightDistributionDisp = dispinterface
    ['{8C0BA0AF-2E6D-4217-AFE2-F399A5617CCF}']
    property DistrDataPts: IDistributionDataPointContainer readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPowerDistributionBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CFCE40DA-412F-4077-8501-ED9E57961B23}
// *********************************************************************//
  IPowerDistributionBase = interface(IObjectBase)
    ['{CFCE40DA-412F-4077-8501-ED9E57961B23}']
    function Get_DistrDataPts: IDistributionDataPointContainer; safecall;
    property DistrDataPts: IDistributionDataPointContainer read Get_DistrDataPts;
  end;

// *********************************************************************//
// DispIntf:  IPowerDistributionBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CFCE40DA-412F-4077-8501-ED9E57961B23}
// *********************************************************************//
  IPowerDistributionBaseDisp = dispinterface
    ['{CFCE40DA-412F-4077-8501-ED9E57961B23}']
    property DistrDataPts: IDistributionDataPointContainer readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPowerDistribution
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F286BE26-9166-4233-8967-BE7505B65765}
// *********************************************************************//
  IPowerDistribution = interface(IPowerDistributionBase)
    ['{F286BE26-9166-4233-8967-BE7505B65765}']
  end;

// *********************************************************************//
// DispIntf:  IPowerDistributionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F286BE26-9166-4233-8967-BE7505B65765}
// *********************************************************************//
  IPowerDistributionDisp = dispinterface
    ['{F286BE26-9166-4233-8967-BE7505B65765}']
    property DistrDataPts: IDistributionDataPointContainer readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IMaxAccelerationFunctionBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D61DDEB5-2196-4B02-8AEA-9238C8A7A04C}
// *********************************************************************//
  IMaxAccelerationFunctionBase = interface(IObjectBase)
    ['{D61DDEB5-2196-4B02-8AEA-9238C8A7A04C}']
    function Get_AccelFuncDataPts: IAccelerationFunctionDataPointContainer; safecall;
    property AccelFuncDataPts: IAccelerationFunctionDataPointContainer read Get_AccelFuncDataPts;
  end;

// *********************************************************************//
// DispIntf:  IMaxAccelerationFunctionBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D61DDEB5-2196-4B02-8AEA-9238C8A7A04C}
// *********************************************************************//
  IMaxAccelerationFunctionBaseDisp = dispinterface
    ['{D61DDEB5-2196-4B02-8AEA-9238C8A7A04C}']
    property AccelFuncDataPts: IAccelerationFunctionDataPointContainer readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IMaxAccelerationFunction
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A92E141A-3716-43E5-8047-39CA059F7AA6}
// *********************************************************************//
  IMaxAccelerationFunction = interface(IMaxAccelerationFunctionBase)
    ['{A92E141A-3716-43E5-8047-39CA059F7AA6}']
  end;

// *********************************************************************//
// DispIntf:  IMaxAccelerationFunctionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A92E141A-3716-43E5-8047-39CA059F7AA6}
// *********************************************************************//
  IMaxAccelerationFunctionDisp = dispinterface
    ['{A92E141A-3716-43E5-8047-39CA059F7AA6}']
    property AccelFuncDataPts: IAccelerationFunctionDataPointContainer readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IMaxDecelerationFunctionBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B70DBD8A-FE93-4AD8-8CF3-F683A6A19E32}
// *********************************************************************//
  IMaxDecelerationFunctionBase = interface(IObjectBase)
    ['{B70DBD8A-FE93-4AD8-8CF3-F683A6A19E32}']
    function Get_DecelFuncDataPts: IDecelerationFunctionDataPointContainer; safecall;
    property DecelFuncDataPts: IDecelerationFunctionDataPointContainer read Get_DecelFuncDataPts;
  end;

// *********************************************************************//
// DispIntf:  IMaxDecelerationFunctionBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B70DBD8A-FE93-4AD8-8CF3-F683A6A19E32}
// *********************************************************************//
  IMaxDecelerationFunctionBaseDisp = dispinterface
    ['{B70DBD8A-FE93-4AD8-8CF3-F683A6A19E32}']
    property DecelFuncDataPts: IDecelerationFunctionDataPointContainer readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IMaxDecelerationFunction
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1D005D17-5A65-48D3-9FF7-587B71204FEF}
// *********************************************************************//
  IMaxDecelerationFunction = interface(IMaxDecelerationFunctionBase)
    ['{1D005D17-5A65-48D3-9FF7-587B71204FEF}']
  end;

// *********************************************************************//
// DispIntf:  IMaxDecelerationFunctionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1D005D17-5A65-48D3-9FF7-587B71204FEF}
// *********************************************************************//
  IMaxDecelerationFunctionDisp = dispinterface
    ['{1D005D17-5A65-48D3-9FF7-587B71204FEF}']
    property DecelFuncDataPts: IDecelerationFunctionDataPointContainer readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IModel2D3DDistributionBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5B198DC6-AA40-4B8C-8067-7E858F4DD294}
// *********************************************************************//
  IModel2D3DDistributionBase = interface(IObjectBase)
    ['{5B198DC6-AA40-4B8C-8067-7E858F4DD294}']
    function Get_Model2D3DDistrEl: IModel2D3DDistributionElementContainer; safecall;
    property Model2D3DDistrEl: IModel2D3DDistributionElementContainer read Get_Model2D3DDistrEl;
  end;

// *********************************************************************//
// DispIntf:  IModel2D3DDistributionBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5B198DC6-AA40-4B8C-8067-7E858F4DD294}
// *********************************************************************//
  IModel2D3DDistributionBaseDisp = dispinterface
    ['{5B198DC6-AA40-4B8C-8067-7E858F4DD294}']
    property Model2D3DDistrEl: IModel2D3DDistributionElementContainer readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IModel2D3DDistribution
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DA7441DB-C8D6-4A8E-87B5-4899F81BF1E4}
// *********************************************************************//
  IModel2D3DDistribution = interface(IModel2D3DDistributionBase)
    ['{DA7441DB-C8D6-4A8E-87B5-4899F81BF1E4}']
  end;

// *********************************************************************//
// DispIntf:  IModel2D3DDistributionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DA7441DB-C8D6-4A8E-87B5-4899F81BF1E4}
// *********************************************************************//
  IModel2D3DDistributionDisp = dispinterface
    ['{DA7441DB-C8D6-4A8E-87B5-4899F81BF1E4}']
    property Model2D3DDistrEl: IModel2D3DDistributionElementContainer readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IModel2D3DDistributionElementCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {47D27927-D59D-4C8B-B31A-3EBED908009E}
// *********************************************************************//
  IModel2D3DDistributionElementCollection = interface(ICollectionBase)
    ['{47D27927-D59D-4C8B-B31A-3EBED908009E}']
  end;

// *********************************************************************//
// DispIntf:  IModel2D3DDistributionElementCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {47D27927-D59D-4C8B-B31A-3EBED908009E}
// *********************************************************************//
  IModel2D3DDistributionElementCollectionDisp = dispinterface
    ['{47D27927-D59D-4C8B-B31A-3EBED908009E}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IModel2D3DDistributionElementContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9CC17FC5-103A-4535-9FAE-8D79C3CF1FDA}
// *********************************************************************//
  IModel2D3DDistributionElementContainerBase = interface(IModel2D3DDistributionElementCollection)
    ['{9CC17FC5-103A-4535-9FAE-8D79C3CF1FDA}']
    function AddModel2D3DDistributionElement(Key: OleVariant; const Model2D3D: IModel2D3D): IModel2D3DDistributionElement; safecall;
    procedure ReplaceAll(Elements: OleVariant); safecall;
    function DuplicateModel2D3DDistributionElement(Source: OleVariant; NewKey: OleVariant): IModel2D3DDistributionElement; safecall;
    procedure RemoveModel2D3DDistributionElement(const Model2D3DDistributionElement: IModel2D3DDistributionElement); safecall;
  end;

// *********************************************************************//
// DispIntf:  IModel2D3DDistributionElementContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9CC17FC5-103A-4535-9FAE-8D79C3CF1FDA}
// *********************************************************************//
  IModel2D3DDistributionElementContainerBaseDisp = dispinterface
    ['{9CC17FC5-103A-4535-9FAE-8D79C3CF1FDA}']
    function AddModel2D3DDistributionElement(Key: OleVariant; const Model2D3D: IModel2D3D): IModel2D3DDistributionElement; dispid 1610874880;
    procedure ReplaceAll(Elements: OleVariant); dispid 1610874881;
    function DuplicateModel2D3DDistributionElement(Source: OleVariant; NewKey: OleVariant): IModel2D3DDistributionElement; dispid 1610874882;
    procedure RemoveModel2D3DDistributionElement(const Model2D3DDistributionElement: IModel2D3DDistributionElement); dispid 1610874883;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IModel2D3DDistributionElementContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {03E38061-A224-4F14-B376-D78B7EBA52D8}
// *********************************************************************//
  IModel2D3DDistributionElementContainer = interface(IModel2D3DDistributionElementContainerBase)
    ['{03E38061-A224-4F14-B376-D78B7EBA52D8}']
  end;

// *********************************************************************//
// DispIntf:  IModel2D3DDistributionElementContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {03E38061-A224-4F14-B376-D78B7EBA52D8}
// *********************************************************************//
  IModel2D3DDistributionElementContainerDisp = dispinterface
    ['{03E38061-A224-4F14-B376-D78B7EBA52D8}']
    function AddModel2D3DDistributionElement(Key: OleVariant; const Model2D3D: IModel2D3D): IModel2D3DDistributionElement; dispid 1610874880;
    procedure ReplaceAll(Elements: OleVariant); dispid 1610874881;
    function DuplicateModel2D3DDistributionElement(Source: OleVariant; NewKey: OleVariant): IModel2D3DDistributionElement; dispid 1610874882;
    procedure RemoveModel2D3DDistributionElement(const Model2D3DDistributionElement: IModel2D3DDistributionElement); dispid 1610874883;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IModel2D3DBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {96E8A58D-0E55-49F6-80AB-6C7B1D81AD61}
// *********************************************************************//
  IModel2D3DBase = interface(IObjectBase)
    ['{96E8A58D-0E55-49F6-80AB-6C7B1D81AD61}']
    function Get_Model2D3DSegs: IModel2D3DSegmentContainer; safecall;
    property Model2D3DSegs: IModel2D3DSegmentContainer read Get_Model2D3DSegs;
  end;

// *********************************************************************//
// DispIntf:  IModel2D3DBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {96E8A58D-0E55-49F6-80AB-6C7B1D81AD61}
// *********************************************************************//
  IModel2D3DBaseDisp = dispinterface
    ['{96E8A58D-0E55-49F6-80AB-6C7B1D81AD61}']
    property Model2D3DSegs: IModel2D3DSegmentContainer readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IModel2D3D
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8D595C82-D64B-42B4-B55C-09DFF771B64D}
// *********************************************************************//
  IModel2D3D = interface(IModel2D3DBase)
    ['{8D595C82-D64B-42B4-B55C-09DFF771B64D}']
  end;

// *********************************************************************//
// DispIntf:  IModel2D3DDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8D595C82-D64B-42B4-B55C-09DFF771B64D}
// *********************************************************************//
  IModel2D3DDisp = dispinterface
    ['{8D595C82-D64B-42B4-B55C-09DFF771B64D}']
    property Model2D3DSegs: IModel2D3DSegmentContainer readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IModel2D3DSegmentCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {077A66EB-8068-40DC-9C5C-5FE0ABB00CC8}
// *********************************************************************//
  IModel2D3DSegmentCollection = interface(ICollectionBase)
    ['{077A66EB-8068-40DC-9C5C-5FE0ABB00CC8}']
  end;

// *********************************************************************//
// DispIntf:  IModel2D3DSegmentCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {077A66EB-8068-40DC-9C5C-5FE0ABB00CC8}
// *********************************************************************//
  IModel2D3DSegmentCollectionDisp = dispinterface
    ['{077A66EB-8068-40DC-9C5C-5FE0ABB00CC8}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IModel2D3DSegmentContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {692DA856-4C79-4471-B456-2F9D4BA2D160}
// *********************************************************************//
  IModel2D3DSegmentContainerBase = interface(IModel2D3DSegmentCollection)
    ['{692DA856-4C79-4471-B456-2F9D4BA2D160}']
    function Get_ItemByKey(Key: OleVariant): IModel2D3DSegment; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddModel2D3DSegment(Key: OleVariant; const File3D: WideString): IModel2D3DSegment; safecall;
    function DuplicateModel2D3DSegment(Source: OleVariant; NewKey: OleVariant): IModel2D3DSegment; safecall;
    procedure RemoveModel2D3DSegment(const Model2D3DSegment: IModel2D3DSegment); safecall;
    property ItemByKey[Key: OleVariant]: IModel2D3DSegment read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IModel2D3DSegmentContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {692DA856-4C79-4471-B456-2F9D4BA2D160}
// *********************************************************************//
  IModel2D3DSegmentContainerBaseDisp = dispinterface
    ['{692DA856-4C79-4471-B456-2F9D4BA2D160}']
    property ItemByKey[Key: OleVariant]: IModel2D3DSegment readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddModel2D3DSegment(Key: OleVariant; const File3D: WideString): IModel2D3DSegment; dispid 1610874882;
    function DuplicateModel2D3DSegment(Source: OleVariant; NewKey: OleVariant): IModel2D3DSegment; dispid 1610874883;
    procedure RemoveModel2D3DSegment(const Model2D3DSegment: IModel2D3DSegment); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IModel2D3DSegmentContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EB720644-CCD7-4453-A5C8-024D0E840C0C}
// *********************************************************************//
  IModel2D3DSegmentContainer = interface(IModel2D3DSegmentContainerBase)
    ['{EB720644-CCD7-4453-A5C8-024D0E840C0C}']
  end;

// *********************************************************************//
// DispIntf:  IModel2D3DSegmentContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EB720644-CCD7-4453-A5C8-024D0E840C0C}
// *********************************************************************//
  IModel2D3DSegmentContainerDisp = dispinterface
    ['{EB720644-CCD7-4453-A5C8-024D0E840C0C}']
    property ItemByKey[Key: OleVariant]: IModel2D3DSegment readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddModel2D3DSegment(Key: OleVariant; const File3D: WideString): IModel2D3DSegment; dispid 1610874882;
    function DuplicateModel2D3DSegment(Source: OleVariant; NewKey: OleVariant): IModel2D3DSegment; dispid 1610874883;
    procedure RemoveModel2D3DSegment(const Model2D3DSegment: IModel2D3DSegment); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IModel2D3DSegmentBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D36C2F93-F205-48A3-AF3D-4A8826800B71}
// *********************************************************************//
  IModel2D3DSegmentBase = interface(IObjectBase)
    ['{D36C2F93-F205-48A3-AF3D-4A8826800B71}']
    function Get_Doors: IDoorContainer; safecall;
    function Get_Model2D3D: IModel2D3D; safecall;
    property Doors: IDoorContainer read Get_Doors;
    property Model2D3D: IModel2D3D read Get_Model2D3D;
  end;

// *********************************************************************//
// DispIntf:  IModel2D3DSegmentBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D36C2F93-F205-48A3-AF3D-4A8826800B71}
// *********************************************************************//
  IModel2D3DSegmentBaseDisp = dispinterface
    ['{D36C2F93-F205-48A3-AF3D-4A8826800B71}']
    property Doors: IDoorContainer readonly dispid 1610809344;
    property Model2D3D: IModel2D3D readonly dispid 1610809345;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IModel2D3DSegment
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {049B5A9D-FC66-4B50-B7FF-7E1841064314}
// *********************************************************************//
  IModel2D3DSegment = interface(IModel2D3DSegmentBase)
    ['{049B5A9D-FC66-4B50-B7FF-7E1841064314}']
  end;

// *********************************************************************//
// DispIntf:  IModel2D3DSegmentDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {049B5A9D-FC66-4B50-B7FF-7E1841064314}
// *********************************************************************//
  IModel2D3DSegmentDisp = dispinterface
    ['{049B5A9D-FC66-4B50-B7FF-7E1841064314}']
    property Doors: IDoorContainer readonly dispid 1610809344;
    property Model2D3D: IModel2D3D readonly dispid 1610809345;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IDoorCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0D308C96-1A84-4003-B29B-CCC2CA8D8856}
// *********************************************************************//
  IDoorCollection = interface(ICollectionBase)
    ['{0D308C96-1A84-4003-B29B-CCC2CA8D8856}']
  end;

// *********************************************************************//
// DispIntf:  IDoorCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0D308C96-1A84-4003-B29B-CCC2CA8D8856}
// *********************************************************************//
  IDoorCollectionDisp = dispinterface
    ['{0D308C96-1A84-4003-B29B-CCC2CA8D8856}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDoorContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F76CAD40-258C-4EEF-AA4D-609B3B01DA3B}
// *********************************************************************//
  IDoorContainerBase = interface(IDoorCollection)
    ['{F76CAD40-258C-4EEF-AA4D-609B3B01DA3B}']
  end;

// *********************************************************************//
// DispIntf:  IDoorContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F76CAD40-258C-4EEF-AA4D-609B3B01DA3B}
// *********************************************************************//
  IDoorContainerBaseDisp = dispinterface
    ['{F76CAD40-258C-4EEF-AA4D-609B3B01DA3B}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDoorContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E2C40777-1E0B-4618-BBCF-85C9D0C522B2}
// *********************************************************************//
  IDoorContainer = interface(IDoorContainerBase)
    ['{E2C40777-1E0B-4618-BBCF-85C9D0C522B2}']
  end;

// *********************************************************************//
// DispIntf:  IDoorContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E2C40777-1E0B-4618-BBCF-85C9D0C522B2}
// *********************************************************************//
  IDoorContainerDisp = dispinterface
    ['{E2C40777-1E0B-4618-BBCF-85C9D0C522B2}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IModel2D3DDistributionElementBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3A773848-CC20-442D-A6AE-A9725125227F}
// *********************************************************************//
  IModel2D3DDistributionElementBase = interface(IObjectBase)
    ['{3A773848-CC20-442D-A6AE-A9725125227F}']
    function Get_Model2D3D: IModel2D3D; safecall;
    function Get_Model2D3DDistr: IModel2D3DDistribution; safecall;
    property Model2D3D: IModel2D3D read Get_Model2D3D;
    property Model2D3DDistr: IModel2D3DDistribution read Get_Model2D3DDistr;
  end;

// *********************************************************************//
// DispIntf:  IModel2D3DDistributionElementBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3A773848-CC20-442D-A6AE-A9725125227F}
// *********************************************************************//
  IModel2D3DDistributionElementBaseDisp = dispinterface
    ['{3A773848-CC20-442D-A6AE-A9725125227F}']
    property Model2D3D: IModel2D3D readonly dispid 1610809344;
    property Model2D3DDistr: IModel2D3DDistribution readonly dispid 1610809345;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IModel2D3DDistributionElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {925FB57F-7168-473F-9AE1-63510EE1802C}
// *********************************************************************//
  IModel2D3DDistributionElement = interface(IModel2D3DDistributionElementBase)
    ['{925FB57F-7168-473F-9AE1-63510EE1802C}']
  end;

// *********************************************************************//
// DispIntf:  IModel2D3DDistributionElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {925FB57F-7168-473F-9AE1-63510EE1802C}
// *********************************************************************//
  IModel2D3DDistributionElementDisp = dispinterface
    ['{925FB57F-7168-473F-9AE1-63510EE1802C}']
    property Model2D3D: IModel2D3D readonly dispid 1610809344;
    property Model2D3DDistr: IModel2D3DDistribution readonly dispid 1610809345;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IParkingLotSelectionParametersCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1704AE70-7DD1-43CF-8966-04F27FB0D72C}
// *********************************************************************//
  IParkingLotSelectionParametersCollection = interface(ICollectionBase)
    ['{1704AE70-7DD1-43CF-8966-04F27FB0D72C}']
  end;

// *********************************************************************//
// DispIntf:  IParkingLotSelectionParametersCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1704AE70-7DD1-43CF-8966-04F27FB0D72C}
// *********************************************************************//
  IParkingLotSelectionParametersCollectionDisp = dispinterface
    ['{1704AE70-7DD1-43CF-8966-04F27FB0D72C}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IParkingLotSelectionParametersContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {53FCC75C-2785-481D-B7D7-08898C476B56}
// *********************************************************************//
  IParkingLotSelectionParametersContainerBase = interface(IParkingLotSelectionParametersCollection)
    ['{53FCC75C-2785-481D-B7D7-08898C476B56}']
  end;

// *********************************************************************//
// DispIntf:  IParkingLotSelectionParametersContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {53FCC75C-2785-481D-B7D7-08898C476B56}
// *********************************************************************//
  IParkingLotSelectionParametersContainerBaseDisp = dispinterface
    ['{53FCC75C-2785-481D-B7D7-08898C476B56}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IParkingLotSelectionParametersContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4ADA26CB-2A88-442E-AF96-44C115698A6A}
// *********************************************************************//
  IParkingLotSelectionParametersContainer = interface(IParkingLotSelectionParametersContainerBase)
    ['{4ADA26CB-2A88-442E-AF96-44C115698A6A}']
  end;

// *********************************************************************//
// DispIntf:  IParkingLotSelectionParametersContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4ADA26CB-2A88-442E-AF96-44C115698A6A}
// *********************************************************************//
  IParkingLotSelectionParametersContainerDisp = dispinterface
    ['{4ADA26CB-2A88-442E-AF96-44C115698A6A}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IOccupancyDistributionBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E8427910-265E-4CFC-BADB-FB515B7F650C}
// *********************************************************************//
  IOccupancyDistributionBase = interface(IObjectBase)
    ['{E8427910-265E-4CFC-BADB-FB515B7F650C}']
    function Get_DistrDataPts: IDistributionDataPointContainer; safecall;
    property DistrDataPts: IDistributionDataPointContainer read Get_DistrDataPts;
  end;

// *********************************************************************//
// DispIntf:  IOccupancyDistributionBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E8427910-265E-4CFC-BADB-FB515B7F650C}
// *********************************************************************//
  IOccupancyDistributionBaseDisp = dispinterface
    ['{E8427910-265E-4CFC-BADB-FB515B7F650C}']
    property DistrDataPts: IDistributionDataPointContainer readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IOccupancyDistribution
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0FD93B49-7060-40E4-973D-47E07C36FF63}
// *********************************************************************//
  IOccupancyDistribution = interface(IOccupancyDistributionBase)
    ['{0FD93B49-7060-40E4-973D-47E07C36FF63}']
  end;

// *********************************************************************//
// DispIntf:  IOccupancyDistributionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0FD93B49-7060-40E4-973D-47E07C36FF63}
// *********************************************************************//
  IOccupancyDistributionDisp = dispinterface
    ['{0FD93B49-7060-40E4-973D-47E07C36FF63}']
    property DistrDataPts: IDistributionDataPointContainer readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ILatDriftSpeedFuncBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {74A878E0-CFA3-49C5-AEB0-E616874FA7A0}
// *********************************************************************//
  ILatDriftSpeedFuncBase = interface(IObjectBase)
    ['{74A878E0-CFA3-49C5-AEB0-E616874FA7A0}']
    function Get_LatDriftSpeedFuncDataPts: ILatDriftSpeedFuncDataPtContainer; safecall;
    property LatDriftSpeedFuncDataPts: ILatDriftSpeedFuncDataPtContainer read Get_LatDriftSpeedFuncDataPts;
  end;

// *********************************************************************//
// DispIntf:  ILatDriftSpeedFuncBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {74A878E0-CFA3-49C5-AEB0-E616874FA7A0}
// *********************************************************************//
  ILatDriftSpeedFuncBaseDisp = dispinterface
    ['{74A878E0-CFA3-49C5-AEB0-E616874FA7A0}']
    property LatDriftSpeedFuncDataPts: ILatDriftSpeedFuncDataPtContainer readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ILatDriftSpeedFunc
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0A1E9BCB-ACF5-4E5B-8C57-64A83BD9A38A}
// *********************************************************************//
  ILatDriftSpeedFunc = interface(ILatDriftSpeedFuncBase)
    ['{0A1E9BCB-ACF5-4E5B-8C57-64A83BD9A38A}']
  end;

// *********************************************************************//
// DispIntf:  ILatDriftSpeedFuncDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0A1E9BCB-ACF5-4E5B-8C57-64A83BD9A38A}
// *********************************************************************//
  ILatDriftSpeedFuncDisp = dispinterface
    ['{0A1E9BCB-ACF5-4E5B-8C57-64A83BD9A38A}']
    property LatDriftSpeedFuncDataPts: ILatDriftSpeedFuncDataPtContainer readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ILatDriftSpeedFuncDataPtCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F660E2AD-A0AA-4D8C-A8F0-E439665FA322}
// *********************************************************************//
  ILatDriftSpeedFuncDataPtCollection = interface(ICollectionBase)
    ['{F660E2AD-A0AA-4D8C-A8F0-E439665FA322}']
  end;

// *********************************************************************//
// DispIntf:  ILatDriftSpeedFuncDataPtCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F660E2AD-A0AA-4D8C-A8F0-E439665FA322}
// *********************************************************************//
  ILatDriftSpeedFuncDataPtCollectionDisp = dispinterface
    ['{F660E2AD-A0AA-4D8C-A8F0-E439665FA322}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ILatDriftSpeedFuncDataPtContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9EE99317-722F-416D-9D68-689257A67493}
// *********************************************************************//
  ILatDriftSpeedFuncDataPtContainerBase = interface(ILatDriftSpeedFuncDataPtCollection)
    ['{9EE99317-722F-416D-9D68-689257A67493}']
    procedure ReplaceAll(Elements: OleVariant); safecall;
  end;

// *********************************************************************//
// DispIntf:  ILatDriftSpeedFuncDataPtContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9EE99317-722F-416D-9D68-689257A67493}
// *********************************************************************//
  ILatDriftSpeedFuncDataPtContainerBaseDisp = dispinterface
    ['{9EE99317-722F-416D-9D68-689257A67493}']
    procedure ReplaceAll(Elements: OleVariant); dispid 1610874880;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ILatDriftSpeedFuncDataPtContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {94671518-9503-43DC-A712-861F769FCB34}
// *********************************************************************//
  ILatDriftSpeedFuncDataPtContainer = interface(ILatDriftSpeedFuncDataPtContainerBase)
    ['{94671518-9503-43DC-A712-861F769FCB34}']
  end;

// *********************************************************************//
// DispIntf:  ILatDriftSpeedFuncDataPtContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {94671518-9503-43DC-A712-861F769FCB34}
// *********************************************************************//
  ILatDriftSpeedFuncDataPtContainerDisp = dispinterface
    ['{94671518-9503-43DC-A712-861F769FCB34}']
    procedure ReplaceAll(Elements: OleVariant); dispid 1610874880;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleCompositionRelativeFlowBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F5F59023-D745-41A8-9B40-5906EB8884C7}
// *********************************************************************//
  IVehicleCompositionRelativeFlowBase = interface(IObjectBase)
    ['{F5F59023-D745-41A8-9B40-5906EB8884C7}']
    function Get_DesSpeedDistr: IDesSpeedDistribution; safecall;
    function Get_VehType: IVehicleType; safecall;
    function Get_VehComp: IVehicleComposition; safecall;
    property DesSpeedDistr: IDesSpeedDistribution read Get_DesSpeedDistr;
    property VehType: IVehicleType read Get_VehType;
    property VehComp: IVehicleComposition read Get_VehComp;
  end;

// *********************************************************************//
// DispIntf:  IVehicleCompositionRelativeFlowBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F5F59023-D745-41A8-9B40-5906EB8884C7}
// *********************************************************************//
  IVehicleCompositionRelativeFlowBaseDisp = dispinterface
    ['{F5F59023-D745-41A8-9B40-5906EB8884C7}']
    property DesSpeedDistr: IDesSpeedDistribution readonly dispid 1610809344;
    property VehType: IVehicleType readonly dispid 1610809345;
    property VehComp: IVehicleComposition readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehicleCompositionRelativeFlow
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0BE82FF9-0325-458B-B964-0E98084A4BD0}
// *********************************************************************//
  IVehicleCompositionRelativeFlow = interface(IVehicleCompositionRelativeFlowBase)
    ['{0BE82FF9-0325-458B-B964-0E98084A4BD0}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleCompositionRelativeFlowDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0BE82FF9-0325-458B-B964-0E98084A4BD0}
// *********************************************************************//
  IVehicleCompositionRelativeFlowDisp = dispinterface
    ['{0BE82FF9-0325-458B-B964-0E98084A4BD0}']
    property DesSpeedDistr: IDesSpeedDistribution readonly dispid 1610809344;
    property VehType: IVehicleType readonly dispid 1610809345;
    property VehComp: IVehicleComposition readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IMatrixBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {60386A10-884E-46D0-8558-ADC211F7EA63}
// *********************************************************************//
  IMatrixBase = interface(IObjectBase)
    ['{60386A10-884E-46D0-8558-ADC211F7EA63}']
  end;

// *********************************************************************//
// DispIntf:  IMatrixBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {60386A10-884E-46D0-8558-ADC211F7EA63}
// *********************************************************************//
  IMatrixBaseDisp = dispinterface
    ['{60386A10-884E-46D0-8558-ADC211F7EA63}']
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IMatrix
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {97041CA0-9B9D-450C-8395-D0466B9A5F6D}
// *********************************************************************//
  IMatrix = interface(IMatrixBase)
    ['{97041CA0-9B9D-450C-8395-D0466B9A5F6D}']
    procedure Init; safecall;
    function Get_RowCount: SYSINT; safecall;
    function Get_ColCount: SYSINT; safecall;
    function GetValue(row: SYSINT; col: SYSINT): Double; safecall;
    procedure SetValue(row: SYSINT; col: SYSINT; v: Double); safecall;
    procedure ReadFromFile(const FilePath: WideString); safecall;
    property RowCount: SYSINT read Get_RowCount;
    property ColCount: SYSINT read Get_ColCount;
  end;

// *********************************************************************//
// DispIntf:  IMatrixDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {97041CA0-9B9D-450C-8395-D0466B9A5F6D}
// *********************************************************************//
  IMatrixDisp = dispinterface
    ['{97041CA0-9B9D-450C-8395-D0466B9A5F6D}']
    procedure Init; dispid 1610874880;
    property RowCount: SYSINT readonly dispid 1610874881;
    property ColCount: SYSINT readonly dispid 1610874882;
    function GetValue(row: SYSINT; col: SYSINT): Double; dispid 1610874883;
    procedure SetValue(row: SYSINT; col: SYSINT; v: Double); dispid 1610874884;
    procedure ReadFromFile(const FilePath: WideString); dispid 1610874885;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IAlternativePathSearchCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {34AEE6CF-6BF4-4F4E-BC1A-5D3409E79D18}
// *********************************************************************//
  IAlternativePathSearchCollection = interface(ICollectionBase)
    ['{34AEE6CF-6BF4-4F4E-BC1A-5D3409E79D18}']
  end;

// *********************************************************************//
// DispIntf:  IAlternativePathSearchCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {34AEE6CF-6BF4-4F4E-BC1A-5D3409E79D18}
// *********************************************************************//
  IAlternativePathSearchCollectionDisp = dispinterface
    ['{34AEE6CF-6BF4-4F4E-BC1A-5D3409E79D18}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IAlternativePathSearchContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {70A2ECDF-0A6C-45AA-812F-2BA70B099B61}
// *********************************************************************//
  IAlternativePathSearchContainerBase = interface(IAlternativePathSearchCollection)
    ['{70A2ECDF-0A6C-45AA-812F-2BA70B099B61}']
  end;

// *********************************************************************//
// DispIntf:  IAlternativePathSearchContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {70A2ECDF-0A6C-45AA-812F-2BA70B099B61}
// *********************************************************************//
  IAlternativePathSearchContainerBaseDisp = dispinterface
    ['{70A2ECDF-0A6C-45AA-812F-2BA70B099B61}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IAlternativePathSearchContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {56254FE0-7B2B-4C8F-93B3-A4B19D726514}
// *********************************************************************//
  IAlternativePathSearchContainer = interface(IAlternativePathSearchContainerBase)
    ['{56254FE0-7B2B-4C8F-93B3-A4B19D726514}']
  end;

// *********************************************************************//
// DispIntf:  IAlternativePathSearchContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {56254FE0-7B2B-4C8F-93B3-A4B19D726514}
// *********************************************************************//
  IAlternativePathSearchContainerDisp = dispinterface
    ['{56254FE0-7B2B-4C8F-93B3-A4B19D726514}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IAlternativePathSearchVehicleRoutingDecisionCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EF26B6E6-24B3-46D7-B618-2F03BCB14F4F}
// *********************************************************************//
  IAlternativePathSearchVehicleRoutingDecisionCollection = interface(ICollectionBase)
    ['{EF26B6E6-24B3-46D7-B618-2F03BCB14F4F}']
  end;

// *********************************************************************//
// DispIntf:  IAlternativePathSearchVehicleRoutingDecisionCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EF26B6E6-24B3-46D7-B618-2F03BCB14F4F}
// *********************************************************************//
  IAlternativePathSearchVehicleRoutingDecisionCollectionDisp = dispinterface
    ['{EF26B6E6-24B3-46D7-B618-2F03BCB14F4F}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IAlternativePathSearchVehicleRoutingDecisionContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D60C53C8-F31D-4FA1-9D7C-EDA3B8936B59}
// *********************************************************************//
  IAlternativePathSearchVehicleRoutingDecisionContainerBase = interface(IAlternativePathSearchVehicleRoutingDecisionCollection)
    ['{D60C53C8-F31D-4FA1-9D7C-EDA3B8936B59}']
  end;

// *********************************************************************//
// DispIntf:  IAlternativePathSearchVehicleRoutingDecisionContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D60C53C8-F31D-4FA1-9D7C-EDA3B8936B59}
// *********************************************************************//
  IAlternativePathSearchVehicleRoutingDecisionContainerBaseDisp = dispinterface
    ['{D60C53C8-F31D-4FA1-9D7C-EDA3B8936B59}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IAlternativePathSearchVehicleRoutingDecisionContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5F456CB7-D15E-4313-B9B3-86596108D60E}
// *********************************************************************//
  IAlternativePathSearchVehicleRoutingDecisionContainer = interface(IAlternativePathSearchVehicleRoutingDecisionContainerBase)
    ['{5F456CB7-D15E-4313-B9B3-86596108D60E}']
  end;

// *********************************************************************//
// DispIntf:  IAlternativePathSearchVehicleRoutingDecisionContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5F456CB7-D15E-4313-B9B3-86596108D60E}
// *********************************************************************//
  IAlternativePathSearchVehicleRoutingDecisionContainerDisp = dispinterface
    ['{5F456CB7-D15E-4313-B9B3-86596108D60E}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IAttributeSelectionCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8040ABED-EBE8-43AE-A612-6EB3247788EC}
// *********************************************************************//
  IAttributeSelectionCollection = interface(ICollectionBase)
    ['{8040ABED-EBE8-43AE-A612-6EB3247788EC}']
  end;

// *********************************************************************//
// DispIntf:  IAttributeSelectionCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8040ABED-EBE8-43AE-A612-6EB3247788EC}
// *********************************************************************//
  IAttributeSelectionCollectionDisp = dispinterface
    ['{8040ABED-EBE8-43AE-A612-6EB3247788EC}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IAttributeSelectionContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7A2EC9C4-18DC-4DF9-8A50-119AF408A163}
// *********************************************************************//
  IAttributeSelectionContainerBase = interface(IAttributeSelectionCollection)
    ['{7A2EC9C4-18DC-4DF9-8A50-119AF408A163}']
    procedure ReplaceAll(Elements: OleVariant); safecall;
  end;

// *********************************************************************//
// DispIntf:  IAttributeSelectionContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7A2EC9C4-18DC-4DF9-8A50-119AF408A163}
// *********************************************************************//
  IAttributeSelectionContainerBaseDisp = dispinterface
    ['{7A2EC9C4-18DC-4DF9-8A50-119AF408A163}']
    procedure ReplaceAll(Elements: OleVariant); dispid 1610874880;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IAttributeSelectionContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AE698177-22BF-44B2-9AAB-D7B311E20B3E}
// *********************************************************************//
  IAttributeSelectionContainer = interface(IAttributeSelectionContainerBase)
    ['{AE698177-22BF-44B2-9AAB-D7B311E20B3E}']
  end;

// *********************************************************************//
// DispIntf:  IAttributeSelectionContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AE698177-22BF-44B2-9AAB-D7B311E20B3E}
// *********************************************************************//
  IAttributeSelectionContainerDisp = dispinterface
    ['{AE698177-22BF-44B2-9AAB-D7B311E20B3E}']
    procedure ReplaceAll(Elements: OleVariant); dispid 1610874880;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IEdgeInitialTrafficCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BF53E030-6CC3-4D8B-8C94-35A2E8792179}
// *********************************************************************//
  IEdgeInitialTrafficCollection = interface(ICollectionBase)
    ['{BF53E030-6CC3-4D8B-8C94-35A2E8792179}']
  end;

// *********************************************************************//
// DispIntf:  IEdgeInitialTrafficCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BF53E030-6CC3-4D8B-8C94-35A2E8792179}
// *********************************************************************//
  IEdgeInitialTrafficCollectionDisp = dispinterface
    ['{BF53E030-6CC3-4D8B-8C94-35A2E8792179}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IEdgeInitialTrafficContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4BB4C1F2-5A42-4426-B74F-454D390E0AF2}
// *********************************************************************//
  IEdgeInitialTrafficContainerBase = interface(IEdgeInitialTrafficCollection)
    ['{4BB4C1F2-5A42-4426-B74F-454D390E0AF2}']
    function Get_ItemByKey(Key: OleVariant): IEdgeInitialTraffic; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddEdgeInitialTraffic(Key: OleVariant): IEdgeInitialTraffic; safecall;
    procedure RemoveEdgeInitialTraffic(const EdgeInitialTraffic: IEdgeInitialTraffic); safecall;
    property ItemByKey[Key: OleVariant]: IEdgeInitialTraffic read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IEdgeInitialTrafficContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4BB4C1F2-5A42-4426-B74F-454D390E0AF2}
// *********************************************************************//
  IEdgeInitialTrafficContainerBaseDisp = dispinterface
    ['{4BB4C1F2-5A42-4426-B74F-454D390E0AF2}']
    property ItemByKey[Key: OleVariant]: IEdgeInitialTraffic readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddEdgeInitialTraffic(Key: OleVariant): IEdgeInitialTraffic; dispid 1610874882;
    procedure RemoveEdgeInitialTraffic(const EdgeInitialTraffic: IEdgeInitialTraffic); dispid 1610874883;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IEdgeInitialTrafficContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {28CF546E-2A98-4064-9465-506907DCF69C}
// *********************************************************************//
  IEdgeInitialTrafficContainer = interface(IEdgeInitialTrafficContainerBase)
    ['{28CF546E-2A98-4064-9465-506907DCF69C}']
  end;

// *********************************************************************//
// DispIntf:  IEdgeInitialTrafficContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {28CF546E-2A98-4064-9465-506907DCF69C}
// *********************************************************************//
  IEdgeInitialTrafficContainerDisp = dispinterface
    ['{28CF546E-2A98-4064-9465-506907DCF69C}']
    property ItemByKey[Key: OleVariant]: IEdgeInitialTraffic readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddEdgeInitialTraffic(Key: OleVariant): IEdgeInitialTraffic; dispid 1610874882;
    procedure RemoveEdgeInitialTraffic(const EdgeInitialTraffic: IEdgeInitialTraffic); dispid 1610874883;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IEdgeInitialTrafficBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D1A495E6-A545-42B1-A071-055D695E8D4D}
// *********************************************************************//
  IEdgeInitialTrafficBase = interface(IObjectBase)
    ['{D1A495E6-A545-42B1-A071-055D695E8D4D}']
    function Get_FromNode: INode; safecall;
    function Get_ToNode: INode; safecall;
    function Get_VehCompositionInitialVolumes: IVehCompositionInitialVolumeContainer; safecall;
    property FromNode: INode read Get_FromNode;
    property ToNode: INode read Get_ToNode;
    property VehCompositionInitialVolumes: IVehCompositionInitialVolumeContainer read Get_VehCompositionInitialVolumes;
  end;

// *********************************************************************//
// DispIntf:  IEdgeInitialTrafficBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D1A495E6-A545-42B1-A071-055D695E8D4D}
// *********************************************************************//
  IEdgeInitialTrafficBaseDisp = dispinterface
    ['{D1A495E6-A545-42B1-A071-055D695E8D4D}']
    property FromNode: INode readonly dispid 1610809344;
    property ToNode: INode readonly dispid 1610809345;
    property VehCompositionInitialVolumes: IVehCompositionInitialVolumeContainer readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IEdgeInitialTraffic
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AF7E51C3-4D8E-4420-B244-BF26D65842A9}
// *********************************************************************//
  IEdgeInitialTraffic = interface(IEdgeInitialTrafficBase)
    ['{AF7E51C3-4D8E-4420-B244-BF26D65842A9}']
  end;

// *********************************************************************//
// DispIntf:  IEdgeInitialTrafficDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AF7E51C3-4D8E-4420-B244-BF26D65842A9}
// *********************************************************************//
  IEdgeInitialTrafficDisp = dispinterface
    ['{AF7E51C3-4D8E-4420-B244-BF26D65842A9}']
    property FromNode: INode readonly dispid 1610809344;
    property ToNode: INode readonly dispid 1610809345;
    property VehCompositionInitialVolumes: IVehCompositionInitialVolumeContainer readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: INodeBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0D32845A-C27B-4BFD-B265-1D3B2B50F99F}
// *********************************************************************//
  INodeBase = interface(IObjectBase)
    ['{0D32845A-C27B-4BFD-B265-1D3B2B50F99F}']
    function Get_UserOrient: ILegOrientationContainer; safecall;
    function Get_DynAssignEdges: IEdgeCollection; safecall;
    function Get_DynAssignTurns: IEdgeCollection; safecall;
    function Get_EvalTurns: IEdgeCollection; safecall;
    function Get_EvalEdges: IEdgeCollection; safecall;
    function Get_LinkSegs: ILinkSegmentContainer; safecall;
    function Get_Points: IPointContainer; safecall;
    function Get_Movements: IMovementContainer; safecall;
    function Get_TotRes: IMovement; safecall;
    function Get_MesoTurnConflicts: IMesoTurnConflictCollection; safecall;
    function Get_MesoTurns: IMesoTurnCollection; safecall;
    function Get_ConflictAreas: IConflictAreaCollection; safecall;
    function Get_MesoNode: IMesoNode; safecall;
    function Get_EnteringEdges: IEdgeCollection; safecall;
    property UserOrient: ILegOrientationContainer read Get_UserOrient;
    property DynAssignEdges: IEdgeCollection read Get_DynAssignEdges;
    property DynAssignTurns: IEdgeCollection read Get_DynAssignTurns;
    property EvalTurns: IEdgeCollection read Get_EvalTurns;
    property EvalEdges: IEdgeCollection read Get_EvalEdges;
    property LinkSegs: ILinkSegmentContainer read Get_LinkSegs;
    property Points: IPointContainer read Get_Points;
    property Movements: IMovementContainer read Get_Movements;
    property TotRes: IMovement read Get_TotRes;
    property MesoTurnConflicts: IMesoTurnConflictCollection read Get_MesoTurnConflicts;
    property MesoTurns: IMesoTurnCollection read Get_MesoTurns;
    property ConflictAreas: IConflictAreaCollection read Get_ConflictAreas;
    property MesoNode: IMesoNode read Get_MesoNode;
    property EnteringEdges: IEdgeCollection read Get_EnteringEdges;
  end;

// *********************************************************************//
// DispIntf:  INodeBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0D32845A-C27B-4BFD-B265-1D3B2B50F99F}
// *********************************************************************//
  INodeBaseDisp = dispinterface
    ['{0D32845A-C27B-4BFD-B265-1D3B2B50F99F}']
    property UserOrient: ILegOrientationContainer readonly dispid 1610809344;
    property DynAssignEdges: IEdgeCollection readonly dispid 1610809345;
    property DynAssignTurns: IEdgeCollection readonly dispid 1610809346;
    property EvalTurns: IEdgeCollection readonly dispid 1610809347;
    property EvalEdges: IEdgeCollection readonly dispid 1610809348;
    property LinkSegs: ILinkSegmentContainer readonly dispid 1610809349;
    property Points: IPointContainer readonly dispid 1610809350;
    property Movements: IMovementContainer readonly dispid 1610809351;
    property TotRes: IMovement readonly dispid 1610809352;
    property MesoTurnConflicts: IMesoTurnConflictCollection readonly dispid 1610809353;
    property MesoTurns: IMesoTurnCollection readonly dispid 1610809354;
    property ConflictAreas: IConflictAreaCollection readonly dispid 1610809355;
    property MesoNode: IMesoNode readonly dispid 1610809356;
    property EnteringEdges: IEdgeCollection readonly dispid 1610809357;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: INode
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {995068E4-13E3-4221-8E72-8EEA10C006DD}
// *********************************************************************//
  INode = interface(INodeBase)
    ['{995068E4-13E3-4221-8E72-8EEA10C006DD}']
  end;

// *********************************************************************//
// DispIntf:  INodeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {995068E4-13E3-4221-8E72-8EEA10C006DD}
// *********************************************************************//
  INodeDisp = dispinterface
    ['{995068E4-13E3-4221-8E72-8EEA10C006DD}']
    property UserOrient: ILegOrientationContainer readonly dispid 1610809344;
    property DynAssignEdges: IEdgeCollection readonly dispid 1610809345;
    property DynAssignTurns: IEdgeCollection readonly dispid 1610809346;
    property EvalTurns: IEdgeCollection readonly dispid 1610809347;
    property EvalEdges: IEdgeCollection readonly dispid 1610809348;
    property LinkSegs: ILinkSegmentContainer readonly dispid 1610809349;
    property Points: IPointContainer readonly dispid 1610809350;
    property Movements: IMovementContainer readonly dispid 1610809351;
    property TotRes: IMovement readonly dispid 1610809352;
    property MesoTurnConflicts: IMesoTurnConflictCollection readonly dispid 1610809353;
    property MesoTurns: IMesoTurnCollection readonly dispid 1610809354;
    property ConflictAreas: IConflictAreaCollection readonly dispid 1610809355;
    property MesoNode: IMesoNode readonly dispid 1610809356;
    property EnteringEdges: IEdgeCollection readonly dispid 1610809357;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ILegOrientationCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D96002F8-D82D-4B6A-AB04-2B4BD9AB1692}
// *********************************************************************//
  ILegOrientationCollection = interface(ICollectionBase)
    ['{D96002F8-D82D-4B6A-AB04-2B4BD9AB1692}']
  end;

// *********************************************************************//
// DispIntf:  ILegOrientationCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D96002F8-D82D-4B6A-AB04-2B4BD9AB1692}
// *********************************************************************//
  ILegOrientationCollectionDisp = dispinterface
    ['{D96002F8-D82D-4B6A-AB04-2B4BD9AB1692}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ILegOrientationContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4F35CC50-8571-4B79-BF07-14D289B77636}
// *********************************************************************//
  ILegOrientationContainerBase = interface(ILegOrientationCollection)
    ['{4F35CC50-8571-4B79-BF07-14D289B77636}']
  end;

// *********************************************************************//
// DispIntf:  ILegOrientationContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4F35CC50-8571-4B79-BF07-14D289B77636}
// *********************************************************************//
  ILegOrientationContainerBaseDisp = dispinterface
    ['{4F35CC50-8571-4B79-BF07-14D289B77636}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ILegOrientationContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C0498845-D66A-43AC-B391-108EBE0FDC1A}
// *********************************************************************//
  ILegOrientationContainer = interface(ILegOrientationContainerBase)
    ['{C0498845-D66A-43AC-B391-108EBE0FDC1A}']
  end;

// *********************************************************************//
// DispIntf:  ILegOrientationContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C0498845-D66A-43AC-B391-108EBE0FDC1A}
// *********************************************************************//
  ILegOrientationContainerDisp = dispinterface
    ['{C0498845-D66A-43AC-B391-108EBE0FDC1A}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ILinkSegmentCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B9FAECE2-5066-4563-99E9-4FED0D80AAE5}
// *********************************************************************//
  ILinkSegmentCollection = interface(ICollectionBase)
    ['{B9FAECE2-5066-4563-99E9-4FED0D80AAE5}']
  end;

// *********************************************************************//
// DispIntf:  ILinkSegmentCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B9FAECE2-5066-4563-99E9-4FED0D80AAE5}
// *********************************************************************//
  ILinkSegmentCollectionDisp = dispinterface
    ['{B9FAECE2-5066-4563-99E9-4FED0D80AAE5}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ILinkSegmentContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {37EEE6CD-D68D-4733-B23F-43EA1D6938FE}
// *********************************************************************//
  ILinkSegmentContainerBase = interface(ILinkSegmentCollection)
    ['{37EEE6CD-D68D-4733-B23F-43EA1D6938FE}']
  end;

// *********************************************************************//
// DispIntf:  ILinkSegmentContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {37EEE6CD-D68D-4733-B23F-43EA1D6938FE}
// *********************************************************************//
  ILinkSegmentContainerBaseDisp = dispinterface
    ['{37EEE6CD-D68D-4733-B23F-43EA1D6938FE}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ILinkSegmentContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FF9B674A-3439-4D6C-88E4-461135798218}
// *********************************************************************//
  ILinkSegmentContainer = interface(ILinkSegmentContainerBase)
    ['{FF9B674A-3439-4D6C-88E4-461135798218}']
  end;

// *********************************************************************//
// DispIntf:  ILinkSegmentContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FF9B674A-3439-4D6C-88E4-461135798218}
// *********************************************************************//
  ILinkSegmentContainerDisp = dispinterface
    ['{FF9B674A-3439-4D6C-88E4-461135798218}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IMovementCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EEC9DE11-2801-4BA9-9105-6CD41558A4F2}
// *********************************************************************//
  IMovementCollection = interface(ICollectionBase)
    ['{EEC9DE11-2801-4BA9-9105-6CD41558A4F2}']
  end;

// *********************************************************************//
// DispIntf:  IMovementCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EEC9DE11-2801-4BA9-9105-6CD41558A4F2}
// *********************************************************************//
  IMovementCollectionDisp = dispinterface
    ['{EEC9DE11-2801-4BA9-9105-6CD41558A4F2}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IMovementContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {572348DE-5C45-49AD-90D1-E02D6D733B79}
// *********************************************************************//
  IMovementContainerBase = interface(IMovementCollection)
    ['{572348DE-5C45-49AD-90D1-E02D6D733B79}']
  end;

// *********************************************************************//
// DispIntf:  IMovementContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {572348DE-5C45-49AD-90D1-E02D6D733B79}
// *********************************************************************//
  IMovementContainerBaseDisp = dispinterface
    ['{572348DE-5C45-49AD-90D1-E02D6D733B79}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IMovementContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9A40218E-C41E-4A1A-8F9B-B108927D8865}
// *********************************************************************//
  IMovementContainer = interface(IMovementContainerBase)
    ['{9A40218E-C41E-4A1A-8F9B-B108927D8865}']
  end;

// *********************************************************************//
// DispIntf:  IMovementContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9A40218E-C41E-4A1A-8F9B-B108927D8865}
// *********************************************************************//
  IMovementContainerDisp = dispinterface
    ['{9A40218E-C41E-4A1A-8F9B-B108927D8865}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IMovementBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D331791F-3DC3-49DC-9C2C-BF8C52917918}
// *********************************************************************//
  IMovementBase = interface(IObjectBase)
    ['{D331791F-3DC3-49DC-9C2C-BF8C52917918}']
    function Get_Node: INode; safecall;
    function Get_FromLink: ILink; safecall;
    function Get_ToLink: ILink; safecall;
    function Get_Edges: IEdgeCollection; safecall;
    function Get_FromNodes: INodeCollection; safecall;
    function Get_ToNodes: INodeCollection; safecall;
    property Node: INode read Get_Node;
    property FromLink: ILink read Get_FromLink;
    property ToLink: ILink read Get_ToLink;
    property Edges: IEdgeCollection read Get_Edges;
    property FromNodes: INodeCollection read Get_FromNodes;
    property ToNodes: INodeCollection read Get_ToNodes;
  end;

// *********************************************************************//
// DispIntf:  IMovementBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D331791F-3DC3-49DC-9C2C-BF8C52917918}
// *********************************************************************//
  IMovementBaseDisp = dispinterface
    ['{D331791F-3DC3-49DC-9C2C-BF8C52917918}']
    property Node: INode readonly dispid 1610809344;
    property FromLink: ILink readonly dispid 1610809345;
    property ToLink: ILink readonly dispid 1610809346;
    property Edges: IEdgeCollection readonly dispid 1610809347;
    property FromNodes: INodeCollection readonly dispid 1610809348;
    property ToNodes: INodeCollection readonly dispid 1610809349;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IMovement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B62A536C-71C2-4AC2-8543-73CF99471D65}
// *********************************************************************//
  IMovement = interface(IMovementBase)
    ['{B62A536C-71C2-4AC2-8543-73CF99471D65}']
  end;

// *********************************************************************//
// DispIntf:  IMovementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B62A536C-71C2-4AC2-8543-73CF99471D65}
// *********************************************************************//
  IMovementDisp = dispinterface
    ['{B62A536C-71C2-4AC2-8543-73CF99471D65}']
    property Node: INode readonly dispid 1610809344;
    property FromLink: ILink readonly dispid 1610809345;
    property ToLink: ILink readonly dispid 1610809346;
    property Edges: IEdgeCollection readonly dispid 1610809347;
    property FromNodes: INodeCollection readonly dispid 1610809348;
    property ToNodes: INodeCollection readonly dispid 1610809349;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: INodeCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F92E9040-9BDE-4197-9515-928154CC7B01}
// *********************************************************************//
  INodeCollection = interface(ICollectionBase)
    ['{F92E9040-9BDE-4197-9515-928154CC7B01}']
  end;

// *********************************************************************//
// DispIntf:  INodeCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F92E9040-9BDE-4197-9515-928154CC7B01}
// *********************************************************************//
  INodeCollectionDisp = dispinterface
    ['{F92E9040-9BDE-4197-9515-928154CC7B01}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IMesoTurnConflictCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C9EADDA2-13E1-49B5-B8ED-EBC0FC4EA26D}
// *********************************************************************//
  IMesoTurnConflictCollection = interface(ICollectionBase)
    ['{C9EADDA2-13E1-49B5-B8ED-EBC0FC4EA26D}']
  end;

// *********************************************************************//
// DispIntf:  IMesoTurnConflictCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C9EADDA2-13E1-49B5-B8ED-EBC0FC4EA26D}
// *********************************************************************//
  IMesoTurnConflictCollectionDisp = dispinterface
    ['{C9EADDA2-13E1-49B5-B8ED-EBC0FC4EA26D}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IMesoTurnCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2F181F4D-BA9B-4B0D-9FBD-14B61FA67A72}
// *********************************************************************//
  IMesoTurnCollection = interface(ICollectionBase)
    ['{2F181F4D-BA9B-4B0D-9FBD-14B61FA67A72}']
  end;

// *********************************************************************//
// DispIntf:  IMesoTurnCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2F181F4D-BA9B-4B0D-9FBD-14B61FA67A72}
// *********************************************************************//
  IMesoTurnCollectionDisp = dispinterface
    ['{2F181F4D-BA9B-4B0D-9FBD-14B61FA67A72}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IMesoNodeBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9E763FFD-A977-4121-88BA-15362541C9A2}
// *********************************************************************//
  IMesoNodeBase = interface(IObjectBase)
    ['{9E763FFD-A977-4121-88BA-15362541C9A2}']
    function Get_Node: INode; safecall;
    function Get_InMesoEdges: IMesoEdgeCollection; safecall;
    function Get_OutMesoEdges: IMesoEdgeCollection; safecall;
    function Get_ParkLot: IParkingLot; safecall;
    function Get_TurnMesoEdges: IMesoEdgeCollection; safecall;
    function Get_MesoTurnConflicts: IMesoTurnConflictContainer; safecall;
    function Get_MesoTurns: IMesoTurnContainer; safecall;
    function Get_PTStop: IPTStop; safecall;
    function Get_PTLinesInp: IPTLineCollection; safecall;
    function Get_SigHeads: ISignalHeadCollection; safecall;
    function Get_VehRoutDecDyn: IVehicleRoutingDecisionDynamic; safecall;
    function Get_VehRoutDecsMngLns: IVehicleRoutingDecisionManagedLanesCollection; safecall;
    property Node: INode read Get_Node;
    property InMesoEdges: IMesoEdgeCollection read Get_InMesoEdges;
    property OutMesoEdges: IMesoEdgeCollection read Get_OutMesoEdges;
    property ParkLot: IParkingLot read Get_ParkLot;
    property TurnMesoEdges: IMesoEdgeCollection read Get_TurnMesoEdges;
    property MesoTurnConflicts: IMesoTurnConflictContainer read Get_MesoTurnConflicts;
    property MesoTurns: IMesoTurnContainer read Get_MesoTurns;
    property PTStop: IPTStop read Get_PTStop;
    property PTLinesInp: IPTLineCollection read Get_PTLinesInp;
    property SigHeads: ISignalHeadCollection read Get_SigHeads;
    property VehRoutDecDyn: IVehicleRoutingDecisionDynamic read Get_VehRoutDecDyn;
    property VehRoutDecsMngLns: IVehicleRoutingDecisionManagedLanesCollection read Get_VehRoutDecsMngLns;
  end;

// *********************************************************************//
// DispIntf:  IMesoNodeBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9E763FFD-A977-4121-88BA-15362541C9A2}
// *********************************************************************//
  IMesoNodeBaseDisp = dispinterface
    ['{9E763FFD-A977-4121-88BA-15362541C9A2}']
    property Node: INode readonly dispid 1610809344;
    property InMesoEdges: IMesoEdgeCollection readonly dispid 1610809345;
    property OutMesoEdges: IMesoEdgeCollection readonly dispid 1610809346;
    property ParkLot: IParkingLot readonly dispid 1610809347;
    property TurnMesoEdges: IMesoEdgeCollection readonly dispid 1610809348;
    property MesoTurnConflicts: IMesoTurnConflictContainer readonly dispid 1610809349;
    property MesoTurns: IMesoTurnContainer readonly dispid 1610809350;
    property PTStop: IPTStop readonly dispid 1610809351;
    property PTLinesInp: IPTLineCollection readonly dispid 1610809352;
    property SigHeads: ISignalHeadCollection readonly dispid 1610809353;
    property VehRoutDecDyn: IVehicleRoutingDecisionDynamic readonly dispid 1610809354;
    property VehRoutDecsMngLns: IVehicleRoutingDecisionManagedLanesCollection readonly dispid 1610809355;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IMesoNode
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7855F8D6-C2C0-4F07-BBAB-6439B8AF7B6A}
// *********************************************************************//
  IMesoNode = interface(IMesoNodeBase)
    ['{7855F8D6-C2C0-4F07-BBAB-6439B8AF7B6A}']
  end;

// *********************************************************************//
// DispIntf:  IMesoNodeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7855F8D6-C2C0-4F07-BBAB-6439B8AF7B6A}
// *********************************************************************//
  IMesoNodeDisp = dispinterface
    ['{7855F8D6-C2C0-4F07-BBAB-6439B8AF7B6A}']
    property Node: INode readonly dispid 1610809344;
    property InMesoEdges: IMesoEdgeCollection readonly dispid 1610809345;
    property OutMesoEdges: IMesoEdgeCollection readonly dispid 1610809346;
    property ParkLot: IParkingLot readonly dispid 1610809347;
    property TurnMesoEdges: IMesoEdgeCollection readonly dispid 1610809348;
    property MesoTurnConflicts: IMesoTurnConflictContainer readonly dispid 1610809349;
    property MesoTurns: IMesoTurnContainer readonly dispid 1610809350;
    property PTStop: IPTStop readonly dispid 1610809351;
    property PTLinesInp: IPTLineCollection readonly dispid 1610809352;
    property SigHeads: ISignalHeadCollection readonly dispid 1610809353;
    property VehRoutDecDyn: IVehicleRoutingDecisionDynamic readonly dispid 1610809354;
    property VehRoutDecsMngLns: IVehicleRoutingDecisionManagedLanesCollection readonly dispid 1610809355;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IMesoEdgeCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A36FD029-8C8A-4B49-A394-54FC1F58ABB4}
// *********************************************************************//
  IMesoEdgeCollection = interface(ICollectionBase)
    ['{A36FD029-8C8A-4B49-A394-54FC1F58ABB4}']
  end;

// *********************************************************************//
// DispIntf:  IMesoEdgeCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A36FD029-8C8A-4B49-A394-54FC1F58ABB4}
// *********************************************************************//
  IMesoEdgeCollectionDisp = dispinterface
    ['{A36FD029-8C8A-4B49-A394-54FC1F58ABB4}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IParkingLotBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B3578AD2-5E28-4321-8749-8296F98267BF}
// *********************************************************************//
  IParkingLotBase = interface(IObjectBase)
    ['{B3578AD2-5E28-4321-8749-8296F98267BF}']
    function Get_VehClassDynAssignDesSpeedDistr: IVehClassDynAssignDesSpeedDistributionContainer; safecall;
    function Get_DesSpeedDistrDef: IDesSpeedDistribution; safecall;
    function Get_InitOccupComp: IVehicleComposition; safecall;
    function Get_BlockTmDistr: ITimeDistribution; safecall;
    function Get_Lane: ILane; safecall;
    function Get_Link: ILink; safecall;
    function Get_Paths: IPathCollection; safecall;
    function Get_Zone: IZone; safecall;
    function Get_DirChgDurDist: ITimeDistribution; safecall;
    function Get_VehParking: IVehicleCollection; safecall;
    property VehClassDynAssignDesSpeedDistr: IVehClassDynAssignDesSpeedDistributionContainer read Get_VehClassDynAssignDesSpeedDistr;
    property DesSpeedDistrDef: IDesSpeedDistribution read Get_DesSpeedDistrDef;
    property InitOccupComp: IVehicleComposition read Get_InitOccupComp;
    property BlockTmDistr: ITimeDistribution read Get_BlockTmDistr;
    property Lane: ILane read Get_Lane;
    property Link: ILink read Get_Link;
    property Paths: IPathCollection read Get_Paths;
    property Zone: IZone read Get_Zone;
    property DirChgDurDist: ITimeDistribution read Get_DirChgDurDist;
    property VehParking: IVehicleCollection read Get_VehParking;
  end;

// *********************************************************************//
// DispIntf:  IParkingLotBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B3578AD2-5E28-4321-8749-8296F98267BF}
// *********************************************************************//
  IParkingLotBaseDisp = dispinterface
    ['{B3578AD2-5E28-4321-8749-8296F98267BF}']
    property VehClassDynAssignDesSpeedDistr: IVehClassDynAssignDesSpeedDistributionContainer readonly dispid 1610809344;
    property DesSpeedDistrDef: IDesSpeedDistribution readonly dispid 1610809345;
    property InitOccupComp: IVehicleComposition readonly dispid 1610809346;
    property BlockTmDistr: ITimeDistribution readonly dispid 1610809347;
    property Lane: ILane readonly dispid 1610809348;
    property Link: ILink readonly dispid 1610809349;
    property Paths: IPathCollection readonly dispid 1610809350;
    property Zone: IZone readonly dispid 1610809351;
    property DirChgDurDist: ITimeDistribution readonly dispid 1610809352;
    property VehParking: IVehicleCollection readonly dispid 1610809353;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IParkingLot
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7280BC94-BE7A-42A3-83B1-682A49F26486}
// *********************************************************************//
  IParkingLot = interface(IParkingLotBase)
    ['{7280BC94-BE7A-42A3-83B1-682A49F26486}']
  end;

// *********************************************************************//
// DispIntf:  IParkingLotDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7280BC94-BE7A-42A3-83B1-682A49F26486}
// *********************************************************************//
  IParkingLotDisp = dispinterface
    ['{7280BC94-BE7A-42A3-83B1-682A49F26486}']
    property VehClassDynAssignDesSpeedDistr: IVehClassDynAssignDesSpeedDistributionContainer readonly dispid 1610809344;
    property DesSpeedDistrDef: IDesSpeedDistribution readonly dispid 1610809345;
    property InitOccupComp: IVehicleComposition readonly dispid 1610809346;
    property BlockTmDistr: ITimeDistribution readonly dispid 1610809347;
    property Lane: ILane readonly dispid 1610809348;
    property Link: ILink readonly dispid 1610809349;
    property Paths: IPathCollection readonly dispid 1610809350;
    property Zone: IZone readonly dispid 1610809351;
    property DirChgDurDist: ITimeDistribution readonly dispid 1610809352;
    property VehParking: IVehicleCollection readonly dispid 1610809353;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehClassDynAssignDesSpeedDistributionCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B49183C4-CD38-45D7-97F0-4F2B3C7694A5}
// *********************************************************************//
  IVehClassDynAssignDesSpeedDistributionCollection = interface(ICollectionBase)
    ['{B49183C4-CD38-45D7-97F0-4F2B3C7694A5}']
  end;

// *********************************************************************//
// DispIntf:  IVehClassDynAssignDesSpeedDistributionCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B49183C4-CD38-45D7-97F0-4F2B3C7694A5}
// *********************************************************************//
  IVehClassDynAssignDesSpeedDistributionCollectionDisp = dispinterface
    ['{B49183C4-CD38-45D7-97F0-4F2B3C7694A5}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehClassDynAssignDesSpeedDistributionContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D42F0787-CCC5-49D1-BE7E-1904F6C5BC52}
// *********************************************************************//
  IVehClassDynAssignDesSpeedDistributionContainerBase = interface(IVehClassDynAssignDesSpeedDistributionCollection)
    ['{D42F0787-CCC5-49D1-BE7E-1904F6C5BC52}']
  end;

// *********************************************************************//
// DispIntf:  IVehClassDynAssignDesSpeedDistributionContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D42F0787-CCC5-49D1-BE7E-1904F6C5BC52}
// *********************************************************************//
  IVehClassDynAssignDesSpeedDistributionContainerBaseDisp = dispinterface
    ['{D42F0787-CCC5-49D1-BE7E-1904F6C5BC52}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehClassDynAssignDesSpeedDistributionContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A60B9593-0AF1-457A-A2D1-66845D15FBE9}
// *********************************************************************//
  IVehClassDynAssignDesSpeedDistributionContainer = interface(IVehClassDynAssignDesSpeedDistributionContainerBase)
    ['{A60B9593-0AF1-457A-A2D1-66845D15FBE9}']
  end;

// *********************************************************************//
// DispIntf:  IVehClassDynAssignDesSpeedDistributionContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A60B9593-0AF1-457A-A2D1-66845D15FBE9}
// *********************************************************************//
  IVehClassDynAssignDesSpeedDistributionContainerDisp = dispinterface
    ['{A60B9593-0AF1-457A-A2D1-66845D15FBE9}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPathCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {84A2D5B7-2691-480A-9A1A-AEC7415C238E}
// *********************************************************************//
  IPathCollection = interface(ICollectionBase)
    ['{84A2D5B7-2691-480A-9A1A-AEC7415C238E}']
  end;

// *********************************************************************//
// DispIntf:  IPathCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {84A2D5B7-2691-480A-9A1A-AEC7415C238E}
// *********************************************************************//
  IPathCollectionDisp = dispinterface
    ['{84A2D5B7-2691-480A-9A1A-AEC7415C238E}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IZoneBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E7BD4851-2636-4338-8875-8A2C26681215}
// *********************************************************************//
  IZoneBase = interface(IObjectBase)
    ['{E7BD4851-2636-4338-8875-8A2C26681215}']
    function Get_ParkLots: IParkingLotCollection; safecall;
    function Get_VehInputs: IVehicleInputCollection; safecall;
    function Get_VehRoutDecsSta: IVehicleRoutingDecisionStaticCollection; safecall;
    function Get_VehRoutSta: IVehicleRouteStaticCollection; safecall;
    property ParkLots: IParkingLotCollection read Get_ParkLots;
    property VehInputs: IVehicleInputCollection read Get_VehInputs;
    property VehRoutDecsSta: IVehicleRoutingDecisionStaticCollection read Get_VehRoutDecsSta;
    property VehRoutSta: IVehicleRouteStaticCollection read Get_VehRoutSta;
  end;

// *********************************************************************//
// DispIntf:  IZoneBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E7BD4851-2636-4338-8875-8A2C26681215}
// *********************************************************************//
  IZoneBaseDisp = dispinterface
    ['{E7BD4851-2636-4338-8875-8A2C26681215}']
    property ParkLots: IParkingLotCollection readonly dispid 1610809344;
    property VehInputs: IVehicleInputCollection readonly dispid 1610809345;
    property VehRoutDecsSta: IVehicleRoutingDecisionStaticCollection readonly dispid 1610809346;
    property VehRoutSta: IVehicleRouteStaticCollection readonly dispid 1610809347;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IZone
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {82D4C4BB-C774-4C0C-81A8-BEFBDBDAE1C6}
// *********************************************************************//
  IZone = interface(IZoneBase)
    ['{82D4C4BB-C774-4C0C-81A8-BEFBDBDAE1C6}']
  end;

// *********************************************************************//
// DispIntf:  IZoneDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {82D4C4BB-C774-4C0C-81A8-BEFBDBDAE1C6}
// *********************************************************************//
  IZoneDisp = dispinterface
    ['{82D4C4BB-C774-4C0C-81A8-BEFBDBDAE1C6}']
    property ParkLots: IParkingLotCollection readonly dispid 1610809344;
    property VehInputs: IVehicleInputCollection readonly dispid 1610809345;
    property VehRoutDecsSta: IVehicleRoutingDecisionStaticCollection readonly dispid 1610809346;
    property VehRoutSta: IVehicleRouteStaticCollection readonly dispid 1610809347;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IMesoTurnConflictContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A82EC0F9-15AA-4036-B74F-1BB095EDA29A}
// *********************************************************************//
  IMesoTurnConflictContainerBase = interface(IMesoTurnConflictCollection)
    ['{A82EC0F9-15AA-4036-B74F-1BB095EDA29A}']
  end;

// *********************************************************************//
// DispIntf:  IMesoTurnConflictContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A82EC0F9-15AA-4036-B74F-1BB095EDA29A}
// *********************************************************************//
  IMesoTurnConflictContainerBaseDisp = dispinterface
    ['{A82EC0F9-15AA-4036-B74F-1BB095EDA29A}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IMesoTurnConflictContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F2157F86-AA20-4B6B-ADCD-A1D7E9E42054}
// *********************************************************************//
  IMesoTurnConflictContainer = interface(IMesoTurnConflictContainerBase)
    ['{F2157F86-AA20-4B6B-ADCD-A1D7E9E42054}']
  end;

// *********************************************************************//
// DispIntf:  IMesoTurnConflictContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F2157F86-AA20-4B6B-ADCD-A1D7E9E42054}
// *********************************************************************//
  IMesoTurnConflictContainerDisp = dispinterface
    ['{F2157F86-AA20-4B6B-ADCD-A1D7E9E42054}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IMesoTurnContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DB8E3896-A9A2-4657-A757-2EC2C29256D6}
// *********************************************************************//
  IMesoTurnContainerBase = interface(IMesoTurnCollection)
    ['{DB8E3896-A9A2-4657-A757-2EC2C29256D6}']
  end;

// *********************************************************************//
// DispIntf:  IMesoTurnContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DB8E3896-A9A2-4657-A757-2EC2C29256D6}
// *********************************************************************//
  IMesoTurnContainerBaseDisp = dispinterface
    ['{DB8E3896-A9A2-4657-A757-2EC2C29256D6}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IMesoTurnContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F1789C4E-9D91-49F3-B1B2-56409EB51130}
// *********************************************************************//
  IMesoTurnContainer = interface(IMesoTurnContainerBase)
    ['{F1789C4E-9D91-49F3-B1B2-56409EB51130}']
  end;

// *********************************************************************//
// DispIntf:  IMesoTurnContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F1789C4E-9D91-49F3-B1B2-56409EB51130}
// *********************************************************************//
  IMesoTurnContainerDisp = dispinterface
    ['{F1789C4E-9D91-49F3-B1B2-56409EB51130}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleRoutingDecisionDynamicBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0435F0E9-763D-49FF-BCE3-43B8EB023104}
// *********************************************************************//
  IVehicleRoutingDecisionDynamicBase = interface(IObjectBase)
    ['{0435F0E9-763D-49FF-BCE3-43B8EB023104}']
    function Get_CondParkLot: IParkingLot; safecall;
    function Get_StratParkLot: IParkingLot; safecall;
    function Get_Paths: IPathCollection; safecall;
    function Get_Link: ILink; safecall;
    function Get_VehClasses: IVehicleClassCollection; safecall;
    property CondParkLot: IParkingLot read Get_CondParkLot;
    property StratParkLot: IParkingLot read Get_StratParkLot;
    property Paths: IPathCollection read Get_Paths;
    property Link: ILink read Get_Link;
    property VehClasses: IVehicleClassCollection read Get_VehClasses;
  end;

// *********************************************************************//
// DispIntf:  IVehicleRoutingDecisionDynamicBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0435F0E9-763D-49FF-BCE3-43B8EB023104}
// *********************************************************************//
  IVehicleRoutingDecisionDynamicBaseDisp = dispinterface
    ['{0435F0E9-763D-49FF-BCE3-43B8EB023104}']
    property CondParkLot: IParkingLot readonly dispid 1610809344;
    property StratParkLot: IParkingLot readonly dispid 1610809345;
    property Paths: IPathCollection readonly dispid 1610809346;
    property Link: ILink readonly dispid 1610809347;
    property VehClasses: IVehicleClassCollection readonly dispid 1610809348;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehicleRoutingDecisionDynamic
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {23DBAE4A-6D75-456E-A540-2E57339F125C}
// *********************************************************************//
  IVehicleRoutingDecisionDynamic = interface(IVehicleRoutingDecisionDynamicBase)
    ['{23DBAE4A-6D75-456E-A540-2E57339F125C}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleRoutingDecisionDynamicDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {23DBAE4A-6D75-456E-A540-2E57339F125C}
// *********************************************************************//
  IVehicleRoutingDecisionDynamicDisp = dispinterface
    ['{23DBAE4A-6D75-456E-A540-2E57339F125C}']
    property CondParkLot: IParkingLot readonly dispid 1610809344;
    property StratParkLot: IParkingLot readonly dispid 1610809345;
    property Paths: IPathCollection readonly dispid 1610809346;
    property Link: ILink readonly dispid 1610809347;
    property VehClasses: IVehicleClassCollection readonly dispid 1610809348;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehCompositionInitialVolumeCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EF888A73-F9CC-42FC-AD4B-5B21604438EA}
// *********************************************************************//
  IVehCompositionInitialVolumeCollection = interface(ICollectionBase)
    ['{EF888A73-F9CC-42FC-AD4B-5B21604438EA}']
  end;

// *********************************************************************//
// DispIntf:  IVehCompositionInitialVolumeCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EF888A73-F9CC-42FC-AD4B-5B21604438EA}
// *********************************************************************//
  IVehCompositionInitialVolumeCollectionDisp = dispinterface
    ['{EF888A73-F9CC-42FC-AD4B-5B21604438EA}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehCompositionInitialVolumeContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {03853486-4953-44A8-97D8-78B1162D4DEF}
// *********************************************************************//
  IVehCompositionInitialVolumeContainerBase = interface(IVehCompositionInitialVolumeCollection)
    ['{03853486-4953-44A8-97D8-78B1162D4DEF}']
  end;

// *********************************************************************//
// DispIntf:  IVehCompositionInitialVolumeContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {03853486-4953-44A8-97D8-78B1162D4DEF}
// *********************************************************************//
  IVehCompositionInitialVolumeContainerBaseDisp = dispinterface
    ['{03853486-4953-44A8-97D8-78B1162D4DEF}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehCompositionInitialVolumeContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {18506708-729E-400B-8DFC-A04F188148FE}
// *********************************************************************//
  IVehCompositionInitialVolumeContainer = interface(IVehCompositionInitialVolumeContainerBase)
    ['{18506708-729E-400B-8DFC-A04F188148FE}']
  end;

// *********************************************************************//
// DispIntf:  IVehCompositionInitialVolumeContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {18506708-729E-400B-8DFC-A04F188148FE}
// *********************************************************************//
  IVehCompositionInitialVolumeContainerDisp = dispinterface
    ['{18506708-729E-400B-8DFC-A04F188148FE}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IEdgeContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B58A8381-49F4-41F9-939F-50477ED059CA}
// *********************************************************************//
  IEdgeContainerBase = interface(IEdgeCollection)
    ['{B58A8381-49F4-41F9-939F-50477ED059CA}']
    function Get_ItemByKey(Key: OleVariant): IEdge; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    property ItemByKey[Key: OleVariant]: IEdge read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IEdgeContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B58A8381-49F4-41F9-939F-50477ED059CA}
// *********************************************************************//
  IEdgeContainerBaseDisp = dispinterface
    ['{B58A8381-49F4-41F9-939F-50477ED059CA}']
    property ItemByKey[Key: OleVariant]: IEdge readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IEdgeContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B2313F9B-BCAB-4E3D-9319-37848E138A63}
// *********************************************************************//
  IEdgeContainer = interface(IEdgeContainerBase)
    ['{B2313F9B-BCAB-4E3D-9319-37848E138A63}']
  end;

// *********************************************************************//
// DispIntf:  IEdgeContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B2313F9B-BCAB-4E3D-9319-37848E138A63}
// *********************************************************************//
  IEdgeContainerDisp = dispinterface
    ['{B2313F9B-BCAB-4E3D-9319-37848E138A63}']
    property ItemByKey[Key: OleVariant]: IEdge readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IEdgeBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2B48648D-6EB2-4E36-A548-83B9D7C427D8}
// *********************************************************************//
  IEdgeBase = interface(IObjectBase)
    ['{2B48648D-6EB2-4E36-A548-83B9D7C427D8}']
    function Get_FromNode: INode; safecall;
    function Get_ToNode: INode; safecall;
    function Get_FromEdges: IEdgeCollection; safecall;
    function Get_ToEdges: IEdgeCollection; safecall;
    function Get_Movement: IMovement; safecall;
    function Get_LinkSeq: ILinkCollection; safecall;
    property FromNode: INode read Get_FromNode;
    property ToNode: INode read Get_ToNode;
    property FromEdges: IEdgeCollection read Get_FromEdges;
    property ToEdges: IEdgeCollection read Get_ToEdges;
    property Movement: IMovement read Get_Movement;
    property LinkSeq: ILinkCollection read Get_LinkSeq;
  end;

// *********************************************************************//
// DispIntf:  IEdgeBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2B48648D-6EB2-4E36-A548-83B9D7C427D8}
// *********************************************************************//
  IEdgeBaseDisp = dispinterface
    ['{2B48648D-6EB2-4E36-A548-83B9D7C427D8}']
    property FromNode: INode readonly dispid 1610809344;
    property ToNode: INode readonly dispid 1610809345;
    property FromEdges: IEdgeCollection readonly dispid 1610809346;
    property ToEdges: IEdgeCollection readonly dispid 1610809347;
    property Movement: IMovement readonly dispid 1610809348;
    property LinkSeq: ILinkCollection readonly dispid 1610809349;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IEdge
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E9ACDCD8-A421-41C0-A0C6-6819569E6F3D}
// *********************************************************************//
  IEdge = interface(IEdgeBase)
    ['{E9ACDCD8-A421-41C0-A0C6-6819569E6F3D}']
  end;

// *********************************************************************//
// DispIntf:  IEdgeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E9ACDCD8-A421-41C0-A0C6-6819569E6F3D}
// *********************************************************************//
  IEdgeDisp = dispinterface
    ['{E9ACDCD8-A421-41C0-A0C6-6819569E6F3D}']
    property FromNode: INode readonly dispid 1610809344;
    property ToNode: INode readonly dispid 1610809345;
    property FromEdges: IEdgeCollection readonly dispid 1610809346;
    property ToEdges: IEdgeCollection readonly dispid 1610809347;
    property Movement: IMovement readonly dispid 1610809348;
    property LinkSeq: ILinkCollection readonly dispid 1610809349;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ILinkCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AB6272F2-8022-4080-BA73-EE18409694B0}
// *********************************************************************//
  ILinkCollection = interface(ICollectionBase)
    ['{AB6272F2-8022-4080-BA73-EE18409694B0}']
  end;

// *********************************************************************//
// DispIntf:  ILinkCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AB6272F2-8022-4080-BA73-EE18409694B0}
// *********************************************************************//
  ILinkCollectionDisp = dispinterface
    ['{AB6272F2-8022-4080-BA73-EE18409694B0}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IElevatorGroupCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C6EFADF1-5B50-4023-9EEA-B6089BB7EED8}
// *********************************************************************//
  IElevatorGroupCollection = interface(ICollectionBase)
    ['{C6EFADF1-5B50-4023-9EEA-B6089BB7EED8}']
  end;

// *********************************************************************//
// DispIntf:  IElevatorGroupCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C6EFADF1-5B50-4023-9EEA-B6089BB7EED8}
// *********************************************************************//
  IElevatorGroupCollectionDisp = dispinterface
    ['{C6EFADF1-5B50-4023-9EEA-B6089BB7EED8}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IElevatorGroupContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {940CBD63-134D-45A0-840D-3E4FF569D12B}
// *********************************************************************//
  IElevatorGroupContainerBase = interface(IElevatorGroupCollection)
    ['{940CBD63-134D-45A0-840D-3E4FF569D12B}']
    function Get_ItemByKey(Key: OleVariant): IElevatorGroup; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddElevatorGroup(Key: OleVariant): IElevatorGroup; safecall;
    function DuplicateElevatorGroup(Source: OleVariant; NewKey: OleVariant): IElevatorGroup; safecall;
    procedure RemoveElevatorGroup(const ElevatorGroup: IElevatorGroup); safecall;
    property ItemByKey[Key: OleVariant]: IElevatorGroup read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IElevatorGroupContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {940CBD63-134D-45A0-840D-3E4FF569D12B}
// *********************************************************************//
  IElevatorGroupContainerBaseDisp = dispinterface
    ['{940CBD63-134D-45A0-840D-3E4FF569D12B}']
    property ItemByKey[Key: OleVariant]: IElevatorGroup readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddElevatorGroup(Key: OleVariant): IElevatorGroup; dispid 1610874882;
    function DuplicateElevatorGroup(Source: OleVariant; NewKey: OleVariant): IElevatorGroup; dispid 1610874883;
    procedure RemoveElevatorGroup(const ElevatorGroup: IElevatorGroup); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IElevatorGroupContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {02287ADA-6B2C-4D13-8D35-CB4763421B24}
// *********************************************************************//
  IElevatorGroupContainer = interface(IElevatorGroupContainerBase)
    ['{02287ADA-6B2C-4D13-8D35-CB4763421B24}']
  end;

// *********************************************************************//
// DispIntf:  IElevatorGroupContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {02287ADA-6B2C-4D13-8D35-CB4763421B24}
// *********************************************************************//
  IElevatorGroupContainerDisp = dispinterface
    ['{02287ADA-6B2C-4D13-8D35-CB4763421B24}']
    property ItemByKey[Key: OleVariant]: IElevatorGroup readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddElevatorGroup(Key: OleVariant): IElevatorGroup; dispid 1610874882;
    function DuplicateElevatorGroup(Source: OleVariant; NewKey: OleVariant): IElevatorGroup; dispid 1610874883;
    procedure RemoveElevatorGroup(const ElevatorGroup: IElevatorGroup); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IElevatorContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0F3FE4B0-0A4A-4844-A127-63FBCCD9083B}
// *********************************************************************//
  IElevatorContainerBase = interface(IElevatorCollection)
    ['{0F3FE4B0-0A4A-4844-A127-63FBCCD9083B}']
    function Get_ItemByKey(Key: OleVariant): IElevator; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddElevator(Key: OleVariant; const WktPolygon: WideString): IElevator; safecall;
    function DuplicateElevator(Source: OleVariant; NewKey: OleVariant): IElevator; safecall;
    procedure RemoveElevator(const Elevator: IElevator); safecall;
    property ItemByKey[Key: OleVariant]: IElevator read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IElevatorContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0F3FE4B0-0A4A-4844-A127-63FBCCD9083B}
// *********************************************************************//
  IElevatorContainerBaseDisp = dispinterface
    ['{0F3FE4B0-0A4A-4844-A127-63FBCCD9083B}']
    property ItemByKey[Key: OleVariant]: IElevator readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddElevator(Key: OleVariant; const WktPolygon: WideString): IElevator; dispid 1610874882;
    function DuplicateElevator(Source: OleVariant; NewKey: OleVariant): IElevator; dispid 1610874883;
    procedure RemoveElevator(const Elevator: IElevator); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IElevatorContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CDCE86EF-09F0-4CDA-ABD7-58973968B5C4}
// *********************************************************************//
  IElevatorContainer = interface(IElevatorContainerBase)
    ['{CDCE86EF-09F0-4CDA-ABD7-58973968B5C4}']
  end;

// *********************************************************************//
// DispIntf:  IElevatorContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CDCE86EF-09F0-4CDA-ABD7-58973968B5C4}
// *********************************************************************//
  IElevatorContainerDisp = dispinterface
    ['{CDCE86EF-09F0-4CDA-ABD7-58973968B5C4}']
    property ItemByKey[Key: OleVariant]: IElevator readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddElevator(Key: OleVariant; const WktPolygon: WideString): IElevator; dispid 1610874882;
    function DuplicateElevator(Source: OleVariant; NewKey: OleVariant): IElevator; dispid 1610874883;
    procedure RemoveElevator(const Elevator: IElevator); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IElevatorBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B6E2E583-37D1-41E4-AC05-F7216E91CB2F}
// *********************************************************************//
  IElevatorBase = interface(IObjectBase)
    ['{B6E2E583-37D1-41E4-AC05-F7216E91CB2F}']
    function Get_Points: IPointContainer; safecall;
    function Get_ElevGrp: IElevatorGroup; safecall;
    function Get_Doors: IElevatorDoorContainer; safecall;
    function Get_ShaftDisplTyp: IDisplayType; safecall;
    function Get_FloorDisplTyp: IDisplayType; safecall;
    function Get_WallDisplTyp: IDisplayType; safecall;
    function Get_CeilDisplTyp: IDisplayType; safecall;
    function Get_DestLvl: ILevel; safecall;
    function Get_DoorDisplTyp: IDisplayType; safecall;
    function Get_CurLvl: ILevel; safecall;
    function Get_Peds: IPedestrianCollection; safecall;
    property Points: IPointContainer read Get_Points;
    property ElevGrp: IElevatorGroup read Get_ElevGrp;
    property Doors: IElevatorDoorContainer read Get_Doors;
    property ShaftDisplTyp: IDisplayType read Get_ShaftDisplTyp;
    property FloorDisplTyp: IDisplayType read Get_FloorDisplTyp;
    property WallDisplTyp: IDisplayType read Get_WallDisplTyp;
    property CeilDisplTyp: IDisplayType read Get_CeilDisplTyp;
    property DestLvl: ILevel read Get_DestLvl;
    property DoorDisplTyp: IDisplayType read Get_DoorDisplTyp;
    property CurLvl: ILevel read Get_CurLvl;
    property Peds: IPedestrianCollection read Get_Peds;
  end;

// *********************************************************************//
// DispIntf:  IElevatorBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B6E2E583-37D1-41E4-AC05-F7216E91CB2F}
// *********************************************************************//
  IElevatorBaseDisp = dispinterface
    ['{B6E2E583-37D1-41E4-AC05-F7216E91CB2F}']
    property Points: IPointContainer readonly dispid 1610809344;
    property ElevGrp: IElevatorGroup readonly dispid 1610809345;
    property Doors: IElevatorDoorContainer readonly dispid 1610809346;
    property ShaftDisplTyp: IDisplayType readonly dispid 1610809347;
    property FloorDisplTyp: IDisplayType readonly dispid 1610809348;
    property WallDisplTyp: IDisplayType readonly dispid 1610809349;
    property CeilDisplTyp: IDisplayType readonly dispid 1610809350;
    property DestLvl: ILevel readonly dispid 1610809351;
    property DoorDisplTyp: IDisplayType readonly dispid 1610809352;
    property CurLvl: ILevel readonly dispid 1610809353;
    property Peds: IPedestrianCollection readonly dispid 1610809354;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IElevator
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FE4999CF-7217-40A2-A95C-3FC8D8D331ED}
// *********************************************************************//
  IElevator = interface(IElevatorBase)
    ['{FE4999CF-7217-40A2-A95C-3FC8D8D331ED}']
  end;

// *********************************************************************//
// DispIntf:  IElevatorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FE4999CF-7217-40A2-A95C-3FC8D8D331ED}
// *********************************************************************//
  IElevatorDisp = dispinterface
    ['{FE4999CF-7217-40A2-A95C-3FC8D8D331ED}']
    property Points: IPointContainer readonly dispid 1610809344;
    property ElevGrp: IElevatorGroup readonly dispid 1610809345;
    property Doors: IElevatorDoorContainer readonly dispid 1610809346;
    property ShaftDisplTyp: IDisplayType readonly dispid 1610809347;
    property FloorDisplTyp: IDisplayType readonly dispid 1610809348;
    property WallDisplTyp: IDisplayType readonly dispid 1610809349;
    property CeilDisplTyp: IDisplayType readonly dispid 1610809350;
    property DestLvl: ILevel readonly dispid 1610809351;
    property DoorDisplTyp: IDisplayType readonly dispid 1610809352;
    property CurLvl: ILevel readonly dispid 1610809353;
    property Peds: IPedestrianCollection readonly dispid 1610809354;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IElevatorDoorCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F26DF242-0BF6-4AA2-9FA1-0D9100C51051}
// *********************************************************************//
  IElevatorDoorCollection = interface(ICollectionBase)
    ['{F26DF242-0BF6-4AA2-9FA1-0D9100C51051}']
  end;

// *********************************************************************//
// DispIntf:  IElevatorDoorCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F26DF242-0BF6-4AA2-9FA1-0D9100C51051}
// *********************************************************************//
  IElevatorDoorCollectionDisp = dispinterface
    ['{F26DF242-0BF6-4AA2-9FA1-0D9100C51051}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IElevatorDoorContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8285A928-F282-4730-BAC6-F506DDDE89C0}
// *********************************************************************//
  IElevatorDoorContainerBase = interface(IElevatorDoorCollection)
    ['{8285A928-F282-4730-BAC6-F506DDDE89C0}']
    function Get_ItemByKey(Key: OleVariant): IElevatorDoor; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    property ItemByKey[Key: OleVariant]: IElevatorDoor read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IElevatorDoorContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8285A928-F282-4730-BAC6-F506DDDE89C0}
// *********************************************************************//
  IElevatorDoorContainerBaseDisp = dispinterface
    ['{8285A928-F282-4730-BAC6-F506DDDE89C0}']
    property ItemByKey[Key: OleVariant]: IElevatorDoor readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IElevatorDoorContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CB92A96E-2B37-43DE-BB21-E6324CA311E7}
// *********************************************************************//
  IElevatorDoorContainer = interface(IElevatorDoorContainerBase)
    ['{CB92A96E-2B37-43DE-BB21-E6324CA311E7}']
  end;

// *********************************************************************//
// DispIntf:  IElevatorDoorContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CB92A96E-2B37-43DE-BB21-E6324CA311E7}
// *********************************************************************//
  IElevatorDoorContainerDisp = dispinterface
    ['{CB92A96E-2B37-43DE-BB21-E6324CA311E7}']
    property ItemByKey[Key: OleVariant]: IElevatorDoor readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IElevatorDoorBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {988887C3-848D-4AB8-8B2F-43E129606C1B}
// *********************************************************************//
  IElevatorDoorBase = interface(IObjectBase)
    ['{988887C3-848D-4AB8-8B2F-43E129606C1B}']
    function Get_Elevator: IElevator; safecall;
    function Get_ActLvls: ILevelCollection; safecall;
    function Get_BoardDelType: IBoardDelType; safecall;
    property Elevator: IElevator read Get_Elevator;
    property ActLvls: ILevelCollection read Get_ActLvls;
    property BoardDelType: IBoardDelType read Get_BoardDelType;
  end;

// *********************************************************************//
// DispIntf:  IElevatorDoorBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {988887C3-848D-4AB8-8B2F-43E129606C1B}
// *********************************************************************//
  IElevatorDoorBaseDisp = dispinterface
    ['{988887C3-848D-4AB8-8B2F-43E129606C1B}']
    property Elevator: IElevator readonly dispid 1610809344;
    property ActLvls: ILevelCollection readonly dispid 1610809345;
    property BoardDelType: IBoardDelType readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IElevatorDoor
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6DD69DC6-3F84-46D7-BD38-3378DF149107}
// *********************************************************************//
  IElevatorDoor = interface(IElevatorDoorBase)
    ['{6DD69DC6-3F84-46D7-BD38-3378DF149107}']
  end;

// *********************************************************************//
// DispIntf:  IElevatorDoorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6DD69DC6-3F84-46D7-BD38-3378DF149107}
// *********************************************************************//
  IElevatorDoorDisp = dispinterface
    ['{6DD69DC6-3F84-46D7-BD38-3378DF149107}']
    property Elevator: IElevator readonly dispid 1610809344;
    property ActLvls: ILevelCollection readonly dispid 1610809345;
    property BoardDelType: IBoardDelType readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ILevelCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7392967B-EC5C-444E-8622-A6817A5F5D88}
// *********************************************************************//
  ILevelCollection = interface(ICollectionBase)
    ['{7392967B-EC5C-444E-8622-A6817A5F5D88}']
  end;

// *********************************************************************//
// DispIntf:  ILevelCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7392967B-EC5C-444E-8622-A6817A5F5D88}
// *********************************************************************//
  ILevelCollectionDisp = dispinterface
    ['{7392967B-EC5C-444E-8622-A6817A5F5D88}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IEvaluationBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E7CD1E46-D805-4BEA-BBD0-4CB20FD81D5A}
// *********************************************************************//
  IEvaluationBase = interface(IObjectBase)
    ['{E7CD1E46-D805-4BEA-BBD0-4CB20FD81D5A}']
    function Get_LaneChangesVehClassFilt: IVehicleClassCollection; safecall;
    function Get_LaneChangesVehNoFilt: IObjectNoContainer; safecall;
    function Get_LaneChangesSectFilt: ISectionCollection; safecall;
    function Get_SSAMSectFilt: ISectionCollection; safecall;
    function Get_VehClasses: IVehicleClassCollection; safecall;
    function Get_PedClasses: IPedestrianClassCollection; safecall;
    function Get_PedRecPedClassFilt: IPedestrianClassCollection; safecall;
    function Get_PedRecAttributes: IAttributeSelectionContainer; safecall;
    function Get_PedRecPedNoFilt: IObjectNoContainer; safecall;
    function Get_PedRecSectFilt: ISectionCollection; safecall;
    function Get_VehRecVehClassFilt: IVehicleClassCollection; safecall;
    function Get_VehRecAttributes: IAttributeSelectionContainer; safecall;
    function Get_VehRecVehNoFilt: IObjectNoContainer; safecall;
    function Get_VehRecSectFilt: ISectionCollection; safecall;
    function Get_EvalPercentiles: IEvaluationPercentileContainer; safecall;
    function Get_Sections: ISectionCollection; safecall;
    function Get_PedGridCellSectFilt: ISectionCollection; safecall;
    property LaneChangesVehClassFilt: IVehicleClassCollection read Get_LaneChangesVehClassFilt;
    property LaneChangesVehNoFilt: IObjectNoContainer read Get_LaneChangesVehNoFilt;
    property LaneChangesSectFilt: ISectionCollection read Get_LaneChangesSectFilt;
    property SSAMSectFilt: ISectionCollection read Get_SSAMSectFilt;
    property VehClasses: IVehicleClassCollection read Get_VehClasses;
    property PedClasses: IPedestrianClassCollection read Get_PedClasses;
    property PedRecPedClassFilt: IPedestrianClassCollection read Get_PedRecPedClassFilt;
    property PedRecAttributes: IAttributeSelectionContainer read Get_PedRecAttributes;
    property PedRecPedNoFilt: IObjectNoContainer read Get_PedRecPedNoFilt;
    property PedRecSectFilt: ISectionCollection read Get_PedRecSectFilt;
    property VehRecVehClassFilt: IVehicleClassCollection read Get_VehRecVehClassFilt;
    property VehRecAttributes: IAttributeSelectionContainer read Get_VehRecAttributes;
    property VehRecVehNoFilt: IObjectNoContainer read Get_VehRecVehNoFilt;
    property VehRecSectFilt: ISectionCollection read Get_VehRecSectFilt;
    property EvalPercentiles: IEvaluationPercentileContainer read Get_EvalPercentiles;
    property Sections: ISectionCollection read Get_Sections;
    property PedGridCellSectFilt: ISectionCollection read Get_PedGridCellSectFilt;
  end;

// *********************************************************************//
// DispIntf:  IEvaluationBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E7CD1E46-D805-4BEA-BBD0-4CB20FD81D5A}
// *********************************************************************//
  IEvaluationBaseDisp = dispinterface
    ['{E7CD1E46-D805-4BEA-BBD0-4CB20FD81D5A}']
    property LaneChangesVehClassFilt: IVehicleClassCollection readonly dispid 1610809344;
    property LaneChangesVehNoFilt: IObjectNoContainer readonly dispid 1610809345;
    property LaneChangesSectFilt: ISectionCollection readonly dispid 1610809346;
    property SSAMSectFilt: ISectionCollection readonly dispid 1610809347;
    property VehClasses: IVehicleClassCollection readonly dispid 1610809348;
    property PedClasses: IPedestrianClassCollection readonly dispid 1610809349;
    property PedRecPedClassFilt: IPedestrianClassCollection readonly dispid 1610809350;
    property PedRecAttributes: IAttributeSelectionContainer readonly dispid 1610809351;
    property PedRecPedNoFilt: IObjectNoContainer readonly dispid 1610809352;
    property PedRecSectFilt: ISectionCollection readonly dispid 1610809353;
    property VehRecVehClassFilt: IVehicleClassCollection readonly dispid 1610809354;
    property VehRecAttributes: IAttributeSelectionContainer readonly dispid 1610809355;
    property VehRecVehNoFilt: IObjectNoContainer readonly dispid 1610809356;
    property VehRecSectFilt: ISectionCollection readonly dispid 1610809357;
    property EvalPercentiles: IEvaluationPercentileContainer readonly dispid 1610809358;
    property Sections: ISectionCollection readonly dispid 1610809359;
    property PedGridCellSectFilt: ISectionCollection readonly dispid 1610809360;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IEvaluation
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F1710E61-AF58-4361-8549-5351A75B23B2}
// *********************************************************************//
  IEvaluation = interface(IEvaluationBase)
    ['{F1710E61-AF58-4361-8549-5351A75B23B2}']
    procedure SetConnectionString(const connectionString: WideString); safecall;
  end;

// *********************************************************************//
// DispIntf:  IEvaluationDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F1710E61-AF58-4361-8549-5351A75B23B2}
// *********************************************************************//
  IEvaluationDisp = dispinterface
    ['{F1710E61-AF58-4361-8549-5351A75B23B2}']
    procedure SetConnectionString(const connectionString: WideString); dispid 1610874880;
    property LaneChangesVehClassFilt: IVehicleClassCollection readonly dispid 1610809344;
    property LaneChangesVehNoFilt: IObjectNoContainer readonly dispid 1610809345;
    property LaneChangesSectFilt: ISectionCollection readonly dispid 1610809346;
    property SSAMSectFilt: ISectionCollection readonly dispid 1610809347;
    property VehClasses: IVehicleClassCollection readonly dispid 1610809348;
    property PedClasses: IPedestrianClassCollection readonly dispid 1610809349;
    property PedRecPedClassFilt: IPedestrianClassCollection readonly dispid 1610809350;
    property PedRecAttributes: IAttributeSelectionContainer readonly dispid 1610809351;
    property PedRecPedNoFilt: IObjectNoContainer readonly dispid 1610809352;
    property PedRecSectFilt: ISectionCollection readonly dispid 1610809353;
    property VehRecVehClassFilt: IVehicleClassCollection readonly dispid 1610809354;
    property VehRecAttributes: IAttributeSelectionContainer readonly dispid 1610809355;
    property VehRecVehNoFilt: IObjectNoContainer readonly dispid 1610809356;
    property VehRecSectFilt: ISectionCollection readonly dispid 1610809357;
    property EvalPercentiles: IEvaluationPercentileContainer readonly dispid 1610809358;
    property Sections: ISectionCollection readonly dispid 1610809359;
    property PedGridCellSectFilt: ISectionCollection readonly dispid 1610809360;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IObjectNoCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E652FCD7-7103-4F20-9157-A508B5B29E6B}
// *********************************************************************//
  IObjectNoCollection = interface(ICollectionBase)
    ['{E652FCD7-7103-4F20-9157-A508B5B29E6B}']
  end;

// *********************************************************************//
// DispIntf:  IObjectNoCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E652FCD7-7103-4F20-9157-A508B5B29E6B}
// *********************************************************************//
  IObjectNoCollectionDisp = dispinterface
    ['{E652FCD7-7103-4F20-9157-A508B5B29E6B}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IObjectNoContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {499EBF18-BC98-4ECE-AE7E-0D071B2F55A9}
// *********************************************************************//
  IObjectNoContainerBase = interface(IObjectNoCollection)
    ['{499EBF18-BC98-4ECE-AE7E-0D071B2F55A9}']
    function Get_ItemByKey(Key: OleVariant): IObjectNo; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    property ItemByKey[Key: OleVariant]: IObjectNo read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IObjectNoContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {499EBF18-BC98-4ECE-AE7E-0D071B2F55A9}
// *********************************************************************//
  IObjectNoContainerBaseDisp = dispinterface
    ['{499EBF18-BC98-4ECE-AE7E-0D071B2F55A9}']
    property ItemByKey[Key: OleVariant]: IObjectNo readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IObjectNoContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1E48E745-FB2B-44F8-B85E-9316777BB764}
// *********************************************************************//
  IObjectNoContainer = interface(IObjectNoContainerBase)
    ['{1E48E745-FB2B-44F8-B85E-9316777BB764}']
  end;

// *********************************************************************//
// DispIntf:  IObjectNoContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1E48E745-FB2B-44F8-B85E-9316777BB764}
// *********************************************************************//
  IObjectNoContainerDisp = dispinterface
    ['{1E48E745-FB2B-44F8-B85E-9316777BB764}']
    property ItemByKey[Key: OleVariant]: IObjectNo readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IObjectNoBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5017F0FC-B3E7-4F20-A5A4-89072D6D8FFE}
// *********************************************************************//
  IObjectNoBase = interface(IObjectBase)
    ['{5017F0FC-B3E7-4F20-A5A4-89072D6D8FFE}']
    function Get_LnChgs: ILaneChanges; safecall;
    function Get_VehRec: IVehicleRecord; safecall;
    function Get_PedRec: IPedestrianRecord; safecall;
    property LnChgs: ILaneChanges read Get_LnChgs;
    property VehRec: IVehicleRecord read Get_VehRec;
    property PedRec: IPedestrianRecord read Get_PedRec;
  end;

// *********************************************************************//
// DispIntf:  IObjectNoBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5017F0FC-B3E7-4F20-A5A4-89072D6D8FFE}
// *********************************************************************//
  IObjectNoBaseDisp = dispinterface
    ['{5017F0FC-B3E7-4F20-A5A4-89072D6D8FFE}']
    property LnChgs: ILaneChanges readonly dispid 1610809344;
    property VehRec: IVehicleRecord readonly dispid 1610809345;
    property PedRec: IPedestrianRecord readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IObjectNo
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C2DF5DC5-D9C3-44FD-8F1F-941CBEF87791}
// *********************************************************************//
  IObjectNo = interface(IObjectNoBase)
    ['{C2DF5DC5-D9C3-44FD-8F1F-941CBEF87791}']
  end;

// *********************************************************************//
// DispIntf:  IObjectNoDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C2DF5DC5-D9C3-44FD-8F1F-941CBEF87791}
// *********************************************************************//
  IObjectNoDisp = dispinterface
    ['{C2DF5DC5-D9C3-44FD-8F1F-941CBEF87791}']
    property LnChgs: ILaneChanges readonly dispid 1610809344;
    property VehRec: IVehicleRecord readonly dispid 1610809345;
    property PedRec: IPedestrianRecord readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ILaneChangesBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {38002D51-C0DA-44CC-9EE2-E703F957A833}
// *********************************************************************//
  ILaneChangesBase = interface(IObjectBase)
    ['{38002D51-C0DA-44CC-9EE2-E703F957A833}']
    function Get_VehClassFilt: IVehicleClassCollection; safecall;
    function Get_VehNoFilt: IObjectNoContainer; safecall;
    function Get_SectFilt: ISectionCollection; safecall;
    property VehClassFilt: IVehicleClassCollection read Get_VehClassFilt;
    property VehNoFilt: IObjectNoContainer read Get_VehNoFilt;
    property SectFilt: ISectionCollection read Get_SectFilt;
  end;

// *********************************************************************//
// DispIntf:  ILaneChangesBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {38002D51-C0DA-44CC-9EE2-E703F957A833}
// *********************************************************************//
  ILaneChangesBaseDisp = dispinterface
    ['{38002D51-C0DA-44CC-9EE2-E703F957A833}']
    property VehClassFilt: IVehicleClassCollection readonly dispid 1610809344;
    property VehNoFilt: IObjectNoContainer readonly dispid 1610809345;
    property SectFilt: ISectionCollection readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ILaneChanges
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6DB41FDC-AEBE-41B7-84B8-8797828B5AAA}
// *********************************************************************//
  ILaneChanges = interface(ILaneChangesBase)
    ['{6DB41FDC-AEBE-41B7-84B8-8797828B5AAA}']
  end;

// *********************************************************************//
// DispIntf:  ILaneChangesDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6DB41FDC-AEBE-41B7-84B8-8797828B5AAA}
// *********************************************************************//
  ILaneChangesDisp = dispinterface
    ['{6DB41FDC-AEBE-41B7-84B8-8797828B5AAA}']
    property VehClassFilt: IVehicleClassCollection readonly dispid 1610809344;
    property VehNoFilt: IObjectNoContainer readonly dispid 1610809345;
    property SectFilt: ISectionCollection readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehicleRecordBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2CD96BBE-D926-4E9B-B8AD-C0F94AFDB963}
// *********************************************************************//
  IVehicleRecordBase = interface(IObjectBase)
    ['{2CD96BBE-D926-4E9B-B8AD-C0F94AFDB963}']
    function Get_VehClassFilt: IVehicleClassCollection; safecall;
    function Get_Attributes: IAttributeSelectionContainer; safecall;
    function Get_VehNoFilt: IObjectNoContainer; safecall;
    function Get_SectFilt: ISectionCollection; safecall;
    property VehClassFilt: IVehicleClassCollection read Get_VehClassFilt;
    property Attributes: IAttributeSelectionContainer read Get_Attributes;
    property VehNoFilt: IObjectNoContainer read Get_VehNoFilt;
    property SectFilt: ISectionCollection read Get_SectFilt;
  end;

// *********************************************************************//
// DispIntf:  IVehicleRecordBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2CD96BBE-D926-4E9B-B8AD-C0F94AFDB963}
// *********************************************************************//
  IVehicleRecordBaseDisp = dispinterface
    ['{2CD96BBE-D926-4E9B-B8AD-C0F94AFDB963}']
    property VehClassFilt: IVehicleClassCollection readonly dispid 1610809344;
    property Attributes: IAttributeSelectionContainer readonly dispid 1610809345;
    property VehNoFilt: IObjectNoContainer readonly dispid 1610809346;
    property SectFilt: ISectionCollection readonly dispid 1610809347;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehicleRecord
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8E6E3EE8-F473-4BFE-9A50-63085A69F9A0}
// *********************************************************************//
  IVehicleRecord = interface(IVehicleRecordBase)
    ['{8E6E3EE8-F473-4BFE-9A50-63085A69F9A0}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleRecordDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8E6E3EE8-F473-4BFE-9A50-63085A69F9A0}
// *********************************************************************//
  IVehicleRecordDisp = dispinterface
    ['{8E6E3EE8-F473-4BFE-9A50-63085A69F9A0}']
    property VehClassFilt: IVehicleClassCollection readonly dispid 1610809344;
    property Attributes: IAttributeSelectionContainer readonly dispid 1610809345;
    property VehNoFilt: IObjectNoContainer readonly dispid 1610809346;
    property SectFilt: ISectionCollection readonly dispid 1610809347;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPedestrianRecordBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C51F1213-5973-4A33-83E6-14857313923D}
// *********************************************************************//
  IPedestrianRecordBase = interface(IObjectBase)
    ['{C51F1213-5973-4A33-83E6-14857313923D}']
    function Get_PedClassFilt: IPedestrianClassCollection; safecall;
    function Get_Attributes: IAttributeSelectionContainer; safecall;
    function Get_PedNoFilt: IObjectNoContainer; safecall;
    function Get_SectFilt: ISectionCollection; safecall;
    property PedClassFilt: IPedestrianClassCollection read Get_PedClassFilt;
    property Attributes: IAttributeSelectionContainer read Get_Attributes;
    property PedNoFilt: IObjectNoContainer read Get_PedNoFilt;
    property SectFilt: ISectionCollection read Get_SectFilt;
  end;

// *********************************************************************//
// DispIntf:  IPedestrianRecordBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C51F1213-5973-4A33-83E6-14857313923D}
// *********************************************************************//
  IPedestrianRecordBaseDisp = dispinterface
    ['{C51F1213-5973-4A33-83E6-14857313923D}']
    property PedClassFilt: IPedestrianClassCollection readonly dispid 1610809344;
    property Attributes: IAttributeSelectionContainer readonly dispid 1610809345;
    property PedNoFilt: IObjectNoContainer readonly dispid 1610809346;
    property SectFilt: ISectionCollection readonly dispid 1610809347;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPedestrianRecord
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0C1927C8-F497-4A98-8525-2146A626985F}
// *********************************************************************//
  IPedestrianRecord = interface(IPedestrianRecordBase)
    ['{0C1927C8-F497-4A98-8525-2146A626985F}']
  end;

// *********************************************************************//
// DispIntf:  IPedestrianRecordDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0C1927C8-F497-4A98-8525-2146A626985F}
// *********************************************************************//
  IPedestrianRecordDisp = dispinterface
    ['{0C1927C8-F497-4A98-8525-2146A626985F}']
    property PedClassFilt: IPedestrianClassCollection readonly dispid 1610809344;
    property Attributes: IAttributeSelectionContainer readonly dispid 1610809345;
    property PedNoFilt: IObjectNoContainer readonly dispid 1610809346;
    property SectFilt: ISectionCollection readonly dispid 1610809347;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IEvaluationPercentileCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {849DE23D-8DD8-4696-AD41-9EBED0DB6A10}
// *********************************************************************//
  IEvaluationPercentileCollection = interface(ICollectionBase)
    ['{849DE23D-8DD8-4696-AD41-9EBED0DB6A10}']
  end;

// *********************************************************************//
// DispIntf:  IEvaluationPercentileCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {849DE23D-8DD8-4696-AD41-9EBED0DB6A10}
// *********************************************************************//
  IEvaluationPercentileCollectionDisp = dispinterface
    ['{849DE23D-8DD8-4696-AD41-9EBED0DB6A10}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IEvaluationPercentileContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8C3D5F08-B1A1-4106-8DF6-ED6DF0D65425}
// *********************************************************************//
  IEvaluationPercentileContainerBase = interface(IEvaluationPercentileCollection)
    ['{8C3D5F08-B1A1-4106-8DF6-ED6DF0D65425}']
    function Get_ItemByKey(Key: OleVariant): IEvaluationPercentile; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddEvaluationPercentile(Key: OleVariant): IEvaluationPercentile; safecall;
    procedure RemoveEvaluationPercentile(const EvaluationPercentile: IEvaluationPercentile); safecall;
    property ItemByKey[Key: OleVariant]: IEvaluationPercentile read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IEvaluationPercentileContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8C3D5F08-B1A1-4106-8DF6-ED6DF0D65425}
// *********************************************************************//
  IEvaluationPercentileContainerBaseDisp = dispinterface
    ['{8C3D5F08-B1A1-4106-8DF6-ED6DF0D65425}']
    property ItemByKey[Key: OleVariant]: IEvaluationPercentile readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddEvaluationPercentile(Key: OleVariant): IEvaluationPercentile; dispid 1610874882;
    procedure RemoveEvaluationPercentile(const EvaluationPercentile: IEvaluationPercentile); dispid 1610874883;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IEvaluationPercentileContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D1B349BE-534A-4869-80FC-5B2AC8D1B622}
// *********************************************************************//
  IEvaluationPercentileContainer = interface(IEvaluationPercentileContainerBase)
    ['{D1B349BE-534A-4869-80FC-5B2AC8D1B622}']
  end;

// *********************************************************************//
// DispIntf:  IEvaluationPercentileContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D1B349BE-534A-4869-80FC-5B2AC8D1B622}
// *********************************************************************//
  IEvaluationPercentileContainerDisp = dispinterface
    ['{D1B349BE-534A-4869-80FC-5B2AC8D1B622}']
    property ItemByKey[Key: OleVariant]: IEvaluationPercentile readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddEvaluationPercentile(Key: OleVariant): IEvaluationPercentile; dispid 1610874882;
    procedure RemoveEvaluationPercentile(const EvaluationPercentile: IEvaluationPercentile); dispid 1610874883;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IEvaluationPercentileBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5E590E3F-04F5-48B0-A3CE-6BB9EA9A6EDC}
// *********************************************************************//
  IEvaluationPercentileBase = interface(IObjectBase)
    ['{5E590E3F-04F5-48B0-A3CE-6BB9EA9A6EDC}']
    function Get_Evaluation: IEvaluation; safecall;
    property Evaluation: IEvaluation read Get_Evaluation;
  end;

// *********************************************************************//
// DispIntf:  IEvaluationPercentileBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5E590E3F-04F5-48B0-A3CE-6BB9EA9A6EDC}
// *********************************************************************//
  IEvaluationPercentileBaseDisp = dispinterface
    ['{5E590E3F-04F5-48B0-A3CE-6BB9EA9A6EDC}']
    property Evaluation: IEvaluation readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IEvaluationPercentile
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6F75DFB6-38D6-4F22-8AC5-7AC6E1D7C387}
// *********************************************************************//
  IEvaluationPercentile = interface(IEvaluationPercentileBase)
    ['{6F75DFB6-38D6-4F22-8AC5-7AC6E1D7C387}']
  end;

// *********************************************************************//
// DispIntf:  IEvaluationPercentileDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6F75DFB6-38D6-4F22-8AC5-7AC6E1D7C387}
// *********************************************************************//
  IEvaluationPercentileDisp = dispinterface
    ['{6F75DFB6-38D6-4F22-8AC5-7AC6E1D7C387}']
    property Evaluation: IEvaluation readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IFireEventCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {33669DCE-D44E-4124-8CB3-4FCF23C528EC}
// *********************************************************************//
  IFireEventCollection = interface(ICollectionBase)
    ['{33669DCE-D44E-4124-8CB3-4FCF23C528EC}']
  end;

// *********************************************************************//
// DispIntf:  IFireEventCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {33669DCE-D44E-4124-8CB3-4FCF23C528EC}
// *********************************************************************//
  IFireEventCollectionDisp = dispinterface
    ['{33669DCE-D44E-4124-8CB3-4FCF23C528EC}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IFireEventContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {694E746F-5975-44DA-A837-36B5886392D6}
// *********************************************************************//
  IFireEventContainerBase = interface(IFireEventCollection)
    ['{694E746F-5975-44DA-A837-36B5886392D6}']
    function Get_ItemByKey(Key: OleVariant): IFireEvent; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    procedure RemoveFireEvent(const FireEvent: IFireEvent); safecall;
    property ItemByKey[Key: OleVariant]: IFireEvent read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IFireEventContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {694E746F-5975-44DA-A837-36B5886392D6}
// *********************************************************************//
  IFireEventContainerBaseDisp = dispinterface
    ['{694E746F-5975-44DA-A837-36B5886392D6}']
    property ItemByKey[Key: OleVariant]: IFireEvent readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    procedure RemoveFireEvent(const FireEvent: IFireEvent); dispid 1610874882;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IFireEventContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {78CE2844-5877-46D6-940A-0E7F6F16BAF2}
// *********************************************************************//
  IFireEventContainer = interface(IFireEventContainerBase)
    ['{78CE2844-5877-46D6-940A-0E7F6F16BAF2}']
  end;

// *********************************************************************//
// DispIntf:  IFireEventContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {78CE2844-5877-46D6-940A-0E7F6F16BAF2}
// *********************************************************************//
  IFireEventContainerDisp = dispinterface
    ['{78CE2844-5877-46D6-940A-0E7F6F16BAF2}']
    property ItemByKey[Key: OleVariant]: IFireEvent readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    procedure RemoveFireEvent(const FireEvent: IFireEvent); dispid 1610874882;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IFireEventBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {153B15D5-EC6A-4C3C-BBE1-68639609B72C}
// *********************************************************************//
  IFireEventBase = interface(IObjectBase)
    ['{153B15D5-EC6A-4C3C-BBE1-68639609B72C}']
    function Get_Level: ILevel; safecall;
    function Get_Plot3DQuantities: IPlot3DQuantityContainer; safecall;
    function Get_FDSMeshes: IFDSMeshContainer; safecall;
    property Level: ILevel read Get_Level;
    property Plot3DQuantities: IPlot3DQuantityContainer read Get_Plot3DQuantities;
    property FDSMeshes: IFDSMeshContainer read Get_FDSMeshes;
  end;

// *********************************************************************//
// DispIntf:  IFireEventBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {153B15D5-EC6A-4C3C-BBE1-68639609B72C}
// *********************************************************************//
  IFireEventBaseDisp = dispinterface
    ['{153B15D5-EC6A-4C3C-BBE1-68639609B72C}']
    property Level: ILevel readonly dispid 1610809344;
    property Plot3DQuantities: IPlot3DQuantityContainer readonly dispid 1610809345;
    property FDSMeshes: IFDSMeshContainer readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IFireEvent
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {113F3BF3-0F10-43C9-BE41-056CD1BA29CF}
// *********************************************************************//
  IFireEvent = interface(IFireEventBase)
    ['{113F3BF3-0F10-43C9-BE41-056CD1BA29CF}']
  end;

// *********************************************************************//
// DispIntf:  IFireEventDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {113F3BF3-0F10-43C9-BE41-056CD1BA29CF}
// *********************************************************************//
  IFireEventDisp = dispinterface
    ['{113F3BF3-0F10-43C9-BE41-056CD1BA29CF}']
    property Level: ILevel readonly dispid 1610809344;
    property Plot3DQuantities: IPlot3DQuantityContainer readonly dispid 1610809345;
    property FDSMeshes: IFDSMeshContainer readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPlot3DQuantityCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CC4C0BB2-1D5A-4700-A395-1B0566624F6A}
// *********************************************************************//
  IPlot3DQuantityCollection = interface(ICollectionBase)
    ['{CC4C0BB2-1D5A-4700-A395-1B0566624F6A}']
  end;

// *********************************************************************//
// DispIntf:  IPlot3DQuantityCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CC4C0BB2-1D5A-4700-A395-1B0566624F6A}
// *********************************************************************//
  IPlot3DQuantityCollectionDisp = dispinterface
    ['{CC4C0BB2-1D5A-4700-A395-1B0566624F6A}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPlot3DQuantityContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B4A1438E-736F-4CE3-AAE1-46366B8B352F}
// *********************************************************************//
  IPlot3DQuantityContainerBase = interface(IPlot3DQuantityCollection)
    ['{B4A1438E-736F-4CE3-AAE1-46366B8B352F}']
    function Get_ItemByKey(Key: OleVariant): IPlot3DQuantity; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    property ItemByKey[Key: OleVariant]: IPlot3DQuantity read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IPlot3DQuantityContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B4A1438E-736F-4CE3-AAE1-46366B8B352F}
// *********************************************************************//
  IPlot3DQuantityContainerBaseDisp = dispinterface
    ['{B4A1438E-736F-4CE3-AAE1-46366B8B352F}']
    property ItemByKey[Key: OleVariant]: IPlot3DQuantity readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPlot3DQuantityContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {21ECF1A1-FB79-4E58-A605-BACE3AB5D272}
// *********************************************************************//
  IPlot3DQuantityContainer = interface(IPlot3DQuantityContainerBase)
    ['{21ECF1A1-FB79-4E58-A605-BACE3AB5D272}']
  end;

// *********************************************************************//
// DispIntf:  IPlot3DQuantityContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {21ECF1A1-FB79-4E58-A605-BACE3AB5D272}
// *********************************************************************//
  IPlot3DQuantityContainerDisp = dispinterface
    ['{21ECF1A1-FB79-4E58-A605-BACE3AB5D272}']
    property ItemByKey[Key: OleVariant]: IPlot3DQuantity readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPlot3DQuantityBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F1515DF3-D71A-4E0D-9296-DFFCB7D2F25D}
// *********************************************************************//
  IPlot3DQuantityBase = interface(IObjectBase)
    ['{F1515DF3-D71A-4E0D-9296-DFFCB7D2F25D}']
    function Get_FireEvent: IFireEvent; safecall;
    property FireEvent: IFireEvent read Get_FireEvent;
  end;

// *********************************************************************//
// DispIntf:  IPlot3DQuantityBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F1515DF3-D71A-4E0D-9296-DFFCB7D2F25D}
// *********************************************************************//
  IPlot3DQuantityBaseDisp = dispinterface
    ['{F1515DF3-D71A-4E0D-9296-DFFCB7D2F25D}']
    property FireEvent: IFireEvent readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPlot3DQuantity
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {34D06219-CD29-4A59-975F-3DF8C004BD9A}
// *********************************************************************//
  IPlot3DQuantity = interface(IPlot3DQuantityBase)
    ['{34D06219-CD29-4A59-975F-3DF8C004BD9A}']
  end;

// *********************************************************************//
// DispIntf:  IPlot3DQuantityDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {34D06219-CD29-4A59-975F-3DF8C004BD9A}
// *********************************************************************//
  IPlot3DQuantityDisp = dispinterface
    ['{34D06219-CD29-4A59-975F-3DF8C004BD9A}']
    property FireEvent: IFireEvent readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IFDSMeshCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EA94205D-7645-4F05-81E7-3E44384A9FF7}
// *********************************************************************//
  IFDSMeshCollection = interface(ICollectionBase)
    ['{EA94205D-7645-4F05-81E7-3E44384A9FF7}']
  end;

// *********************************************************************//
// DispIntf:  IFDSMeshCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EA94205D-7645-4F05-81E7-3E44384A9FF7}
// *********************************************************************//
  IFDSMeshCollectionDisp = dispinterface
    ['{EA94205D-7645-4F05-81E7-3E44384A9FF7}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IFDSMeshContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {66B0F3CE-E06A-47EC-9EFA-CBC8C2A971FE}
// *********************************************************************//
  IFDSMeshContainerBase = interface(IFDSMeshCollection)
    ['{66B0F3CE-E06A-47EC-9EFA-CBC8C2A971FE}']
  end;

// *********************************************************************//
// DispIntf:  IFDSMeshContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {66B0F3CE-E06A-47EC-9EFA-CBC8C2A971FE}
// *********************************************************************//
  IFDSMeshContainerBaseDisp = dispinterface
    ['{66B0F3CE-E06A-47EC-9EFA-CBC8C2A971FE}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IFDSMeshContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F95108FF-1F5B-401D-8948-256559F383F6}
// *********************************************************************//
  IFDSMeshContainer = interface(IFDSMeshContainerBase)
    ['{F95108FF-1F5B-401D-8948-256559F383F6}']
  end;

// *********************************************************************//
// DispIntf:  IFDSMeshContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F95108FF-1F5B-401D-8948-256559F383F6}
// *********************************************************************//
  IFDSMeshContainerDisp = dispinterface
    ['{F95108FF-1F5B-401D-8948-256559F383F6}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IFlowBundleCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {82BB32CA-B6C8-4968-B4D0-FCF80102A5E4}
// *********************************************************************//
  IFlowBundleCollection = interface(ICollectionBase)
    ['{82BB32CA-B6C8-4968-B4D0-FCF80102A5E4}']
  end;

// *********************************************************************//
// DispIntf:  IFlowBundleCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {82BB32CA-B6C8-4968-B4D0-FCF80102A5E4}
// *********************************************************************//
  IFlowBundleCollectionDisp = dispinterface
    ['{82BB32CA-B6C8-4968-B4D0-FCF80102A5E4}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IFlowBundleContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A854533B-5F0E-4CBF-9AC0-81749EC15159}
// *********************************************************************//
  IFlowBundleContainerBase = interface(IFlowBundleCollection)
    ['{A854533B-5F0E-4CBF-9AC0-81749EC15159}']
    function Get_ItemByKey(Key: OleVariant): IFlowBundle; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddFlowBundle(Key: OleVariant; FiltCroSec: OleVariant): IFlowBundle; safecall;
    function DuplicateFlowBundle(Source: OleVariant; NewKey: OleVariant): IFlowBundle; safecall;
    procedure RemoveFlowBundle(const FlowBundle: IFlowBundle); safecall;
    property ItemByKey[Key: OleVariant]: IFlowBundle read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IFlowBundleContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A854533B-5F0E-4CBF-9AC0-81749EC15159}
// *********************************************************************//
  IFlowBundleContainerBaseDisp = dispinterface
    ['{A854533B-5F0E-4CBF-9AC0-81749EC15159}']
    property ItemByKey[Key: OleVariant]: IFlowBundle readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddFlowBundle(Key: OleVariant; FiltCroSec: OleVariant): IFlowBundle; dispid 1610874882;
    function DuplicateFlowBundle(Source: OleVariant; NewKey: OleVariant): IFlowBundle; dispid 1610874883;
    procedure RemoveFlowBundle(const FlowBundle: IFlowBundle); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IFlowBundleContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7B09A41E-8E75-46C6-9F84-4F7910C0C110}
// *********************************************************************//
  IFlowBundleContainer = interface(IFlowBundleContainerBase)
    ['{7B09A41E-8E75-46C6-9F84-4F7910C0C110}']
  end;

// *********************************************************************//
// DispIntf:  IFlowBundleContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7B09A41E-8E75-46C6-9F84-4F7910C0C110}
// *********************************************************************//
  IFlowBundleContainerDisp = dispinterface
    ['{7B09A41E-8E75-46C6-9F84-4F7910C0C110}']
    property ItemByKey[Key: OleVariant]: IFlowBundle readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddFlowBundle(Key: OleVariant; FiltCroSec: OleVariant): IFlowBundle; dispid 1610874882;
    function DuplicateFlowBundle(Source: OleVariant; NewKey: OleVariant): IFlowBundle; dispid 1610874883;
    procedure RemoveFlowBundle(const FlowBundle: IFlowBundle); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IFlowBundleBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {969A365D-AB90-4AB9-B9EC-89E06EF9F89D}
// *********************************************************************//
  IFlowBundleBase = interface(IObjectBase)
    ['{969A365D-AB90-4AB9-B9EC-89E06EF9F89D}']
    function Get_FiltCroSec: IFlowBundleLinkCrossSectionContainer; safecall;
    function Get_Paths: IPathCollection; safecall;
    function Get_VehClasses: IVehicleClassCollection; safecall;
    property FiltCroSec: IFlowBundleLinkCrossSectionContainer read Get_FiltCroSec;
    property Paths: IPathCollection read Get_Paths;
    property VehClasses: IVehicleClassCollection read Get_VehClasses;
  end;

// *********************************************************************//
// DispIntf:  IFlowBundleBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {969A365D-AB90-4AB9-B9EC-89E06EF9F89D}
// *********************************************************************//
  IFlowBundleBaseDisp = dispinterface
    ['{969A365D-AB90-4AB9-B9EC-89E06EF9F89D}']
    property FiltCroSec: IFlowBundleLinkCrossSectionContainer readonly dispid 1610809344;
    property Paths: IPathCollection readonly dispid 1610809345;
    property VehClasses: IVehicleClassCollection readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IFlowBundle
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FEF8AD7A-8A60-4C85-A465-89C80ABEF24B}
// *********************************************************************//
  IFlowBundle = interface(IFlowBundleBase)
    ['{FEF8AD7A-8A60-4C85-A465-89C80ABEF24B}']
  end;

// *********************************************************************//
// DispIntf:  IFlowBundleDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FEF8AD7A-8A60-4C85-A465-89C80ABEF24B}
// *********************************************************************//
  IFlowBundleDisp = dispinterface
    ['{FEF8AD7A-8A60-4C85-A465-89C80ABEF24B}']
    property FiltCroSec: IFlowBundleLinkCrossSectionContainer readonly dispid 1610809344;
    property Paths: IPathCollection readonly dispid 1610809345;
    property VehClasses: IVehicleClassCollection readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IFlowBundleLinkCrossSectionCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AF916324-0121-4052-8F20-482D2469AD70}
// *********************************************************************//
  IFlowBundleLinkCrossSectionCollection = interface(ICollectionBase)
    ['{AF916324-0121-4052-8F20-482D2469AD70}']
  end;

// *********************************************************************//
// DispIntf:  IFlowBundleLinkCrossSectionCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AF916324-0121-4052-8F20-482D2469AD70}
// *********************************************************************//
  IFlowBundleLinkCrossSectionCollectionDisp = dispinterface
    ['{AF916324-0121-4052-8F20-482D2469AD70}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IFlowBundleLinkCrossSectionContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4113DFA0-374E-40F0-914E-469901251AF8}
// *********************************************************************//
  IFlowBundleLinkCrossSectionContainerBase = interface(IFlowBundleLinkCrossSectionCollection)
    ['{4113DFA0-374E-40F0-914E-469901251AF8}']
    function Get_ItemByKey(Key: OleVariant): IFlowBundleLinkCrossSection; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    property ItemByKey[Key: OleVariant]: IFlowBundleLinkCrossSection read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IFlowBundleLinkCrossSectionContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4113DFA0-374E-40F0-914E-469901251AF8}
// *********************************************************************//
  IFlowBundleLinkCrossSectionContainerBaseDisp = dispinterface
    ['{4113DFA0-374E-40F0-914E-469901251AF8}']
    property ItemByKey[Key: OleVariant]: IFlowBundleLinkCrossSection readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IFlowBundleLinkCrossSectionContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7B46E802-05D9-492C-8C69-EE51BBB141AA}
// *********************************************************************//
  IFlowBundleLinkCrossSectionContainer = interface(IFlowBundleLinkCrossSectionContainerBase)
    ['{7B46E802-05D9-492C-8C69-EE51BBB141AA}']
  end;

// *********************************************************************//
// DispIntf:  IFlowBundleLinkCrossSectionContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7B46E802-05D9-492C-8C69-EE51BBB141AA}
// *********************************************************************//
  IFlowBundleLinkCrossSectionContainerDisp = dispinterface
    ['{7B46E802-05D9-492C-8C69-EE51BBB141AA}']
    property ItemByKey[Key: OleVariant]: IFlowBundleLinkCrossSection readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IFlowBundleLinkCrossSectionBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5057089B-AD38-4C85-BD34-94236C8B6A5C}
// *********************************************************************//
  IFlowBundleLinkCrossSectionBase = interface(IObjectBase)
    ['{5057089B-AD38-4C85-BD34-94236C8B6A5C}']
    function Get_FlowBundle: IFlowBundle; safecall;
    function Get_Link: ILink; safecall;
    property FlowBundle: IFlowBundle read Get_FlowBundle;
    property Link: ILink read Get_Link;
  end;

// *********************************************************************//
// DispIntf:  IFlowBundleLinkCrossSectionBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5057089B-AD38-4C85-BD34-94236C8B6A5C}
// *********************************************************************//
  IFlowBundleLinkCrossSectionBaseDisp = dispinterface
    ['{5057089B-AD38-4C85-BD34-94236C8B6A5C}']
    property FlowBundle: IFlowBundle readonly dispid 1610809344;
    property Link: ILink readonly dispid 1610809345;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IFlowBundleLinkCrossSection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AA756ED3-50E5-42BA-80A6-9029380B6230}
// *********************************************************************//
  IFlowBundleLinkCrossSection = interface(IFlowBundleLinkCrossSectionBase)
    ['{AA756ED3-50E5-42BA-80A6-9029380B6230}']
  end;

// *********************************************************************//
// DispIntf:  IFlowBundleLinkCrossSectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AA756ED3-50E5-42BA-80A6-9029380B6230}
// *********************************************************************//
  IFlowBundleLinkCrossSectionDisp = dispinterface
    ['{AA756ED3-50E5-42BA-80A6-9029380B6230}']
    property FlowBundle: IFlowBundle readonly dispid 1610809344;
    property Link: ILink readonly dispid 1610809345;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IFreeDistributionCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {58189ADE-B815-4044-8C98-99E3FFC64EE0}
// *********************************************************************//
  IFreeDistributionCollection = interface(ICollectionBase)
    ['{58189ADE-B815-4044-8C98-99E3FFC64EE0}']
  end;

// *********************************************************************//
// DispIntf:  IFreeDistributionCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {58189ADE-B815-4044-8C98-99E3FFC64EE0}
// *********************************************************************//
  IFreeDistributionCollectionDisp = dispinterface
    ['{58189ADE-B815-4044-8C98-99E3FFC64EE0}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IFreeDistributionContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2EAC71AC-EDCF-49FD-B165-77CA184ECAAF}
// *********************************************************************//
  IFreeDistributionContainerBase = interface(IFreeDistributionCollection)
    ['{2EAC71AC-EDCF-49FD-B165-77CA184ECAAF}']
    function Get_ItemByKey(Key: OleVariant): IFreeDistribution; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddFreeDistribution(Key: OleVariant; Type_: DistributionType; DistrDataPts: OleVariant): IFreeDistribution; safecall;
    function DuplicateFreeDistribution(Source: OleVariant; NewKey: OleVariant): IFreeDistribution; safecall;
    procedure RemoveFreeDistribution(const FreeDistribution: IFreeDistribution); safecall;
    property ItemByKey[Key: OleVariant]: IFreeDistribution read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IFreeDistributionContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2EAC71AC-EDCF-49FD-B165-77CA184ECAAF}
// *********************************************************************//
  IFreeDistributionContainerBaseDisp = dispinterface
    ['{2EAC71AC-EDCF-49FD-B165-77CA184ECAAF}']
    property ItemByKey[Key: OleVariant]: IFreeDistribution readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddFreeDistribution(Key: OleVariant; Type_: DistributionType; DistrDataPts: OleVariant): IFreeDistribution; dispid 1610874882;
    function DuplicateFreeDistribution(Source: OleVariant; NewKey: OleVariant): IFreeDistribution; dispid 1610874883;
    procedure RemoveFreeDistribution(const FreeDistribution: IFreeDistribution); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IFreeDistributionContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {649085D2-E8F3-4D21-8593-7C81956FFACB}
// *********************************************************************//
  IFreeDistributionContainer = interface(IFreeDistributionContainerBase)
    ['{649085D2-E8F3-4D21-8593-7C81956FFACB}']
    function AddFreeDistributionNormal(Key: OleVariant): IFreeDistribution; safecall;
    function AddFreeDistributionEmpirical(Key: OleVariant; DistrDataPts: OleVariant): IFreeDistribution; safecall;
  end;

// *********************************************************************//
// DispIntf:  IFreeDistributionContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {649085D2-E8F3-4D21-8593-7C81956FFACB}
// *********************************************************************//
  IFreeDistributionContainerDisp = dispinterface
    ['{649085D2-E8F3-4D21-8593-7C81956FFACB}']
    function AddFreeDistributionNormal(Key: OleVariant): IFreeDistribution; dispid 1610940416;
    function AddFreeDistributionEmpirical(Key: OleVariant; DistrDataPts: OleVariant): IFreeDistribution; dispid 1610940417;
    property ItemByKey[Key: OleVariant]: IFreeDistribution readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddFreeDistribution(Key: OleVariant; Type_: DistributionType; DistrDataPts: OleVariant): IFreeDistribution; dispid 1610874882;
    function DuplicateFreeDistribution(Source: OleVariant; NewKey: OleVariant): IFreeDistribution; dispid 1610874883;
    procedure RemoveFreeDistribution(const FreeDistribution: IFreeDistribution); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IInformationSign3DCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CB7922DD-5894-4112-A3F1-6A1D33628353}
// *********************************************************************//
  IInformationSign3DCollection = interface(ICollectionBase)
    ['{CB7922DD-5894-4112-A3F1-6A1D33628353}']
  end;

// *********************************************************************//
// DispIntf:  IInformationSign3DCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CB7922DD-5894-4112-A3F1-6A1D33628353}
// *********************************************************************//
  IInformationSign3DCollectionDisp = dispinterface
    ['{CB7922DD-5894-4112-A3F1-6A1D33628353}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IInformationSign3DContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {41360C4A-8C06-4C8C-9DF7-7BDA0FBC911E}
// *********************************************************************//
  IInformationSign3DContainerBase = interface(IInformationSign3DCollection)
    ['{41360C4A-8C06-4C8C-9DF7-7BDA0FBC911E}']
    function Get_ItemByKey(Key: OleVariant): IInformationSign3D; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddInformationSign3D(Key: OleVariant): IInformationSign3D; safecall;
    function DuplicateInformationSign3D(Source: OleVariant; NewKey: OleVariant): IInformationSign3D; safecall;
    procedure RemoveInformationSign3D(const InformationSign3D: IInformationSign3D); safecall;
    property ItemByKey[Key: OleVariant]: IInformationSign3D read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IInformationSign3DContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {41360C4A-8C06-4C8C-9DF7-7BDA0FBC911E}
// *********************************************************************//
  IInformationSign3DContainerBaseDisp = dispinterface
    ['{41360C4A-8C06-4C8C-9DF7-7BDA0FBC911E}']
    property ItemByKey[Key: OleVariant]: IInformationSign3D readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddInformationSign3D(Key: OleVariant): IInformationSign3D; dispid 1610874882;
    function DuplicateInformationSign3D(Source: OleVariant; NewKey: OleVariant): IInformationSign3D; dispid 1610874883;
    procedure RemoveInformationSign3D(const InformationSign3D: IInformationSign3D); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IInformationSign3DContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FCAD03D8-D7A5-4B3A-9EB1-85BE154F701F}
// *********************************************************************//
  IInformationSign3DContainer = interface(IInformationSign3DContainerBase)
    ['{FCAD03D8-D7A5-4B3A-9EB1-85BE154F701F}']
  end;

// *********************************************************************//
// DispIntf:  IInformationSign3DContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FCAD03D8-D7A5-4B3A-9EB1-85BE154F701F}
// *********************************************************************//
  IInformationSign3DContainerDisp = dispinterface
    ['{FCAD03D8-D7A5-4B3A-9EB1-85BE154F701F}']
    property ItemByKey[Key: OleVariant]: IInformationSign3D readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddInformationSign3D(Key: OleVariant): IInformationSign3D; dispid 1610874882;
    function DuplicateInformationSign3D(Source: OleVariant; NewKey: OleVariant): IInformationSign3D; dispid 1610874883;
    procedure RemoveInformationSign3D(const InformationSign3D: IInformationSign3D); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IInformationSign3DBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D3124997-1B49-4C19-A33B-DFB1F70978FA}
// *********************************************************************//
  IInformationSign3DBase = interface(IObjectBase)
    ['{D3124997-1B49-4C19-A33B-DFB1F70978FA}']
    function Get_Level: ILevel; safecall;
    function Get_Content: IInformationSign3DContentRowContainer; safecall;
    property Level: ILevel read Get_Level;
    property Content: IInformationSign3DContentRowContainer read Get_Content;
  end;

// *********************************************************************//
// DispIntf:  IInformationSign3DBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D3124997-1B49-4C19-A33B-DFB1F70978FA}
// *********************************************************************//
  IInformationSign3DBaseDisp = dispinterface
    ['{D3124997-1B49-4C19-A33B-DFB1F70978FA}']
    property Level: ILevel readonly dispid 1610809344;
    property Content: IInformationSign3DContentRowContainer readonly dispid 1610809345;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IInformationSign3D
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6FEADF2A-586E-4A88-B18E-FFEAC80A243C}
// *********************************************************************//
  IInformationSign3D = interface(IInformationSign3DBase)
    ['{6FEADF2A-586E-4A88-B18E-FFEAC80A243C}']
  end;

// *********************************************************************//
// DispIntf:  IInformationSign3DDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6FEADF2A-586E-4A88-B18E-FFEAC80A243C}
// *********************************************************************//
  IInformationSign3DDisp = dispinterface
    ['{6FEADF2A-586E-4A88-B18E-FFEAC80A243C}']
    property Level: ILevel readonly dispid 1610809344;
    property Content: IInformationSign3DContentRowContainer readonly dispid 1610809345;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IInformationSign3DContentRowCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F8AE4E33-72B8-4AF2-A8E5-727BC3DF4DCC}
// *********************************************************************//
  IInformationSign3DContentRowCollection = interface(ICollectionBase)
    ['{F8AE4E33-72B8-4AF2-A8E5-727BC3DF4DCC}']
  end;

// *********************************************************************//
// DispIntf:  IInformationSign3DContentRowCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F8AE4E33-72B8-4AF2-A8E5-727BC3DF4DCC}
// *********************************************************************//
  IInformationSign3DContentRowCollectionDisp = dispinterface
    ['{F8AE4E33-72B8-4AF2-A8E5-727BC3DF4DCC}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IInformationSign3DContentRowContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B84A2E0D-0F26-4D7E-B76D-A80620A898F1}
// *********************************************************************//
  IInformationSign3DContentRowContainerBase = interface(IInformationSign3DContentRowCollection)
    ['{B84A2E0D-0F26-4D7E-B76D-A80620A898F1}']
    function Get_ItemByKey(Key: OleVariant): IInformationSign3DContentRow; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddInformationSign3DContentRow(Key: OleVariant): IInformationSign3DContentRow; safecall;
    function DuplicateInformationSign3DContentRow(Source: OleVariant; NewKey: OleVariant): IInformationSign3DContentRow; safecall;
    procedure RemoveInformationSign3DContentRow(const InformationSign3DContentRow: IInformationSign3DContentRow); safecall;
    property ItemByKey[Key: OleVariant]: IInformationSign3DContentRow read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IInformationSign3DContentRowContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B84A2E0D-0F26-4D7E-B76D-A80620A898F1}
// *********************************************************************//
  IInformationSign3DContentRowContainerBaseDisp = dispinterface
    ['{B84A2E0D-0F26-4D7E-B76D-A80620A898F1}']
    property ItemByKey[Key: OleVariant]: IInformationSign3DContentRow readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddInformationSign3DContentRow(Key: OleVariant): IInformationSign3DContentRow; dispid 1610874882;
    function DuplicateInformationSign3DContentRow(Source: OleVariant; NewKey: OleVariant): IInformationSign3DContentRow; dispid 1610874883;
    procedure RemoveInformationSign3DContentRow(const InformationSign3DContentRow: IInformationSign3DContentRow); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IInformationSign3DContentRowContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5FFF3ABA-0C1A-4763-A97F-4447BDFB4B19}
// *********************************************************************//
  IInformationSign3DContentRowContainer = interface(IInformationSign3DContentRowContainerBase)
    ['{5FFF3ABA-0C1A-4763-A97F-4447BDFB4B19}']
  end;

// *********************************************************************//
// DispIntf:  IInformationSign3DContentRowContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5FFF3ABA-0C1A-4763-A97F-4447BDFB4B19}
// *********************************************************************//
  IInformationSign3DContentRowContainerDisp = dispinterface
    ['{5FFF3ABA-0C1A-4763-A97F-4447BDFB4B19}']
    property ItemByKey[Key: OleVariant]: IInformationSign3DContentRow readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddInformationSign3DContentRow(Key: OleVariant): IInformationSign3DContentRow; dispid 1610874882;
    function DuplicateInformationSign3DContentRow(Source: OleVariant; NewKey: OleVariant): IInformationSign3DContentRow; dispid 1610874883;
    procedure RemoveInformationSign3DContentRow(const InformationSign3DContentRow: IInformationSign3DContentRow); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IInformationSign3DContentRowBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5C1DAB5E-81D8-4663-B6B6-E3A7D4C27E2B}
// *********************************************************************//
  IInformationSign3DContentRowBase = interface(IObjectBase)
    ['{5C1DAB5E-81D8-4663-B6B6-E3A7D4C27E2B}']
    function Get_InformationSign3D: IInformationSign3D; safecall;
    property InformationSign3D: IInformationSign3D read Get_InformationSign3D;
  end;

// *********************************************************************//
// DispIntf:  IInformationSign3DContentRowBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5C1DAB5E-81D8-4663-B6B6-E3A7D4C27E2B}
// *********************************************************************//
  IInformationSign3DContentRowBaseDisp = dispinterface
    ['{5C1DAB5E-81D8-4663-B6B6-E3A7D4C27E2B}']
    property InformationSign3D: IInformationSign3D readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IInformationSign3DContentRow
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C7A211F5-EA60-4EBE-82C0-EF491F28EB91}
// *********************************************************************//
  IInformationSign3DContentRow = interface(IInformationSign3DContentRowBase)
    ['{C7A211F5-EA60-4EBE-82C0-EF491F28EB91}']
  end;

// *********************************************************************//
// DispIntf:  IInformationSign3DContentRowDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C7A211F5-EA60-4EBE-82C0-EF491F28EB91}
// *********************************************************************//
  IInformationSign3DContentRowDisp = dispinterface
    ['{C7A211F5-EA60-4EBE-82C0-EF491F28EB91}']
    property InformationSign3D: IInformationSign3D readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ILatDriftSpeedFuncCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4A55C8C9-F6BE-4051-B181-40EFE17331F2}
// *********************************************************************//
  ILatDriftSpeedFuncCollection = interface(ICollectionBase)
    ['{4A55C8C9-F6BE-4051-B181-40EFE17331F2}']
  end;

// *********************************************************************//
// DispIntf:  ILatDriftSpeedFuncCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4A55C8C9-F6BE-4051-B181-40EFE17331F2}
// *********************************************************************//
  ILatDriftSpeedFuncCollectionDisp = dispinterface
    ['{4A55C8C9-F6BE-4051-B181-40EFE17331F2}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ILatDriftSpeedFuncContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F10393F6-A4C6-4EC9-8814-E20898A5CAE3}
// *********************************************************************//
  ILatDriftSpeedFuncContainerBase = interface(ILatDriftSpeedFuncCollection)
    ['{F10393F6-A4C6-4EC9-8814-E20898A5CAE3}']
    function Get_ItemByKey(Key: OleVariant): ILatDriftSpeedFunc; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddLatDriftSpeedFunc(Key: OleVariant; LatDriftSpeedFuncDataPts: OleVariant): ILatDriftSpeedFunc; safecall;
    function DuplicateLatDriftSpeedFunc(Source: OleVariant; NewKey: OleVariant): ILatDriftSpeedFunc; safecall;
    procedure RemoveLatDriftSpeedFunc(const LatDriftSpeedFunc: ILatDriftSpeedFunc); safecall;
    property ItemByKey[Key: OleVariant]: ILatDriftSpeedFunc read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  ILatDriftSpeedFuncContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F10393F6-A4C6-4EC9-8814-E20898A5CAE3}
// *********************************************************************//
  ILatDriftSpeedFuncContainerBaseDisp = dispinterface
    ['{F10393F6-A4C6-4EC9-8814-E20898A5CAE3}']
    property ItemByKey[Key: OleVariant]: ILatDriftSpeedFunc readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddLatDriftSpeedFunc(Key: OleVariant; LatDriftSpeedFuncDataPts: OleVariant): ILatDriftSpeedFunc; dispid 1610874882;
    function DuplicateLatDriftSpeedFunc(Source: OleVariant; NewKey: OleVariant): ILatDriftSpeedFunc; dispid 1610874883;
    procedure RemoveLatDriftSpeedFunc(const LatDriftSpeedFunc: ILatDriftSpeedFunc); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ILatDriftSpeedFuncContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {012322D6-1377-4B80-91E2-05A60915BA9F}
// *********************************************************************//
  ILatDriftSpeedFuncContainer = interface(ILatDriftSpeedFuncContainerBase)
    ['{012322D6-1377-4B80-91E2-05A60915BA9F}']
  end;

// *********************************************************************//
// DispIntf:  ILatDriftSpeedFuncContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {012322D6-1377-4B80-91E2-05A60915BA9F}
// *********************************************************************//
  ILatDriftSpeedFuncContainerDisp = dispinterface
    ['{012322D6-1377-4B80-91E2-05A60915BA9F}']
    property ItemByKey[Key: OleVariant]: ILatDriftSpeedFunc readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddLatDriftSpeedFunc(Key: OleVariant; LatDriftSpeedFuncDataPts: OleVariant): ILatDriftSpeedFunc; dispid 1610874882;
    function DuplicateLatDriftSpeedFunc(Source: OleVariant; NewKey: OleVariant): ILatDriftSpeedFunc; dispid 1610874883;
    procedure RemoveLatDriftSpeedFunc(const LatDriftSpeedFunc: ILatDriftSpeedFunc); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ILevelContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7228AA07-702B-4A98-9B2F-C8123D758AC4}
// *********************************************************************//
  ILevelContainerBase = interface(ILevelCollection)
    ['{7228AA07-702B-4A98-9B2F-C8123D758AC4}']
    function Get_ItemByKey(Key: OleVariant): ILevel; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddLevel(Key: OleVariant): ILevel; safecall;
    function DuplicateLevel(Source: OleVariant; NewKey: OleVariant): ILevel; safecall;
    procedure RemoveLevel(const Level: ILevel); safecall;
    property ItemByKey[Key: OleVariant]: ILevel read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  ILevelContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7228AA07-702B-4A98-9B2F-C8123D758AC4}
// *********************************************************************//
  ILevelContainerBaseDisp = dispinterface
    ['{7228AA07-702B-4A98-9B2F-C8123D758AC4}']
    property ItemByKey[Key: OleVariant]: ILevel readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddLevel(Key: OleVariant): ILevel; dispid 1610874882;
    function DuplicateLevel(Source: OleVariant; NewKey: OleVariant): ILevel; dispid 1610874883;
    procedure RemoveLevel(const Level: ILevel); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ILevelContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {943F3D65-47A7-47A2-8E3F-32E7785F8318}
// *********************************************************************//
  ILevelContainer = interface(ILevelContainerBase)
    ['{943F3D65-47A7-47A2-8E3F-32E7785F8318}']
  end;

// *********************************************************************//
// DispIntf:  ILevelContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {943F3D65-47A7-47A2-8E3F-32E7785F8318}
// *********************************************************************//
  ILevelContainerDisp = dispinterface
    ['{943F3D65-47A7-47A2-8E3F-32E7785F8318}']
    property ItemByKey[Key: OleVariant]: ILevel readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddLevel(Key: OleVariant): ILevel; dispid 1610874882;
    function DuplicateLevel(Source: OleVariant; NewKey: OleVariant): ILevel; dispid 1610874883;
    procedure RemoveLevel(const Level: ILevel); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ILinkBehaviorTypeCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {06E3CE3D-09DC-4C2C-B95E-4750E7ED70DF}
// *********************************************************************//
  ILinkBehaviorTypeCollection = interface(ICollectionBase)
    ['{06E3CE3D-09DC-4C2C-B95E-4750E7ED70DF}']
  end;

// *********************************************************************//
// DispIntf:  ILinkBehaviorTypeCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {06E3CE3D-09DC-4C2C-B95E-4750E7ED70DF}
// *********************************************************************//
  ILinkBehaviorTypeCollectionDisp = dispinterface
    ['{06E3CE3D-09DC-4C2C-B95E-4750E7ED70DF}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ILinkBehaviorTypeContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5CB0F4CF-77CB-469A-BBDC-5CFE584CEE8A}
// *********************************************************************//
  ILinkBehaviorTypeContainerBase = interface(ILinkBehaviorTypeCollection)
    ['{5CB0F4CF-77CB-469A-BBDC-5CFE584CEE8A}']
    function Get_ItemByKey(Key: OleVariant): ILinkBehaviorType; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddLinkBehaviorType(Key: OleVariant): ILinkBehaviorType; safecall;
    function DuplicateLinkBehaviorType(Source: OleVariant; NewKey: OleVariant): ILinkBehaviorType; safecall;
    procedure RemoveLinkBehaviorType(const LinkBehaviorType: ILinkBehaviorType); safecall;
    property ItemByKey[Key: OleVariant]: ILinkBehaviorType read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  ILinkBehaviorTypeContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5CB0F4CF-77CB-469A-BBDC-5CFE584CEE8A}
// *********************************************************************//
  ILinkBehaviorTypeContainerBaseDisp = dispinterface
    ['{5CB0F4CF-77CB-469A-BBDC-5CFE584CEE8A}']
    property ItemByKey[Key: OleVariant]: ILinkBehaviorType readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddLinkBehaviorType(Key: OleVariant): ILinkBehaviorType; dispid 1610874882;
    function DuplicateLinkBehaviorType(Source: OleVariant; NewKey: OleVariant): ILinkBehaviorType; dispid 1610874883;
    procedure RemoveLinkBehaviorType(const LinkBehaviorType: ILinkBehaviorType); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ILinkBehaviorTypeContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7354AD07-CEAA-413F-932A-0230949BC4BF}
// *********************************************************************//
  ILinkBehaviorTypeContainer = interface(ILinkBehaviorTypeContainerBase)
    ['{7354AD07-CEAA-413F-932A-0230949BC4BF}']
  end;

// *********************************************************************//
// DispIntf:  ILinkBehaviorTypeContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7354AD07-CEAA-413F-932A-0230949BC4BF}
// *********************************************************************//
  ILinkBehaviorTypeContainerDisp = dispinterface
    ['{7354AD07-CEAA-413F-932A-0230949BC4BF}']
    property ItemByKey[Key: OleVariant]: ILinkBehaviorType readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddLinkBehaviorType(Key: OleVariant): ILinkBehaviorType; dispid 1610874882;
    function DuplicateLinkBehaviorType(Source: OleVariant; NewKey: OleVariant): ILinkBehaviorType; dispid 1610874883;
    procedure RemoveLinkBehaviorType(const LinkBehaviorType: ILinkBehaviorType); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ILinkContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {02F5C483-7257-4572-B27F-EBDFA4433431}
// *********************************************************************//
  ILinkContainerBase = interface(ILinkCollection)
    ['{02F5C483-7257-4572-B27F-EBDFA4433431}']
    function Get_ItemByKey(Key: OleVariant): ILink; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function DuplicateLink(Source: OleVariant; NewKey: OleVariant): ILink; safecall;
    procedure RemoveLink(const Link: ILink); safecall;
    property ItemByKey[Key: OleVariant]: ILink read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  ILinkContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {02F5C483-7257-4572-B27F-EBDFA4433431}
// *********************************************************************//
  ILinkContainerBaseDisp = dispinterface
    ['{02F5C483-7257-4572-B27F-EBDFA4433431}']
    property ItemByKey[Key: OleVariant]: ILink readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function DuplicateLink(Source: OleVariant; NewKey: OleVariant): ILink; dispid 1610874882;
    procedure RemoveLink(const Link: ILink); dispid 1610874883;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ILinkContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3B07E811-EBB6-4E53-86CD-279F0F380AAC}
// *********************************************************************//
  ILinkContainer = interface(ILinkContainerBase)
    ['{3B07E811-EBB6-4E53-86CD-279F0F380AAC}']
    function AddLink(Key: OleVariant; const WktLinestring: WideString; LaneWidths: OleVariant): ILink; safecall;
    function AddConnector(Key: OleVariant; const FromLane: ILane; FromPos: Double; 
                          const ToLane: ILane; ToPos: Double; NumberOfLanes: SYSINT; 
                          const WktLinestring: WideString): ILink; safecall;
    function GenerateOppositeDirection(const Link: ILink; NumberOfLanes: SYSINT): ILink; safecall;
  end;

// *********************************************************************//
// DispIntf:  ILinkContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3B07E811-EBB6-4E53-86CD-279F0F380AAC}
// *********************************************************************//
  ILinkContainerDisp = dispinterface
    ['{3B07E811-EBB6-4E53-86CD-279F0F380AAC}']
    function AddLink(Key: OleVariant; const WktLinestring: WideString; LaneWidths: OleVariant): ILink; dispid 1610940416;
    function AddConnector(Key: OleVariant; const FromLane: ILane; FromPos: Double; 
                          const ToLane: ILane; ToPos: Double; NumberOfLanes: SYSINT; 
                          const WktLinestring: WideString): ILink; dispid 1610940417;
    function GenerateOppositeDirection(const Link: ILink; NumberOfLanes: SYSINT): ILink; dispid 1610940418;
    property ItemByKey[Key: OleVariant]: ILink readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function DuplicateLink(Source: OleVariant; NewKey: OleVariant): ILink; dispid 1610874882;
    procedure RemoveLink(const Link: ILink); dispid 1610874883;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ILocationDistributionCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4AB70787-83F9-4252-AEA9-7B7CFD4A1D76}
// *********************************************************************//
  ILocationDistributionCollection = interface(ICollectionBase)
    ['{4AB70787-83F9-4252-AEA9-7B7CFD4A1D76}']
  end;

// *********************************************************************//
// DispIntf:  ILocationDistributionCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4AB70787-83F9-4252-AEA9-7B7CFD4A1D76}
// *********************************************************************//
  ILocationDistributionCollectionDisp = dispinterface
    ['{4AB70787-83F9-4252-AEA9-7B7CFD4A1D76}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ILocationDistributionContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D79F6E54-65DB-4115-A7FB-2942AE7E87AC}
// *********************************************************************//
  ILocationDistributionContainerBase = interface(ILocationDistributionCollection)
    ['{D79F6E54-65DB-4115-A7FB-2942AE7E87AC}']
    function Get_ItemByKey(Key: OleVariant): ILocationDistribution; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddLocationDistribution(Key: OleVariant; DistrDataPts: OleVariant): ILocationDistribution; safecall;
    function DuplicateLocationDistribution(Source: OleVariant; NewKey: OleVariant): ILocationDistribution; safecall;
    procedure RemoveLocationDistribution(const LocationDistribution: ILocationDistribution); safecall;
    property ItemByKey[Key: OleVariant]: ILocationDistribution read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  ILocationDistributionContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D79F6E54-65DB-4115-A7FB-2942AE7E87AC}
// *********************************************************************//
  ILocationDistributionContainerBaseDisp = dispinterface
    ['{D79F6E54-65DB-4115-A7FB-2942AE7E87AC}']
    property ItemByKey[Key: OleVariant]: ILocationDistribution readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddLocationDistribution(Key: OleVariant; DistrDataPts: OleVariant): ILocationDistribution; dispid 1610874882;
    function DuplicateLocationDistribution(Source: OleVariant; NewKey: OleVariant): ILocationDistribution; dispid 1610874883;
    procedure RemoveLocationDistribution(const LocationDistribution: ILocationDistribution); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ILocationDistributionContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0B1782B0-7EC3-4674-A7A1-D9648A896DA3}
// *********************************************************************//
  ILocationDistributionContainer = interface(ILocationDistributionContainerBase)
    ['{0B1782B0-7EC3-4674-A7A1-D9648A896DA3}']
  end;

// *********************************************************************//
// DispIntf:  ILocationDistributionContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0B1782B0-7EC3-4674-A7A1-D9648A896DA3}
// *********************************************************************//
  ILocationDistributionContainerDisp = dispinterface
    ['{0B1782B0-7EC3-4674-A7A1-D9648A896DA3}']
    property ItemByKey[Key: OleVariant]: ILocationDistribution readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddLocationDistribution(Key: OleVariant; DistrDataPts: OleVariant): ILocationDistribution; dispid 1610874882;
    function DuplicateLocationDistribution(Source: OleVariant; NewKey: OleVariant): ILocationDistribution; dispid 1610874883;
    procedure RemoveLocationDistribution(const LocationDistribution: ILocationDistribution); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IManagedLanesFacilityCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3EB24A07-25AA-448B-B6FD-7D39AB1473FB}
// *********************************************************************//
  IManagedLanesFacilityCollection = interface(ICollectionBase)
    ['{3EB24A07-25AA-448B-B6FD-7D39AB1473FB}']
  end;

// *********************************************************************//
// DispIntf:  IManagedLanesFacilityCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3EB24A07-25AA-448B-B6FD-7D39AB1473FB}
// *********************************************************************//
  IManagedLanesFacilityCollectionDisp = dispinterface
    ['{3EB24A07-25AA-448B-B6FD-7D39AB1473FB}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IManagedLanesFacilityContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3A98CF40-A1A9-4666-9D69-A9E8ECEFC92C}
// *********************************************************************//
  IManagedLanesFacilityContainerBase = interface(IManagedLanesFacilityCollection)
    ['{3A98CF40-A1A9-4666-9D69-A9E8ECEFC92C}']
    function Get_ItemByKey(Key: OleVariant): IManagedLanesFacility; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddManagedLanesFacility(Key: OleVariant): IManagedLanesFacility; safecall;
    function DuplicateManagedLanesFacility(Source: OleVariant; NewKey: OleVariant): IManagedLanesFacility; safecall;
    procedure RemoveManagedLanesFacility(const ManagedLanesFacility: IManagedLanesFacility); safecall;
    property ItemByKey[Key: OleVariant]: IManagedLanesFacility read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IManagedLanesFacilityContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3A98CF40-A1A9-4666-9D69-A9E8ECEFC92C}
// *********************************************************************//
  IManagedLanesFacilityContainerBaseDisp = dispinterface
    ['{3A98CF40-A1A9-4666-9D69-A9E8ECEFC92C}']
    property ItemByKey[Key: OleVariant]: IManagedLanesFacility readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddManagedLanesFacility(Key: OleVariant): IManagedLanesFacility; dispid 1610874882;
    function DuplicateManagedLanesFacility(Source: OleVariant; NewKey: OleVariant): IManagedLanesFacility; dispid 1610874883;
    procedure RemoveManagedLanesFacility(const ManagedLanesFacility: IManagedLanesFacility); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IManagedLanesFacilityContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C94675E8-FDA9-423C-BA77-F51FFEB8E3E0}
// *********************************************************************//
  IManagedLanesFacilityContainer = interface(IManagedLanesFacilityContainerBase)
    ['{C94675E8-FDA9-423C-BA77-F51FFEB8E3E0}']
  end;

// *********************************************************************//
// DispIntf:  IManagedLanesFacilityContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C94675E8-FDA9-423C-BA77-F51FFEB8E3E0}
// *********************************************************************//
  IManagedLanesFacilityContainerDisp = dispinterface
    ['{C94675E8-FDA9-423C-BA77-F51FFEB8E3E0}']
    property ItemByKey[Key: OleVariant]: IManagedLanesFacility readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddManagedLanesFacility(Key: OleVariant): IManagedLanesFacility; dispid 1610874882;
    function DuplicateManagedLanesFacility(Source: OleVariant; NewKey: OleVariant): IManagedLanesFacility; dispid 1610874883;
    procedure RemoveManagedLanesFacility(const ManagedLanesFacility: IManagedLanesFacility); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IManagedLanesFacilityBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B91040A1-38E4-4F4D-958B-4F960CE3D3E1}
// *********************************************************************//
  IManagedLanesFacilityBase = interface(IObjectBase)
    ['{B91040A1-38E4-4F4D-958B-4F960CE3D3E1}']
    function Get_VehClassDecMods: IVehClassDecisionModelContainer; safecall;
    function Get_TimeIntPricMod: ITimeIntervalPricingModelContainer; safecall;
    function Get_VehRoutDecsMngLns: IVehicleRoutingDecisionManagedLanesCollection; safecall;
    property VehClassDecMods: IVehClassDecisionModelContainer read Get_VehClassDecMods;
    property TimeIntPricMod: ITimeIntervalPricingModelContainer read Get_TimeIntPricMod;
    property VehRoutDecsMngLns: IVehicleRoutingDecisionManagedLanesCollection read Get_VehRoutDecsMngLns;
  end;

// *********************************************************************//
// DispIntf:  IManagedLanesFacilityBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B91040A1-38E4-4F4D-958B-4F960CE3D3E1}
// *********************************************************************//
  IManagedLanesFacilityBaseDisp = dispinterface
    ['{B91040A1-38E4-4F4D-958B-4F960CE3D3E1}']
    property VehClassDecMods: IVehClassDecisionModelContainer readonly dispid 1610809344;
    property TimeIntPricMod: ITimeIntervalPricingModelContainer readonly dispid 1610809345;
    property VehRoutDecsMngLns: IVehicleRoutingDecisionManagedLanesCollection readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IManagedLanesFacility
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4E192720-5E75-4F1D-B1CB-E72B1839415B}
// *********************************************************************//
  IManagedLanesFacility = interface(IManagedLanesFacilityBase)
    ['{4E192720-5E75-4F1D-B1CB-E72B1839415B}']
  end;

// *********************************************************************//
// DispIntf:  IManagedLanesFacilityDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4E192720-5E75-4F1D-B1CB-E72B1839415B}
// *********************************************************************//
  IManagedLanesFacilityDisp = dispinterface
    ['{4E192720-5E75-4F1D-B1CB-E72B1839415B}']
    property VehClassDecMods: IVehClassDecisionModelContainer readonly dispid 1610809344;
    property TimeIntPricMod: ITimeIntervalPricingModelContainer readonly dispid 1610809345;
    property VehRoutDecsMngLns: IVehicleRoutingDecisionManagedLanesCollection readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehClassDecisionModelCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {86040EA7-768D-4103-A3A6-26E0D861801E}
// *********************************************************************//
  IVehClassDecisionModelCollection = interface(ICollectionBase)
    ['{86040EA7-768D-4103-A3A6-26E0D861801E}']
  end;

// *********************************************************************//
// DispIntf:  IVehClassDecisionModelCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {86040EA7-768D-4103-A3A6-26E0D861801E}
// *********************************************************************//
  IVehClassDecisionModelCollectionDisp = dispinterface
    ['{86040EA7-768D-4103-A3A6-26E0D861801E}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehClassDecisionModelContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5A11813E-2307-4FDD-90FF-8E9DD239F348}
// *********************************************************************//
  IVehClassDecisionModelContainerBase = interface(IVehClassDecisionModelCollection)
    ['{5A11813E-2307-4FDD-90FF-8E9DD239F348}']
  end;

// *********************************************************************//
// DispIntf:  IVehClassDecisionModelContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5A11813E-2307-4FDD-90FF-8E9DD239F348}
// *********************************************************************//
  IVehClassDecisionModelContainerBaseDisp = dispinterface
    ['{5A11813E-2307-4FDD-90FF-8E9DD239F348}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehClassDecisionModelContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6615EBE8-6771-4F66-9605-8BD092FB7F4C}
// *********************************************************************//
  IVehClassDecisionModelContainer = interface(IVehClassDecisionModelContainerBase)
    ['{6615EBE8-6771-4F66-9605-8BD092FB7F4C}']
  end;

// *********************************************************************//
// DispIntf:  IVehClassDecisionModelContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6615EBE8-6771-4F66-9605-8BD092FB7F4C}
// *********************************************************************//
  IVehClassDecisionModelContainerDisp = dispinterface
    ['{6615EBE8-6771-4F66-9605-8BD092FB7F4C}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ITimeIntervalPricingModelCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {64E7E963-48AE-4BB5-80D9-DA63FA3002C6}
// *********************************************************************//
  ITimeIntervalPricingModelCollection = interface(ICollectionBase)
    ['{64E7E963-48AE-4BB5-80D9-DA63FA3002C6}']
  end;

// *********************************************************************//
// DispIntf:  ITimeIntervalPricingModelCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {64E7E963-48AE-4BB5-80D9-DA63FA3002C6}
// *********************************************************************//
  ITimeIntervalPricingModelCollectionDisp = dispinterface
    ['{64E7E963-48AE-4BB5-80D9-DA63FA3002C6}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ITimeIntervalPricingModelContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A6C6793D-12B5-4420-B33D-A650F5767B13}
// *********************************************************************//
  ITimeIntervalPricingModelContainerBase = interface(ITimeIntervalPricingModelCollection)
    ['{A6C6793D-12B5-4420-B33D-A650F5767B13}']
  end;

// *********************************************************************//
// DispIntf:  ITimeIntervalPricingModelContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A6C6793D-12B5-4420-B33D-A650F5767B13}
// *********************************************************************//
  ITimeIntervalPricingModelContainerBaseDisp = dispinterface
    ['{A6C6793D-12B5-4420-B33D-A650F5767B13}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ITimeIntervalPricingModelContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {725CDA13-FEF1-4C58-BA04-7D6C92C4FFC9}
// *********************************************************************//
  ITimeIntervalPricingModelContainer = interface(ITimeIntervalPricingModelContainerBase)
    ['{725CDA13-FEF1-4C58-BA04-7D6C92C4FFC9}']
  end;

// *********************************************************************//
// DispIntf:  ITimeIntervalPricingModelContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {725CDA13-FEF1-4C58-BA04-7D6C92C4FFC9}
// *********************************************************************//
  ITimeIntervalPricingModelContainerDisp = dispinterface
    ['{725CDA13-FEF1-4C58-BA04-7D6C92C4FFC9}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IMatrixCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1595481A-F118-4A03-BC10-557F190F4383}
// *********************************************************************//
  IMatrixCollection = interface(ICollectionBase)
    ['{1595481A-F118-4A03-BC10-557F190F4383}']
  end;

// *********************************************************************//
// DispIntf:  IMatrixCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1595481A-F118-4A03-BC10-557F190F4383}
// *********************************************************************//
  IMatrixCollectionDisp = dispinterface
    ['{1595481A-F118-4A03-BC10-557F190F4383}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IMatrixContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C3481C4B-44CC-4316-AB4E-BDEDC06BDDAB}
// *********************************************************************//
  IMatrixContainerBase = interface(IMatrixCollection)
    ['{C3481C4B-44CC-4316-AB4E-BDEDC06BDDAB}']
    function Get_ItemByKey(Key: OleVariant): IMatrix; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddMatrix(Key: OleVariant): IMatrix; safecall;
    function DuplicateMatrix(Source: OleVariant; NewKey: OleVariant): IMatrix; safecall;
    procedure RemoveMatrix(const Matrix: IMatrix); safecall;
    property ItemByKey[Key: OleVariant]: IMatrix read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IMatrixContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C3481C4B-44CC-4316-AB4E-BDEDC06BDDAB}
// *********************************************************************//
  IMatrixContainerBaseDisp = dispinterface
    ['{C3481C4B-44CC-4316-AB4E-BDEDC06BDDAB}']
    property ItemByKey[Key: OleVariant]: IMatrix readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddMatrix(Key: OleVariant): IMatrix; dispid 1610874882;
    function DuplicateMatrix(Source: OleVariant; NewKey: OleVariant): IMatrix; dispid 1610874883;
    procedure RemoveMatrix(const Matrix: IMatrix); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IMatrixContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9FA89C77-221F-49C5-91E5-621ED03E66A2}
// *********************************************************************//
  IMatrixContainer = interface(IMatrixContainerBase)
    ['{9FA89C77-221F-49C5-91E5-621ED03E66A2}']
  end;

// *********************************************************************//
// DispIntf:  IMatrixContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9FA89C77-221F-49C5-91E5-621ED03E66A2}
// *********************************************************************//
  IMatrixContainerDisp = dispinterface
    ['{9FA89C77-221F-49C5-91E5-621ED03E66A2}']
    property ItemByKey[Key: OleVariant]: IMatrix readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddMatrix(Key: OleVariant): IMatrix; dispid 1610874882;
    function DuplicateMatrix(Source: OleVariant; NewKey: OleVariant): IMatrix; dispid 1610874883;
    procedure RemoveMatrix(const Matrix: IMatrix); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IMaxAccelerationFunctionCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CF0DC54F-1241-40AD-A504-1648B426FFDA}
// *********************************************************************//
  IMaxAccelerationFunctionCollection = interface(ICollectionBase)
    ['{CF0DC54F-1241-40AD-A504-1648B426FFDA}']
  end;

// *********************************************************************//
// DispIntf:  IMaxAccelerationFunctionCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CF0DC54F-1241-40AD-A504-1648B426FFDA}
// *********************************************************************//
  IMaxAccelerationFunctionCollectionDisp = dispinterface
    ['{CF0DC54F-1241-40AD-A504-1648B426FFDA}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IMaxAccelerationFunctionContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CAA12DEB-844D-4413-808A-CB420E111D84}
// *********************************************************************//
  IMaxAccelerationFunctionContainerBase = interface(IMaxAccelerationFunctionCollection)
    ['{CAA12DEB-844D-4413-808A-CB420E111D84}']
    function Get_ItemByKey(Key: OleVariant): IMaxAccelerationFunction; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddMaxAccelerationFunction(Key: OleVariant; AccelFuncDataPts: OleVariant): IMaxAccelerationFunction; safecall;
    function DuplicateMaxAccelerationFunction(Source: OleVariant; NewKey: OleVariant): IMaxAccelerationFunction; safecall;
    procedure RemoveMaxAccelerationFunction(const MaxAccelerationFunction: IMaxAccelerationFunction); safecall;
    property ItemByKey[Key: OleVariant]: IMaxAccelerationFunction read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IMaxAccelerationFunctionContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CAA12DEB-844D-4413-808A-CB420E111D84}
// *********************************************************************//
  IMaxAccelerationFunctionContainerBaseDisp = dispinterface
    ['{CAA12DEB-844D-4413-808A-CB420E111D84}']
    property ItemByKey[Key: OleVariant]: IMaxAccelerationFunction readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddMaxAccelerationFunction(Key: OleVariant; AccelFuncDataPts: OleVariant): IMaxAccelerationFunction; dispid 1610874882;
    function DuplicateMaxAccelerationFunction(Source: OleVariant; NewKey: OleVariant): IMaxAccelerationFunction; dispid 1610874883;
    procedure RemoveMaxAccelerationFunction(const MaxAccelerationFunction: IMaxAccelerationFunction); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IMaxAccelerationFunctionContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0A5D1728-385C-4179-88EB-E8B2683854C6}
// *********************************************************************//
  IMaxAccelerationFunctionContainer = interface(IMaxAccelerationFunctionContainerBase)
    ['{0A5D1728-385C-4179-88EB-E8B2683854C6}']
  end;

// *********************************************************************//
// DispIntf:  IMaxAccelerationFunctionContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0A5D1728-385C-4179-88EB-E8B2683854C6}
// *********************************************************************//
  IMaxAccelerationFunctionContainerDisp = dispinterface
    ['{0A5D1728-385C-4179-88EB-E8B2683854C6}']
    property ItemByKey[Key: OleVariant]: IMaxAccelerationFunction readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddMaxAccelerationFunction(Key: OleVariant; AccelFuncDataPts: OleVariant): IMaxAccelerationFunction; dispid 1610874882;
    function DuplicateMaxAccelerationFunction(Source: OleVariant; NewKey: OleVariant): IMaxAccelerationFunction; dispid 1610874883;
    procedure RemoveMaxAccelerationFunction(const MaxAccelerationFunction: IMaxAccelerationFunction); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IMaxDecelerationFunctionCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {59E711BB-4FA1-4C0B-AE3F-12C12152FA37}
// *********************************************************************//
  IMaxDecelerationFunctionCollection = interface(ICollectionBase)
    ['{59E711BB-4FA1-4C0B-AE3F-12C12152FA37}']
  end;

// *********************************************************************//
// DispIntf:  IMaxDecelerationFunctionCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {59E711BB-4FA1-4C0B-AE3F-12C12152FA37}
// *********************************************************************//
  IMaxDecelerationFunctionCollectionDisp = dispinterface
    ['{59E711BB-4FA1-4C0B-AE3F-12C12152FA37}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IMaxDecelerationFunctionContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AC2B58DB-6E04-43D8-B5D1-8B9FD127DF61}
// *********************************************************************//
  IMaxDecelerationFunctionContainerBase = interface(IMaxDecelerationFunctionCollection)
    ['{AC2B58DB-6E04-43D8-B5D1-8B9FD127DF61}']
    function Get_ItemByKey(Key: OleVariant): IMaxDecelerationFunction; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddMaxDecelerationFunction(Key: OleVariant; DecelFuncDataPts: OleVariant): IMaxDecelerationFunction; safecall;
    function DuplicateMaxDecelerationFunction(Source: OleVariant; NewKey: OleVariant): IMaxDecelerationFunction; safecall;
    procedure RemoveMaxDecelerationFunction(const MaxDecelerationFunction: IMaxDecelerationFunction); safecall;
    property ItemByKey[Key: OleVariant]: IMaxDecelerationFunction read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IMaxDecelerationFunctionContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AC2B58DB-6E04-43D8-B5D1-8B9FD127DF61}
// *********************************************************************//
  IMaxDecelerationFunctionContainerBaseDisp = dispinterface
    ['{AC2B58DB-6E04-43D8-B5D1-8B9FD127DF61}']
    property ItemByKey[Key: OleVariant]: IMaxDecelerationFunction readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddMaxDecelerationFunction(Key: OleVariant; DecelFuncDataPts: OleVariant): IMaxDecelerationFunction; dispid 1610874882;
    function DuplicateMaxDecelerationFunction(Source: OleVariant; NewKey: OleVariant): IMaxDecelerationFunction; dispid 1610874883;
    procedure RemoveMaxDecelerationFunction(const MaxDecelerationFunction: IMaxDecelerationFunction); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IMaxDecelerationFunctionContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7A64BA15-A3CC-4836-9D69-D7F5E4F2FEC9}
// *********************************************************************//
  IMaxDecelerationFunctionContainer = interface(IMaxDecelerationFunctionContainerBase)
    ['{7A64BA15-A3CC-4836-9D69-D7F5E4F2FEC9}']
  end;

// *********************************************************************//
// DispIntf:  IMaxDecelerationFunctionContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7A64BA15-A3CC-4836-9D69-D7F5E4F2FEC9}
// *********************************************************************//
  IMaxDecelerationFunctionContainerDisp = dispinterface
    ['{7A64BA15-A3CC-4836-9D69-D7F5E4F2FEC9}']
    property ItemByKey[Key: OleVariant]: IMaxDecelerationFunction readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddMaxDecelerationFunction(Key: OleVariant; DecelFuncDataPts: OleVariant): IMaxDecelerationFunction; dispid 1610874882;
    function DuplicateMaxDecelerationFunction(Source: OleVariant; NewKey: OleVariant): IMaxDecelerationFunction; dispid 1610874883;
    procedure RemoveMaxDecelerationFunction(const MaxDecelerationFunction: IMaxDecelerationFunction); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IMesoEdgeContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A473D16D-53D4-4101-B149-C1D4D7A51EE2}
// *********************************************************************//
  IMesoEdgeContainerBase = interface(IMesoEdgeCollection)
    ['{A473D16D-53D4-4101-B149-C1D4D7A51EE2}']
    function Get_ItemByKey(Key: OleVariant): IMesoEdge; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    property ItemByKey[Key: OleVariant]: IMesoEdge read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IMesoEdgeContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A473D16D-53D4-4101-B149-C1D4D7A51EE2}
// *********************************************************************//
  IMesoEdgeContainerBaseDisp = dispinterface
    ['{A473D16D-53D4-4101-B149-C1D4D7A51EE2}']
    property ItemByKey[Key: OleVariant]: IMesoEdge readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IMesoEdgeContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6C6E7B16-E114-439B-ACC7-5DDE98702D0A}
// *********************************************************************//
  IMesoEdgeContainer = interface(IMesoEdgeContainerBase)
    ['{6C6E7B16-E114-439B-ACC7-5DDE98702D0A}']
  end;

// *********************************************************************//
// DispIntf:  IMesoEdgeContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6C6E7B16-E114-439B-ACC7-5DDE98702D0A}
// *********************************************************************//
  IMesoEdgeContainerDisp = dispinterface
    ['{6C6E7B16-E114-439B-ACC7-5DDE98702D0A}']
    property ItemByKey[Key: OleVariant]: IMesoEdge readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IMesoEdgeBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A66F8E11-3102-42CD-84FC-FF3E20739353}
// *********************************************************************//
  IMesoEdgeBase = interface(IObjectBase)
    ['{A66F8E11-3102-42CD-84FC-FF3E20739353}']
    function Get_FromMesoNode: IMesoNode; safecall;
    function Get_ToMesoNode: IMesoNode; safecall;
    function Get_InMesoEdges: IMesoEdgeCollection; safecall;
    function Get_OutMesoEdges: IMesoEdgeCollection; safecall;
    function Get_LinkSeq: ILinkCollection; safecall;
    function Get_MesoLanes: IMesoLaneCollection; safecall;
    function Get_LinkBehavType: ILinkBehaviorType; safecall;
    function Get_SigHeads: ISignalHeadCollection; safecall;
    function Get_RedSpeedAreas: IReducedSpeedAreaCollection; safecall;
    function Get_DesSpeedDecs: IDesSpeedDecisionCollection; safecall;
    property FromMesoNode: IMesoNode read Get_FromMesoNode;
    property ToMesoNode: IMesoNode read Get_ToMesoNode;
    property InMesoEdges: IMesoEdgeCollection read Get_InMesoEdges;
    property OutMesoEdges: IMesoEdgeCollection read Get_OutMesoEdges;
    property LinkSeq: ILinkCollection read Get_LinkSeq;
    property MesoLanes: IMesoLaneCollection read Get_MesoLanes;
    property LinkBehavType: ILinkBehaviorType read Get_LinkBehavType;
    property SigHeads: ISignalHeadCollection read Get_SigHeads;
    property RedSpeedAreas: IReducedSpeedAreaCollection read Get_RedSpeedAreas;
    property DesSpeedDecs: IDesSpeedDecisionCollection read Get_DesSpeedDecs;
  end;

// *********************************************************************//
// DispIntf:  IMesoEdgeBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A66F8E11-3102-42CD-84FC-FF3E20739353}
// *********************************************************************//
  IMesoEdgeBaseDisp = dispinterface
    ['{A66F8E11-3102-42CD-84FC-FF3E20739353}']
    property FromMesoNode: IMesoNode readonly dispid 1610809344;
    property ToMesoNode: IMesoNode readonly dispid 1610809345;
    property InMesoEdges: IMesoEdgeCollection readonly dispid 1610809346;
    property OutMesoEdges: IMesoEdgeCollection readonly dispid 1610809347;
    property LinkSeq: ILinkCollection readonly dispid 1610809348;
    property MesoLanes: IMesoLaneCollection readonly dispid 1610809349;
    property LinkBehavType: ILinkBehaviorType readonly dispid 1610809350;
    property SigHeads: ISignalHeadCollection readonly dispid 1610809351;
    property RedSpeedAreas: IReducedSpeedAreaCollection readonly dispid 1610809352;
    property DesSpeedDecs: IDesSpeedDecisionCollection readonly dispid 1610809353;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IMesoEdge
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9F99D68F-1EA6-4B06-9F7A-272EB13AA7FD}
// *********************************************************************//
  IMesoEdge = interface(IMesoEdgeBase)
    ['{9F99D68F-1EA6-4B06-9F7A-272EB13AA7FD}']
  end;

// *********************************************************************//
// DispIntf:  IMesoEdgeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9F99D68F-1EA6-4B06-9F7A-272EB13AA7FD}
// *********************************************************************//
  IMesoEdgeDisp = dispinterface
    ['{9F99D68F-1EA6-4B06-9F7A-272EB13AA7FD}']
    property FromMesoNode: IMesoNode readonly dispid 1610809344;
    property ToMesoNode: IMesoNode readonly dispid 1610809345;
    property InMesoEdges: IMesoEdgeCollection readonly dispid 1610809346;
    property OutMesoEdges: IMesoEdgeCollection readonly dispid 1610809347;
    property LinkSeq: ILinkCollection readonly dispid 1610809348;
    property MesoLanes: IMesoLaneCollection readonly dispid 1610809349;
    property LinkBehavType: ILinkBehaviorType readonly dispid 1610809350;
    property SigHeads: ISignalHeadCollection readonly dispid 1610809351;
    property RedSpeedAreas: IReducedSpeedAreaCollection readonly dispid 1610809352;
    property DesSpeedDecs: IDesSpeedDecisionCollection readonly dispid 1610809353;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IMesoLaneCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C508FD75-5497-40A4-9312-73DAC09F442A}
// *********************************************************************//
  IMesoLaneCollection = interface(ICollectionBase)
    ['{C508FD75-5497-40A4-9312-73DAC09F442A}']
  end;

// *********************************************************************//
// DispIntf:  IMesoLaneCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C508FD75-5497-40A4-9312-73DAC09F442A}
// *********************************************************************//
  IMesoLaneCollectionDisp = dispinterface
    ['{C508FD75-5497-40A4-9312-73DAC09F442A}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IMesoLaneContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4E482494-4B5E-440F-BA67-70A4C9FE2275}
// *********************************************************************//
  IMesoLaneContainerBase = interface(IMesoLaneCollection)
    ['{4E482494-4B5E-440F-BA67-70A4C9FE2275}']
    function Get_ItemByKey(Key: OleVariant): IMesoLane; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    property ItemByKey[Key: OleVariant]: IMesoLane read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IMesoLaneContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4E482494-4B5E-440F-BA67-70A4C9FE2275}
// *********************************************************************//
  IMesoLaneContainerBaseDisp = dispinterface
    ['{4E482494-4B5E-440F-BA67-70A4C9FE2275}']
    property ItemByKey[Key: OleVariant]: IMesoLane readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IMesoLaneContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {756F4B0E-80AC-48F5-840A-764D204ADFA2}
// *********************************************************************//
  IMesoLaneContainer = interface(IMesoLaneContainerBase)
    ['{756F4B0E-80AC-48F5-840A-764D204ADFA2}']
  end;

// *********************************************************************//
// DispIntf:  IMesoLaneContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {756F4B0E-80AC-48F5-840A-764D204ADFA2}
// *********************************************************************//
  IMesoLaneContainerDisp = dispinterface
    ['{756F4B0E-80AC-48F5-840A-764D204ADFA2}']
    property ItemByKey[Key: OleVariant]: IMesoLane readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IMesoLaneBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C8DAC55E-4D78-444B-9F3C-2FB7A4667B2C}
// *********************************************************************//
  IMesoLaneBase = interface(IObjectBase)
    ['{C8DAC55E-4D78-444B-9F3C-2FB7A4667B2C}']
    function Get_MesoEdge: IMesoEdge; safecall;
    function Get_SigHeads: ISignalHeadCollection; safecall;
    function Get_BlockedVehClasses: IVehicleClassCollection; safecall;
    function Get_RedSpeedAreas: IReducedSpeedAreaCollection; safecall;
    function Get_DesSpeedDecs: IDesSpeedDecisionCollection; safecall;
    property MesoEdge: IMesoEdge read Get_MesoEdge;
    property SigHeads: ISignalHeadCollection read Get_SigHeads;
    property BlockedVehClasses: IVehicleClassCollection read Get_BlockedVehClasses;
    property RedSpeedAreas: IReducedSpeedAreaCollection read Get_RedSpeedAreas;
    property DesSpeedDecs: IDesSpeedDecisionCollection read Get_DesSpeedDecs;
  end;

// *********************************************************************//
// DispIntf:  IMesoLaneBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C8DAC55E-4D78-444B-9F3C-2FB7A4667B2C}
// *********************************************************************//
  IMesoLaneBaseDisp = dispinterface
    ['{C8DAC55E-4D78-444B-9F3C-2FB7A4667B2C}']
    property MesoEdge: IMesoEdge readonly dispid 1610809344;
    property SigHeads: ISignalHeadCollection readonly dispid 1610809345;
    property BlockedVehClasses: IVehicleClassCollection readonly dispid 1610809346;
    property RedSpeedAreas: IReducedSpeedAreaCollection readonly dispid 1610809347;
    property DesSpeedDecs: IDesSpeedDecisionCollection readonly dispid 1610809348;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IMesoLane
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {983FC239-5944-431E-9D0B-118A3B7FFAED}
// *********************************************************************//
  IMesoLane = interface(IMesoLaneBase)
    ['{983FC239-5944-431E-9D0B-118A3B7FFAED}']
  end;

// *********************************************************************//
// DispIntf:  IMesoLaneDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {983FC239-5944-431E-9D0B-118A3B7FFAED}
// *********************************************************************//
  IMesoLaneDisp = dispinterface
    ['{983FC239-5944-431E-9D0B-118A3B7FFAED}']
    property MesoEdge: IMesoEdge readonly dispid 1610809344;
    property SigHeads: ISignalHeadCollection readonly dispid 1610809345;
    property BlockedVehClasses: IVehicleClassCollection readonly dispid 1610809346;
    property RedSpeedAreas: IReducedSpeedAreaCollection readonly dispid 1610809347;
    property DesSpeedDecs: IDesSpeedDecisionCollection readonly dispid 1610809348;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IMesoNodeCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BEE5572A-C8B2-4CE5-B85D-1BB85E15AF5D}
// *********************************************************************//
  IMesoNodeCollection = interface(ICollectionBase)
    ['{BEE5572A-C8B2-4CE5-B85D-1BB85E15AF5D}']
  end;

// *********************************************************************//
// DispIntf:  IMesoNodeCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BEE5572A-C8B2-4CE5-B85D-1BB85E15AF5D}
// *********************************************************************//
  IMesoNodeCollectionDisp = dispinterface
    ['{BEE5572A-C8B2-4CE5-B85D-1BB85E15AF5D}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IMesoNodeContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {51067B1E-30E2-4950-BF0E-70459E563D68}
// *********************************************************************//
  IMesoNodeContainerBase = interface(IMesoNodeCollection)
    ['{51067B1E-30E2-4950-BF0E-70459E563D68}']
    function Get_ItemByKey(Key: OleVariant): IMesoNode; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    property ItemByKey[Key: OleVariant]: IMesoNode read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IMesoNodeContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {51067B1E-30E2-4950-BF0E-70459E563D68}
// *********************************************************************//
  IMesoNodeContainerBaseDisp = dispinterface
    ['{51067B1E-30E2-4950-BF0E-70459E563D68}']
    property ItemByKey[Key: OleVariant]: IMesoNode readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IMesoNodeContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7A6594E6-67D0-4753-8B2C-7D9332307949}
// *********************************************************************//
  IMesoNodeContainer = interface(IMesoNodeContainerBase)
    ['{7A6594E6-67D0-4753-8B2C-7D9332307949}']
  end;

// *********************************************************************//
// DispIntf:  IMesoNodeContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7A6594E6-67D0-4753-8B2C-7D9332307949}
// *********************************************************************//
  IMesoNodeContainerDisp = dispinterface
    ['{7A6594E6-67D0-4753-8B2C-7D9332307949}']
    property ItemByKey[Key: OleVariant]: IMesoNode readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IModel2D3DDistributionCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DEC79607-1EFF-48BE-8DAF-8F96648F9D88}
// *********************************************************************//
  IModel2D3DDistributionCollection = interface(ICollectionBase)
    ['{DEC79607-1EFF-48BE-8DAF-8F96648F9D88}']
  end;

// *********************************************************************//
// DispIntf:  IModel2D3DDistributionCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DEC79607-1EFF-48BE-8DAF-8F96648F9D88}
// *********************************************************************//
  IModel2D3DDistributionCollectionDisp = dispinterface
    ['{DEC79607-1EFF-48BE-8DAF-8F96648F9D88}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IModel2D3DDistributionContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F48364A8-8101-4004-A91A-79832B050029}
// *********************************************************************//
  IModel2D3DDistributionContainerBase = interface(IModel2D3DDistributionCollection)
    ['{F48364A8-8101-4004-A91A-79832B050029}']
    function Get_ItemByKey(Key: OleVariant): IModel2D3DDistribution; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddModel2D3DDistribution(Key: OleVariant; Model2D3DDistrEl: OleVariant): IModel2D3DDistribution; safecall;
    function DuplicateModel2D3DDistribution(Source: OleVariant; NewKey: OleVariant): IModel2D3DDistribution; safecall;
    procedure RemoveModel2D3DDistribution(const Model2D3DDistribution: IModel2D3DDistribution); safecall;
    property ItemByKey[Key: OleVariant]: IModel2D3DDistribution read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IModel2D3DDistributionContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F48364A8-8101-4004-A91A-79832B050029}
// *********************************************************************//
  IModel2D3DDistributionContainerBaseDisp = dispinterface
    ['{F48364A8-8101-4004-A91A-79832B050029}']
    property ItemByKey[Key: OleVariant]: IModel2D3DDistribution readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddModel2D3DDistribution(Key: OleVariant; Model2D3DDistrEl: OleVariant): IModel2D3DDistribution; dispid 1610874882;
    function DuplicateModel2D3DDistribution(Source: OleVariant; NewKey: OleVariant): IModel2D3DDistribution; dispid 1610874883;
    procedure RemoveModel2D3DDistribution(const Model2D3DDistribution: IModel2D3DDistribution); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IModel2D3DDistributionContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {90FBECEE-B6ED-4F87-9286-1A6C8D15FCFF}
// *********************************************************************//
  IModel2D3DDistributionContainer = interface(IModel2D3DDistributionContainerBase)
    ['{90FBECEE-B6ED-4F87-9286-1A6C8D15FCFF}']
  end;

// *********************************************************************//
// DispIntf:  IModel2D3DDistributionContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {90FBECEE-B6ED-4F87-9286-1A6C8D15FCFF}
// *********************************************************************//
  IModel2D3DDistributionContainerDisp = dispinterface
    ['{90FBECEE-B6ED-4F87-9286-1A6C8D15FCFF}']
    property ItemByKey[Key: OleVariant]: IModel2D3DDistribution readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddModel2D3DDistribution(Key: OleVariant; Model2D3DDistrEl: OleVariant): IModel2D3DDistribution; dispid 1610874882;
    function DuplicateModel2D3DDistribution(Source: OleVariant; NewKey: OleVariant): IModel2D3DDistribution; dispid 1610874883;
    procedure RemoveModel2D3DDistribution(const Model2D3DDistribution: IModel2D3DDistribution); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IModel2D3DCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C0B44963-7A5A-4356-9F86-A56D1694D3A6}
// *********************************************************************//
  IModel2D3DCollection = interface(ICollectionBase)
    ['{C0B44963-7A5A-4356-9F86-A56D1694D3A6}']
  end;

// *********************************************************************//
// DispIntf:  IModel2D3DCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C0B44963-7A5A-4356-9F86-A56D1694D3A6}
// *********************************************************************//
  IModel2D3DCollectionDisp = dispinterface
    ['{C0B44963-7A5A-4356-9F86-A56D1694D3A6}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IModel2D3DContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F576882D-D417-4594-9CA9-797FEB827D2E}
// *********************************************************************//
  IModel2D3DContainerBase = interface(IModel2D3DCollection)
    ['{F576882D-D417-4594-9CA9-797FEB827D2E}']
    function Get_ItemByKey(Key: OleVariant): IModel2D3D; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddModel2D3D(Key: OleVariant; Model2D3DSegs: OleVariant): IModel2D3D; safecall;
    function DuplicateModel2D3D(Source: OleVariant; NewKey: OleVariant): IModel2D3D; safecall;
    procedure RemoveModel2D3D(const Model2D3D: IModel2D3D); safecall;
    property ItemByKey[Key: OleVariant]: IModel2D3D read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IModel2D3DContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F576882D-D417-4594-9CA9-797FEB827D2E}
// *********************************************************************//
  IModel2D3DContainerBaseDisp = dispinterface
    ['{F576882D-D417-4594-9CA9-797FEB827D2E}']
    property ItemByKey[Key: OleVariant]: IModel2D3D readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddModel2D3D(Key: OleVariant; Model2D3DSegs: OleVariant): IModel2D3D; dispid 1610874882;
    function DuplicateModel2D3D(Source: OleVariant; NewKey: OleVariant): IModel2D3D; dispid 1610874883;
    procedure RemoveModel2D3D(const Model2D3D: IModel2D3D); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IModel2D3DContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {49EB3947-1E60-4839-A945-93DFFF75BA27}
// *********************************************************************//
  IModel2D3DContainer = interface(IModel2D3DContainerBase)
    ['{49EB3947-1E60-4839-A945-93DFFF75BA27}']
  end;

// *********************************************************************//
// DispIntf:  IModel2D3DContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {49EB3947-1E60-4839-A945-93DFFF75BA27}
// *********************************************************************//
  IModel2D3DContainerDisp = dispinterface
    ['{49EB3947-1E60-4839-A945-93DFFF75BA27}']
    property ItemByKey[Key: OleVariant]: IModel2D3D readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddModel2D3D(Key: OleVariant; Model2D3DSegs: OleVariant): IModel2D3D; dispid 1610874882;
    function DuplicateModel2D3D(Source: OleVariant; NewKey: OleVariant): IModel2D3D; dispid 1610874883;
    procedure RemoveModel2D3D(const Model2D3D: IModel2D3D); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: INetParaBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5F03796E-1F2D-4DE5-B149-B44226666345}
// *********************************************************************//
  INetParaBase = interface(IObjectBase)
    ['{5F03796E-1F2D-4DE5-B149-B44226666345}']
    function Get_DrivSimVehType: IVehicleType; safecall;
    function Get_DisplTypCabWall: IDisplayType; safecall;
    function Get_AreaBehavTypInCab: IAreaBehaviorType; safecall;
    function Get_AreaBehavTypAlight: IAreaBehaviorType; safecall;
    function Get_DisplTypCabFloor: IDisplayType; safecall;
    function Get_DisplTypCabCeil: IDisplayType; safecall;
    function Get_DisplTypShaft: IDisplayType; safecall;
    function Get_DisplTypDoor: IDisplayType; safecall;
    function Get_DirChgDurDist: ITimeDistribution; safecall;
    function Get_DrivSimPedType: IPedestrianType; safecall;
    property DrivSimVehType: IVehicleType read Get_DrivSimVehType;
    property DisplTypCabWall: IDisplayType read Get_DisplTypCabWall;
    property AreaBehavTypInCab: IAreaBehaviorType read Get_AreaBehavTypInCab;
    property AreaBehavTypAlight: IAreaBehaviorType read Get_AreaBehavTypAlight;
    property DisplTypCabFloor: IDisplayType read Get_DisplTypCabFloor;
    property DisplTypCabCeil: IDisplayType read Get_DisplTypCabCeil;
    property DisplTypShaft: IDisplayType read Get_DisplTypShaft;
    property DisplTypDoor: IDisplayType read Get_DisplTypDoor;
    property DirChgDurDist: ITimeDistribution read Get_DirChgDurDist;
    property DrivSimPedType: IPedestrianType read Get_DrivSimPedType;
  end;

// *********************************************************************//
// DispIntf:  INetParaBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5F03796E-1F2D-4DE5-B149-B44226666345}
// *********************************************************************//
  INetParaBaseDisp = dispinterface
    ['{5F03796E-1F2D-4DE5-B149-B44226666345}']
    property DrivSimVehType: IVehicleType readonly dispid 1610809344;
    property DisplTypCabWall: IDisplayType readonly dispid 1610809345;
    property AreaBehavTypInCab: IAreaBehaviorType readonly dispid 1610809346;
    property AreaBehavTypAlight: IAreaBehaviorType readonly dispid 1610809347;
    property DisplTypCabFloor: IDisplayType readonly dispid 1610809348;
    property DisplTypCabCeil: IDisplayType readonly dispid 1610809349;
    property DisplTypShaft: IDisplayType readonly dispid 1610809350;
    property DisplTypDoor: IDisplayType readonly dispid 1610809351;
    property DirChgDurDist: ITimeDistribution readonly dispid 1610809352;
    property DrivSimPedType: IPedestrianType readonly dispid 1610809353;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: INetPara
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9CF0542C-8D7C-4175-BE04-FDB14C3E75C0}
// *********************************************************************//
  INetPara = interface(INetParaBase)
    ['{9CF0542C-8D7C-4175-BE04-FDB14C3E75C0}']
  end;

// *********************************************************************//
// DispIntf:  INetParaDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9CF0542C-8D7C-4175-BE04-FDB14C3E75C0}
// *********************************************************************//
  INetParaDisp = dispinterface
    ['{9CF0542C-8D7C-4175-BE04-FDB14C3E75C0}']
    property DrivSimVehType: IVehicleType readonly dispid 1610809344;
    property DisplTypCabWall: IDisplayType readonly dispid 1610809345;
    property AreaBehavTypInCab: IAreaBehaviorType readonly dispid 1610809346;
    property AreaBehavTypAlight: IAreaBehaviorType readonly dispid 1610809347;
    property DisplTypCabFloor: IDisplayType readonly dispid 1610809348;
    property DisplTypCabCeil: IDisplayType readonly dispid 1610809349;
    property DisplTypShaft: IDisplayType readonly dispid 1610809350;
    property DisplTypDoor: IDisplayType readonly dispid 1610809351;
    property DirChgDurDist: ITimeDistribution readonly dispid 1610809352;
    property DrivSimPedType: IPedestrianType readonly dispid 1610809353;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPedestrianTypeBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {492860E5-7838-426C-ACF4-0B497550AE70}
// *********************************************************************//
  IPedestrianTypeBase = interface(IObjectBase)
    ['{492860E5-7838-426C-ACF4-0B497550AE70}']
    function Get_Model2D3DDistr: IModel2D3DDistribution; safecall;
    function Get_HairColorDistr: IColorDistribution; safecall;
    function Get_ShirtColorDistr: IColorDistribution; safecall;
    function Get_ShoesColorDistr: IColorDistribution; safecall;
    function Get_TrousersColorDistr: IColorDistribution; safecall;
    function Get_WalkBehav: IWalkingBehavior; safecall;
    function Get_PedClasses: IPedestrianClassCollection; safecall;
    property Model2D3DDistr: IModel2D3DDistribution read Get_Model2D3DDistr;
    property HairColorDistr: IColorDistribution read Get_HairColorDistr;
    property ShirtColorDistr: IColorDistribution read Get_ShirtColorDistr;
    property ShoesColorDistr: IColorDistribution read Get_ShoesColorDistr;
    property TrousersColorDistr: IColorDistribution read Get_TrousersColorDistr;
    property WalkBehav: IWalkingBehavior read Get_WalkBehav;
    property PedClasses: IPedestrianClassCollection read Get_PedClasses;
  end;

// *********************************************************************//
// DispIntf:  IPedestrianTypeBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {492860E5-7838-426C-ACF4-0B497550AE70}
// *********************************************************************//
  IPedestrianTypeBaseDisp = dispinterface
    ['{492860E5-7838-426C-ACF4-0B497550AE70}']
    property Model2D3DDistr: IModel2D3DDistribution readonly dispid 1610809344;
    property HairColorDistr: IColorDistribution readonly dispid 1610809345;
    property ShirtColorDistr: IColorDistribution readonly dispid 1610809346;
    property ShoesColorDistr: IColorDistribution readonly dispid 1610809347;
    property TrousersColorDistr: IColorDistribution readonly dispid 1610809348;
    property WalkBehav: IWalkingBehavior readonly dispid 1610809349;
    property PedClasses: IPedestrianClassCollection readonly dispid 1610809350;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPedestrianType
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F499AB19-F19C-4042-B82D-415C75EC59C3}
// *********************************************************************//
  IPedestrianType = interface(IPedestrianTypeBase)
    ['{F499AB19-F19C-4042-B82D-415C75EC59C3}']
  end;

// *********************************************************************//
// DispIntf:  IPedestrianTypeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F499AB19-F19C-4042-B82D-415C75EC59C3}
// *********************************************************************//
  IPedestrianTypeDisp = dispinterface
    ['{F499AB19-F19C-4042-B82D-415C75EC59C3}']
    property Model2D3DDistr: IModel2D3DDistribution readonly dispid 1610809344;
    property HairColorDistr: IColorDistribution readonly dispid 1610809345;
    property ShirtColorDistr: IColorDistribution readonly dispid 1610809346;
    property ShoesColorDistr: IColorDistribution readonly dispid 1610809347;
    property TrousersColorDistr: IColorDistribution readonly dispid 1610809348;
    property WalkBehav: IWalkingBehavior readonly dispid 1610809349;
    property PedClasses: IPedestrianClassCollection readonly dispid 1610809350;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: INodeContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8DF7C19E-15C6-439F-B567-1CE7C7295464}
// *********************************************************************//
  INodeContainerBase = interface(INodeCollection)
    ['{8DF7C19E-15C6-439F-B567-1CE7C7295464}']
    function Get_ItemByKey(Key: OleVariant): INode; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddNode(Key: OleVariant; const WktPolygon: WideString): INode; safecall;
    function DuplicateNode(Source: OleVariant; NewKey: OleVariant): INode; safecall;
    procedure RemoveNode(const Node: INode); safecall;
    property ItemByKey[Key: OleVariant]: INode read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  INodeContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8DF7C19E-15C6-439F-B567-1CE7C7295464}
// *********************************************************************//
  INodeContainerBaseDisp = dispinterface
    ['{8DF7C19E-15C6-439F-B567-1CE7C7295464}']
    property ItemByKey[Key: OleVariant]: INode readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddNode(Key: OleVariant; const WktPolygon: WideString): INode; dispid 1610874882;
    function DuplicateNode(Source: OleVariant; NewKey: OleVariant): INode; dispid 1610874883;
    procedure RemoveNode(const Node: INode); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: INodeContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F0E4F17E-F623-4DCE-A66C-0FC2FBE576BF}
// *********************************************************************//
  INodeContainer = interface(INodeContainerBase)
    ['{F0E4F17E-F623-4DCE-A66C-0FC2FBE576BF}']
  end;

// *********************************************************************//
// DispIntf:  INodeContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F0E4F17E-F623-4DCE-A66C-0FC2FBE576BF}
// *********************************************************************//
  INodeContainerDisp = dispinterface
    ['{F0E4F17E-F623-4DCE-A66C-0FC2FBE576BF}']
    property ItemByKey[Key: OleVariant]: INode readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddNode(Key: OleVariant; const WktPolygon: WideString): INode; dispid 1610874882;
    function DuplicateNode(Source: OleVariant; NewKey: OleVariant): INode; dispid 1610874883;
    procedure RemoveNode(const Node: INode); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IObstacleCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1A1AB988-6138-4D46-B469-CD33C030B1BF}
// *********************************************************************//
  IObstacleCollection = interface(ICollectionBase)
    ['{1A1AB988-6138-4D46-B469-CD33C030B1BF}']
  end;

// *********************************************************************//
// DispIntf:  IObstacleCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1A1AB988-6138-4D46-B469-CD33C030B1BF}
// *********************************************************************//
  IObstacleCollectionDisp = dispinterface
    ['{1A1AB988-6138-4D46-B469-CD33C030B1BF}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IObstacleContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0CBB4F15-B1CA-418E-914C-3626D7A81843}
// *********************************************************************//
  IObstacleContainerBase = interface(IObstacleCollection)
    ['{0CBB4F15-B1CA-418E-914C-3626D7A81843}']
    function Get_ItemByKey(Key: OleVariant): IObstacle; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddObstacle(Key: OleVariant; const WktPolygon: WideString): IObstacle; safecall;
    function DuplicateObstacle(Source: OleVariant; NewKey: OleVariant): IObstacle; safecall;
    procedure RemoveObstacle(const Obstacle: IObstacle); safecall;
    property ItemByKey[Key: OleVariant]: IObstacle read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IObstacleContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0CBB4F15-B1CA-418E-914C-3626D7A81843}
// *********************************************************************//
  IObstacleContainerBaseDisp = dispinterface
    ['{0CBB4F15-B1CA-418E-914C-3626D7A81843}']
    property ItemByKey[Key: OleVariant]: IObstacle readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddObstacle(Key: OleVariant; const WktPolygon: WideString): IObstacle; dispid 1610874882;
    function DuplicateObstacle(Source: OleVariant; NewKey: OleVariant): IObstacle; dispid 1610874883;
    procedure RemoveObstacle(const Obstacle: IObstacle); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IObstacleContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FCB3C286-E6B4-45E9-AA89-F3559BA6B6C9}
// *********************************************************************//
  IObstacleContainer = interface(IObstacleContainerBase)
    ['{FCB3C286-E6B4-45E9-AA89-F3559BA6B6C9}']
  end;

// *********************************************************************//
// DispIntf:  IObstacleContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FCB3C286-E6B4-45E9-AA89-F3559BA6B6C9}
// *********************************************************************//
  IObstacleContainerDisp = dispinterface
    ['{FCB3C286-E6B4-45E9-AA89-F3559BA6B6C9}']
    property ItemByKey[Key: OleVariant]: IObstacle readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddObstacle(Key: OleVariant; const WktPolygon: WideString): IObstacle; dispid 1610874882;
    function DuplicateObstacle(Source: OleVariant; NewKey: OleVariant): IObstacle; dispid 1610874883;
    procedure RemoveObstacle(const Obstacle: IObstacle); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IObstacleBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {73385E85-5621-4A95-8F30-B132CEBE6844}
// *********************************************************************//
  IObstacleBase = interface(IObjectBase)
    ['{73385E85-5621-4A95-8F30-B132CEBE6844}']
    function Get_Points: IPointContainer; safecall;
    function Get_DisplayType: IDisplayType; safecall;
    function Get_Level: ILevel; safecall;
    property Points: IPointContainer read Get_Points;
    property DisplayType: IDisplayType read Get_DisplayType;
    property Level: ILevel read Get_Level;
  end;

// *********************************************************************//
// DispIntf:  IObstacleBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {73385E85-5621-4A95-8F30-B132CEBE6844}
// *********************************************************************//
  IObstacleBaseDisp = dispinterface
    ['{73385E85-5621-4A95-8F30-B132CEBE6844}']
    property Points: IPointContainer readonly dispid 1610809344;
    property DisplayType: IDisplayType readonly dispid 1610809345;
    property Level: ILevel readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IObstacle
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {706E2D6A-3499-4644-9195-F6CBFDE4D284}
// *********************************************************************//
  IObstacle = interface(IObstacleBase)
    ['{706E2D6A-3499-4644-9195-F6CBFDE4D284}']
  end;

// *********************************************************************//
// DispIntf:  IObstacleDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {706E2D6A-3499-4644-9195-F6CBFDE4D284}
// *********************************************************************//
  IObstacleDisp = dispinterface
    ['{706E2D6A-3499-4644-9195-F6CBFDE4D284}']
    property Points: IPointContainer readonly dispid 1610809344;
    property DisplayType: IDisplayType readonly dispid 1610809345;
    property Level: ILevel readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IOccupancyDistributionCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {445F6FD6-71C3-40A5-9AFD-6C9A29B00F3A}
// *********************************************************************//
  IOccupancyDistributionCollection = interface(ICollectionBase)
    ['{445F6FD6-71C3-40A5-9AFD-6C9A29B00F3A}']
  end;

// *********************************************************************//
// DispIntf:  IOccupancyDistributionCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {445F6FD6-71C3-40A5-9AFD-6C9A29B00F3A}
// *********************************************************************//
  IOccupancyDistributionCollectionDisp = dispinterface
    ['{445F6FD6-71C3-40A5-9AFD-6C9A29B00F3A}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IOccupancyDistributionContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {76FC5EC9-C887-43CA-B360-90D64090A6AA}
// *********************************************************************//
  IOccupancyDistributionContainerBase = interface(IOccupancyDistributionCollection)
    ['{76FC5EC9-C887-43CA-B360-90D64090A6AA}']
    function Get_ItemByKey(Key: OleVariant): IOccupancyDistribution; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddOccupancyDistribution(Key: OleVariant; Type_: DistributionType; 
                                      DistrDataPts: OleVariant): IOccupancyDistribution; safecall;
    function DuplicateOccupancyDistribution(Source: OleVariant; NewKey: OleVariant): IOccupancyDistribution; safecall;
    procedure RemoveOccupancyDistribution(const OccupancyDistribution: IOccupancyDistribution); safecall;
    property ItemByKey[Key: OleVariant]: IOccupancyDistribution read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IOccupancyDistributionContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {76FC5EC9-C887-43CA-B360-90D64090A6AA}
// *********************************************************************//
  IOccupancyDistributionContainerBaseDisp = dispinterface
    ['{76FC5EC9-C887-43CA-B360-90D64090A6AA}']
    property ItemByKey[Key: OleVariant]: IOccupancyDistribution readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddOccupancyDistribution(Key: OleVariant; Type_: DistributionType; 
                                      DistrDataPts: OleVariant): IOccupancyDistribution; dispid 1610874882;
    function DuplicateOccupancyDistribution(Source: OleVariant; NewKey: OleVariant): IOccupancyDistribution; dispid 1610874883;
    procedure RemoveOccupancyDistribution(const OccupancyDistribution: IOccupancyDistribution); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IOccupancyDistributionContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F9566143-DD5C-498E-A0F3-BFE658002658}
// *********************************************************************//
  IOccupancyDistributionContainer = interface(IOccupancyDistributionContainerBase)
    ['{F9566143-DD5C-498E-A0F3-BFE658002658}']
    function AddOccupancyDistributionNormal(Key: OleVariant): IOccupancyDistribution; safecall;
    function AddOccupancyDistributionEmpirical(Key: OleVariant; DistrDataPts: OleVariant): IOccupancyDistribution; safecall;
  end;

// *********************************************************************//
// DispIntf:  IOccupancyDistributionContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F9566143-DD5C-498E-A0F3-BFE658002658}
// *********************************************************************//
  IOccupancyDistributionContainerDisp = dispinterface
    ['{F9566143-DD5C-498E-A0F3-BFE658002658}']
    function AddOccupancyDistributionNormal(Key: OleVariant): IOccupancyDistribution; dispid 1610940416;
    function AddOccupancyDistributionEmpirical(Key: OleVariant; DistrDataPts: OleVariant): IOccupancyDistribution; dispid 1610940417;
    property ItemByKey[Key: OleVariant]: IOccupancyDistribution readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddOccupancyDistribution(Key: OleVariant; Type_: DistributionType; 
                                      DistrDataPts: OleVariant): IOccupancyDistribution; dispid 1610874882;
    function DuplicateOccupancyDistribution(Source: OleVariant; NewKey: OleVariant): IOccupancyDistribution; dispid 1610874883;
    procedure RemoveOccupancyDistribution(const OccupancyDistribution: IOccupancyDistribution); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPTLineContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {47A603C2-CA7F-4E08-A907-81B36301BF57}
// *********************************************************************//
  IPTLineContainerBase = interface(IPTLineCollection)
    ['{47A603C2-CA7F-4E08-A907-81B36301BF57}']
    function Get_ItemByKey(Key: OleVariant): IPTLine; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddPTLine(Key: OleVariant; const EntryLink: ILink; const DestLink: ILink; 
                       DestPos: Double): IPTLine; safecall;
    function DuplicatePTLine(Source: OleVariant; NewKey: OleVariant): IPTLine; safecall;
    procedure RemovePTLine(const PTLine: IPTLine); safecall;
    property ItemByKey[Key: OleVariant]: IPTLine read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IPTLineContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {47A603C2-CA7F-4E08-A907-81B36301BF57}
// *********************************************************************//
  IPTLineContainerBaseDisp = dispinterface
    ['{47A603C2-CA7F-4E08-A907-81B36301BF57}']
    property ItemByKey[Key: OleVariant]: IPTLine readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddPTLine(Key: OleVariant; const EntryLink: ILink; const DestLink: ILink; 
                       DestPos: Double): IPTLine; dispid 1610874882;
    function DuplicatePTLine(Source: OleVariant; NewKey: OleVariant): IPTLine; dispid 1610874883;
    procedure RemovePTLine(const PTLine: IPTLine); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPTLineContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {77083250-C835-4471-8269-DE818316B0FF}
// *********************************************************************//
  IPTLineContainer = interface(IPTLineContainerBase)
    ['{77083250-C835-4471-8269-DE818316B0FF}']
  end;

// *********************************************************************//
// DispIntf:  IPTLineContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {77083250-C835-4471-8269-DE818316B0FF}
// *********************************************************************//
  IPTLineContainerDisp = dispinterface
    ['{77083250-C835-4471-8269-DE818316B0FF}']
    property ItemByKey[Key: OleVariant]: IPTLine readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddPTLine(Key: OleVariant; const EntryLink: ILink; const DestLink: ILink; 
                       DestPos: Double): IPTLine; dispid 1610874882;
    function DuplicatePTLine(Source: OleVariant; NewKey: OleVariant): IPTLine; dispid 1610874883;
    procedure RemovePTLine(const PTLine: IPTLine); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPTLineBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D2A668EA-276A-4FDE-ABC3-409FDE6E7205}
// *********************************************************************//
  IPTLineBase = interface(IObjectBase)
    ['{D2A668EA-276A-4FDE-ABC3-409FDE6E7205}']
    function Get_EntryLink: ILink; safecall;
    function Get_VehType: IVehicleType; safecall;
    function Get_DesSpeedDistr: IDesSpeedDistribution; safecall;
    function Get_DepTimes: IDepartureTimeContainer; safecall;
    function Get_LineStops: IPTLineStopContainer; safecall;
    function Get_EntryTmDistr: ITimeDistribution; safecall;
    function Get_DestLink: ILink; safecall;
    function Get_LinkSeq: ILinkCollection; safecall;
    property EntryLink: ILink read Get_EntryLink;
    property VehType: IVehicleType read Get_VehType;
    property DesSpeedDistr: IDesSpeedDistribution read Get_DesSpeedDistr;
    property DepTimes: IDepartureTimeContainer read Get_DepTimes;
    property LineStops: IPTLineStopContainer read Get_LineStops;
    property EntryTmDistr: ITimeDistribution read Get_EntryTmDistr;
    property DestLink: ILink read Get_DestLink;
    property LinkSeq: ILinkCollection read Get_LinkSeq;
  end;

// *********************************************************************//
// DispIntf:  IPTLineBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D2A668EA-276A-4FDE-ABC3-409FDE6E7205}
// *********************************************************************//
  IPTLineBaseDisp = dispinterface
    ['{D2A668EA-276A-4FDE-ABC3-409FDE6E7205}']
    property EntryLink: ILink readonly dispid 1610809344;
    property VehType: IVehicleType readonly dispid 1610809345;
    property DesSpeedDistr: IDesSpeedDistribution readonly dispid 1610809346;
    property DepTimes: IDepartureTimeContainer readonly dispid 1610809347;
    property LineStops: IPTLineStopContainer readonly dispid 1610809348;
    property EntryTmDistr: ITimeDistribution readonly dispid 1610809349;
    property DestLink: ILink readonly dispid 1610809350;
    property LinkSeq: ILinkCollection readonly dispid 1610809351;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPTLine
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {93B723CB-BFE3-43F2-8231-C50A015C6848}
// *********************************************************************//
  IPTLine = interface(IPTLineBase)
    ['{93B723CB-BFE3-43F2-8231-C50A015C6848}']
    procedure UpdateLinkSequence(RouteSegments: OleVariant); safecall;
  end;

// *********************************************************************//
// DispIntf:  IPTLineDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {93B723CB-BFE3-43F2-8231-C50A015C6848}
// *********************************************************************//
  IPTLineDisp = dispinterface
    ['{93B723CB-BFE3-43F2-8231-C50A015C6848}']
    procedure UpdateLinkSequence(RouteSegments: OleVariant); dispid 1610874880;
    property EntryLink: ILink readonly dispid 1610809344;
    property VehType: IVehicleType readonly dispid 1610809345;
    property DesSpeedDistr: IDesSpeedDistribution readonly dispid 1610809346;
    property DepTimes: IDepartureTimeContainer readonly dispid 1610809347;
    property LineStops: IPTLineStopContainer readonly dispid 1610809348;
    property EntryTmDistr: ITimeDistribution readonly dispid 1610809349;
    property DestLink: ILink readonly dispid 1610809350;
    property LinkSeq: ILinkCollection readonly dispid 1610809351;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IDepartureTimeCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4F4B46E1-E901-43CA-9B58-8DB33EB4945D}
// *********************************************************************//
  IDepartureTimeCollection = interface(ICollectionBase)
    ['{4F4B46E1-E901-43CA-9B58-8DB33EB4945D}']
  end;

// *********************************************************************//
// DispIntf:  IDepartureTimeCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4F4B46E1-E901-43CA-9B58-8DB33EB4945D}
// *********************************************************************//
  IDepartureTimeCollectionDisp = dispinterface
    ['{4F4B46E1-E901-43CA-9B58-8DB33EB4945D}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDepartureTimeContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {48D33AA4-12D9-44E7-A153-59924B7FB8AB}
// *********************************************************************//
  IDepartureTimeContainerBase = interface(IDepartureTimeCollection)
    ['{48D33AA4-12D9-44E7-A153-59924B7FB8AB}']
    function AddDepartureTime(Key: OleVariant; Dep: Double): IDepartureTime; safecall;
    function DuplicateDepartureTime(Source: OleVariant; NewKey: OleVariant): IDepartureTime; safecall;
    procedure RemoveDepartureTime(const DepartureTime: IDepartureTime); safecall;
  end;

// *********************************************************************//
// DispIntf:  IDepartureTimeContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {48D33AA4-12D9-44E7-A153-59924B7FB8AB}
// *********************************************************************//
  IDepartureTimeContainerBaseDisp = dispinterface
    ['{48D33AA4-12D9-44E7-A153-59924B7FB8AB}']
    function AddDepartureTime(Key: OleVariant; Dep: Double): IDepartureTime; dispid 1610874880;
    function DuplicateDepartureTime(Source: OleVariant; NewKey: OleVariant): IDepartureTime; dispid 1610874881;
    procedure RemoveDepartureTime(const DepartureTime: IDepartureTime); dispid 1610874882;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDepartureTimeContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DB4F9180-8DD3-46FD-8BAC-21FC90F8C1C0}
// *********************************************************************//
  IDepartureTimeContainer = interface(IDepartureTimeContainerBase)
    ['{DB4F9180-8DD3-46FD-8BAC-21FC90F8C1C0}']
  end;

// *********************************************************************//
// DispIntf:  IDepartureTimeContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DB4F9180-8DD3-46FD-8BAC-21FC90F8C1C0}
// *********************************************************************//
  IDepartureTimeContainerDisp = dispinterface
    ['{DB4F9180-8DD3-46FD-8BAC-21FC90F8C1C0}']
    function AddDepartureTime(Key: OleVariant; Dep: Double): IDepartureTime; dispid 1610874880;
    function DuplicateDepartureTime(Source: OleVariant; NewKey: OleVariant): IDepartureTime; dispid 1610874881;
    procedure RemoveDepartureTime(const DepartureTime: IDepartureTime); dispid 1610874882;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IDepartureTimeBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {78A017F2-A048-4AEA-9DD4-6D958B22E0C5}
// *********************************************************************//
  IDepartureTimeBase = interface(IObjectBase)
    ['{78A017F2-A048-4AEA-9DD4-6D958B22E0C5}']
    function Get_PTLine: IPTLine; safecall;
    property PTLine: IPTLine read Get_PTLine;
  end;

// *********************************************************************//
// DispIntf:  IDepartureTimeBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {78A017F2-A048-4AEA-9DD4-6D958B22E0C5}
// *********************************************************************//
  IDepartureTimeBaseDisp = dispinterface
    ['{78A017F2-A048-4AEA-9DD4-6D958B22E0C5}']
    property PTLine: IPTLine readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IDepartureTime
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A9BDC4EB-D62F-4491-81BD-C6681AF35607}
// *********************************************************************//
  IDepartureTime = interface(IDepartureTimeBase)
    ['{A9BDC4EB-D62F-4491-81BD-C6681AF35607}']
  end;

// *********************************************************************//
// DispIntf:  IDepartureTimeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A9BDC4EB-D62F-4491-81BD-C6681AF35607}
// *********************************************************************//
  IDepartureTimeDisp = dispinterface
    ['{A9BDC4EB-D62F-4491-81BD-C6681AF35607}']
    property PTLine: IPTLine readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPTLineStopContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {642420B3-00BD-44F0-A9DA-55D4149DE9C4}
// *********************************************************************//
  IPTLineStopContainerBase = interface(IPTLineStopCollection)
    ['{642420B3-00BD-44F0-A9DA-55D4149DE9C4}']
  end;

// *********************************************************************//
// DispIntf:  IPTLineStopContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {642420B3-00BD-44F0-A9DA-55D4149DE9C4}
// *********************************************************************//
  IPTLineStopContainerBaseDisp = dispinterface
    ['{642420B3-00BD-44F0-A9DA-55D4149DE9C4}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPTLineStopContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {734172E6-DBE5-4B42-BDCB-8D8E1CF04800}
// *********************************************************************//
  IPTLineStopContainer = interface(IPTLineStopContainerBase)
    ['{734172E6-DBE5-4B42-BDCB-8D8E1CF04800}']
  end;

// *********************************************************************//
// DispIntf:  IPTLineStopContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {734172E6-DBE5-4B42-BDCB-8D8E1CF04800}
// *********************************************************************//
  IPTLineStopContainerDisp = dispinterface
    ['{734172E6-DBE5-4B42-BDCB-8D8E1CF04800}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPTStopContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8D467EA6-8236-4003-9E1A-7F887137EA51}
// *********************************************************************//
  IPTStopContainerBase = interface(IPTStopCollection)
    ['{8D467EA6-8236-4003-9E1A-7F887137EA51}']
    function Get_ItemByKey(Key: OleVariant): IPTStop; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddPTStop(Key: OleVariant; const Lane: ILane; Pos: Double): IPTStop; safecall;
    function DuplicatePTStop(Source: OleVariant; NewKey: OleVariant): IPTStop; safecall;
    procedure RemovePTStop(const PTStop: IPTStop); safecall;
    property ItemByKey[Key: OleVariant]: IPTStop read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IPTStopContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8D467EA6-8236-4003-9E1A-7F887137EA51}
// *********************************************************************//
  IPTStopContainerBaseDisp = dispinterface
    ['{8D467EA6-8236-4003-9E1A-7F887137EA51}']
    property ItemByKey[Key: OleVariant]: IPTStop readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddPTStop(Key: OleVariant; const Lane: ILane; Pos: Double): IPTStop; dispid 1610874882;
    function DuplicatePTStop(Source: OleVariant; NewKey: OleVariant): IPTStop; dispid 1610874883;
    procedure RemovePTStop(const PTStop: IPTStop); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPTStopContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BEDC9F26-B53B-4B75-B684-A08E94F2C164}
// *********************************************************************//
  IPTStopContainer = interface(IPTStopContainerBase)
    ['{BEDC9F26-B53B-4B75-B684-A08E94F2C164}']
  end;

// *********************************************************************//
// DispIntf:  IPTStopContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BEDC9F26-B53B-4B75-B684-A08E94F2C164}
// *********************************************************************//
  IPTStopContainerDisp = dispinterface
    ['{BEDC9F26-B53B-4B75-B684-A08E94F2C164}']
    property ItemByKey[Key: OleVariant]: IPTStop readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddPTStop(Key: OleVariant; const Lane: ILane; Pos: Double): IPTStop; dispid 1610874882;
    function DuplicatePTStop(Source: OleVariant; NewKey: OleVariant): IPTStop; dispid 1610874883;
    procedure RemovePTStop(const PTStop: IPTStop); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IParkingLotContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E9ACF97C-CFD7-4FD2-952A-7D3C51E0902D}
// *********************************************************************//
  IParkingLotContainerBase = interface(IParkingLotCollection)
    ['{E9ACF97C-CFD7-4FD2-952A-7D3C51E0902D}']
    function Get_ItemByKey(Key: OleVariant): IParkingLot; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function DuplicateParkingLot(Source: OleVariant; NewKey: OleVariant): IParkingLot; safecall;
    procedure RemoveParkingLot(const ParkingLot: IParkingLot); safecall;
    property ItemByKey[Key: OleVariant]: IParkingLot read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IParkingLotContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E9ACF97C-CFD7-4FD2-952A-7D3C51E0902D}
// *********************************************************************//
  IParkingLotContainerBaseDisp = dispinterface
    ['{E9ACF97C-CFD7-4FD2-952A-7D3C51E0902D}']
    property ItemByKey[Key: OleVariant]: IParkingLot readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function DuplicateParkingLot(Source: OleVariant; NewKey: OleVariant): IParkingLot; dispid 1610874882;
    procedure RemoveParkingLot(const ParkingLot: IParkingLot); dispid 1610874883;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IParkingLotContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {86D69ACB-D906-47E9-9B32-4D22EC5EE838}
// *********************************************************************//
  IParkingLotContainer = interface(IParkingLotContainerBase)
    ['{86D69ACB-D906-47E9-9B32-4D22EC5EE838}']
    function AddParkingLot(Key: OleVariant; const Lane: ILane; Pos: Double): IParkingLot; safecall;
    function AddAbstractParkingLot(Key: OleVariant; const Link: ILink; Pos: Double; 
                                   const Zone: IZone): IParkingLot; safecall;
  end;

// *********************************************************************//
// DispIntf:  IParkingLotContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {86D69ACB-D906-47E9-9B32-4D22EC5EE838}
// *********************************************************************//
  IParkingLotContainerDisp = dispinterface
    ['{86D69ACB-D906-47E9-9B32-4D22EC5EE838}']
    function AddParkingLot(Key: OleVariant; const Lane: ILane; Pos: Double): IParkingLot; dispid 1610940416;
    function AddAbstractParkingLot(Key: OleVariant; const Link: ILink; Pos: Double; 
                                   const Zone: IZone): IParkingLot; dispid 1610940417;
    property ItemByKey[Key: OleVariant]: IParkingLot readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function DuplicateParkingLot(Source: OleVariant; NewKey: OleVariant): IParkingLot; dispid 1610874882;
    procedure RemoveParkingLot(const ParkingLot: IParkingLot); dispid 1610874883;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPathContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D79DEF8C-A9CF-4128-A903-47A3E485A028}
// *********************************************************************//
  IPathContainerBase = interface(IPathCollection)
    ['{D79DEF8C-A9CF-4128-A903-47A3E485A028}']
    function Get_ItemByKey(Key: OleVariant): IPath; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    property ItemByKey[Key: OleVariant]: IPath read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IPathContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D79DEF8C-A9CF-4128-A903-47A3E485A028}
// *********************************************************************//
  IPathContainerBaseDisp = dispinterface
    ['{D79DEF8C-A9CF-4128-A903-47A3E485A028}']
    property ItemByKey[Key: OleVariant]: IPath readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPathContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DBC53777-E63B-4F4C-847C-30B0DE373DAF}
// *********************************************************************//
  IPathContainer = interface(IPathContainerBase)
    ['{DBC53777-E63B-4F4C-847C-30B0DE373DAF}']
    procedure ReadDynAssignPathFile(ForceReread: WordBool); safecall;
    procedure WriteDynAssignPathFile; safecall;
    function AddPath(OriginParkingLot: OleVariant; DestinationParkingLot: OleVariant; 
                     NodeList: OleVariant): IPath; safecall;
    function AddPathForVehicleType(OriginParkingLot: OleVariant; DestinationParkingLot: OleVariant; 
                                   NodeList: OleVariant; VehicleType: OleVariant): IPath; safecall;
    function AddPathForVehicle(Vehicle: OleVariant; DestinationParkingLot: OleVariant; 
                               NodeList: OleVariant): IPath; safecall;
    function RemovePath(Path: OleVariant): WordBool; safecall;
    function AddShortestPathForVehicleType(OriginParkingLot: OleVariant; 
                                           DestinationParkingLot: OleVariant; 
                                           VehicleType: OleVariant; dtaInterval: SYSINT): IPath; safecall;
  end;

// *********************************************************************//
// DispIntf:  IPathContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DBC53777-E63B-4F4C-847C-30B0DE373DAF}
// *********************************************************************//
  IPathContainerDisp = dispinterface
    ['{DBC53777-E63B-4F4C-847C-30B0DE373DAF}']
    procedure ReadDynAssignPathFile(ForceReread: WordBool); dispid 1610940416;
    procedure WriteDynAssignPathFile; dispid 1610940417;
    function AddPath(OriginParkingLot: OleVariant; DestinationParkingLot: OleVariant; 
                     NodeList: OleVariant): IPath; dispid 1610940418;
    function AddPathForVehicleType(OriginParkingLot: OleVariant; DestinationParkingLot: OleVariant; 
                                   NodeList: OleVariant; VehicleType: OleVariant): IPath; dispid 1610940419;
    function AddPathForVehicle(Vehicle: OleVariant; DestinationParkingLot: OleVariant; 
                               NodeList: OleVariant): IPath; dispid 1610940420;
    function RemovePath(Path: OleVariant): WordBool; dispid 1610940421;
    function AddShortestPathForVehicleType(OriginParkingLot: OleVariant; 
                                           DestinationParkingLot: OleVariant; 
                                           VehicleType: OleVariant; dtaInterval: SYSINT): IPath; dispid 1610940422;
    property ItemByKey[Key: OleVariant]: IPath readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPathBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7EB31864-927D-4A9F-8982-0D4C78E6D492}
// *********************************************************************//
  IPathBase = interface(IObjectBase)
    ['{7EB31864-927D-4A9F-8982-0D4C78E6D492}']
    function Get_EdgeSeq: IEdgeCollection; safecall;
    function Get_ToParkLot: IParkingLot; safecall;
    function Get_FromParkLot: IParkingLot; safecall;
    function Get_FromDynVehRoutDec: IVehicleRoutingDecisionDynamic; safecall;
    function Get_RoutGuidVeh: IVehicle; safecall;
    property EdgeSeq: IEdgeCollection read Get_EdgeSeq;
    property ToParkLot: IParkingLot read Get_ToParkLot;
    property FromParkLot: IParkingLot read Get_FromParkLot;
    property FromDynVehRoutDec: IVehicleRoutingDecisionDynamic read Get_FromDynVehRoutDec;
    property RoutGuidVeh: IVehicle read Get_RoutGuidVeh;
  end;

// *********************************************************************//
// DispIntf:  IPathBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7EB31864-927D-4A9F-8982-0D4C78E6D492}
// *********************************************************************//
  IPathBaseDisp = dispinterface
    ['{7EB31864-927D-4A9F-8982-0D4C78E6D492}']
    property EdgeSeq: IEdgeCollection readonly dispid 1610809344;
    property ToParkLot: IParkingLot readonly dispid 1610809345;
    property FromParkLot: IParkingLot readonly dispid 1610809346;
    property FromDynVehRoutDec: IVehicleRoutingDecisionDynamic readonly dispid 1610809347;
    property RoutGuidVeh: IVehicle readonly dispid 1610809348;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPath
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B2098E97-5B65-456D-ADA3-7F710E67F66D}
// *********************************************************************//
  IPath = interface(IPathBase)
    ['{B2098E97-5B65-456D-ADA3-7F710E67F66D}']
  end;

// *********************************************************************//
// DispIntf:  IPathDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B2098E97-5B65-456D-ADA3-7F710E67F66D}
// *********************************************************************//
  IPathDisp = dispinterface
    ['{B2098E97-5B65-456D-ADA3-7F710E67F66D}']
    property EdgeSeq: IEdgeCollection readonly dispid 1610809344;
    property ToParkLot: IParkingLot readonly dispid 1610809345;
    property FromParkLot: IParkingLot readonly dispid 1610809346;
    property FromDynVehRoutDec: IVehicleRoutingDecisionDynamic readonly dispid 1610809347;
    property RoutGuidVeh: IVehicle readonly dispid 1610809348;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehicleBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1099CDA7-3EF0-44E5-B05C-2400CBEBFFF6}
// *********************************************************************//
  IVehicleBase = interface(IObjectBase)
    ['{1099CDA7-3EF0-44E5-B05C-2400CBEBFFF6}']
    function Get_Lane: ILane; safecall;
    function Get_Path: IPath; safecall;
    function Get_IndivDesAccelFunc: IDesAccelerationFunction; safecall;
    function Get_IndivMaxAccelFunc: IMaxAccelerationFunction; safecall;
    function Get_IndivDesDecelFunc: IDesDecelerationFunction; safecall;
    function Get_IndivMaxDecelFunc: IMaxDecelerationFunction; safecall;
    function Get_VehClassSpeedMisestFact: IVehVehClassSpeedMisestFactContainer; safecall;
    function Get_CurParkLot: IParkingLot; safecall;
    function Get_DestParkLot: IParkingLot; safecall;
    function Get_DestZone: IZone; safecall;
    function Get_NextLink: ILink; safecall;
    function Get_NextNode: INode; safecall;
    function Get_NextTripDestZone: IZone; safecall;
    function Get_OrigZone: IZone; safecall;
    function Get_OrigParkLot: IParkingLot; safecall;
    function Get_PrevNode: INode; safecall;
    function Get_PTLine: IPTLine; safecall;
    function Get_VehType: IVehicleType; safecall;
    function Get_PTStop: IPTStop; safecall;
    function Get_Model2D3D: IModel2D3D; safecall;
    function Get_VehRoutSta: IVehicleRouteStatic; safecall;
    function Get_VehRoutPart: IVehicleRoutePartial; safecall;
    function Get_VehRoutMngLns: IVehicleRouteManagedLanes; safecall;
    function Get_VehRoutPark: IVehicleRouteParking; safecall;
    function Get_VehRoutPartPT: IVehicleRoutePartialPT; safecall;
    property Lane: ILane read Get_Lane;
    property Path: IPath read Get_Path;
    property IndivDesAccelFunc: IDesAccelerationFunction read Get_IndivDesAccelFunc;
    property IndivMaxAccelFunc: IMaxAccelerationFunction read Get_IndivMaxAccelFunc;
    property IndivDesDecelFunc: IDesDecelerationFunction read Get_IndivDesDecelFunc;
    property IndivMaxDecelFunc: IMaxDecelerationFunction read Get_IndivMaxDecelFunc;
    property VehClassSpeedMisestFact: IVehVehClassSpeedMisestFactContainer read Get_VehClassSpeedMisestFact;
    property CurParkLot: IParkingLot read Get_CurParkLot;
    property DestParkLot: IParkingLot read Get_DestParkLot;
    property DestZone: IZone read Get_DestZone;
    property NextLink: ILink read Get_NextLink;
    property NextNode: INode read Get_NextNode;
    property NextTripDestZone: IZone read Get_NextTripDestZone;
    property OrigZone: IZone read Get_OrigZone;
    property OrigParkLot: IParkingLot read Get_OrigParkLot;
    property PrevNode: INode read Get_PrevNode;
    property PTLine: IPTLine read Get_PTLine;
    property VehType: IVehicleType read Get_VehType;
    property PTStop: IPTStop read Get_PTStop;
    property Model2D3D: IModel2D3D read Get_Model2D3D;
    property VehRoutSta: IVehicleRouteStatic read Get_VehRoutSta;
    property VehRoutPart: IVehicleRoutePartial read Get_VehRoutPart;
    property VehRoutMngLns: IVehicleRouteManagedLanes read Get_VehRoutMngLns;
    property VehRoutPark: IVehicleRouteParking read Get_VehRoutPark;
    property VehRoutPartPT: IVehicleRoutePartialPT read Get_VehRoutPartPT;
  end;

// *********************************************************************//
// DispIntf:  IVehicleBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1099CDA7-3EF0-44E5-B05C-2400CBEBFFF6}
// *********************************************************************//
  IVehicleBaseDisp = dispinterface
    ['{1099CDA7-3EF0-44E5-B05C-2400CBEBFFF6}']
    property Lane: ILane readonly dispid 1610809344;
    property Path: IPath readonly dispid 1610809345;
    property IndivDesAccelFunc: IDesAccelerationFunction readonly dispid 1610809346;
    property IndivMaxAccelFunc: IMaxAccelerationFunction readonly dispid 1610809347;
    property IndivDesDecelFunc: IDesDecelerationFunction readonly dispid 1610809348;
    property IndivMaxDecelFunc: IMaxDecelerationFunction readonly dispid 1610809349;
    property VehClassSpeedMisestFact: IVehVehClassSpeedMisestFactContainer readonly dispid 1610809350;
    property CurParkLot: IParkingLot readonly dispid 1610809351;
    property DestParkLot: IParkingLot readonly dispid 1610809352;
    property DestZone: IZone readonly dispid 1610809353;
    property NextLink: ILink readonly dispid 1610809354;
    property NextNode: INode readonly dispid 1610809355;
    property NextTripDestZone: IZone readonly dispid 1610809356;
    property OrigZone: IZone readonly dispid 1610809357;
    property OrigParkLot: IParkingLot readonly dispid 1610809358;
    property PrevNode: INode readonly dispid 1610809359;
    property PTLine: IPTLine readonly dispid 1610809360;
    property VehType: IVehicleType readonly dispid 1610809361;
    property PTStop: IPTStop readonly dispid 1610809362;
    property Model2D3D: IModel2D3D readonly dispid 1610809363;
    property VehRoutSta: IVehicleRouteStatic readonly dispid 1610809364;
    property VehRoutPart: IVehicleRoutePartial readonly dispid 1610809365;
    property VehRoutMngLns: IVehicleRouteManagedLanes readonly dispid 1610809366;
    property VehRoutPark: IVehicleRouteParking readonly dispid 1610809367;
    property VehRoutPartPT: IVehicleRoutePartialPT readonly dispid 1610809368;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehicle
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3829984D-F2C6-477E-81BD-2B6F5A88E3A4}
// *********************************************************************//
  IVehicle = interface(IVehicleBase)
    ['{3829984D-F2C6-477E-81BD-2B6F5A88E3A4}']
    procedure MoveToLinkPosition(Link: OleVariant; Lane: SYSINT; Position: Double); safecall;
    procedure AssignPath(NewPath: OleVariant); safecall;
  end;

// *********************************************************************//
// DispIntf:  IVehicleDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3829984D-F2C6-477E-81BD-2B6F5A88E3A4}
// *********************************************************************//
  IVehicleDisp = dispinterface
    ['{3829984D-F2C6-477E-81BD-2B6F5A88E3A4}']
    procedure MoveToLinkPosition(Link: OleVariant; Lane: SYSINT; Position: Double); dispid 1610874880;
    procedure AssignPath(NewPath: OleVariant); dispid 1610874881;
    property Lane: ILane readonly dispid 1610809344;
    property Path: IPath readonly dispid 1610809345;
    property IndivDesAccelFunc: IDesAccelerationFunction readonly dispid 1610809346;
    property IndivMaxAccelFunc: IMaxAccelerationFunction readonly dispid 1610809347;
    property IndivDesDecelFunc: IDesDecelerationFunction readonly dispid 1610809348;
    property IndivMaxDecelFunc: IMaxDecelerationFunction readonly dispid 1610809349;
    property VehClassSpeedMisestFact: IVehVehClassSpeedMisestFactContainer readonly dispid 1610809350;
    property CurParkLot: IParkingLot readonly dispid 1610809351;
    property DestParkLot: IParkingLot readonly dispid 1610809352;
    property DestZone: IZone readonly dispid 1610809353;
    property NextLink: ILink readonly dispid 1610809354;
    property NextNode: INode readonly dispid 1610809355;
    property NextTripDestZone: IZone readonly dispid 1610809356;
    property OrigZone: IZone readonly dispid 1610809357;
    property OrigParkLot: IParkingLot readonly dispid 1610809358;
    property PrevNode: INode readonly dispid 1610809359;
    property PTLine: IPTLine readonly dispid 1610809360;
    property VehType: IVehicleType readonly dispid 1610809361;
    property PTStop: IPTStop readonly dispid 1610809362;
    property Model2D3D: IModel2D3D readonly dispid 1610809363;
    property VehRoutSta: IVehicleRouteStatic readonly dispid 1610809364;
    property VehRoutPart: IVehicleRoutePartial readonly dispid 1610809365;
    property VehRoutMngLns: IVehicleRouteManagedLanes readonly dispid 1610809366;
    property VehRoutPark: IVehicleRouteParking readonly dispid 1610809367;
    property VehRoutPartPT: IVehicleRoutePartialPT readonly dispid 1610809368;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehVehClassSpeedMisestFactCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {82210EAB-FC87-4BBF-86DE-159FB8B9817B}
// *********************************************************************//
  IVehVehClassSpeedMisestFactCollection = interface(ICollectionBase)
    ['{82210EAB-FC87-4BBF-86DE-159FB8B9817B}']
  end;

// *********************************************************************//
// DispIntf:  IVehVehClassSpeedMisestFactCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {82210EAB-FC87-4BBF-86DE-159FB8B9817B}
// *********************************************************************//
  IVehVehClassSpeedMisestFactCollectionDisp = dispinterface
    ['{82210EAB-FC87-4BBF-86DE-159FB8B9817B}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehVehClassSpeedMisestFactContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6592195F-9557-449C-9DDF-72041DD6F7EF}
// *********************************************************************//
  IVehVehClassSpeedMisestFactContainerBase = interface(IVehVehClassSpeedMisestFactCollection)
    ['{6592195F-9557-449C-9DDF-72041DD6F7EF}']
  end;

// *********************************************************************//
// DispIntf:  IVehVehClassSpeedMisestFactContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6592195F-9557-449C-9DDF-72041DD6F7EF}
// *********************************************************************//
  IVehVehClassSpeedMisestFactContainerBaseDisp = dispinterface
    ['{6592195F-9557-449C-9DDF-72041DD6F7EF}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehVehClassSpeedMisestFactContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FB284DF5-24DE-4672-A8FA-E0BC39A1788D}
// *********************************************************************//
  IVehVehClassSpeedMisestFactContainer = interface(IVehVehClassSpeedMisestFactContainerBase)
    ['{FB284DF5-24DE-4672-A8FA-E0BC39A1788D}']
  end;

// *********************************************************************//
// DispIntf:  IVehVehClassSpeedMisestFactContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FB284DF5-24DE-4672-A8FA-E0BC39A1788D}
// *********************************************************************//
  IVehVehClassSpeedMisestFactContainerDisp = dispinterface
    ['{FB284DF5-24DE-4672-A8FA-E0BC39A1788D}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleRouteStaticBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {85C4D332-C3F1-4383-8180-1894F2954C05}
// *********************************************************************//
  IVehicleRouteStaticBase = interface(IObjectBase)
    ['{85C4D332-C3F1-4383-8180-1894F2954C05}']
    function Get_VehRoutDec: IVehicleRoutingDecisionStatic; safecall;
    function Get_DestZone: IZone; safecall;
    function Get_DestLink: ILink; safecall;
    function Get_LinkSeq: ILinkCollection; safecall;
    property VehRoutDec: IVehicleRoutingDecisionStatic read Get_VehRoutDec;
    property DestZone: IZone read Get_DestZone;
    property DestLink: ILink read Get_DestLink;
    property LinkSeq: ILinkCollection read Get_LinkSeq;
  end;

// *********************************************************************//
// DispIntf:  IVehicleRouteStaticBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {85C4D332-C3F1-4383-8180-1894F2954C05}
// *********************************************************************//
  IVehicleRouteStaticBaseDisp = dispinterface
    ['{85C4D332-C3F1-4383-8180-1894F2954C05}']
    property VehRoutDec: IVehicleRoutingDecisionStatic readonly dispid 1610809344;
    property DestZone: IZone readonly dispid 1610809345;
    property DestLink: ILink readonly dispid 1610809346;
    property LinkSeq: ILinkCollection readonly dispid 1610809347;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehicleRouteStatic
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5FF785C2-8307-4662-8B1C-D42AA8537493}
// *********************************************************************//
  IVehicleRouteStatic = interface(IVehicleRouteStaticBase)
    ['{5FF785C2-8307-4662-8B1C-D42AA8537493}']
    procedure UpdateLinkSequence(RouteSegments: OleVariant); safecall;
  end;

// *********************************************************************//
// DispIntf:  IVehicleRouteStaticDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5FF785C2-8307-4662-8B1C-D42AA8537493}
// *********************************************************************//
  IVehicleRouteStaticDisp = dispinterface
    ['{5FF785C2-8307-4662-8B1C-D42AA8537493}']
    procedure UpdateLinkSequence(RouteSegments: OleVariant); dispid 1610874880;
    property VehRoutDec: IVehicleRoutingDecisionStatic readonly dispid 1610809344;
    property DestZone: IZone readonly dispid 1610809345;
    property DestLink: ILink readonly dispid 1610809346;
    property LinkSeq: ILinkCollection readonly dispid 1610809347;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehicleRoutingDecisionStaticBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {570931A7-4859-4685-8F43-4A573860B6A4}
// *********************************************************************//
  IVehicleRoutingDecisionStaticBase = interface(IObjectBase)
    ['{570931A7-4859-4685-8F43-4A573860B6A4}']
    function Get_VehRoutSta: IVehicleRouteStaticContainer; safecall;
    function Get_Zone: IZone; safecall;
    function Get_Link: ILink; safecall;
    function Get_VehClasses: IVehicleClassCollection; safecall;
    property VehRoutSta: IVehicleRouteStaticContainer read Get_VehRoutSta;
    property Zone: IZone read Get_Zone;
    property Link: ILink read Get_Link;
    property VehClasses: IVehicleClassCollection read Get_VehClasses;
  end;

// *********************************************************************//
// DispIntf:  IVehicleRoutingDecisionStaticBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {570931A7-4859-4685-8F43-4A573860B6A4}
// *********************************************************************//
  IVehicleRoutingDecisionStaticBaseDisp = dispinterface
    ['{570931A7-4859-4685-8F43-4A573860B6A4}']
    property VehRoutSta: IVehicleRouteStaticContainer readonly dispid 1610809344;
    property Zone: IZone readonly dispid 1610809345;
    property Link: ILink readonly dispid 1610809346;
    property VehClasses: IVehicleClassCollection readonly dispid 1610809347;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehicleRoutingDecisionStatic
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {98210758-A4EF-4B27-80E5-C4944DE4E07F}
// *********************************************************************//
  IVehicleRoutingDecisionStatic = interface(IVehicleRoutingDecisionStaticBase)
    ['{98210758-A4EF-4B27-80E5-C4944DE4E07F}']
    procedure CombineRoutes; safecall;
  end;

// *********************************************************************//
// DispIntf:  IVehicleRoutingDecisionStaticDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {98210758-A4EF-4B27-80E5-C4944DE4E07F}
// *********************************************************************//
  IVehicleRoutingDecisionStaticDisp = dispinterface
    ['{98210758-A4EF-4B27-80E5-C4944DE4E07F}']
    procedure CombineRoutes; dispid 1610874880;
    property VehRoutSta: IVehicleRouteStaticContainer readonly dispid 1610809344;
    property Zone: IZone readonly dispid 1610809345;
    property Link: ILink readonly dispid 1610809346;
    property VehClasses: IVehicleClassCollection readonly dispid 1610809347;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehicleRouteStaticContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B473ACE5-7511-433F-8B51-F618233A3D21}
// *********************************************************************//
  IVehicleRouteStaticContainerBase = interface(IVehicleRouteStaticCollection)
    ['{B473ACE5-7511-433F-8B51-F618233A3D21}']
    function Get_ItemByKey(Key: OleVariant): IVehicleRouteStatic; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddVehicleRouteStatic(Key: OleVariant; const DestLink: ILink; DestPos: Double): IVehicleRouteStatic; safecall;
    function DuplicateVehicleRouteStatic(Source: OleVariant; NewKey: OleVariant): IVehicleRouteStatic; safecall;
    procedure RemoveVehicleRouteStatic(const VehicleRouteStatic: IVehicleRouteStatic); safecall;
    property ItemByKey[Key: OleVariant]: IVehicleRouteStatic read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IVehicleRouteStaticContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B473ACE5-7511-433F-8B51-F618233A3D21}
// *********************************************************************//
  IVehicleRouteStaticContainerBaseDisp = dispinterface
    ['{B473ACE5-7511-433F-8B51-F618233A3D21}']
    property ItemByKey[Key: OleVariant]: IVehicleRouteStatic readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddVehicleRouteStatic(Key: OleVariant; const DestLink: ILink; DestPos: Double): IVehicleRouteStatic; dispid 1610874882;
    function DuplicateVehicleRouteStatic(Source: OleVariant; NewKey: OleVariant): IVehicleRouteStatic; dispid 1610874883;
    procedure RemoveVehicleRouteStatic(const VehicleRouteStatic: IVehicleRouteStatic); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleRouteStaticContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8608AEB5-0E1E-425B-8EDD-83E803725066}
// *********************************************************************//
  IVehicleRouteStaticContainer = interface(IVehicleRouteStaticContainerBase)
    ['{8608AEB5-0E1E-425B-8EDD-83E803725066}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleRouteStaticContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8608AEB5-0E1E-425B-8EDD-83E803725066}
// *********************************************************************//
  IVehicleRouteStaticContainerDisp = dispinterface
    ['{8608AEB5-0E1E-425B-8EDD-83E803725066}']
    property ItemByKey[Key: OleVariant]: IVehicleRouteStatic readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddVehicleRouteStatic(Key: OleVariant; const DestLink: ILink; DestPos: Double): IVehicleRouteStatic; dispid 1610874882;
    function DuplicateVehicleRouteStatic(Source: OleVariant; NewKey: OleVariant): IVehicleRouteStatic; dispid 1610874883;
    procedure RemoveVehicleRouteStatic(const VehicleRouteStatic: IVehicleRouteStatic); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleRoutePartialBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7DD977C5-CD0A-4970-A23F-866F2712C1A7}
// *********************************************************************//
  IVehicleRoutePartialBase = interface(IObjectBase)
    ['{7DD977C5-CD0A-4970-A23F-866F2712C1A7}']
    function Get_VehRoutDec: IVehicleRoutingDecisionPartial; safecall;
    function Get_DestLink: ILink; safecall;
    function Get_LinkSeq: ILinkCollection; safecall;
    property VehRoutDec: IVehicleRoutingDecisionPartial read Get_VehRoutDec;
    property DestLink: ILink read Get_DestLink;
    property LinkSeq: ILinkCollection read Get_LinkSeq;
  end;

// *********************************************************************//
// DispIntf:  IVehicleRoutePartialBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7DD977C5-CD0A-4970-A23F-866F2712C1A7}
// *********************************************************************//
  IVehicleRoutePartialBaseDisp = dispinterface
    ['{7DD977C5-CD0A-4970-A23F-866F2712C1A7}']
    property VehRoutDec: IVehicleRoutingDecisionPartial readonly dispid 1610809344;
    property DestLink: ILink readonly dispid 1610809345;
    property LinkSeq: ILinkCollection readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehicleRoutePartial
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {61FB5B4C-9A4F-44B6-A6E5-0EA05FBDF6E2}
// *********************************************************************//
  IVehicleRoutePartial = interface(IVehicleRoutePartialBase)
    ['{61FB5B4C-9A4F-44B6-A6E5-0EA05FBDF6E2}']
    procedure UpdateLinkSequence(RouteSegments: OleVariant); safecall;
  end;

// *********************************************************************//
// DispIntf:  IVehicleRoutePartialDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {61FB5B4C-9A4F-44B6-A6E5-0EA05FBDF6E2}
// *********************************************************************//
  IVehicleRoutePartialDisp = dispinterface
    ['{61FB5B4C-9A4F-44B6-A6E5-0EA05FBDF6E2}']
    procedure UpdateLinkSequence(RouteSegments: OleVariant); dispid 1610874880;
    property VehRoutDec: IVehicleRoutingDecisionPartial readonly dispid 1610809344;
    property DestLink: ILink readonly dispid 1610809345;
    property LinkSeq: ILinkCollection readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehicleRoutingDecisionPartialBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {05C97DD3-EE27-4A55-B4AA-6C96E5EC7716}
// *********************************************************************//
  IVehicleRoutingDecisionPartialBase = interface(IObjectBase)
    ['{05C97DD3-EE27-4A55-B4AA-6C96E5EC7716}']
    function Get_VehRoutPart: IVehicleRoutePartialContainer; safecall;
    function Get_DestLink: ILink; safecall;
    function Get_Link: ILink; safecall;
    function Get_VehClasses: IVehicleClassCollection; safecall;
    property VehRoutPart: IVehicleRoutePartialContainer read Get_VehRoutPart;
    property DestLink: ILink read Get_DestLink;
    property Link: ILink read Get_Link;
    property VehClasses: IVehicleClassCollection read Get_VehClasses;
  end;

// *********************************************************************//
// DispIntf:  IVehicleRoutingDecisionPartialBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {05C97DD3-EE27-4A55-B4AA-6C96E5EC7716}
// *********************************************************************//
  IVehicleRoutingDecisionPartialBaseDisp = dispinterface
    ['{05C97DD3-EE27-4A55-B4AA-6C96E5EC7716}']
    property VehRoutPart: IVehicleRoutePartialContainer readonly dispid 1610809344;
    property DestLink: ILink readonly dispid 1610809345;
    property Link: ILink readonly dispid 1610809346;
    property VehClasses: IVehicleClassCollection readonly dispid 1610809347;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehicleRoutingDecisionPartial
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {73CE4329-C571-4A70-9270-015FC87EE525}
// *********************************************************************//
  IVehicleRoutingDecisionPartial = interface(IVehicleRoutingDecisionPartialBase)
    ['{73CE4329-C571-4A70-9270-015FC87EE525}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleRoutingDecisionPartialDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {73CE4329-C571-4A70-9270-015FC87EE525}
// *********************************************************************//
  IVehicleRoutingDecisionPartialDisp = dispinterface
    ['{73CE4329-C571-4A70-9270-015FC87EE525}']
    property VehRoutPart: IVehicleRoutePartialContainer readonly dispid 1610809344;
    property DestLink: ILink readonly dispid 1610809345;
    property Link: ILink readonly dispid 1610809346;
    property VehClasses: IVehicleClassCollection readonly dispid 1610809347;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehicleRoutePartialContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F5CDD3B9-0F2B-4D02-A98D-33027CC11FA3}
// *********************************************************************//
  IVehicleRoutePartialContainerBase = interface(IVehicleRoutePartialCollection)
    ['{F5CDD3B9-0F2B-4D02-A98D-33027CC11FA3}']
    function Get_ItemByKey(Key: OleVariant): IVehicleRoutePartial; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddVehicleRoutePartial(Key: OleVariant): IVehicleRoutePartial; safecall;
    function DuplicateVehicleRoutePartial(Source: OleVariant; NewKey: OleVariant): IVehicleRoutePartial; safecall;
    procedure RemoveVehicleRoutePartial(const VehicleRoutePartial: IVehicleRoutePartial); safecall;
    property ItemByKey[Key: OleVariant]: IVehicleRoutePartial read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IVehicleRoutePartialContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F5CDD3B9-0F2B-4D02-A98D-33027CC11FA3}
// *********************************************************************//
  IVehicleRoutePartialContainerBaseDisp = dispinterface
    ['{F5CDD3B9-0F2B-4D02-A98D-33027CC11FA3}']
    property ItemByKey[Key: OleVariant]: IVehicleRoutePartial readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddVehicleRoutePartial(Key: OleVariant): IVehicleRoutePartial; dispid 1610874882;
    function DuplicateVehicleRoutePartial(Source: OleVariant; NewKey: OleVariant): IVehicleRoutePartial; dispid 1610874883;
    procedure RemoveVehicleRoutePartial(const VehicleRoutePartial: IVehicleRoutePartial); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleRoutePartialContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {90AD462C-163E-4D6F-B644-61B640061DBF}
// *********************************************************************//
  IVehicleRoutePartialContainer = interface(IVehicleRoutePartialContainerBase)
    ['{90AD462C-163E-4D6F-B644-61B640061DBF}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleRoutePartialContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {90AD462C-163E-4D6F-B644-61B640061DBF}
// *********************************************************************//
  IVehicleRoutePartialContainerDisp = dispinterface
    ['{90AD462C-163E-4D6F-B644-61B640061DBF}']
    property ItemByKey[Key: OleVariant]: IVehicleRoutePartial readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddVehicleRoutePartial(Key: OleVariant): IVehicleRoutePartial; dispid 1610874882;
    function DuplicateVehicleRoutePartial(Source: OleVariant; NewKey: OleVariant): IVehicleRoutePartial; dispid 1610874883;
    procedure RemoveVehicleRoutePartial(const VehicleRoutePartial: IVehicleRoutePartial); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleRouteManagedLanesBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30FB7B5E-AB5E-4F3C-9480-E9513959545C}
// *********************************************************************//
  IVehicleRouteManagedLanesBase = interface(IObjectBase)
    ['{30FB7B5E-AB5E-4F3C-9480-E9513959545C}']
    function Get_VehRoutDec: IVehicleRoutingDecisionManagedLanes; safecall;
    function Get_DestLink: ILink; safecall;
    function Get_LinkSeq: ILinkCollection; safecall;
    property VehRoutDec: IVehicleRoutingDecisionManagedLanes read Get_VehRoutDec;
    property DestLink: ILink read Get_DestLink;
    property LinkSeq: ILinkCollection read Get_LinkSeq;
  end;

// *********************************************************************//
// DispIntf:  IVehicleRouteManagedLanesBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30FB7B5E-AB5E-4F3C-9480-E9513959545C}
// *********************************************************************//
  IVehicleRouteManagedLanesBaseDisp = dispinterface
    ['{30FB7B5E-AB5E-4F3C-9480-E9513959545C}']
    property VehRoutDec: IVehicleRoutingDecisionManagedLanes readonly dispid 1610809344;
    property DestLink: ILink readonly dispid 1610809345;
    property LinkSeq: ILinkCollection readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehicleRouteManagedLanes
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5168796D-909E-49A8-9C72-DD091E7A9243}
// *********************************************************************//
  IVehicleRouteManagedLanes = interface(IVehicleRouteManagedLanesBase)
    ['{5168796D-909E-49A8-9C72-DD091E7A9243}']
    procedure UpdateLinkSequence(RouteSegments: OleVariant); safecall;
  end;

// *********************************************************************//
// DispIntf:  IVehicleRouteManagedLanesDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5168796D-909E-49A8-9C72-DD091E7A9243}
// *********************************************************************//
  IVehicleRouteManagedLanesDisp = dispinterface
    ['{5168796D-909E-49A8-9C72-DD091E7A9243}']
    procedure UpdateLinkSequence(RouteSegments: OleVariant); dispid 1610874880;
    property VehRoutDec: IVehicleRoutingDecisionManagedLanes readonly dispid 1610809344;
    property DestLink: ILink readonly dispid 1610809345;
    property LinkSeq: ILinkCollection readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehicleRoutingDecisionManagedLanesBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {63E3BC2C-AA5E-48CD-9ED2-D0A822206B27}
// *********************************************************************//
  IVehicleRoutingDecisionManagedLanesBase = interface(IObjectBase)
    ['{63E3BC2C-AA5E-48CD-9ED2-D0A822206B27}']
    function Get_VehRoutMngLns: IVehicleRouteManagedLanesContainer; safecall;
    function Get_ManagedLanesFacility: IManagedLanesFacility; safecall;
    function Get_DestLink: ILink; safecall;
    function Get_Link: ILink; safecall;
    function Get_VehClasses: IVehicleClassCollection; safecall;
    property VehRoutMngLns: IVehicleRouteManagedLanesContainer read Get_VehRoutMngLns;
    property ManagedLanesFacility: IManagedLanesFacility read Get_ManagedLanesFacility;
    property DestLink: ILink read Get_DestLink;
    property Link: ILink read Get_Link;
    property VehClasses: IVehicleClassCollection read Get_VehClasses;
  end;

// *********************************************************************//
// DispIntf:  IVehicleRoutingDecisionManagedLanesBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {63E3BC2C-AA5E-48CD-9ED2-D0A822206B27}
// *********************************************************************//
  IVehicleRoutingDecisionManagedLanesBaseDisp = dispinterface
    ['{63E3BC2C-AA5E-48CD-9ED2-D0A822206B27}']
    property VehRoutMngLns: IVehicleRouteManagedLanesContainer readonly dispid 1610809344;
    property ManagedLanesFacility: IManagedLanesFacility readonly dispid 1610809345;
    property DestLink: ILink readonly dispid 1610809346;
    property Link: ILink readonly dispid 1610809347;
    property VehClasses: IVehicleClassCollection readonly dispid 1610809348;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehicleRoutingDecisionManagedLanes
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E7B5D786-6944-48AB-843E-9CB57839AD20}
// *********************************************************************//
  IVehicleRoutingDecisionManagedLanes = interface(IVehicleRoutingDecisionManagedLanesBase)
    ['{E7B5D786-6944-48AB-843E-9CB57839AD20}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleRoutingDecisionManagedLanesDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E7B5D786-6944-48AB-843E-9CB57839AD20}
// *********************************************************************//
  IVehicleRoutingDecisionManagedLanesDisp = dispinterface
    ['{E7B5D786-6944-48AB-843E-9CB57839AD20}']
    property VehRoutMngLns: IVehicleRouteManagedLanesContainer readonly dispid 1610809344;
    property ManagedLanesFacility: IManagedLanesFacility readonly dispid 1610809345;
    property DestLink: ILink readonly dispid 1610809346;
    property Link: ILink readonly dispid 1610809347;
    property VehClasses: IVehicleClassCollection readonly dispid 1610809348;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehicleRouteManagedLanesContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1FA0554F-734E-4061-94C5-78B2F48F759C}
// *********************************************************************//
  IVehicleRouteManagedLanesContainerBase = interface(IVehicleRouteManagedLanesCollection)
    ['{1FA0554F-734E-4061-94C5-78B2F48F759C}']
    function Get_ItemByKey(Key: OleVariant): IVehicleRouteManagedLanes; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddVehicleRouteManagedLanes(Key: OleVariant; Type_: ManagedLaneType): IVehicleRouteManagedLanes; safecall;
    procedure RemoveVehicleRouteManagedLanes(const VehicleRouteManagedLanes: IVehicleRouteManagedLanes); safecall;
    property ItemByKey[Key: OleVariant]: IVehicleRouteManagedLanes read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IVehicleRouteManagedLanesContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1FA0554F-734E-4061-94C5-78B2F48F759C}
// *********************************************************************//
  IVehicleRouteManagedLanesContainerBaseDisp = dispinterface
    ['{1FA0554F-734E-4061-94C5-78B2F48F759C}']
    property ItemByKey[Key: OleVariant]: IVehicleRouteManagedLanes readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddVehicleRouteManagedLanes(Key: OleVariant; Type_: ManagedLaneType): IVehicleRouteManagedLanes; dispid 1610874882;
    procedure RemoveVehicleRouteManagedLanes(const VehicleRouteManagedLanes: IVehicleRouteManagedLanes); dispid 1610874883;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleRouteManagedLanesContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6626D429-26DA-45BA-85C4-DADB192D193E}
// *********************************************************************//
  IVehicleRouteManagedLanesContainer = interface(IVehicleRouteManagedLanesContainerBase)
    ['{6626D429-26DA-45BA-85C4-DADB192D193E}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleRouteManagedLanesContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6626D429-26DA-45BA-85C4-DADB192D193E}
// *********************************************************************//
  IVehicleRouteManagedLanesContainerDisp = dispinterface
    ['{6626D429-26DA-45BA-85C4-DADB192D193E}']
    property ItemByKey[Key: OleVariant]: IVehicleRouteManagedLanes readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddVehicleRouteManagedLanes(Key: OleVariant; Type_: ManagedLaneType): IVehicleRouteManagedLanes; dispid 1610874882;
    procedure RemoveVehicleRouteManagedLanes(const VehicleRouteManagedLanes: IVehicleRouteManagedLanes); dispid 1610874883;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleRouteParkingBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FCD371B0-B53F-4A33-BC5A-5EFED124B7CE}
// *********************************************************************//
  IVehicleRouteParkingBase = interface(IObjectBase)
    ['{FCD371B0-B53F-4A33-BC5A-5EFED124B7CE}']
    function Get_VehRoutDec: IVehicleRoutingDecisionParking; safecall;
    function Get_ParkLot: IParkingLot; safecall;
    function Get_LinkSeq: ILinkCollection; safecall;
    property VehRoutDec: IVehicleRoutingDecisionParking read Get_VehRoutDec;
    property ParkLot: IParkingLot read Get_ParkLot;
    property LinkSeq: ILinkCollection read Get_LinkSeq;
  end;

// *********************************************************************//
// DispIntf:  IVehicleRouteParkingBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FCD371B0-B53F-4A33-BC5A-5EFED124B7CE}
// *********************************************************************//
  IVehicleRouteParkingBaseDisp = dispinterface
    ['{FCD371B0-B53F-4A33-BC5A-5EFED124B7CE}']
    property VehRoutDec: IVehicleRoutingDecisionParking readonly dispid 1610809344;
    property ParkLot: IParkingLot readonly dispid 1610809345;
    property LinkSeq: ILinkCollection readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehicleRouteParking
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5AFA3CA2-5B82-474B-8D71-ADD1E0AAAAEA}
// *********************************************************************//
  IVehicleRouteParking = interface(IVehicleRouteParkingBase)
    ['{5AFA3CA2-5B82-474B-8D71-ADD1E0AAAAEA}']
    procedure UpdateLinkSequence(RouteSegments: OleVariant); safecall;
  end;

// *********************************************************************//
// DispIntf:  IVehicleRouteParkingDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5AFA3CA2-5B82-474B-8D71-ADD1E0AAAAEA}
// *********************************************************************//
  IVehicleRouteParkingDisp = dispinterface
    ['{5AFA3CA2-5B82-474B-8D71-ADD1E0AAAAEA}']
    procedure UpdateLinkSequence(RouteSegments: OleVariant); dispid 1610874880;
    property VehRoutDec: IVehicleRoutingDecisionParking readonly dispid 1610809344;
    property ParkLot: IParkingLot readonly dispid 1610809345;
    property LinkSeq: ILinkCollection readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehicleRoutingDecisionParkingBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {08BAB03B-CB87-4837-81D4-3AAE780018AD}
// *********************************************************************//
  IVehicleRoutingDecisionParkingBase = interface(IObjectBase)
    ['{08BAB03B-CB87-4837-81D4-3AAE780018AD}']
    function Get_VehRoutPark: IVehicleRouteParkingContainer; safecall;
    function Get_TimeIntParkRate: ITimeIntervalParkingRateContainer; safecall;
    function Get_Link: ILink; safecall;
    function Get_VehClasses: IVehicleClassCollection; safecall;
    property VehRoutPark: IVehicleRouteParkingContainer read Get_VehRoutPark;
    property TimeIntParkRate: ITimeIntervalParkingRateContainer read Get_TimeIntParkRate;
    property Link: ILink read Get_Link;
    property VehClasses: IVehicleClassCollection read Get_VehClasses;
  end;

// *********************************************************************//
// DispIntf:  IVehicleRoutingDecisionParkingBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {08BAB03B-CB87-4837-81D4-3AAE780018AD}
// *********************************************************************//
  IVehicleRoutingDecisionParkingBaseDisp = dispinterface
    ['{08BAB03B-CB87-4837-81D4-3AAE780018AD}']
    property VehRoutPark: IVehicleRouteParkingContainer readonly dispid 1610809344;
    property TimeIntParkRate: ITimeIntervalParkingRateContainer readonly dispid 1610809345;
    property Link: ILink readonly dispid 1610809346;
    property VehClasses: IVehicleClassCollection readonly dispid 1610809347;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehicleRoutingDecisionParking
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6AA5555C-1387-43B6-9D1A-23CDB4E87F41}
// *********************************************************************//
  IVehicleRoutingDecisionParking = interface(IVehicleRoutingDecisionParkingBase)
    ['{6AA5555C-1387-43B6-9D1A-23CDB4E87F41}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleRoutingDecisionParkingDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6AA5555C-1387-43B6-9D1A-23CDB4E87F41}
// *********************************************************************//
  IVehicleRoutingDecisionParkingDisp = dispinterface
    ['{6AA5555C-1387-43B6-9D1A-23CDB4E87F41}']
    property VehRoutPark: IVehicleRouteParkingContainer readonly dispid 1610809344;
    property TimeIntParkRate: ITimeIntervalParkingRateContainer readonly dispid 1610809345;
    property Link: ILink readonly dispid 1610809346;
    property VehClasses: IVehicleClassCollection readonly dispid 1610809347;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehicleRouteParkingContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A7729CCF-575F-4B0D-A7B1-C502BEA40FF4}
// *********************************************************************//
  IVehicleRouteParkingContainerBase = interface(IVehicleRouteParkingCollection)
    ['{A7729CCF-575F-4B0D-A7B1-C502BEA40FF4}']
    function Get_ItemByKey(Key: OleVariant): IVehicleRouteParking; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddVehicleRouteParking(Key: OleVariant; const ParkLot: IParkingLot): IVehicleRouteParking; safecall;
    function DuplicateVehicleRouteParking(Source: OleVariant; NewKey: OleVariant): IVehicleRouteParking; safecall;
    procedure RemoveVehicleRouteParking(const VehicleRouteParking: IVehicleRouteParking); safecall;
    property ItemByKey[Key: OleVariant]: IVehicleRouteParking read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IVehicleRouteParkingContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A7729CCF-575F-4B0D-A7B1-C502BEA40FF4}
// *********************************************************************//
  IVehicleRouteParkingContainerBaseDisp = dispinterface
    ['{A7729CCF-575F-4B0D-A7B1-C502BEA40FF4}']
    property ItemByKey[Key: OleVariant]: IVehicleRouteParking readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddVehicleRouteParking(Key: OleVariant; const ParkLot: IParkingLot): IVehicleRouteParking; dispid 1610874882;
    function DuplicateVehicleRouteParking(Source: OleVariant; NewKey: OleVariant): IVehicleRouteParking; dispid 1610874883;
    procedure RemoveVehicleRouteParking(const VehicleRouteParking: IVehicleRouteParking); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleRouteParkingContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {72341D0A-5A3E-46FB-969E-5078E884FBBC}
// *********************************************************************//
  IVehicleRouteParkingContainer = interface(IVehicleRouteParkingContainerBase)
    ['{72341D0A-5A3E-46FB-969E-5078E884FBBC}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleRouteParkingContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {72341D0A-5A3E-46FB-969E-5078E884FBBC}
// *********************************************************************//
  IVehicleRouteParkingContainerDisp = dispinterface
    ['{72341D0A-5A3E-46FB-969E-5078E884FBBC}']
    property ItemByKey[Key: OleVariant]: IVehicleRouteParking readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddVehicleRouteParking(Key: OleVariant; const ParkLot: IParkingLot): IVehicleRouteParking; dispid 1610874882;
    function DuplicateVehicleRouteParking(Source: OleVariant; NewKey: OleVariant): IVehicleRouteParking; dispid 1610874883;
    procedure RemoveVehicleRouteParking(const VehicleRouteParking: IVehicleRouteParking); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ITimeIntervalParkingRateCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E6480FA2-D097-4337-9EF4-FB9F1CCD76A3}
// *********************************************************************//
  ITimeIntervalParkingRateCollection = interface(ICollectionBase)
    ['{E6480FA2-D097-4337-9EF4-FB9F1CCD76A3}']
  end;

// *********************************************************************//
// DispIntf:  ITimeIntervalParkingRateCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E6480FA2-D097-4337-9EF4-FB9F1CCD76A3}
// *********************************************************************//
  ITimeIntervalParkingRateCollectionDisp = dispinterface
    ['{E6480FA2-D097-4337-9EF4-FB9F1CCD76A3}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ITimeIntervalParkingRateContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {16EC527E-85EF-47B3-B856-D94384CE305C}
// *********************************************************************//
  ITimeIntervalParkingRateContainerBase = interface(ITimeIntervalParkingRateCollection)
    ['{16EC527E-85EF-47B3-B856-D94384CE305C}']
  end;

// *********************************************************************//
// DispIntf:  ITimeIntervalParkingRateContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {16EC527E-85EF-47B3-B856-D94384CE305C}
// *********************************************************************//
  ITimeIntervalParkingRateContainerBaseDisp = dispinterface
    ['{16EC527E-85EF-47B3-B856-D94384CE305C}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ITimeIntervalParkingRateContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F2E73BB3-B3CD-4B33-94D0-E0ACE581826E}
// *********************************************************************//
  ITimeIntervalParkingRateContainer = interface(ITimeIntervalParkingRateContainerBase)
    ['{F2E73BB3-B3CD-4B33-94D0-E0ACE581826E}']
  end;

// *********************************************************************//
// DispIntf:  ITimeIntervalParkingRateContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F2E73BB3-B3CD-4B33-94D0-E0ACE581826E}
// *********************************************************************//
  ITimeIntervalParkingRateContainerDisp = dispinterface
    ['{F2E73BB3-B3CD-4B33-94D0-E0ACE581826E}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleRoutePartialPTBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F501FA7C-FEA8-4725-B620-9022EC969979}
// *********************************************************************//
  IVehicleRoutePartialPTBase = interface(IObjectBase)
    ['{F501FA7C-FEA8-4725-B620-9022EC969979}']
    function Get_PartLineStops: IPartialPTLineStopContainer; safecall;
    function Get_VehRoutDec: IVehicleRoutingDecisionPartialPT; safecall;
    function Get_DestLink: ILink; safecall;
    function Get_EntryLink: ILink; safecall;
    function Get_LinkSeq: ILinkCollection; safecall;
    property PartLineStops: IPartialPTLineStopContainer read Get_PartLineStops;
    property VehRoutDec: IVehicleRoutingDecisionPartialPT read Get_VehRoutDec;
    property DestLink: ILink read Get_DestLink;
    property EntryLink: ILink read Get_EntryLink;
    property LinkSeq: ILinkCollection read Get_LinkSeq;
  end;

// *********************************************************************//
// DispIntf:  IVehicleRoutePartialPTBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F501FA7C-FEA8-4725-B620-9022EC969979}
// *********************************************************************//
  IVehicleRoutePartialPTBaseDisp = dispinterface
    ['{F501FA7C-FEA8-4725-B620-9022EC969979}']
    property PartLineStops: IPartialPTLineStopContainer readonly dispid 1610809344;
    property VehRoutDec: IVehicleRoutingDecisionPartialPT readonly dispid 1610809345;
    property DestLink: ILink readonly dispid 1610809346;
    property EntryLink: ILink readonly dispid 1610809347;
    property LinkSeq: ILinkCollection readonly dispid 1610809348;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehicleRoutePartialPT
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C2EAD672-E361-4252-81C6-D20DB7A0B8C5}
// *********************************************************************//
  IVehicleRoutePartialPT = interface(IVehicleRoutePartialPTBase)
    ['{C2EAD672-E361-4252-81C6-D20DB7A0B8C5}']
    procedure UpdateLinkSequence(RouteSegments: OleVariant); safecall;
  end;

// *********************************************************************//
// DispIntf:  IVehicleRoutePartialPTDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C2EAD672-E361-4252-81C6-D20DB7A0B8C5}
// *********************************************************************//
  IVehicleRoutePartialPTDisp = dispinterface
    ['{C2EAD672-E361-4252-81C6-D20DB7A0B8C5}']
    procedure UpdateLinkSequence(RouteSegments: OleVariant); dispid 1610874880;
    property PartLineStops: IPartialPTLineStopContainer readonly dispid 1610809344;
    property VehRoutDec: IVehicleRoutingDecisionPartialPT readonly dispid 1610809345;
    property DestLink: ILink readonly dispid 1610809346;
    property EntryLink: ILink readonly dispid 1610809347;
    property LinkSeq: ILinkCollection readonly dispid 1610809348;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPartialPTLineStopContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8AEC7491-808D-4797-9857-7DDCD1002D06}
// *********************************************************************//
  IPartialPTLineStopContainerBase = interface(IPartialPTLineStopCollection)
    ['{8AEC7491-808D-4797-9857-7DDCD1002D06}']
  end;

// *********************************************************************//
// DispIntf:  IPartialPTLineStopContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8AEC7491-808D-4797-9857-7DDCD1002D06}
// *********************************************************************//
  IPartialPTLineStopContainerBaseDisp = dispinterface
    ['{8AEC7491-808D-4797-9857-7DDCD1002D06}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPartialPTLineStopContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6B6D4509-2FCE-4FA3-986E-E809F47A86BE}
// *********************************************************************//
  IPartialPTLineStopContainer = interface(IPartialPTLineStopContainerBase)
    ['{6B6D4509-2FCE-4FA3-986E-E809F47A86BE}']
  end;

// *********************************************************************//
// DispIntf:  IPartialPTLineStopContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6B6D4509-2FCE-4FA3-986E-E809F47A86BE}
// *********************************************************************//
  IPartialPTLineStopContainerDisp = dispinterface
    ['{6B6D4509-2FCE-4FA3-986E-E809F47A86BE}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleRoutingDecisionPartialPTBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A51008D7-2F62-4980-AEB8-396C56B5ECA2}
// *********************************************************************//
  IVehicleRoutingDecisionPartialPTBase = interface(IObjectBase)
    ['{A51008D7-2F62-4980-AEB8-396C56B5ECA2}']
    function Get_DestLink: ILink; safecall;
    function Get_VehRoutPartPT: IVehicleRoutePartialPTContainer; safecall;
    function Get_Link: ILink; safecall;
    function Get_PTLines: IPTLineCollection; safecall;
    property DestLink: ILink read Get_DestLink;
    property VehRoutPartPT: IVehicleRoutePartialPTContainer read Get_VehRoutPartPT;
    property Link: ILink read Get_Link;
    property PTLines: IPTLineCollection read Get_PTLines;
  end;

// *********************************************************************//
// DispIntf:  IVehicleRoutingDecisionPartialPTBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A51008D7-2F62-4980-AEB8-396C56B5ECA2}
// *********************************************************************//
  IVehicleRoutingDecisionPartialPTBaseDisp = dispinterface
    ['{A51008D7-2F62-4980-AEB8-396C56B5ECA2}']
    property DestLink: ILink readonly dispid 1610809344;
    property VehRoutPartPT: IVehicleRoutePartialPTContainer readonly dispid 1610809345;
    property Link: ILink readonly dispid 1610809346;
    property PTLines: IPTLineCollection readonly dispid 1610809347;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehicleRoutingDecisionPartialPT
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {522764FF-2B42-4ADD-AA98-BAABF12FC461}
// *********************************************************************//
  IVehicleRoutingDecisionPartialPT = interface(IVehicleRoutingDecisionPartialPTBase)
    ['{522764FF-2B42-4ADD-AA98-BAABF12FC461}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleRoutingDecisionPartialPTDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {522764FF-2B42-4ADD-AA98-BAABF12FC461}
// *********************************************************************//
  IVehicleRoutingDecisionPartialPTDisp = dispinterface
    ['{522764FF-2B42-4ADD-AA98-BAABF12FC461}']
    property DestLink: ILink readonly dispid 1610809344;
    property VehRoutPartPT: IVehicleRoutePartialPTContainer readonly dispid 1610809345;
    property Link: ILink readonly dispid 1610809346;
    property PTLines: IPTLineCollection readonly dispid 1610809347;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehicleRoutePartialPTContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CB019ACA-07D6-41BA-B1E4-ADB6A982323C}
// *********************************************************************//
  IVehicleRoutePartialPTContainerBase = interface(IVehicleRoutePartialPTCollection)
    ['{CB019ACA-07D6-41BA-B1E4-ADB6A982323C}']
    function Get_ItemByKey(Key: OleVariant): IVehicleRoutePartialPT; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddVehicleRoutePartialPT(Key: OleVariant): IVehicleRoutePartialPT; safecall;
    function DuplicateVehicleRoutePartialPT(Source: OleVariant; NewKey: OleVariant): IVehicleRoutePartialPT; safecall;
    procedure RemoveVehicleRoutePartialPT(const VehicleRoutePartialPT: IVehicleRoutePartialPT); safecall;
    property ItemByKey[Key: OleVariant]: IVehicleRoutePartialPT read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IVehicleRoutePartialPTContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CB019ACA-07D6-41BA-B1E4-ADB6A982323C}
// *********************************************************************//
  IVehicleRoutePartialPTContainerBaseDisp = dispinterface
    ['{CB019ACA-07D6-41BA-B1E4-ADB6A982323C}']
    property ItemByKey[Key: OleVariant]: IVehicleRoutePartialPT readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddVehicleRoutePartialPT(Key: OleVariant): IVehicleRoutePartialPT; dispid 1610874882;
    function DuplicateVehicleRoutePartialPT(Source: OleVariant; NewKey: OleVariant): IVehicleRoutePartialPT; dispid 1610874883;
    procedure RemoveVehicleRoutePartialPT(const VehicleRoutePartialPT: IVehicleRoutePartialPT); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleRoutePartialPTContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {576665FB-E02D-4E4D-8245-C127AF0B9399}
// *********************************************************************//
  IVehicleRoutePartialPTContainer = interface(IVehicleRoutePartialPTContainerBase)
    ['{576665FB-E02D-4E4D-8245-C127AF0B9399}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleRoutePartialPTContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {576665FB-E02D-4E4D-8245-C127AF0B9399}
// *********************************************************************//
  IVehicleRoutePartialPTContainerDisp = dispinterface
    ['{576665FB-E02D-4E4D-8245-C127AF0B9399}']
    property ItemByKey[Key: OleVariant]: IVehicleRoutePartialPT readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddVehicleRoutePartialPT(Key: OleVariant): IVehicleRoutePartialPT; dispid 1610874882;
    function DuplicateVehicleRoutePartialPT(Source: OleVariant; NewKey: OleVariant): IVehicleRoutePartialPT; dispid 1610874883;
    procedure RemoveVehicleRoutePartialPT(const VehicleRoutePartialPT: IVehicleRoutePartialPT); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPavementMarkingCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EB527A96-A0D5-42D1-BC1E-A15E8D92152B}
// *********************************************************************//
  IPavementMarkingCollection = interface(ICollectionBase)
    ['{EB527A96-A0D5-42D1-BC1E-A15E8D92152B}']
  end;

// *********************************************************************//
// DispIntf:  IPavementMarkingCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EB527A96-A0D5-42D1-BC1E-A15E8D92152B}
// *********************************************************************//
  IPavementMarkingCollectionDisp = dispinterface
    ['{EB527A96-A0D5-42D1-BC1E-A15E8D92152B}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPavementMarkingContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2707B03D-F2AF-41F6-813B-7F2739213A9F}
// *********************************************************************//
  IPavementMarkingContainerBase = interface(IPavementMarkingCollection)
    ['{2707B03D-F2AF-41F6-813B-7F2739213A9F}']
    function Get_ItemByKey(Key: OleVariant): IPavementMarking; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddPavementMarking(Key: OleVariant; const Lane: ILane; Pos: Double): IPavementMarking; safecall;
    function DuplicatePavementMarking(Source: OleVariant; NewKey: OleVariant): IPavementMarking; safecall;
    procedure RemovePavementMarking(const PavementMarking: IPavementMarking); safecall;
    property ItemByKey[Key: OleVariant]: IPavementMarking read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IPavementMarkingContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2707B03D-F2AF-41F6-813B-7F2739213A9F}
// *********************************************************************//
  IPavementMarkingContainerBaseDisp = dispinterface
    ['{2707B03D-F2AF-41F6-813B-7F2739213A9F}']
    property ItemByKey[Key: OleVariant]: IPavementMarking readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddPavementMarking(Key: OleVariant; const Lane: ILane; Pos: Double): IPavementMarking; dispid 1610874882;
    function DuplicatePavementMarking(Source: OleVariant; NewKey: OleVariant): IPavementMarking; dispid 1610874883;
    procedure RemovePavementMarking(const PavementMarking: IPavementMarking); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPavementMarkingContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {677FE03B-39CE-4473-AA7D-53F8CECECCCF}
// *********************************************************************//
  IPavementMarkingContainer = interface(IPavementMarkingContainerBase)
    ['{677FE03B-39CE-4473-AA7D-53F8CECECCCF}']
  end;

// *********************************************************************//
// DispIntf:  IPavementMarkingContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {677FE03B-39CE-4473-AA7D-53F8CECECCCF}
// *********************************************************************//
  IPavementMarkingContainerDisp = dispinterface
    ['{677FE03B-39CE-4473-AA7D-53F8CECECCCF}']
    property ItemByKey[Key: OleVariant]: IPavementMarking readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddPavementMarking(Key: OleVariant; const Lane: ILane; Pos: Double): IPavementMarking; dispid 1610874882;
    function DuplicatePavementMarking(Source: OleVariant; NewKey: OleVariant): IPavementMarking; dispid 1610874883;
    procedure RemovePavementMarking(const PavementMarking: IPavementMarking); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPavementMarkingBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {07C766C0-6588-440E-860D-4996E59462E3}
// *********************************************************************//
  IPavementMarkingBase = interface(IObjectBase)
    ['{07C766C0-6588-440E-860D-4996E59462E3}']
    function Get_Lane: ILane; safecall;
    property Lane: ILane read Get_Lane;
  end;

// *********************************************************************//
// DispIntf:  IPavementMarkingBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {07C766C0-6588-440E-860D-4996E59462E3}
// *********************************************************************//
  IPavementMarkingBaseDisp = dispinterface
    ['{07C766C0-6588-440E-860D-4996E59462E3}']
    property Lane: ILane readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPavementMarking
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B9D75B21-4723-41A6-82ED-FA7B6377E689}
// *********************************************************************//
  IPavementMarking = interface(IPavementMarkingBase)
    ['{B9D75B21-4723-41A6-82ED-FA7B6377E689}']
  end;

// *********************************************************************//
// DispIntf:  IPavementMarkingDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B9D75B21-4723-41A6-82ED-FA7B6377E689}
// *********************************************************************//
  IPavementMarkingDisp = dispinterface
    ['{B9D75B21-4723-41A6-82ED-FA7B6377E689}']
    property Lane: ILane readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPedestrianAttributeDecisionCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {80A06BB9-4503-4AE6-AE19-527770523804}
// *********************************************************************//
  IPedestrianAttributeDecisionCollection = interface(ICollectionBase)
    ['{80A06BB9-4503-4AE6-AE19-527770523804}']
  end;

// *********************************************************************//
// DispIntf:  IPedestrianAttributeDecisionCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {80A06BB9-4503-4AE6-AE19-527770523804}
// *********************************************************************//
  IPedestrianAttributeDecisionCollectionDisp = dispinterface
    ['{80A06BB9-4503-4AE6-AE19-527770523804}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPedestrianAttributeDecisionContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {97E39040-F5C3-4502-944D-A2EE77F44A0D}
// *********************************************************************//
  IPedestrianAttributeDecisionContainerBase = interface(IPedestrianAttributeDecisionCollection)
    ['{97E39040-F5C3-4502-944D-A2EE77F44A0D}']
    function Get_ItemByKey(Key: OleVariant): IPedestrianAttributeDecision; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddPedestrianAttributeDecision(Key: OleVariant; const Attr: WideString; 
                                            const Area: IArea; const Ramp: IRamp; 
                                            const Elevator: IElevator): IPedestrianAttributeDecision; safecall;
    function DuplicatePedestrianAttributeDecision(Source: OleVariant; NewKey: OleVariant): IPedestrianAttributeDecision; safecall;
    procedure RemovePedestrianAttributeDecision(const PedestrianAttributeDecision: IPedestrianAttributeDecision); safecall;
    property ItemByKey[Key: OleVariant]: IPedestrianAttributeDecision read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IPedestrianAttributeDecisionContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {97E39040-F5C3-4502-944D-A2EE77F44A0D}
// *********************************************************************//
  IPedestrianAttributeDecisionContainerBaseDisp = dispinterface
    ['{97E39040-F5C3-4502-944D-A2EE77F44A0D}']
    property ItemByKey[Key: OleVariant]: IPedestrianAttributeDecision readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddPedestrianAttributeDecision(Key: OleVariant; const Attr: WideString; 
                                            const Area: IArea; const Ramp: IRamp; 
                                            const Elevator: IElevator): IPedestrianAttributeDecision; dispid 1610874882;
    function DuplicatePedestrianAttributeDecision(Source: OleVariant; NewKey: OleVariant): IPedestrianAttributeDecision; dispid 1610874883;
    procedure RemovePedestrianAttributeDecision(const PedestrianAttributeDecision: IPedestrianAttributeDecision); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPedestrianAttributeDecisionContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {372B2F82-1309-4FBC-ABCC-4F38652C5393}
// *********************************************************************//
  IPedestrianAttributeDecisionContainer = interface(IPedestrianAttributeDecisionContainerBase)
    ['{372B2F82-1309-4FBC-ABCC-4F38652C5393}']
  end;

// *********************************************************************//
// DispIntf:  IPedestrianAttributeDecisionContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {372B2F82-1309-4FBC-ABCC-4F38652C5393}
// *********************************************************************//
  IPedestrianAttributeDecisionContainerDisp = dispinterface
    ['{372B2F82-1309-4FBC-ABCC-4F38652C5393}']
    property ItemByKey[Key: OleVariant]: IPedestrianAttributeDecision readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddPedestrianAttributeDecision(Key: OleVariant; const Attr: WideString; 
                                            const Area: IArea; const Ramp: IRamp; 
                                            const Elevator: IElevator): IPedestrianAttributeDecision; dispid 1610874882;
    function DuplicatePedestrianAttributeDecision(Source: OleVariant; NewKey: OleVariant): IPedestrianAttributeDecision; dispid 1610874883;
    procedure RemovePedestrianAttributeDecision(const PedestrianAttributeDecision: IPedestrianAttributeDecision); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPedestrianAttributeDecisionBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3D0C3771-0558-4F6A-9A52-F5832F2FFF40}
// *********************************************************************//
  IPedestrianAttributeDecisionBase = interface(IObjectBase)
    ['{3D0C3771-0558-4F6A-9A52-F5832F2FFF40}']
    function Get_Area: IArea; safecall;
    function Get_Ramp: IRamp; safecall;
    function Get_Elevator: IElevator; safecall;
    function Get_PedClasses: IPedestrianClassCollection; safecall;
    function Get_Distr: IFreeDistribution; safecall;
    property Area: IArea read Get_Area;
    property Ramp: IRamp read Get_Ramp;
    property Elevator: IElevator read Get_Elevator;
    property PedClasses: IPedestrianClassCollection read Get_PedClasses;
    property Distr: IFreeDistribution read Get_Distr;
  end;

// *********************************************************************//
// DispIntf:  IPedestrianAttributeDecisionBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3D0C3771-0558-4F6A-9A52-F5832F2FFF40}
// *********************************************************************//
  IPedestrianAttributeDecisionBaseDisp = dispinterface
    ['{3D0C3771-0558-4F6A-9A52-F5832F2FFF40}']
    property Area: IArea readonly dispid 1610809344;
    property Ramp: IRamp readonly dispid 1610809345;
    property Elevator: IElevator readonly dispid 1610809346;
    property PedClasses: IPedestrianClassCollection readonly dispid 1610809347;
    property Distr: IFreeDistribution readonly dispid 1610809348;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPedestrianAttributeDecision
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5F818864-779F-4612-9B38-52EAB406FDAA}
// *********************************************************************//
  IPedestrianAttributeDecision = interface(IPedestrianAttributeDecisionBase)
    ['{5F818864-779F-4612-9B38-52EAB406FDAA}']
  end;

// *********************************************************************//
// DispIntf:  IPedestrianAttributeDecisionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5F818864-779F-4612-9B38-52EAB406FDAA}
// *********************************************************************//
  IPedestrianAttributeDecisionDisp = dispinterface
    ['{5F818864-779F-4612-9B38-52EAB406FDAA}']
    property Area: IArea readonly dispid 1610809344;
    property Ramp: IRamp readonly dispid 1610809345;
    property Elevator: IElevator readonly dispid 1610809346;
    property PedClasses: IPedestrianClassCollection readonly dispid 1610809347;
    property Distr: IFreeDistribution readonly dispid 1610809348;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IRampBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {49795547-4AD4-4191-9CDA-E46FD2DE0EAC}
// *********************************************************************//
  IRampBase = interface(IObjectBase)
    ['{49795547-4AD4-4191-9CDA-E46FD2DE0EAC}']
    function Get_Points: IPointContainer; safecall;
    function Get_EndLvl: ILevel; safecall;
    function Get_DisplayType: IDisplayType; safecall;
    function Get_DwellTmDistr: ITimeDistribution; safecall;
    function Get_StartLvl: ILevel; safecall;
    function Get_UpLvl: ILevel; safecall;
    function Get_LowLvl: ILevel; safecall;
    function Get_LandingDisplType: IDisplayType; safecall;
    function Get_WalkPedClasses: IPedestrianClassCollection; safecall;
    function Get_HandrDisplType: IDisplayType; safecall;
    function Get_BalustrDisplType: IDisplayType; safecall;
    function Get_SocketDisplType: IDisplayType; safecall;
    function Get_AreaBehavTypFlat: IAreaBehaviorType; safecall;
    function Get_AreaBehavTypDown: IAreaBehaviorType; safecall;
    function Get_AreaBehavTypUp: IAreaBehaviorType; safecall;
    function Get_Peds: IPedestrianCollection; safecall;
    function Get_PedRoutPart: IPedestrianRoutePartialCollection; safecall;
    function Get_PedRoutSta: IPedestrianRouteStaticCollection; safecall;
    property Points: IPointContainer read Get_Points;
    property EndLvl: ILevel read Get_EndLvl;
    property DisplayType: IDisplayType read Get_DisplayType;
    property DwellTmDistr: ITimeDistribution read Get_DwellTmDistr;
    property StartLvl: ILevel read Get_StartLvl;
    property UpLvl: ILevel read Get_UpLvl;
    property LowLvl: ILevel read Get_LowLvl;
    property LandingDisplType: IDisplayType read Get_LandingDisplType;
    property WalkPedClasses: IPedestrianClassCollection read Get_WalkPedClasses;
    property HandrDisplType: IDisplayType read Get_HandrDisplType;
    property BalustrDisplType: IDisplayType read Get_BalustrDisplType;
    property SocketDisplType: IDisplayType read Get_SocketDisplType;
    property AreaBehavTypFlat: IAreaBehaviorType read Get_AreaBehavTypFlat;
    property AreaBehavTypDown: IAreaBehaviorType read Get_AreaBehavTypDown;
    property AreaBehavTypUp: IAreaBehaviorType read Get_AreaBehavTypUp;
    property Peds: IPedestrianCollection read Get_Peds;
    property PedRoutPart: IPedestrianRoutePartialCollection read Get_PedRoutPart;
    property PedRoutSta: IPedestrianRouteStaticCollection read Get_PedRoutSta;
  end;

// *********************************************************************//
// DispIntf:  IRampBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {49795547-4AD4-4191-9CDA-E46FD2DE0EAC}
// *********************************************************************//
  IRampBaseDisp = dispinterface
    ['{49795547-4AD4-4191-9CDA-E46FD2DE0EAC}']
    property Points: IPointContainer readonly dispid 1610809344;
    property EndLvl: ILevel readonly dispid 1610809345;
    property DisplayType: IDisplayType readonly dispid 1610809346;
    property DwellTmDistr: ITimeDistribution readonly dispid 1610809347;
    property StartLvl: ILevel readonly dispid 1610809348;
    property UpLvl: ILevel readonly dispid 1610809349;
    property LowLvl: ILevel readonly dispid 1610809350;
    property LandingDisplType: IDisplayType readonly dispid 1610809351;
    property WalkPedClasses: IPedestrianClassCollection readonly dispid 1610809352;
    property HandrDisplType: IDisplayType readonly dispid 1610809353;
    property BalustrDisplType: IDisplayType readonly dispid 1610809354;
    property SocketDisplType: IDisplayType readonly dispid 1610809355;
    property AreaBehavTypFlat: IAreaBehaviorType readonly dispid 1610809356;
    property AreaBehavTypDown: IAreaBehaviorType readonly dispid 1610809357;
    property AreaBehavTypUp: IAreaBehaviorType readonly dispid 1610809358;
    property Peds: IPedestrianCollection readonly dispid 1610809359;
    property PedRoutPart: IPedestrianRoutePartialCollection readonly dispid 1610809360;
    property PedRoutSta: IPedestrianRouteStaticCollection readonly dispid 1610809361;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IRamp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A42E9ECA-F203-4C16-9627-7DD6B508D2AD}
// *********************************************************************//
  IRamp = interface(IRampBase)
    ['{A42E9ECA-F203-4C16-9627-7DD6B508D2AD}']
  end;

// *********************************************************************//
// DispIntf:  IRampDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A42E9ECA-F203-4C16-9627-7DD6B508D2AD}
// *********************************************************************//
  IRampDisp = dispinterface
    ['{A42E9ECA-F203-4C16-9627-7DD6B508D2AD}']
    property Points: IPointContainer readonly dispid 1610809344;
    property EndLvl: ILevel readonly dispid 1610809345;
    property DisplayType: IDisplayType readonly dispid 1610809346;
    property DwellTmDistr: ITimeDistribution readonly dispid 1610809347;
    property StartLvl: ILevel readonly dispid 1610809348;
    property UpLvl: ILevel readonly dispid 1610809349;
    property LowLvl: ILevel readonly dispid 1610809350;
    property LandingDisplType: IDisplayType readonly dispid 1610809351;
    property WalkPedClasses: IPedestrianClassCollection readonly dispid 1610809352;
    property HandrDisplType: IDisplayType readonly dispid 1610809353;
    property BalustrDisplType: IDisplayType readonly dispid 1610809354;
    property SocketDisplType: IDisplayType readonly dispid 1610809355;
    property AreaBehavTypFlat: IAreaBehaviorType readonly dispid 1610809356;
    property AreaBehavTypDown: IAreaBehaviorType readonly dispid 1610809357;
    property AreaBehavTypUp: IAreaBehaviorType readonly dispid 1610809358;
    property Peds: IPedestrianCollection readonly dispid 1610809359;
    property PedRoutPart: IPedestrianRoutePartialCollection readonly dispid 1610809360;
    property PedRoutSta: IPedestrianRouteStaticCollection readonly dispid 1610809361;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPedestrianClassContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1E6F764B-80AC-465D-9DA0-B861CA7C9283}
// *********************************************************************//
  IPedestrianClassContainerBase = interface(IPedestrianClassCollection)
    ['{1E6F764B-80AC-465D-9DA0-B861CA7C9283}']
    function Get_ItemByKey(Key: OleVariant): IPedestrianClass; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddPedestrianClass(Key: OleVariant): IPedestrianClass; safecall;
    function DuplicatePedestrianClass(Source: OleVariant; NewKey: OleVariant): IPedestrianClass; safecall;
    procedure RemovePedestrianClass(const PedestrianClass: IPedestrianClass); safecall;
    property ItemByKey[Key: OleVariant]: IPedestrianClass read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IPedestrianClassContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1E6F764B-80AC-465D-9DA0-B861CA7C9283}
// *********************************************************************//
  IPedestrianClassContainerBaseDisp = dispinterface
    ['{1E6F764B-80AC-465D-9DA0-B861CA7C9283}']
    property ItemByKey[Key: OleVariant]: IPedestrianClass readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddPedestrianClass(Key: OleVariant): IPedestrianClass; dispid 1610874882;
    function DuplicatePedestrianClass(Source: OleVariant; NewKey: OleVariant): IPedestrianClass; dispid 1610874883;
    procedure RemovePedestrianClass(const PedestrianClass: IPedestrianClass); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPedestrianClassContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7547A314-C63B-4AFE-B3F5-F251A0BBC75B}
// *********************************************************************//
  IPedestrianClassContainer = interface(IPedestrianClassContainerBase)
    ['{7547A314-C63B-4AFE-B3F5-F251A0BBC75B}']
  end;

// *********************************************************************//
// DispIntf:  IPedestrianClassContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7547A314-C63B-4AFE-B3F5-F251A0BBC75B}
// *********************************************************************//
  IPedestrianClassContainerDisp = dispinterface
    ['{7547A314-C63B-4AFE-B3F5-F251A0BBC75B}']
    property ItemByKey[Key: OleVariant]: IPedestrianClass readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddPedestrianClass(Key: OleVariant): IPedestrianClass; dispid 1610874882;
    function DuplicatePedestrianClass(Source: OleVariant; NewKey: OleVariant): IPedestrianClass; dispid 1610874883;
    procedure RemovePedestrianClass(const PedestrianClass: IPedestrianClass); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPedestrianCompositionCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2DDF327A-AF2C-49DA-BE02-E8AF0B89DCA1}
// *********************************************************************//
  IPedestrianCompositionCollection = interface(ICollectionBase)
    ['{2DDF327A-AF2C-49DA-BE02-E8AF0B89DCA1}']
  end;

// *********************************************************************//
// DispIntf:  IPedestrianCompositionCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2DDF327A-AF2C-49DA-BE02-E8AF0B89DCA1}
// *********************************************************************//
  IPedestrianCompositionCollectionDisp = dispinterface
    ['{2DDF327A-AF2C-49DA-BE02-E8AF0B89DCA1}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPedestrianCompositionContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {851178F8-9C80-416D-AD59-CA802A72721E}
// *********************************************************************//
  IPedestrianCompositionContainerBase = interface(IPedestrianCompositionCollection)
    ['{851178F8-9C80-416D-AD59-CA802A72721E}']
    function Get_ItemByKey(Key: OleVariant): IPedestrianComposition; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddPedestrianComposition(Key: OleVariant; PedCompRelFlows: OleVariant): IPedestrianComposition; safecall;
    function DuplicatePedestrianComposition(Source: OleVariant; NewKey: OleVariant): IPedestrianComposition; safecall;
    procedure RemovePedestrianComposition(const PedestrianComposition: IPedestrianComposition); safecall;
    property ItemByKey[Key: OleVariant]: IPedestrianComposition read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IPedestrianCompositionContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {851178F8-9C80-416D-AD59-CA802A72721E}
// *********************************************************************//
  IPedestrianCompositionContainerBaseDisp = dispinterface
    ['{851178F8-9C80-416D-AD59-CA802A72721E}']
    property ItemByKey[Key: OleVariant]: IPedestrianComposition readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddPedestrianComposition(Key: OleVariant; PedCompRelFlows: OleVariant): IPedestrianComposition; dispid 1610874882;
    function DuplicatePedestrianComposition(Source: OleVariant; NewKey: OleVariant): IPedestrianComposition; dispid 1610874883;
    procedure RemovePedestrianComposition(const PedestrianComposition: IPedestrianComposition); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPedestrianCompositionContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C342BF27-F447-4AF8-B1ED-42986A86677C}
// *********************************************************************//
  IPedestrianCompositionContainer = interface(IPedestrianCompositionContainerBase)
    ['{C342BF27-F447-4AF8-B1ED-42986A86677C}']
  end;

// *********************************************************************//
// DispIntf:  IPedestrianCompositionContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C342BF27-F447-4AF8-B1ED-42986A86677C}
// *********************************************************************//
  IPedestrianCompositionContainerDisp = dispinterface
    ['{C342BF27-F447-4AF8-B1ED-42986A86677C}']
    property ItemByKey[Key: OleVariant]: IPedestrianComposition readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddPedestrianComposition(Key: OleVariant; PedCompRelFlows: OleVariant): IPedestrianComposition; dispid 1610874882;
    function DuplicatePedestrianComposition(Source: OleVariant; NewKey: OleVariant): IPedestrianComposition; dispid 1610874883;
    procedure RemovePedestrianComposition(const PedestrianComposition: IPedestrianComposition); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPedestrianCompositionBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1A7826CA-6B81-4A53-9F1A-E8E08EC47998}
// *********************************************************************//
  IPedestrianCompositionBase = interface(IObjectBase)
    ['{1A7826CA-6B81-4A53-9F1A-E8E08EC47998}']
    function Get_PedCompRelFlows: IPedestrianCompositionRelativeFlowContainer; safecall;
    property PedCompRelFlows: IPedestrianCompositionRelativeFlowContainer read Get_PedCompRelFlows;
  end;

// *********************************************************************//
// DispIntf:  IPedestrianCompositionBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1A7826CA-6B81-4A53-9F1A-E8E08EC47998}
// *********************************************************************//
  IPedestrianCompositionBaseDisp = dispinterface
    ['{1A7826CA-6B81-4A53-9F1A-E8E08EC47998}']
    property PedCompRelFlows: IPedestrianCompositionRelativeFlowContainer readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPedestrianComposition
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5BEC0534-54F8-4EC2-871C-011DC351074F}
// *********************************************************************//
  IPedestrianComposition = interface(IPedestrianCompositionBase)
    ['{5BEC0534-54F8-4EC2-871C-011DC351074F}']
  end;

// *********************************************************************//
// DispIntf:  IPedestrianCompositionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5BEC0534-54F8-4EC2-871C-011DC351074F}
// *********************************************************************//
  IPedestrianCompositionDisp = dispinterface
    ['{5BEC0534-54F8-4EC2-871C-011DC351074F}']
    property PedCompRelFlows: IPedestrianCompositionRelativeFlowContainer readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPedestrianCompositionRelativeFlowCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A798D5DA-450B-4F70-8F21-FC7D02A2CBCA}
// *********************************************************************//
  IPedestrianCompositionRelativeFlowCollection = interface(ICollectionBase)
    ['{A798D5DA-450B-4F70-8F21-FC7D02A2CBCA}']
  end;

// *********************************************************************//
// DispIntf:  IPedestrianCompositionRelativeFlowCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A798D5DA-450B-4F70-8F21-FC7D02A2CBCA}
// *********************************************************************//
  IPedestrianCompositionRelativeFlowCollectionDisp = dispinterface
    ['{A798D5DA-450B-4F70-8F21-FC7D02A2CBCA}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPedestrianCompositionRelativeFlowContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4353AD08-F71C-49BF-AED7-3306636FB906}
// *********************************************************************//
  IPedestrianCompositionRelativeFlowContainerBase = interface(IPedestrianCompositionRelativeFlowCollection)
    ['{4353AD08-F71C-49BF-AED7-3306636FB906}']
    function AddPedestrianCompositionRelativeFlow(const PedType: IPedestrianType; 
                                                  const DesSpeedDistr: IDesSpeedDistribution): IPedestrianCompositionRelativeFlow; safecall;
    procedure RemovePedestrianCompositionRelativeFlow(const PedestrianCompositionRelativeFlow: IPedestrianCompositionRelativeFlow); safecall;
  end;

// *********************************************************************//
// DispIntf:  IPedestrianCompositionRelativeFlowContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4353AD08-F71C-49BF-AED7-3306636FB906}
// *********************************************************************//
  IPedestrianCompositionRelativeFlowContainerBaseDisp = dispinterface
    ['{4353AD08-F71C-49BF-AED7-3306636FB906}']
    function AddPedestrianCompositionRelativeFlow(const PedType: IPedestrianType; 
                                                  const DesSpeedDistr: IDesSpeedDistribution): IPedestrianCompositionRelativeFlow; dispid 1610874880;
    procedure RemovePedestrianCompositionRelativeFlow(const PedestrianCompositionRelativeFlow: IPedestrianCompositionRelativeFlow); dispid 1610874881;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPedestrianCompositionRelativeFlowContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F78CD02E-2AD8-4A47-A131-8B44247EBD2C}
// *********************************************************************//
  IPedestrianCompositionRelativeFlowContainer = interface(IPedestrianCompositionRelativeFlowContainerBase)
    ['{F78CD02E-2AD8-4A47-A131-8B44247EBD2C}']
  end;

// *********************************************************************//
// DispIntf:  IPedestrianCompositionRelativeFlowContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F78CD02E-2AD8-4A47-A131-8B44247EBD2C}
// *********************************************************************//
  IPedestrianCompositionRelativeFlowContainerDisp = dispinterface
    ['{F78CD02E-2AD8-4A47-A131-8B44247EBD2C}']
    function AddPedestrianCompositionRelativeFlow(const PedType: IPedestrianType; 
                                                  const DesSpeedDistr: IDesSpeedDistribution): IPedestrianCompositionRelativeFlow; dispid 1610874880;
    procedure RemovePedestrianCompositionRelativeFlow(const PedestrianCompositionRelativeFlow: IPedestrianCompositionRelativeFlow); dispid 1610874881;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPedestrianCompositionRelativeFlowBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B4C01184-6236-41E3-9BAD-87B84DA29E8B}
// *********************************************************************//
  IPedestrianCompositionRelativeFlowBase = interface(IObjectBase)
    ['{B4C01184-6236-41E3-9BAD-87B84DA29E8B}']
    function Get_DesSpeedDistr: IDesSpeedDistribution; safecall;
    function Get_PedType: IPedestrianType; safecall;
    function Get_PedComp: IPedestrianComposition; safecall;
    property DesSpeedDistr: IDesSpeedDistribution read Get_DesSpeedDistr;
    property PedType: IPedestrianType read Get_PedType;
    property PedComp: IPedestrianComposition read Get_PedComp;
  end;

// *********************************************************************//
// DispIntf:  IPedestrianCompositionRelativeFlowBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B4C01184-6236-41E3-9BAD-87B84DA29E8B}
// *********************************************************************//
  IPedestrianCompositionRelativeFlowBaseDisp = dispinterface
    ['{B4C01184-6236-41E3-9BAD-87B84DA29E8B}']
    property DesSpeedDistr: IDesSpeedDistribution readonly dispid 1610809344;
    property PedType: IPedestrianType readonly dispid 1610809345;
    property PedComp: IPedestrianComposition readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPedestrianCompositionRelativeFlow
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A35A2843-4073-4001-985F-4ADCBA93E249}
// *********************************************************************//
  IPedestrianCompositionRelativeFlow = interface(IPedestrianCompositionRelativeFlowBase)
    ['{A35A2843-4073-4001-985F-4ADCBA93E249}']
  end;

// *********************************************************************//
// DispIntf:  IPedestrianCompositionRelativeFlowDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A35A2843-4073-4001-985F-4ADCBA93E249}
// *********************************************************************//
  IPedestrianCompositionRelativeFlowDisp = dispinterface
    ['{A35A2843-4073-4001-985F-4ADCBA93E249}']
    property DesSpeedDistr: IDesSpeedDistribution readonly dispid 1610809344;
    property PedType: IPedestrianType readonly dispid 1610809345;
    property PedComp: IPedestrianComposition readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPedestrianInputContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DE9E540E-0AB6-4CBE-A5F1-CAC0555BA9E9}
// *********************************************************************//
  IPedestrianInputContainerBase = interface(IPedestrianInputCollection)
    ['{DE9E540E-0AB6-4CBE-A5F1-CAC0555BA9E9}']
    function Get_ItemByKey(Key: OleVariant): IPedestrianInput; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddPedestrianInput(Key: OleVariant; const Area: IArea): IPedestrianInput; safecall;
    function DuplicatePedestrianInput(Source: OleVariant; NewKey: OleVariant): IPedestrianInput; safecall;
    procedure RemovePedestrianInput(const PedestrianInput: IPedestrianInput); safecall;
    property ItemByKey[Key: OleVariant]: IPedestrianInput read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IPedestrianInputContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DE9E540E-0AB6-4CBE-A5F1-CAC0555BA9E9}
// *********************************************************************//
  IPedestrianInputContainerBaseDisp = dispinterface
    ['{DE9E540E-0AB6-4CBE-A5F1-CAC0555BA9E9}']
    property ItemByKey[Key: OleVariant]: IPedestrianInput readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddPedestrianInput(Key: OleVariant; const Area: IArea): IPedestrianInput; dispid 1610874882;
    function DuplicatePedestrianInput(Source: OleVariant; NewKey: OleVariant): IPedestrianInput; dispid 1610874883;
    procedure RemovePedestrianInput(const PedestrianInput: IPedestrianInput); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPedestrianInputContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {26677FE0-DB95-4C0A-ACED-14D1B6A37531}
// *********************************************************************//
  IPedestrianInputContainer = interface(IPedestrianInputContainerBase)
    ['{26677FE0-DB95-4C0A-ACED-14D1B6A37531}']
  end;

// *********************************************************************//
// DispIntf:  IPedestrianInputContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {26677FE0-DB95-4C0A-ACED-14D1B6A37531}
// *********************************************************************//
  IPedestrianInputContainerDisp = dispinterface
    ['{26677FE0-DB95-4C0A-ACED-14D1B6A37531}']
    property ItemByKey[Key: OleVariant]: IPedestrianInput readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddPedestrianInput(Key: OleVariant; const Area: IArea): IPedestrianInput; dispid 1610874882;
    function DuplicatePedestrianInput(Source: OleVariant; NewKey: OleVariant): IPedestrianInput; dispid 1610874883;
    procedure RemovePedestrianInput(const PedestrianInput: IPedestrianInput); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPedestrianInputBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CCC3FAD4-684C-489C-96B1-3C64B660AA18}
// *********************************************************************//
  IPedestrianInputBase = interface(IObjectBase)
    ['{CCC3FAD4-684C-489C-96B1-3C64B660AA18}']
    function Get_Area: IArea; safecall;
    function Get_TimeIntPedVols: ITimeIntervalPedVolumeContainer; safecall;
    property Area: IArea read Get_Area;
    property TimeIntPedVols: ITimeIntervalPedVolumeContainer read Get_TimeIntPedVols;
  end;

// *********************************************************************//
// DispIntf:  IPedestrianInputBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CCC3FAD4-684C-489C-96B1-3C64B660AA18}
// *********************************************************************//
  IPedestrianInputBaseDisp = dispinterface
    ['{CCC3FAD4-684C-489C-96B1-3C64B660AA18}']
    property Area: IArea readonly dispid 1610809344;
    property TimeIntPedVols: ITimeIntervalPedVolumeContainer readonly dispid 1610809345;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPedestrianInput
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {49D9A094-37E0-4D41-BA3C-9F810F08D879}
// *********************************************************************//
  IPedestrianInput = interface(IPedestrianInputBase)
    ['{49D9A094-37E0-4D41-BA3C-9F810F08D879}']
  end;

// *********************************************************************//
// DispIntf:  IPedestrianInputDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {49D9A094-37E0-4D41-BA3C-9F810F08D879}
// *********************************************************************//
  IPedestrianInputDisp = dispinterface
    ['{49D9A094-37E0-4D41-BA3C-9F810F08D879}']
    property Area: IArea readonly dispid 1610809344;
    property TimeIntPedVols: ITimeIntervalPedVolumeContainer readonly dispid 1610809345;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ITimeIntervalPedVolumeCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8915952C-D2A9-443B-9115-738374251253}
// *********************************************************************//
  ITimeIntervalPedVolumeCollection = interface(ICollectionBase)
    ['{8915952C-D2A9-443B-9115-738374251253}']
  end;

// *********************************************************************//
// DispIntf:  ITimeIntervalPedVolumeCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8915952C-D2A9-443B-9115-738374251253}
// *********************************************************************//
  ITimeIntervalPedVolumeCollectionDisp = dispinterface
    ['{8915952C-D2A9-443B-9115-738374251253}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ITimeIntervalPedVolumeContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {134B2ADC-79C6-45D7-B5BC-1E7243D04C43}
// *********************************************************************//
  ITimeIntervalPedVolumeContainerBase = interface(ITimeIntervalPedVolumeCollection)
    ['{134B2ADC-79C6-45D7-B5BC-1E7243D04C43}']
  end;

// *********************************************************************//
// DispIntf:  ITimeIntervalPedVolumeContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {134B2ADC-79C6-45D7-B5BC-1E7243D04C43}
// *********************************************************************//
  ITimeIntervalPedVolumeContainerBaseDisp = dispinterface
    ['{134B2ADC-79C6-45D7-B5BC-1E7243D04C43}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ITimeIntervalPedVolumeContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {82E15A42-29F8-4986-A3C6-6C50ADE2D4A5}
// *********************************************************************//
  ITimeIntervalPedVolumeContainer = interface(ITimeIntervalPedVolumeContainerBase)
    ['{82E15A42-29F8-4986-A3C6-6C50ADE2D4A5}']
  end;

// *********************************************************************//
// DispIntf:  ITimeIntervalPedVolumeContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {82E15A42-29F8-4986-A3C6-6C50ADE2D4A5}
// *********************************************************************//
  ITimeIntervalPedVolumeContainerDisp = dispinterface
    ['{82E15A42-29F8-4986-A3C6-6C50ADE2D4A5}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPedestrianNetworkPerformanceMeasurementBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E9687D32-163B-4ABB-BD84-63B801EBA8FE}
// *********************************************************************//
  IPedestrianNetworkPerformanceMeasurementBase = interface(IObjectBase)
    ['{E9687D32-163B-4ABB-BD84-63B801EBA8FE}']
  end;

// *********************************************************************//
// DispIntf:  IPedestrianNetworkPerformanceMeasurementBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E9687D32-163B-4ABB-BD84-63B801EBA8FE}
// *********************************************************************//
  IPedestrianNetworkPerformanceMeasurementBaseDisp = dispinterface
    ['{E9687D32-163B-4ABB-BD84-63B801EBA8FE}']
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPedestrianNetworkPerformanceMeasurement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {346B9614-86E8-42DF-B12B-5EA87478C6CB}
// *********************************************************************//
  IPedestrianNetworkPerformanceMeasurement = interface(IPedestrianNetworkPerformanceMeasurementBase)
    ['{346B9614-86E8-42DF-B12B-5EA87478C6CB}']
  end;

// *********************************************************************//
// DispIntf:  IPedestrianNetworkPerformanceMeasurementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {346B9614-86E8-42DF-B12B-5EA87478C6CB}
// *********************************************************************//
  IPedestrianNetworkPerformanceMeasurementDisp = dispinterface
    ['{346B9614-86E8-42DF-B12B-5EA87478C6CB}']
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPedestrianRoutingDecisionPartialContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B25627AB-BF33-4228-AD81-6D07C5A5787A}
// *********************************************************************//
  IPedestrianRoutingDecisionPartialContainerBase = interface(IPedestrianRoutingDecisionPartialCollection)
    ['{B25627AB-BF33-4228-AD81-6D07C5A5787A}']
    function Get_ItemByKey(Key: OleVariant): IPedestrianRoutingDecisionPartial; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddPedestrianRoutingDecisionPartial(Key: OleVariant; const Area: IArea): IPedestrianRoutingDecisionPartial; safecall;
    function DuplicatePedestrianRoutingDecisionPartial(Source: OleVariant; NewKey: OleVariant): IPedestrianRoutingDecisionPartial; safecall;
    procedure RemovePedestrianRoutingDecisionPartial(const PedestrianRoutingDecisionPartial: IPedestrianRoutingDecisionPartial); safecall;
    property ItemByKey[Key: OleVariant]: IPedestrianRoutingDecisionPartial read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IPedestrianRoutingDecisionPartialContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B25627AB-BF33-4228-AD81-6D07C5A5787A}
// *********************************************************************//
  IPedestrianRoutingDecisionPartialContainerBaseDisp = dispinterface
    ['{B25627AB-BF33-4228-AD81-6D07C5A5787A}']
    property ItemByKey[Key: OleVariant]: IPedestrianRoutingDecisionPartial readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddPedestrianRoutingDecisionPartial(Key: OleVariant; const Area: IArea): IPedestrianRoutingDecisionPartial; dispid 1610874882;
    function DuplicatePedestrianRoutingDecisionPartial(Source: OleVariant; NewKey: OleVariant): IPedestrianRoutingDecisionPartial; dispid 1610874883;
    procedure RemovePedestrianRoutingDecisionPartial(const PedestrianRoutingDecisionPartial: IPedestrianRoutingDecisionPartial); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPedestrianRoutingDecisionPartialContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DD5BF0F8-2A69-4478-A4AF-750CC9FC9C86}
// *********************************************************************//
  IPedestrianRoutingDecisionPartialContainer = interface(IPedestrianRoutingDecisionPartialContainerBase)
    ['{DD5BF0F8-2A69-4478-A4AF-750CC9FC9C86}']
  end;

// *********************************************************************//
// DispIntf:  IPedestrianRoutingDecisionPartialContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DD5BF0F8-2A69-4478-A4AF-750CC9FC9C86}
// *********************************************************************//
  IPedestrianRoutingDecisionPartialContainerDisp = dispinterface
    ['{DD5BF0F8-2A69-4478-A4AF-750CC9FC9C86}']
    property ItemByKey[Key: OleVariant]: IPedestrianRoutingDecisionPartial readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddPedestrianRoutingDecisionPartial(Key: OleVariant; const Area: IArea): IPedestrianRoutingDecisionPartial; dispid 1610874882;
    function DuplicatePedestrianRoutingDecisionPartial(Source: OleVariant; NewKey: OleVariant): IPedestrianRoutingDecisionPartial; dispid 1610874883;
    procedure RemovePedestrianRoutingDecisionPartial(const PedestrianRoutingDecisionPartial: IPedestrianRoutingDecisionPartial); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPedestrianRoutingDecisionPartialBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {75136365-8938-47A1-B47A-A68D136FB097}
// *********************************************************************//
  IPedestrianRoutingDecisionPartialBase = interface(IObjectBase)
    ['{75136365-8938-47A1-B47A-A68D136FB097}']
    function Get_PedRoutPart: IPedestrianRoutePartialContainer; safecall;
    function Get_Area: IArea; safecall;
    function Get_PedClasses: IPedestrianClassCollection; safecall;
    property PedRoutPart: IPedestrianRoutePartialContainer read Get_PedRoutPart;
    property Area: IArea read Get_Area;
    property PedClasses: IPedestrianClassCollection read Get_PedClasses;
  end;

// *********************************************************************//
// DispIntf:  IPedestrianRoutingDecisionPartialBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {75136365-8938-47A1-B47A-A68D136FB097}
// *********************************************************************//
  IPedestrianRoutingDecisionPartialBaseDisp = dispinterface
    ['{75136365-8938-47A1-B47A-A68D136FB097}']
    property PedRoutPart: IPedestrianRoutePartialContainer readonly dispid 1610809344;
    property Area: IArea readonly dispid 1610809345;
    property PedClasses: IPedestrianClassCollection readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPedestrianRoutingDecisionPartial
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {39D52D00-376A-42CA-8DFF-EA77FE8E8C22}
// *********************************************************************//
  IPedestrianRoutingDecisionPartial = interface(IPedestrianRoutingDecisionPartialBase)
    ['{39D52D00-376A-42CA-8DFF-EA77FE8E8C22}']
  end;

// *********************************************************************//
// DispIntf:  IPedestrianRoutingDecisionPartialDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {39D52D00-376A-42CA-8DFF-EA77FE8E8C22}
// *********************************************************************//
  IPedestrianRoutingDecisionPartialDisp = dispinterface
    ['{39D52D00-376A-42CA-8DFF-EA77FE8E8C22}']
    property PedRoutPart: IPedestrianRoutePartialContainer readonly dispid 1610809344;
    property Area: IArea readonly dispid 1610809345;
    property PedClasses: IPedestrianClassCollection readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPedestrianRoutePartialContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C7C1D0A2-A952-4023-9B51-D248F2B92A1A}
// *********************************************************************//
  IPedestrianRoutePartialContainerBase = interface(IPedestrianRoutePartialCollection)
    ['{C7C1D0A2-A952-4023-9B51-D248F2B92A1A}']
    function Get_ItemByKey(Key: OleVariant): IPedestrianRoutePartial; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function DuplicatePedestrianRoutePartial(Source: OleVariant; NewKey: OleVariant): IPedestrianRoutePartial; safecall;
    procedure RemovePedestrianRoutePartial(const PedestrianRoutePartial: IPedestrianRoutePartial); safecall;
    property ItemByKey[Key: OleVariant]: IPedestrianRoutePartial read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IPedestrianRoutePartialContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C7C1D0A2-A952-4023-9B51-D248F2B92A1A}
// *********************************************************************//
  IPedestrianRoutePartialContainerBaseDisp = dispinterface
    ['{C7C1D0A2-A952-4023-9B51-D248F2B92A1A}']
    property ItemByKey[Key: OleVariant]: IPedestrianRoutePartial readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function DuplicatePedestrianRoutePartial(Source: OleVariant; NewKey: OleVariant): IPedestrianRoutePartial; dispid 1610874882;
    procedure RemovePedestrianRoutePartial(const PedestrianRoutePartial: IPedestrianRoutePartial); dispid 1610874883;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPedestrianRoutePartialContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E82696A9-1678-448D-A12D-B7A2C2CA7B87}
// *********************************************************************//
  IPedestrianRoutePartialContainer = interface(IPedestrianRoutePartialContainerBase)
    ['{E82696A9-1678-448D-A12D-B7A2C2CA7B87}']
    function AddPedestrianRoutePartialOnArea(Key: OleVariant; const PedRoutLoc: IArea): IPedestrianRoutePartial; safecall;
    function AddPedestrianRoutePartialOnRamp(Key: OleVariant; const PedRoutLoc: IRamp): IPedestrianRoutePartial; safecall;
  end;

// *********************************************************************//
// DispIntf:  IPedestrianRoutePartialContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E82696A9-1678-448D-A12D-B7A2C2CA7B87}
// *********************************************************************//
  IPedestrianRoutePartialContainerDisp = dispinterface
    ['{E82696A9-1678-448D-A12D-B7A2C2CA7B87}']
    function AddPedestrianRoutePartialOnArea(Key: OleVariant; const PedRoutLoc: IArea): IPedestrianRoutePartial; dispid 1610940416;
    function AddPedestrianRoutePartialOnRamp(Key: OleVariant; const PedRoutLoc: IRamp): IPedestrianRoutePartial; dispid 1610940417;
    property ItemByKey[Key: OleVariant]: IPedestrianRoutePartial readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function DuplicatePedestrianRoutePartial(Source: OleVariant; NewKey: OleVariant): IPedestrianRoutePartial; dispid 1610874882;
    procedure RemovePedestrianRoutePartial(const PedestrianRoutePartial: IPedestrianRoutePartial); dispid 1610874883;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPedestrianRoutePartialBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {26E10156-2266-46F3-9A89-7F981C537438}
// *********************************************************************//
  IPedestrianRoutePartialBase = interface(IObjectBase)
    ['{26E10156-2266-46F3-9A89-7F981C537438}']
    function Get_PedRoutDecPart: IPedestrianRoutingDecisionPartial; safecall;
    function Get_PedRoutChoiceAreas: IPedestrianRouteChoiceAreaContainer; safecall;
    function Get_PedRoutLoc: IPedestrianRouteLocationContainer; safecall;
    function Get_Dest: IPedestrianRouteLocation; safecall;
    property PedRoutDecPart: IPedestrianRoutingDecisionPartial read Get_PedRoutDecPart;
    property PedRoutChoiceAreas: IPedestrianRouteChoiceAreaContainer read Get_PedRoutChoiceAreas;
    property PedRoutLoc: IPedestrianRouteLocationContainer read Get_PedRoutLoc;
    property Dest: IPedestrianRouteLocation read Get_Dest;
  end;

// *********************************************************************//
// DispIntf:  IPedestrianRoutePartialBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {26E10156-2266-46F3-9A89-7F981C537438}
// *********************************************************************//
  IPedestrianRoutePartialBaseDisp = dispinterface
    ['{26E10156-2266-46F3-9A89-7F981C537438}']
    property PedRoutDecPart: IPedestrianRoutingDecisionPartial readonly dispid 1610809344;
    property PedRoutChoiceAreas: IPedestrianRouteChoiceAreaContainer readonly dispid 1610809345;
    property PedRoutLoc: IPedestrianRouteLocationContainer readonly dispid 1610809346;
    property Dest: IPedestrianRouteLocation readonly dispid 1610809347;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPedestrianRoutePartial
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F49F8345-0B4C-40B9-9E59-E470D1891182}
// *********************************************************************//
  IPedestrianRoutePartial = interface(IPedestrianRoutePartialBase)
    ['{F49F8345-0B4C-40B9-9E59-E470D1891182}']
  end;

// *********************************************************************//
// DispIntf:  IPedestrianRoutePartialDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F49F8345-0B4C-40B9-9E59-E470D1891182}
// *********************************************************************//
  IPedestrianRoutePartialDisp = dispinterface
    ['{F49F8345-0B4C-40B9-9E59-E470D1891182}']
    property PedRoutDecPart: IPedestrianRoutingDecisionPartial readonly dispid 1610809344;
    property PedRoutChoiceAreas: IPedestrianRouteChoiceAreaContainer readonly dispid 1610809345;
    property PedRoutLoc: IPedestrianRouteLocationContainer readonly dispid 1610809346;
    property Dest: IPedestrianRouteLocation readonly dispid 1610809347;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPedestrianRouteChoiceAreaCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0E3D3342-8F55-4491-8041-A2C5A8CD6F83}
// *********************************************************************//
  IPedestrianRouteChoiceAreaCollection = interface(ICollectionBase)
    ['{0E3D3342-8F55-4491-8041-A2C5A8CD6F83}']
  end;

// *********************************************************************//
// DispIntf:  IPedestrianRouteChoiceAreaCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0E3D3342-8F55-4491-8041-A2C5A8CD6F83}
// *********************************************************************//
  IPedestrianRouteChoiceAreaCollectionDisp = dispinterface
    ['{0E3D3342-8F55-4491-8041-A2C5A8CD6F83}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPedestrianRouteChoiceAreaContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {265E43B8-8842-451B-A212-7155BD886E6B}
// *********************************************************************//
  IPedestrianRouteChoiceAreaContainerBase = interface(IPedestrianRouteChoiceAreaCollection)
    ['{265E43B8-8842-451B-A212-7155BD886E6B}']
  end;

// *********************************************************************//
// DispIntf:  IPedestrianRouteChoiceAreaContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {265E43B8-8842-451B-A212-7155BD886E6B}
// *********************************************************************//
  IPedestrianRouteChoiceAreaContainerBaseDisp = dispinterface
    ['{265E43B8-8842-451B-A212-7155BD886E6B}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPedestrianRouteChoiceAreaContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FF2BF5DE-2085-486B-863F-31BA61BCFF27}
// *********************************************************************//
  IPedestrianRouteChoiceAreaContainer = interface(IPedestrianRouteChoiceAreaContainerBase)
    ['{FF2BF5DE-2085-486B-863F-31BA61BCFF27}']
  end;

// *********************************************************************//
// DispIntf:  IPedestrianRouteChoiceAreaContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FF2BF5DE-2085-486B-863F-31BA61BCFF27}
// *********************************************************************//
  IPedestrianRouteChoiceAreaContainerDisp = dispinterface
    ['{FF2BF5DE-2085-486B-863F-31BA61BCFF27}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPedestrianRouteLocationContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A85A0B20-67A8-49D5-ADAA-A6C79ED80FC2}
// *********************************************************************//
  IPedestrianRouteLocationContainerBase = interface(IPedestrianRouteLocationCollection)
    ['{A85A0B20-67A8-49D5-ADAA-A6C79ED80FC2}']
    procedure RemovePedestrianRouteLocation(const PedestrianRouteLocation: IPedestrianRouteLocation); safecall;
  end;

// *********************************************************************//
// DispIntf:  IPedestrianRouteLocationContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A85A0B20-67A8-49D5-ADAA-A6C79ED80FC2}
// *********************************************************************//
  IPedestrianRouteLocationContainerBaseDisp = dispinterface
    ['{A85A0B20-67A8-49D5-ADAA-A6C79ED80FC2}']
    procedure RemovePedestrianRouteLocation(const PedestrianRouteLocation: IPedestrianRouteLocation); dispid 1610874880;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPedestrianRouteLocationContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CDA0FCA2-1A12-4390-9454-7249F2199786}
// *********************************************************************//
  IPedestrianRouteLocationContainer = interface(IPedestrianRouteLocationContainerBase)
    ['{CDA0FCA2-1A12-4390-9454-7249F2199786}']
    function AddPedestrianRouteLocationOnArea(Key: OleVariant; const Area: IArea): IPedestrianRouteLocation; safecall;
    function AddPedestrianRouteLocationOnRamp(Key: OleVariant; const Ramp: IRamp): IPedestrianRouteLocation; safecall;
  end;

// *********************************************************************//
// DispIntf:  IPedestrianRouteLocationContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CDA0FCA2-1A12-4390-9454-7249F2199786}
// *********************************************************************//
  IPedestrianRouteLocationContainerDisp = dispinterface
    ['{CDA0FCA2-1A12-4390-9454-7249F2199786}']
    function AddPedestrianRouteLocationOnArea(Key: OleVariant; const Area: IArea): IPedestrianRouteLocation; dispid 1610940416;
    function AddPedestrianRouteLocationOnRamp(Key: OleVariant; const Ramp: IRamp): IPedestrianRouteLocation; dispid 1610940417;
    procedure RemovePedestrianRouteLocation(const PedestrianRouteLocation: IPedestrianRouteLocation); dispid 1610874880;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPedestrianRouteLocationBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {529A7B68-1FED-4F3B-81D3-97B2DE04E178}
// *********************************************************************//
  IPedestrianRouteLocationBase = interface(IObjectBase)
    ['{529A7B68-1FED-4F3B-81D3-97B2DE04E178}']
    function Get_Ramp: IRamp; safecall;
    function Get_Area: IArea; safecall;
    function Get_PedRoutPart: IPedestrianRoutePartial; safecall;
    function Get_PedRoutSta: IPedestrianRouteStatic; safecall;
    property Ramp: IRamp read Get_Ramp;
    property Area: IArea read Get_Area;
    property PedRoutPart: IPedestrianRoutePartial read Get_PedRoutPart;
    property PedRoutSta: IPedestrianRouteStatic read Get_PedRoutSta;
  end;

// *********************************************************************//
// DispIntf:  IPedestrianRouteLocationBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {529A7B68-1FED-4F3B-81D3-97B2DE04E178}
// *********************************************************************//
  IPedestrianRouteLocationBaseDisp = dispinterface
    ['{529A7B68-1FED-4F3B-81D3-97B2DE04E178}']
    property Ramp: IRamp readonly dispid 1610809344;
    property Area: IArea readonly dispid 1610809345;
    property PedRoutPart: IPedestrianRoutePartial readonly dispid 1610809346;
    property PedRoutSta: IPedestrianRouteStatic readonly dispid 1610809347;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPedestrianRouteLocation
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {63EC03EC-C43E-4A72-BF05-16544121BF0C}
// *********************************************************************//
  IPedestrianRouteLocation = interface(IPedestrianRouteLocationBase)
    ['{63EC03EC-C43E-4A72-BF05-16544121BF0C}']
  end;

// *********************************************************************//
// DispIntf:  IPedestrianRouteLocationDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {63EC03EC-C43E-4A72-BF05-16544121BF0C}
// *********************************************************************//
  IPedestrianRouteLocationDisp = dispinterface
    ['{63EC03EC-C43E-4A72-BF05-16544121BF0C}']
    property Ramp: IRamp readonly dispid 1610809344;
    property Area: IArea readonly dispid 1610809345;
    property PedRoutPart: IPedestrianRoutePartial readonly dispid 1610809346;
    property PedRoutSta: IPedestrianRouteStatic readonly dispid 1610809347;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPedestrianRouteStaticBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FE241E81-9D7B-413F-B668-F6314AEF34DC}
// *********************************************************************//
  IPedestrianRouteStaticBase = interface(IObjectBase)
    ['{FE241E81-9D7B-413F-B668-F6314AEF34DC}']
    function Get_PedRoutDecSta: IPedestrianRoutingDecisionStatic; safecall;
    function Get_PedRoutLoc: IPedestrianRouteLocationContainer; safecall;
    function Get_Dest: IPedestrianRouteLocation; safecall;
    property PedRoutDecSta: IPedestrianRoutingDecisionStatic read Get_PedRoutDecSta;
    property PedRoutLoc: IPedestrianRouteLocationContainer read Get_PedRoutLoc;
    property Dest: IPedestrianRouteLocation read Get_Dest;
  end;

// *********************************************************************//
// DispIntf:  IPedestrianRouteStaticBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FE241E81-9D7B-413F-B668-F6314AEF34DC}
// *********************************************************************//
  IPedestrianRouteStaticBaseDisp = dispinterface
    ['{FE241E81-9D7B-413F-B668-F6314AEF34DC}']
    property PedRoutDecSta: IPedestrianRoutingDecisionStatic readonly dispid 1610809344;
    property PedRoutLoc: IPedestrianRouteLocationContainer readonly dispid 1610809345;
    property Dest: IPedestrianRouteLocation readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPedestrianRouteStatic
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4EB9CFAA-35F8-4608-B3D7-09C3C00170A2}
// *********************************************************************//
  IPedestrianRouteStatic = interface(IPedestrianRouteStaticBase)
    ['{4EB9CFAA-35F8-4608-B3D7-09C3C00170A2}']
  end;

// *********************************************************************//
// DispIntf:  IPedestrianRouteStaticDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4EB9CFAA-35F8-4608-B3D7-09C3C00170A2}
// *********************************************************************//
  IPedestrianRouteStaticDisp = dispinterface
    ['{4EB9CFAA-35F8-4608-B3D7-09C3C00170A2}']
    property PedRoutDecSta: IPedestrianRoutingDecisionStatic readonly dispid 1610809344;
    property PedRoutLoc: IPedestrianRouteLocationContainer readonly dispid 1610809345;
    property Dest: IPedestrianRouteLocation readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPedestrianRoutingDecisionStaticBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4FBA1895-94B2-467B-8369-02395C073D3E}
// *********************************************************************//
  IPedestrianRoutingDecisionStaticBase = interface(IObjectBase)
    ['{4FBA1895-94B2-467B-8369-02395C073D3E}']
    function Get_PedRoutSta: IPedestrianRouteStaticContainer; safecall;
    function Get_Area: IArea; safecall;
    function Get_PedClasses: IPedestrianClassCollection; safecall;
    property PedRoutSta: IPedestrianRouteStaticContainer read Get_PedRoutSta;
    property Area: IArea read Get_Area;
    property PedClasses: IPedestrianClassCollection read Get_PedClasses;
  end;

// *********************************************************************//
// DispIntf:  IPedestrianRoutingDecisionStaticBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4FBA1895-94B2-467B-8369-02395C073D3E}
// *********************************************************************//
  IPedestrianRoutingDecisionStaticBaseDisp = dispinterface
    ['{4FBA1895-94B2-467B-8369-02395C073D3E}']
    property PedRoutSta: IPedestrianRouteStaticContainer readonly dispid 1610809344;
    property Area: IArea readonly dispid 1610809345;
    property PedClasses: IPedestrianClassCollection readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPedestrianRoutingDecisionStatic
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {90B31894-10F4-438D-BCDF-A1ED28E2EBC0}
// *********************************************************************//
  IPedestrianRoutingDecisionStatic = interface(IPedestrianRoutingDecisionStaticBase)
    ['{90B31894-10F4-438D-BCDF-A1ED28E2EBC0}']
  end;

// *********************************************************************//
// DispIntf:  IPedestrianRoutingDecisionStaticDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {90B31894-10F4-438D-BCDF-A1ED28E2EBC0}
// *********************************************************************//
  IPedestrianRoutingDecisionStaticDisp = dispinterface
    ['{90B31894-10F4-438D-BCDF-A1ED28E2EBC0}']
    property PedRoutSta: IPedestrianRouteStaticContainer readonly dispid 1610809344;
    property Area: IArea readonly dispid 1610809345;
    property PedClasses: IPedestrianClassCollection readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPedestrianRouteStaticContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0CDA85A4-7965-4D8C-ABA8-9CD1179CF458}
// *********************************************************************//
  IPedestrianRouteStaticContainerBase = interface(IPedestrianRouteStaticCollection)
    ['{0CDA85A4-7965-4D8C-ABA8-9CD1179CF458}']
    function Get_ItemByKey(Key: OleVariant): IPedestrianRouteStatic; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function DuplicatePedestrianRouteStatic(Source: OleVariant; NewKey: OleVariant): IPedestrianRouteStatic; safecall;
    procedure RemovePedestrianRouteStatic(const PedestrianRouteStatic: IPedestrianRouteStatic); safecall;
    property ItemByKey[Key: OleVariant]: IPedestrianRouteStatic read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IPedestrianRouteStaticContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0CDA85A4-7965-4D8C-ABA8-9CD1179CF458}
// *********************************************************************//
  IPedestrianRouteStaticContainerBaseDisp = dispinterface
    ['{0CDA85A4-7965-4D8C-ABA8-9CD1179CF458}']
    property ItemByKey[Key: OleVariant]: IPedestrianRouteStatic readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function DuplicatePedestrianRouteStatic(Source: OleVariant; NewKey: OleVariant): IPedestrianRouteStatic; dispid 1610874882;
    procedure RemovePedestrianRouteStatic(const PedestrianRouteStatic: IPedestrianRouteStatic); dispid 1610874883;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPedestrianRouteStaticContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EE25DE42-F35D-4889-96D4-157CBD9D63A3}
// *********************************************************************//
  IPedestrianRouteStaticContainer = interface(IPedestrianRouteStaticContainerBase)
    ['{EE25DE42-F35D-4889-96D4-157CBD9D63A3}']
    function AddPedestrianRouteStaticOnArea(Key: OleVariant; const PedRoutLoc: IArea): IPedestrianRouteStatic; safecall;
    function AddPedestrianRouteStaticOnRamp(Key: OleVariant; const PedRoutLoc: IRamp): IPedestrianRouteStatic; safecall;
  end;

// *********************************************************************//
// DispIntf:  IPedestrianRouteStaticContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EE25DE42-F35D-4889-96D4-157CBD9D63A3}
// *********************************************************************//
  IPedestrianRouteStaticContainerDisp = dispinterface
    ['{EE25DE42-F35D-4889-96D4-157CBD9D63A3}']
    function AddPedestrianRouteStaticOnArea(Key: OleVariant; const PedRoutLoc: IArea): IPedestrianRouteStatic; dispid 1610940416;
    function AddPedestrianRouteStaticOnRamp(Key: OleVariant; const PedRoutLoc: IRamp): IPedestrianRouteStatic; dispid 1610940417;
    property ItemByKey[Key: OleVariant]: IPedestrianRouteStatic readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function DuplicatePedestrianRouteStatic(Source: OleVariant; NewKey: OleVariant): IPedestrianRouteStatic; dispid 1610874882;
    procedure RemovePedestrianRouteStatic(const PedestrianRouteStatic: IPedestrianRouteStatic); dispid 1610874883;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPedestrianRoutingDecisionStaticContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {06E49ADE-3B84-4609-9740-5D5B467E0747}
// *********************************************************************//
  IPedestrianRoutingDecisionStaticContainerBase = interface(IPedestrianRoutingDecisionStaticCollection)
    ['{06E49ADE-3B84-4609-9740-5D5B467E0747}']
    function Get_ItemByKey(Key: OleVariant): IPedestrianRoutingDecisionStatic; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddPedestrianRoutingDecisionStatic(Key: OleVariant; const Area: IArea): IPedestrianRoutingDecisionStatic; safecall;
    function DuplicatePedestrianRoutingDecisionStatic(Source: OleVariant; NewKey: OleVariant): IPedestrianRoutingDecisionStatic; safecall;
    procedure RemovePedestrianRoutingDecisionStatic(const PedestrianRoutingDecisionStatic: IPedestrianRoutingDecisionStatic); safecall;
    property ItemByKey[Key: OleVariant]: IPedestrianRoutingDecisionStatic read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IPedestrianRoutingDecisionStaticContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {06E49ADE-3B84-4609-9740-5D5B467E0747}
// *********************************************************************//
  IPedestrianRoutingDecisionStaticContainerBaseDisp = dispinterface
    ['{06E49ADE-3B84-4609-9740-5D5B467E0747}']
    property ItemByKey[Key: OleVariant]: IPedestrianRoutingDecisionStatic readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddPedestrianRoutingDecisionStatic(Key: OleVariant; const Area: IArea): IPedestrianRoutingDecisionStatic; dispid 1610874882;
    function DuplicatePedestrianRoutingDecisionStatic(Source: OleVariant; NewKey: OleVariant): IPedestrianRoutingDecisionStatic; dispid 1610874883;
    procedure RemovePedestrianRoutingDecisionStatic(const PedestrianRoutingDecisionStatic: IPedestrianRoutingDecisionStatic); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPedestrianRoutingDecisionStaticContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6ED2E6B9-B3F1-4862-90C2-0D3EA2A1265E}
// *********************************************************************//
  IPedestrianRoutingDecisionStaticContainer = interface(IPedestrianRoutingDecisionStaticContainerBase)
    ['{6ED2E6B9-B3F1-4862-90C2-0D3EA2A1265E}']
  end;

// *********************************************************************//
// DispIntf:  IPedestrianRoutingDecisionStaticContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6ED2E6B9-B3F1-4862-90C2-0D3EA2A1265E}
// *********************************************************************//
  IPedestrianRoutingDecisionStaticContainerDisp = dispinterface
    ['{6ED2E6B9-B3F1-4862-90C2-0D3EA2A1265E}']
    property ItemByKey[Key: OleVariant]: IPedestrianRoutingDecisionStatic readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddPedestrianRoutingDecisionStatic(Key: OleVariant; const Area: IArea): IPedestrianRoutingDecisionStatic; dispid 1610874882;
    function DuplicatePedestrianRoutingDecisionStatic(Source: OleVariant; NewKey: OleVariant): IPedestrianRoutingDecisionStatic; dispid 1610874883;
    procedure RemovePedestrianRoutingDecisionStatic(const PedestrianRoutingDecisionStatic: IPedestrianRoutingDecisionStatic); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPedestrianTravelTimeMeasurementCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F16BFACE-A436-476E-9F02-69E30ED3AAB0}
// *********************************************************************//
  IPedestrianTravelTimeMeasurementCollection = interface(ICollectionBase)
    ['{F16BFACE-A436-476E-9F02-69E30ED3AAB0}']
  end;

// *********************************************************************//
// DispIntf:  IPedestrianTravelTimeMeasurementCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F16BFACE-A436-476E-9F02-69E30ED3AAB0}
// *********************************************************************//
  IPedestrianTravelTimeMeasurementCollectionDisp = dispinterface
    ['{F16BFACE-A436-476E-9F02-69E30ED3AAB0}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPedestrianTravelTimeMeasurementContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6EC559FD-007D-4226-BD77-071F1424E938}
// *********************************************************************//
  IPedestrianTravelTimeMeasurementContainerBase = interface(IPedestrianTravelTimeMeasurementCollection)
    ['{6EC559FD-007D-4226-BD77-071F1424E938}']
    function Get_ItemByKey(Key: OleVariant): IPedestrianTravelTimeMeasurement; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddPedestrianTravelTimeMeasurement(Key: OleVariant; const StartArea: IArea; 
                                                const EndArea: IArea): IPedestrianTravelTimeMeasurement; safecall;
    function DuplicatePedestrianTravelTimeMeasurement(Source: OleVariant; NewKey: OleVariant): IPedestrianTravelTimeMeasurement; safecall;
    procedure RemovePedestrianTravelTimeMeasurement(const PedestrianTravelTimeMeasurement: IPedestrianTravelTimeMeasurement); safecall;
    property ItemByKey[Key: OleVariant]: IPedestrianTravelTimeMeasurement read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IPedestrianTravelTimeMeasurementContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6EC559FD-007D-4226-BD77-071F1424E938}
// *********************************************************************//
  IPedestrianTravelTimeMeasurementContainerBaseDisp = dispinterface
    ['{6EC559FD-007D-4226-BD77-071F1424E938}']
    property ItemByKey[Key: OleVariant]: IPedestrianTravelTimeMeasurement readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddPedestrianTravelTimeMeasurement(Key: OleVariant; const StartArea: IArea; 
                                                const EndArea: IArea): IPedestrianTravelTimeMeasurement; dispid 1610874882;
    function DuplicatePedestrianTravelTimeMeasurement(Source: OleVariant; NewKey: OleVariant): IPedestrianTravelTimeMeasurement; dispid 1610874883;
    procedure RemovePedestrianTravelTimeMeasurement(const PedestrianTravelTimeMeasurement: IPedestrianTravelTimeMeasurement); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPedestrianTravelTimeMeasurementContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A4B19038-1FA9-45BB-BE77-7C2D5886BC15}
// *********************************************************************//
  IPedestrianTravelTimeMeasurementContainer = interface(IPedestrianTravelTimeMeasurementContainerBase)
    ['{A4B19038-1FA9-45BB-BE77-7C2D5886BC15}']
  end;

// *********************************************************************//
// DispIntf:  IPedestrianTravelTimeMeasurementContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A4B19038-1FA9-45BB-BE77-7C2D5886BC15}
// *********************************************************************//
  IPedestrianTravelTimeMeasurementContainerDisp = dispinterface
    ['{A4B19038-1FA9-45BB-BE77-7C2D5886BC15}']
    property ItemByKey[Key: OleVariant]: IPedestrianTravelTimeMeasurement readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddPedestrianTravelTimeMeasurement(Key: OleVariant; const StartArea: IArea; 
                                                const EndArea: IArea): IPedestrianTravelTimeMeasurement; dispid 1610874882;
    function DuplicatePedestrianTravelTimeMeasurement(Source: OleVariant; NewKey: OleVariant): IPedestrianTravelTimeMeasurement; dispid 1610874883;
    procedure RemovePedestrianTravelTimeMeasurement(const PedestrianTravelTimeMeasurement: IPedestrianTravelTimeMeasurement); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPedestrianTravelTimeMeasurementBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0CA88BFA-9709-4668-981A-D9CD01CA508E}
// *********************************************************************//
  IPedestrianTravelTimeMeasurementBase = interface(IObjectBase)
    ['{0CA88BFA-9709-4668-981A-D9CD01CA508E}']
    function Get_StartArea: IArea; safecall;
    function Get_EndArea: IArea; safecall;
    property StartArea: IArea read Get_StartArea;
    property EndArea: IArea read Get_EndArea;
  end;

// *********************************************************************//
// DispIntf:  IPedestrianTravelTimeMeasurementBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0CA88BFA-9709-4668-981A-D9CD01CA508E}
// *********************************************************************//
  IPedestrianTravelTimeMeasurementBaseDisp = dispinterface
    ['{0CA88BFA-9709-4668-981A-D9CD01CA508E}']
    property StartArea: IArea readonly dispid 1610809344;
    property EndArea: IArea readonly dispid 1610809345;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPedestrianTravelTimeMeasurement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {01FE8615-3053-41B7-9179-A7DAA36052C9}
// *********************************************************************//
  IPedestrianTravelTimeMeasurement = interface(IPedestrianTravelTimeMeasurementBase)
    ['{01FE8615-3053-41B7-9179-A7DAA36052C9}']
  end;

// *********************************************************************//
// DispIntf:  IPedestrianTravelTimeMeasurementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {01FE8615-3053-41B7-9179-A7DAA36052C9}
// *********************************************************************//
  IPedestrianTravelTimeMeasurementDisp = dispinterface
    ['{01FE8615-3053-41B7-9179-A7DAA36052C9}']
    property StartArea: IArea readonly dispid 1610809344;
    property EndArea: IArea readonly dispid 1610809345;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPedestrianTypeContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8C863422-31B6-4B6A-A1B8-98BC8453D49B}
// *********************************************************************//
  IPedestrianTypeContainerBase = interface(IPedestrianTypeCollection)
    ['{8C863422-31B6-4B6A-A1B8-98BC8453D49B}']
    function Get_ItemByKey(Key: OleVariant): IPedestrianType; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddPedestrianType(Key: OleVariant): IPedestrianType; safecall;
    function DuplicatePedestrianType(Source: OleVariant; NewKey: OleVariant): IPedestrianType; safecall;
    procedure RemovePedestrianType(const PedestrianType: IPedestrianType); safecall;
    property ItemByKey[Key: OleVariant]: IPedestrianType read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IPedestrianTypeContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8C863422-31B6-4B6A-A1B8-98BC8453D49B}
// *********************************************************************//
  IPedestrianTypeContainerBaseDisp = dispinterface
    ['{8C863422-31B6-4B6A-A1B8-98BC8453D49B}']
    property ItemByKey[Key: OleVariant]: IPedestrianType readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddPedestrianType(Key: OleVariant): IPedestrianType; dispid 1610874882;
    function DuplicatePedestrianType(Source: OleVariant; NewKey: OleVariant): IPedestrianType; dispid 1610874883;
    procedure RemovePedestrianType(const PedestrianType: IPedestrianType); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPedestrianTypeContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AD56EAD9-691E-4BDE-A588-7C74450F3D9E}
// *********************************************************************//
  IPedestrianTypeContainer = interface(IPedestrianTypeContainerBase)
    ['{AD56EAD9-691E-4BDE-A588-7C74450F3D9E}']
  end;

// *********************************************************************//
// DispIntf:  IPedestrianTypeContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AD56EAD9-691E-4BDE-A588-7C74450F3D9E}
// *********************************************************************//
  IPedestrianTypeContainerDisp = dispinterface
    ['{AD56EAD9-691E-4BDE-A588-7C74450F3D9E}']
    property ItemByKey[Key: OleVariant]: IPedestrianType readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddPedestrianType(Key: OleVariant): IPedestrianType; dispid 1610874882;
    function DuplicatePedestrianType(Source: OleVariant; NewKey: OleVariant): IPedestrianType; dispid 1610874883;
    procedure RemovePedestrianType(const PedestrianType: IPedestrianType); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPedestrianContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A120FB47-6BCF-4BA5-ACB9-7311DFB422DC}
// *********************************************************************//
  IPedestrianContainerBase = interface(IPedestrianCollection)
    ['{A120FB47-6BCF-4BA5-ACB9-7311DFB422DC}']
    function Get_ItemByKey(Key: OleVariant): IPedestrian; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    property ItemByKey[Key: OleVariant]: IPedestrian read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IPedestrianContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A120FB47-6BCF-4BA5-ACB9-7311DFB422DC}
// *********************************************************************//
  IPedestrianContainerBaseDisp = dispinterface
    ['{A120FB47-6BCF-4BA5-ACB9-7311DFB422DC}']
    property ItemByKey[Key: OleVariant]: IPedestrian readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPedestrianContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {647FE170-2B56-4958-9F76-752B1CCD0906}
// *********************************************************************//
  IPedestrianContainer = interface(IPedestrianContainerBase)
    ['{647FE170-2B56-4958-9F76-752B1CCD0906}']
    procedure RemovePedestrian(Pedestrian: OleVariant); safecall;
    function AddPedestrianOnArea(PedestrianType: OleVariant; Area: OleVariant; DesiredSpeed: Double): IPedestrian; safecall;
    function AddPedestrianOnAreaAtCoordinate(PedestrianType: OleVariant; Area: OleVariant; 
                                             RelativeX: Double; RelativeY: Double; 
                                             OrientationX: Double; OrientationY: Double; 
                                             DesiredSpeed: Double; Speed: Double): IPedestrian; safecall;
  end;

// *********************************************************************//
// DispIntf:  IPedestrianContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {647FE170-2B56-4958-9F76-752B1CCD0906}
// *********************************************************************//
  IPedestrianContainerDisp = dispinterface
    ['{647FE170-2B56-4958-9F76-752B1CCD0906}']
    procedure RemovePedestrian(Pedestrian: OleVariant); dispid 1610940416;
    function AddPedestrianOnArea(PedestrianType: OleVariant; Area: OleVariant; DesiredSpeed: Double): IPedestrian; dispid 1610940417;
    function AddPedestrianOnAreaAtCoordinate(PedestrianType: OleVariant; Area: OleVariant; 
                                             RelativeX: Double; RelativeY: Double; 
                                             OrientationX: Double; OrientationY: Double; 
                                             DesiredSpeed: Double; Speed: Double): IPedestrian; dispid 1610940418;
    property ItemByKey[Key: OleVariant]: IPedestrian readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPedestrianBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0F3CDD19-04C0-42D2-A21C-53A70F6D6C2D}
// *********************************************************************//
  IPedestrianBase = interface(IObjectBase)
    ['{0F3CDD19-04C0-42D2-A21C-53A70F6D6C2D}']
    function Get_Level: ILevel; safecall;
    function Get_PedType: IPedestrianType; safecall;
    function Get_CurWalkBehav: IWalkingBehavior; safecall;
    function Get_PedRoutSta: IPedestrianRouteStatic; safecall;
    function Get_PedRoutPart: IPedestrianRoutePartial; safecall;
    property Level: ILevel read Get_Level;
    property PedType: IPedestrianType read Get_PedType;
    property CurWalkBehav: IWalkingBehavior read Get_CurWalkBehav;
    property PedRoutSta: IPedestrianRouteStatic read Get_PedRoutSta;
    property PedRoutPart: IPedestrianRoutePartial read Get_PedRoutPart;
  end;

// *********************************************************************//
// DispIntf:  IPedestrianBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0F3CDD19-04C0-42D2-A21C-53A70F6D6C2D}
// *********************************************************************//
  IPedestrianBaseDisp = dispinterface
    ['{0F3CDD19-04C0-42D2-A21C-53A70F6D6C2D}']
    property Level: ILevel readonly dispid 1610809344;
    property PedType: IPedestrianType readonly dispid 1610809345;
    property CurWalkBehav: IWalkingBehavior readonly dispid 1610809346;
    property PedRoutSta: IPedestrianRouteStatic readonly dispid 1610809347;
    property PedRoutPart: IPedestrianRoutePartial readonly dispid 1610809348;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPedestrian
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CCB1B250-D56F-4749-9518-ABF94E339046}
// *********************************************************************//
  IPedestrian = interface(IPedestrianBase)
    ['{CCB1B250-D56F-4749-9518-ABF94E339046}']
  end;

// *********************************************************************//
// DispIntf:  IPedestrianDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CCB1B250-D56F-4749-9518-ABF94E339046}
// *********************************************************************//
  IPedestrianDisp = dispinterface
    ['{CCB1B250-D56F-4749-9518-ABF94E339046}']
    property Level: ILevel readonly dispid 1610809344;
    property PedType: IPedestrianType readonly dispid 1610809345;
    property CurWalkBehav: IWalkingBehavior readonly dispid 1610809346;
    property PedRoutSta: IPedestrianRouteStatic readonly dispid 1610809347;
    property PedRoutPart: IPedestrianRoutePartial readonly dispid 1610809348;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPowerDistributionCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F8C7948B-EAAC-4DF5-A511-B80D795AA7A0}
// *********************************************************************//
  IPowerDistributionCollection = interface(ICollectionBase)
    ['{F8C7948B-EAAC-4DF5-A511-B80D795AA7A0}']
  end;

// *********************************************************************//
// DispIntf:  IPowerDistributionCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F8C7948B-EAAC-4DF5-A511-B80D795AA7A0}
// *********************************************************************//
  IPowerDistributionCollectionDisp = dispinterface
    ['{F8C7948B-EAAC-4DF5-A511-B80D795AA7A0}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPowerDistributionContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {817DF1FA-D77E-47F6-ACAA-75F237A286CD}
// *********************************************************************//
  IPowerDistributionContainerBase = interface(IPowerDistributionCollection)
    ['{817DF1FA-D77E-47F6-ACAA-75F237A286CD}']
    function Get_ItemByKey(Key: OleVariant): IPowerDistribution; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddPowerDistribution(Key: OleVariant; DistrDataPts: OleVariant): IPowerDistribution; safecall;
    function DuplicatePowerDistribution(Source: OleVariant; NewKey: OleVariant): IPowerDistribution; safecall;
    procedure RemovePowerDistribution(const PowerDistribution: IPowerDistribution); safecall;
    property ItemByKey[Key: OleVariant]: IPowerDistribution read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IPowerDistributionContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {817DF1FA-D77E-47F6-ACAA-75F237A286CD}
// *********************************************************************//
  IPowerDistributionContainerBaseDisp = dispinterface
    ['{817DF1FA-D77E-47F6-ACAA-75F237A286CD}']
    property ItemByKey[Key: OleVariant]: IPowerDistribution readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddPowerDistribution(Key: OleVariant; DistrDataPts: OleVariant): IPowerDistribution; dispid 1610874882;
    function DuplicatePowerDistribution(Source: OleVariant; NewKey: OleVariant): IPowerDistribution; dispid 1610874883;
    procedure RemovePowerDistribution(const PowerDistribution: IPowerDistribution); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPowerDistributionContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {387D7D17-B2AE-483D-B467-160D9CAAEC78}
// *********************************************************************//
  IPowerDistributionContainer = interface(IPowerDistributionContainerBase)
    ['{387D7D17-B2AE-483D-B467-160D9CAAEC78}']
  end;

// *********************************************************************//
// DispIntf:  IPowerDistributionContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {387D7D17-B2AE-483D-B467-160D9CAAEC78}
// *********************************************************************//
  IPowerDistributionContainerDisp = dispinterface
    ['{387D7D17-B2AE-483D-B467-160D9CAAEC78}']
    property ItemByKey[Key: OleVariant]: IPowerDistribution readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddPowerDistribution(Key: OleVariant; DistrDataPts: OleVariant): IPowerDistribution; dispid 1610874882;
    function DuplicatePowerDistribution(Source: OleVariant; NewKey: OleVariant): IPowerDistribution; dispid 1610874883;
    procedure RemovePowerDistribution(const PowerDistribution: IPowerDistribution); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPriorityRuleContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3F59A365-8E72-4BEE-8314-325359E01573}
// *********************************************************************//
  IPriorityRuleContainerBase = interface(IPriorityRuleCollection)
    ['{3F59A365-8E72-4BEE-8314-325359E01573}']
    function Get_ItemByKey(Key: OleVariant): IPriorityRule; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function DuplicatePriorityRule(Source: OleVariant; NewKey: OleVariant): IPriorityRule; safecall;
    procedure RemovePriorityRule(const PriorityRule: IPriorityRule); safecall;
    property ItemByKey[Key: OleVariant]: IPriorityRule read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IPriorityRuleContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3F59A365-8E72-4BEE-8314-325359E01573}
// *********************************************************************//
  IPriorityRuleContainerBaseDisp = dispinterface
    ['{3F59A365-8E72-4BEE-8314-325359E01573}']
    property ItemByKey[Key: OleVariant]: IPriorityRule readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function DuplicatePriorityRule(Source: OleVariant; NewKey: OleVariant): IPriorityRule; dispid 1610874882;
    procedure RemovePriorityRule(const PriorityRule: IPriorityRule); dispid 1610874883;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPriorityRuleContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EC679C62-6D6B-4440-9EB6-97EE73F3D2DB}
// *********************************************************************//
  IPriorityRuleContainer = interface(IPriorityRuleContainerBase)
    ['{EC679C62-6D6B-4440-9EB6-97EE73F3D2DB}']
    function AddPriorityRule(Key: OleVariant; const Lane: ILane; Pos: Double; 
                             ConflictMarkers: OleVariant): IPriorityRule; safecall;
  end;

// *********************************************************************//
// DispIntf:  IPriorityRuleContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EC679C62-6D6B-4440-9EB6-97EE73F3D2DB}
// *********************************************************************//
  IPriorityRuleContainerDisp = dispinterface
    ['{EC679C62-6D6B-4440-9EB6-97EE73F3D2DB}']
    function AddPriorityRule(Key: OleVariant; const Lane: ILane; Pos: Double; 
                             ConflictMarkers: OleVariant): IPriorityRule; dispid 1610940416;
    property ItemByKey[Key: OleVariant]: IPriorityRule readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function DuplicatePriorityRule(Source: OleVariant; NewKey: OleVariant): IPriorityRule; dispid 1610874882;
    procedure RemovePriorityRule(const PriorityRule: IPriorityRule); dispid 1610874883;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPriorityRuleBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BBE52220-3B07-4CDA-B6FC-B5DFB2F263B7}
// *********************************************************************//
  IPriorityRuleBase = interface(IObjectBase)
    ['{BBE52220-3B07-4CDA-B6FC-B5DFB2F263B7}']
    function Get_SG: ISignalGroup; safecall;
    function Get_ConflictMarkers: IConflictMarkerContainer; safecall;
    function Get_Lane: ILane; safecall;
    function Get_Link: ILink; safecall;
    function Get_VehClasses: IVehicleClassCollection; safecall;
    function Get_PedClasses: IPedestrianClassCollection; safecall;
    property SG: ISignalGroup read Get_SG;
    property ConflictMarkers: IConflictMarkerContainer read Get_ConflictMarkers;
    property Lane: ILane read Get_Lane;
    property Link: ILink read Get_Link;
    property VehClasses: IVehicleClassCollection read Get_VehClasses;
    property PedClasses: IPedestrianClassCollection read Get_PedClasses;
  end;

// *********************************************************************//
// DispIntf:  IPriorityRuleBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BBE52220-3B07-4CDA-B6FC-B5DFB2F263B7}
// *********************************************************************//
  IPriorityRuleBaseDisp = dispinterface
    ['{BBE52220-3B07-4CDA-B6FC-B5DFB2F263B7}']
    property SG: ISignalGroup readonly dispid 1610809344;
    property ConflictMarkers: IConflictMarkerContainer readonly dispid 1610809345;
    property Lane: ILane readonly dispid 1610809346;
    property Link: ILink readonly dispid 1610809347;
    property VehClasses: IVehicleClassCollection readonly dispid 1610809348;
    property PedClasses: IPedestrianClassCollection readonly dispid 1610809349;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPriorityRule
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DF8032BC-BB86-439C-80F5-601C34365BCC}
// *********************************************************************//
  IPriorityRule = interface(IPriorityRuleBase)
    ['{DF8032BC-BB86-439C-80F5-601C34365BCC}']
  end;

// *********************************************************************//
// DispIntf:  IPriorityRuleDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DF8032BC-BB86-439C-80F5-601C34365BCC}
// *********************************************************************//
  IPriorityRuleDisp = dispinterface
    ['{DF8032BC-BB86-439C-80F5-601C34365BCC}']
    property SG: ISignalGroup readonly dispid 1610809344;
    property ConflictMarkers: IConflictMarkerContainer readonly dispid 1610809345;
    property Lane: ILane readonly dispid 1610809346;
    property Link: ILink readonly dispid 1610809347;
    property VehClasses: IVehicleClassCollection readonly dispid 1610809348;
    property PedClasses: IPedestrianClassCollection readonly dispid 1610809349;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IConflictMarkerContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8DB9C229-B0C8-4914-A5D7-78C7D63C2904}
// *********************************************************************//
  IConflictMarkerContainerBase = interface(IConflictMarkerCollection)
    ['{8DB9C229-B0C8-4914-A5D7-78C7D63C2904}']
    function AddConflictMarker(Key: OleVariant; const Lane: ILane; Pos: Double): IConflictMarker; safecall;
    function DuplicateConflictMarker(Source: OleVariant; NewKey: OleVariant): IConflictMarker; safecall;
    procedure RemoveConflictMarker(const ConflictMarker: IConflictMarker); safecall;
  end;

// *********************************************************************//
// DispIntf:  IConflictMarkerContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8DB9C229-B0C8-4914-A5D7-78C7D63C2904}
// *********************************************************************//
  IConflictMarkerContainerBaseDisp = dispinterface
    ['{8DB9C229-B0C8-4914-A5D7-78C7D63C2904}']
    function AddConflictMarker(Key: OleVariant; const Lane: ILane; Pos: Double): IConflictMarker; dispid 1610874880;
    function DuplicateConflictMarker(Source: OleVariant; NewKey: OleVariant): IConflictMarker; dispid 1610874881;
    procedure RemoveConflictMarker(const ConflictMarker: IConflictMarker); dispid 1610874882;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IConflictMarkerContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C923FB59-2C09-49D3-816B-3880147E299D}
// *********************************************************************//
  IConflictMarkerContainer = interface(IConflictMarkerContainerBase)
    ['{C923FB59-2C09-49D3-816B-3880147E299D}']
  end;

// *********************************************************************//
// DispIntf:  IConflictMarkerContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C923FB59-2C09-49D3-816B-3880147E299D}
// *********************************************************************//
  IConflictMarkerContainerDisp = dispinterface
    ['{C923FB59-2C09-49D3-816B-3880147E299D}']
    function AddConflictMarker(Key: OleVariant; const Lane: ILane; Pos: Double): IConflictMarker; dispid 1610874880;
    function DuplicateConflictMarker(Source: OleVariant; NewKey: OleVariant): IConflictMarker; dispid 1610874881;
    procedure RemoveConflictMarker(const ConflictMarker: IConflictMarker); dispid 1610874882;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IConflictMarkerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {00BDB322-544E-4EA9-8BCE-C7462C2BA564}
// *********************************************************************//
  IConflictMarkerBase = interface(IObjectBase)
    ['{00BDB322-544E-4EA9-8BCE-C7462C2BA564}']
    function Get_Lane: ILane; safecall;
    function Get_Link: ILink; safecall;
    function Get_PrioRule: IPriorityRule; safecall;
    function Get_VehClasses: IVehicleClassCollection; safecall;
    function Get_PedClasses: IPedestrianClassCollection; safecall;
    property Lane: ILane read Get_Lane;
    property Link: ILink read Get_Link;
    property PrioRule: IPriorityRule read Get_PrioRule;
    property VehClasses: IVehicleClassCollection read Get_VehClasses;
    property PedClasses: IPedestrianClassCollection read Get_PedClasses;
  end;

// *********************************************************************//
// DispIntf:  IConflictMarkerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {00BDB322-544E-4EA9-8BCE-C7462C2BA564}
// *********************************************************************//
  IConflictMarkerBaseDisp = dispinterface
    ['{00BDB322-544E-4EA9-8BCE-C7462C2BA564}']
    property Lane: ILane readonly dispid 1610809344;
    property Link: ILink readonly dispid 1610809345;
    property PrioRule: IPriorityRule readonly dispid 1610809346;
    property VehClasses: IVehicleClassCollection readonly dispid 1610809347;
    property PedClasses: IPedestrianClassCollection readonly dispid 1610809348;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IConflictMarker
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E90C469F-5607-4B69-9CF1-884FF9BFC193}
// *********************************************************************//
  IConflictMarker = interface(IConflictMarkerBase)
    ['{E90C469F-5607-4B69-9CF1-884FF9BFC193}']
  end;

// *********************************************************************//
// DispIntf:  IConflictMarkerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E90C469F-5607-4B69-9CF1-884FF9BFC193}
// *********************************************************************//
  IConflictMarkerDisp = dispinterface
    ['{E90C469F-5607-4B69-9CF1-884FF9BFC193}']
    property Lane: ILane readonly dispid 1610809344;
    property Link: ILink readonly dispid 1610809345;
    property PrioRule: IPriorityRule readonly dispid 1610809346;
    property VehClasses: IVehicleClassCollection readonly dispid 1610809347;
    property PedClasses: IPedestrianClassCollection readonly dispid 1610809348;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IQueueCounterContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D1A94CF1-8CFD-483E-A5A7-B9D39CD7E3DE}
// *********************************************************************//
  IQueueCounterContainerBase = interface(IQueueCounterCollection)
    ['{D1A94CF1-8CFD-483E-A5A7-B9D39CD7E3DE}']
    function Get_ItemByKey(Key: OleVariant): IQueueCounter; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddQueueCounter(Key: OleVariant; const Link: ILink; Pos: Double): IQueueCounter; safecall;
    function DuplicateQueueCounter(Source: OleVariant; NewKey: OleVariant): IQueueCounter; safecall;
    procedure RemoveQueueCounter(const QueueCounter: IQueueCounter); safecall;
    property ItemByKey[Key: OleVariant]: IQueueCounter read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IQueueCounterContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D1A94CF1-8CFD-483E-A5A7-B9D39CD7E3DE}
// *********************************************************************//
  IQueueCounterContainerBaseDisp = dispinterface
    ['{D1A94CF1-8CFD-483E-A5A7-B9D39CD7E3DE}']
    property ItemByKey[Key: OleVariant]: IQueueCounter readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddQueueCounter(Key: OleVariant; const Link: ILink; Pos: Double): IQueueCounter; dispid 1610874882;
    function DuplicateQueueCounter(Source: OleVariant; NewKey: OleVariant): IQueueCounter; dispid 1610874883;
    procedure RemoveQueueCounter(const QueueCounter: IQueueCounter); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IQueueCounterContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4B174CD1-1AB0-4B8B-A2C8-C88D9764B5B7}
// *********************************************************************//
  IQueueCounterContainer = interface(IQueueCounterContainerBase)
    ['{4B174CD1-1AB0-4B8B-A2C8-C88D9764B5B7}']
  end;

// *********************************************************************//
// DispIntf:  IQueueCounterContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4B174CD1-1AB0-4B8B-A2C8-C88D9764B5B7}
// *********************************************************************//
  IQueueCounterContainerDisp = dispinterface
    ['{4B174CD1-1AB0-4B8B-A2C8-C88D9764B5B7}']
    property ItemByKey[Key: OleVariant]: IQueueCounter readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddQueueCounter(Key: OleVariant; const Link: ILink; Pos: Double): IQueueCounter; dispid 1610874882;
    function DuplicateQueueCounter(Source: OleVariant; NewKey: OleVariant): IQueueCounter; dispid 1610874883;
    procedure RemoveQueueCounter(const QueueCounter: IQueueCounter); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IQueueCounterBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4CF58F1B-CAF9-4230-B6B4-EF042F95A506}
// *********************************************************************//
  IQueueCounterBase = interface(IObjectBase)
    ['{4CF58F1B-CAF9-4230-B6B4-EF042F95A506}']
    function Get_Link: ILink; safecall;
    property Link: ILink read Get_Link;
  end;

// *********************************************************************//
// DispIntf:  IQueueCounterBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4CF58F1B-CAF9-4230-B6B4-EF042F95A506}
// *********************************************************************//
  IQueueCounterBaseDisp = dispinterface
    ['{4CF58F1B-CAF9-4230-B6B4-EF042F95A506}']
    property Link: ILink readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IQueueCounter
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AF892E62-FB85-42EA-A14F-BF517CEC6664}
// *********************************************************************//
  IQueueCounter = interface(IQueueCounterBase)
    ['{AF892E62-FB85-42EA-A14F-BF517CEC6664}']
  end;

// *********************************************************************//
// DispIntf:  IQueueCounterDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AF892E62-FB85-42EA-A14F-BF517CEC6664}
// *********************************************************************//
  IQueueCounterDisp = dispinterface
    ['{AF892E62-FB85-42EA-A14F-BF517CEC6664}']
    property Link: ILink readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IRampCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E8F9E867-8ADC-49F6-9ED3-B00E39DC8795}
// *********************************************************************//
  IRampCollection = interface(ICollectionBase)
    ['{E8F9E867-8ADC-49F6-9ED3-B00E39DC8795}']
  end;

// *********************************************************************//
// DispIntf:  IRampCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E8F9E867-8ADC-49F6-9ED3-B00E39DC8795}
// *********************************************************************//
  IRampCollectionDisp = dispinterface
    ['{E8F9E867-8ADC-49F6-9ED3-B00E39DC8795}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IRampContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BA4ACE73-E5F0-48F0-B625-745F4D114853}
// *********************************************************************//
  IRampContainerBase = interface(IRampCollection)
    ['{BA4ACE73-E5F0-48F0-B625-745F4D114853}']
    function Get_ItemByKey(Key: OleVariant): IRamp; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddRamp(Key: OleVariant; const WktPolygon: WideString): IRamp; safecall;
    function DuplicateRamp(Source: OleVariant; NewKey: OleVariant): IRamp; safecall;
    procedure RemoveRamp(const Ramp: IRamp); safecall;
    property ItemByKey[Key: OleVariant]: IRamp read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IRampContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BA4ACE73-E5F0-48F0-B625-745F4D114853}
// *********************************************************************//
  IRampContainerBaseDisp = dispinterface
    ['{BA4ACE73-E5F0-48F0-B625-745F4D114853}']
    property ItemByKey[Key: OleVariant]: IRamp readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddRamp(Key: OleVariant; const WktPolygon: WideString): IRamp; dispid 1610874882;
    function DuplicateRamp(Source: OleVariant; NewKey: OleVariant): IRamp; dispid 1610874883;
    procedure RemoveRamp(const Ramp: IRamp); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IRampContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A1FD8CC1-68E7-4675-9A48-29ADC6D6B366}
// *********************************************************************//
  IRampContainer = interface(IRampContainerBase)
    ['{A1FD8CC1-68E7-4675-9A48-29ADC6D6B366}']
  end;

// *********************************************************************//
// DispIntf:  IRampContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A1FD8CC1-68E7-4675-9A48-29ADC6D6B366}
// *********************************************************************//
  IRampContainerDisp = dispinterface
    ['{A1FD8CC1-68E7-4675-9A48-29ADC6D6B366}']
    property ItemByKey[Key: OleVariant]: IRamp readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddRamp(Key: OleVariant; const WktPolygon: WideString): IRamp; dispid 1610874882;
    function DuplicateRamp(Source: OleVariant; NewKey: OleVariant): IRamp; dispid 1610874883;
    procedure RemoveRamp(const Ramp: IRamp); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IReducedSpeedAreaContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {835A2D11-FF8F-4782-A0C5-2A9E36840792}
// *********************************************************************//
  IReducedSpeedAreaContainerBase = interface(IReducedSpeedAreaCollection)
    ['{835A2D11-FF8F-4782-A0C5-2A9E36840792}']
    function Get_ItemByKey(Key: OleVariant): IReducedSpeedArea; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddReducedSpeedArea(Key: OleVariant; const Lane: ILane; Pos: Double): IReducedSpeedArea; safecall;
    function DuplicateReducedSpeedArea(Source: OleVariant; NewKey: OleVariant): IReducedSpeedArea; safecall;
    procedure RemoveReducedSpeedArea(const ReducedSpeedArea: IReducedSpeedArea); safecall;
    property ItemByKey[Key: OleVariant]: IReducedSpeedArea read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IReducedSpeedAreaContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {835A2D11-FF8F-4782-A0C5-2A9E36840792}
// *********************************************************************//
  IReducedSpeedAreaContainerBaseDisp = dispinterface
    ['{835A2D11-FF8F-4782-A0C5-2A9E36840792}']
    property ItemByKey[Key: OleVariant]: IReducedSpeedArea readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddReducedSpeedArea(Key: OleVariant; const Lane: ILane; Pos: Double): IReducedSpeedArea; dispid 1610874882;
    function DuplicateReducedSpeedArea(Source: OleVariant; NewKey: OleVariant): IReducedSpeedArea; dispid 1610874883;
    procedure RemoveReducedSpeedArea(const ReducedSpeedArea: IReducedSpeedArea); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IReducedSpeedAreaContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A51010E6-B7CB-459D-9248-0164E6756262}
// *********************************************************************//
  IReducedSpeedAreaContainer = interface(IReducedSpeedAreaContainerBase)
    ['{A51010E6-B7CB-459D-9248-0164E6756262}']
  end;

// *********************************************************************//
// DispIntf:  IReducedSpeedAreaContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A51010E6-B7CB-459D-9248-0164E6756262}
// *********************************************************************//
  IReducedSpeedAreaContainerDisp = dispinterface
    ['{A51010E6-B7CB-459D-9248-0164E6756262}']
    property ItemByKey[Key: OleVariant]: IReducedSpeedArea readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddReducedSpeedArea(Key: OleVariant; const Lane: ILane; Pos: Double): IReducedSpeedArea; dispid 1610874882;
    function DuplicateReducedSpeedArea(Source: OleVariant; NewKey: OleVariant): IReducedSpeedArea; dispid 1610874883;
    procedure RemoveReducedSpeedArea(const ReducedSpeedArea: IReducedSpeedArea); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IReducedSpeedAreaBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {07C8F11A-A540-4599-B5FA-CDB2FE224047}
// *********************************************************************//
  IReducedSpeedAreaBase = interface(IObjectBase)
    ['{07C8F11A-A540-4599-B5FA-CDB2FE224047}']
    function Get_VehClassSpeedRed: IVehClassSpeedReductionContainer; safecall;
    function Get_Lane: ILane; safecall;
    property VehClassSpeedRed: IVehClassSpeedReductionContainer read Get_VehClassSpeedRed;
    property Lane: ILane read Get_Lane;
  end;

// *********************************************************************//
// DispIntf:  IReducedSpeedAreaBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {07C8F11A-A540-4599-B5FA-CDB2FE224047}
// *********************************************************************//
  IReducedSpeedAreaBaseDisp = dispinterface
    ['{07C8F11A-A540-4599-B5FA-CDB2FE224047}']
    property VehClassSpeedRed: IVehClassSpeedReductionContainer readonly dispid 1610809344;
    property Lane: ILane readonly dispid 1610809345;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IReducedSpeedArea
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2D541964-9CE9-48AD-8527-E288BBA0FFD5}
// *********************************************************************//
  IReducedSpeedArea = interface(IReducedSpeedAreaBase)
    ['{2D541964-9CE9-48AD-8527-E288BBA0FFD5}']
  end;

// *********************************************************************//
// DispIntf:  IReducedSpeedAreaDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2D541964-9CE9-48AD-8527-E288BBA0FFD5}
// *********************************************************************//
  IReducedSpeedAreaDisp = dispinterface
    ['{2D541964-9CE9-48AD-8527-E288BBA0FFD5}']
    property VehClassSpeedRed: IVehClassSpeedReductionContainer readonly dispid 1610809344;
    property Lane: ILane readonly dispid 1610809345;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehClassSpeedReductionCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {386B11D3-A9CC-445D-ACCE-0FC8757CCCDD}
// *********************************************************************//
  IVehClassSpeedReductionCollection = interface(ICollectionBase)
    ['{386B11D3-A9CC-445D-ACCE-0FC8757CCCDD}']
  end;

// *********************************************************************//
// DispIntf:  IVehClassSpeedReductionCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {386B11D3-A9CC-445D-ACCE-0FC8757CCCDD}
// *********************************************************************//
  IVehClassSpeedReductionCollectionDisp = dispinterface
    ['{386B11D3-A9CC-445D-ACCE-0FC8757CCCDD}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehClassSpeedReductionContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {08236594-19EA-479D-8CAC-E449FBF38ED9}
// *********************************************************************//
  IVehClassSpeedReductionContainerBase = interface(IVehClassSpeedReductionCollection)
    ['{08236594-19EA-479D-8CAC-E449FBF38ED9}']
    function AddVehClassSpeedReduction(const VehClass: IVehicleClass): IVehClassSpeedReduction; safecall;
    procedure RemoveVehClassSpeedReduction(const VehClassSpeedReduction: IVehClassSpeedReduction); safecall;
  end;

// *********************************************************************//
// DispIntf:  IVehClassSpeedReductionContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {08236594-19EA-479D-8CAC-E449FBF38ED9}
// *********************************************************************//
  IVehClassSpeedReductionContainerBaseDisp = dispinterface
    ['{08236594-19EA-479D-8CAC-E449FBF38ED9}']
    function AddVehClassSpeedReduction(const VehClass: IVehicleClass): IVehClassSpeedReduction; dispid 1610874880;
    procedure RemoveVehClassSpeedReduction(const VehClassSpeedReduction: IVehClassSpeedReduction); dispid 1610874881;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehClassSpeedReductionContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4EC9682C-0AED-4856-97B7-639A02772AA1}
// *********************************************************************//
  IVehClassSpeedReductionContainer = interface(IVehClassSpeedReductionContainerBase)
    ['{4EC9682C-0AED-4856-97B7-639A02772AA1}']
  end;

// *********************************************************************//
// DispIntf:  IVehClassSpeedReductionContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4EC9682C-0AED-4856-97B7-639A02772AA1}
// *********************************************************************//
  IVehClassSpeedReductionContainerDisp = dispinterface
    ['{4EC9682C-0AED-4856-97B7-639A02772AA1}']
    function AddVehClassSpeedReduction(const VehClass: IVehicleClass): IVehClassSpeedReduction; dispid 1610874880;
    procedure RemoveVehClassSpeedReduction(const VehClassSpeedReduction: IVehClassSpeedReduction); dispid 1610874881;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehClassSpeedReductionBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {36696ACA-74D5-4260-85CF-FC2453FEED37}
// *********************************************************************//
  IVehClassSpeedReductionBase = interface(IObjectBase)
    ['{36696ACA-74D5-4260-85CF-FC2453FEED37}']
    function Get_VehClass: IVehicleClass; safecall;
    function Get_DesSpeedDistr: IDesSpeedDistribution; safecall;
    function Get_RedSpeedArea: IReducedSpeedArea; safecall;
    property VehClass: IVehicleClass read Get_VehClass;
    property DesSpeedDistr: IDesSpeedDistribution read Get_DesSpeedDistr;
    property RedSpeedArea: IReducedSpeedArea read Get_RedSpeedArea;
  end;

// *********************************************************************//
// DispIntf:  IVehClassSpeedReductionBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {36696ACA-74D5-4260-85CF-FC2453FEED37}
// *********************************************************************//
  IVehClassSpeedReductionBaseDisp = dispinterface
    ['{36696ACA-74D5-4260-85CF-FC2453FEED37}']
    property VehClass: IVehicleClass readonly dispid 1610809344;
    property DesSpeedDistr: IDesSpeedDistribution readonly dispid 1610809345;
    property RedSpeedArea: IReducedSpeedArea readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehClassSpeedReduction
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0E90499B-F9D5-4F9B-B06F-B6DF8D7D3222}
// *********************************************************************//
  IVehClassSpeedReduction = interface(IVehClassSpeedReductionBase)
    ['{0E90499B-F9D5-4F9B-B06F-B6DF8D7D3222}']
  end;

// *********************************************************************//
// DispIntf:  IVehClassSpeedReductionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0E90499B-F9D5-4F9B-B06F-B6DF8D7D3222}
// *********************************************************************//
  IVehClassSpeedReductionDisp = dispinterface
    ['{0E90499B-F9D5-4F9B-B06F-B6DF8D7D3222}']
    property VehClass: IVehicleClass readonly dispid 1610809344;
    property DesSpeedDistr: IDesSpeedDistribution readonly dispid 1610809345;
    property RedSpeedArea: IReducedSpeedArea readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ISCCommunicationCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D4351A12-8300-4DCC-A7B5-9D10EA986389}
// *********************************************************************//
  ISCCommunicationCollection = interface(ICollectionBase)
    ['{D4351A12-8300-4DCC-A7B5-9D10EA986389}']
  end;

// *********************************************************************//
// DispIntf:  ISCCommunicationCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D4351A12-8300-4DCC-A7B5-9D10EA986389}
// *********************************************************************//
  ISCCommunicationCollectionDisp = dispinterface
    ['{D4351A12-8300-4DCC-A7B5-9D10EA986389}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ISCCommunicationContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {96F70AA7-067E-4A74-82DD-38D9422F81FE}
// *********************************************************************//
  ISCCommunicationContainerBase = interface(ISCCommunicationCollection)
    ['{96F70AA7-067E-4A74-82DD-38D9422F81FE}']
    function Get_ItemByKey(Key: OleVariant): ISCCommunication; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddSCCommunication(Key: OleVariant): ISCCommunication; safecall;
    function DuplicateSCCommunication(Source: OleVariant; NewKey: OleVariant): ISCCommunication; safecall;
    procedure RemoveSCCommunication(const SCCommunication: ISCCommunication); safecall;
    property ItemByKey[Key: OleVariant]: ISCCommunication read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  ISCCommunicationContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {96F70AA7-067E-4A74-82DD-38D9422F81FE}
// *********************************************************************//
  ISCCommunicationContainerBaseDisp = dispinterface
    ['{96F70AA7-067E-4A74-82DD-38D9422F81FE}']
    property ItemByKey[Key: OleVariant]: ISCCommunication readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddSCCommunication(Key: OleVariant): ISCCommunication; dispid 1610874882;
    function DuplicateSCCommunication(Source: OleVariant; NewKey: OleVariant): ISCCommunication; dispid 1610874883;
    procedure RemoveSCCommunication(const SCCommunication: ISCCommunication); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ISCCommunicationContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CA17F16C-6556-4990-9096-A1DCBC3E48BB}
// *********************************************************************//
  ISCCommunicationContainer = interface(ISCCommunicationContainerBase)
    ['{CA17F16C-6556-4990-9096-A1DCBC3E48BB}']
  end;

// *********************************************************************//
// DispIntf:  ISCCommunicationContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CA17F16C-6556-4990-9096-A1DCBC3E48BB}
// *********************************************************************//
  ISCCommunicationContainerDisp = dispinterface
    ['{CA17F16C-6556-4990-9096-A1DCBC3E48BB}']
    property ItemByKey[Key: OleVariant]: ISCCommunication readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddSCCommunication(Key: OleVariant): ISCCommunication; dispid 1610874882;
    function DuplicateSCCommunication(Source: OleVariant; NewKey: OleVariant): ISCCommunication; dispid 1610874883;
    procedure RemoveSCCommunication(const SCCommunication: ISCCommunication); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ISCCommunicationBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DF3C62C7-F0AA-44E8-A63D-6415633F4B70}
// *********************************************************************//
  ISCCommunicationBase = interface(IObjectBase)
    ['{DF3C62C7-F0AA-44E8-A63D-6415633F4B70}']
    function Get_FromSC: ISignalController; safecall;
    function Get_ToSC: ISignalController; safecall;
    property FromSC: ISignalController read Get_FromSC;
    property ToSC: ISignalController read Get_ToSC;
  end;

// *********************************************************************//
// DispIntf:  ISCCommunicationBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DF3C62C7-F0AA-44E8-A63D-6415633F4B70}
// *********************************************************************//
  ISCCommunicationBaseDisp = dispinterface
    ['{DF3C62C7-F0AA-44E8-A63D-6415633F4B70}']
    property FromSC: ISignalController readonly dispid 1610809344;
    property ToSC: ISignalController readonly dispid 1610809345;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ISCCommunication
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {09050072-D1D0-4D4A-82D1-7EC2A2E2AF81}
// *********************************************************************//
  ISCCommunication = interface(ISCCommunicationBase)
    ['{09050072-D1D0-4D4A-82D1-7EC2A2E2AF81}']
  end;

// *********************************************************************//
// DispIntf:  ISCCommunicationDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {09050072-D1D0-4D4A-82D1-7EC2A2E2AF81}
// *********************************************************************//
  ISCCommunicationDisp = dispinterface
    ['{09050072-D1D0-4D4A-82D1-7EC2A2E2AF81}']
    property FromSC: ISignalController readonly dispid 1610809344;
    property ToSC: ISignalController readonly dispid 1610809345;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IScriptCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {ED0459B6-4D84-4E8C-8DC0-8ACDDA0B146D}
// *********************************************************************//
  IScriptCollection = interface(ICollectionBase)
    ['{ED0459B6-4D84-4E8C-8DC0-8ACDDA0B146D}']
  end;

// *********************************************************************//
// DispIntf:  IScriptCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {ED0459B6-4D84-4E8C-8DC0-8ACDDA0B146D}
// *********************************************************************//
  IScriptCollectionDisp = dispinterface
    ['{ED0459B6-4D84-4E8C-8DC0-8ACDDA0B146D}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IScriptContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D7B32761-C462-45D4-8AF2-300A4FC37BBB}
// *********************************************************************//
  IScriptContainerBase = interface(IScriptCollection)
    ['{D7B32761-C462-45D4-8AF2-300A4FC37BBB}']
    function Get_ItemByKey(Key: OleVariant): IScript; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddScript(Key: OleVariant): IScript; safecall;
    function DuplicateScript(Source: OleVariant; NewKey: OleVariant): IScript; safecall;
    procedure RemoveScript(const Script: IScript); safecall;
    property ItemByKey[Key: OleVariant]: IScript read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IScriptContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D7B32761-C462-45D4-8AF2-300A4FC37BBB}
// *********************************************************************//
  IScriptContainerBaseDisp = dispinterface
    ['{D7B32761-C462-45D4-8AF2-300A4FC37BBB}']
    property ItemByKey[Key: OleVariant]: IScript readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddScript(Key: OleVariant): IScript; dispid 1610874882;
    function DuplicateScript(Source: OleVariant; NewKey: OleVariant): IScript; dispid 1610874883;
    procedure RemoveScript(const Script: IScript); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IScriptContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {05EE0AD1-C582-43EE-8CC2-4BDE2BDB21EE}
// *********************************************************************//
  IScriptContainer = interface(IScriptContainerBase)
    ['{05EE0AD1-C582-43EE-8CC2-4BDE2BDB21EE}']
  end;

// *********************************************************************//
// DispIntf:  IScriptContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {05EE0AD1-C582-43EE-8CC2-4BDE2BDB21EE}
// *********************************************************************//
  IScriptContainerDisp = dispinterface
    ['{05EE0AD1-C582-43EE-8CC2-4BDE2BDB21EE}']
    property ItemByKey[Key: OleVariant]: IScript readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddScript(Key: OleVariant): IScript; dispid 1610874882;
    function DuplicateScript(Source: OleVariant; NewKey: OleVariant): IScript; dispid 1610874883;
    procedure RemoveScript(const Script: IScript); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IScriptBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F1D5BA5A-3358-4EA0-8152-BA0BB40BBE62}
// *********************************************************************//
  IScriptBase = interface(IObjectBase)
    ['{F1D5BA5A-3358-4EA0-8152-BA0BB40BBE62}']
  end;

// *********************************************************************//
// DispIntf:  IScriptBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F1D5BA5A-3358-4EA0-8152-BA0BB40BBE62}
// *********************************************************************//
  IScriptBaseDisp = dispinterface
    ['{F1D5BA5A-3358-4EA0-8152-BA0BB40BBE62}']
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IScript
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5703918C-DB20-46E9-BC90-09430F0CFAF6}
// *********************************************************************//
  IScript = interface(IScriptBase)
    ['{5703918C-DB20-46E9-BC90-09430F0CFAF6}']
  end;

// *********************************************************************//
// DispIntf:  IScriptDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5703918C-DB20-46E9-BC90-09430F0CFAF6}
// *********************************************************************//
  IScriptDisp = dispinterface
    ['{5703918C-DB20-46E9-BC90-09430F0CFAF6}']
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ISectionContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {249B8F7D-45D2-41D5-BF1F-08E263F45F3E}
// *********************************************************************//
  ISectionContainerBase = interface(ISectionCollection)
    ['{249B8F7D-45D2-41D5-BF1F-08E263F45F3E}']
    function Get_ItemByKey(Key: OleVariant): ISection; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddSection(Key: OleVariant; const WktPolygon: WideString): ISection; safecall;
    function DuplicateSection(Source: OleVariant; NewKey: OleVariant): ISection; safecall;
    procedure RemoveSection(const Section: ISection); safecall;
    property ItemByKey[Key: OleVariant]: ISection read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  ISectionContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {249B8F7D-45D2-41D5-BF1F-08E263F45F3E}
// *********************************************************************//
  ISectionContainerBaseDisp = dispinterface
    ['{249B8F7D-45D2-41D5-BF1F-08E263F45F3E}']
    property ItemByKey[Key: OleVariant]: ISection readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddSection(Key: OleVariant; const WktPolygon: WideString): ISection; dispid 1610874882;
    function DuplicateSection(Source: OleVariant; NewKey: OleVariant): ISection; dispid 1610874883;
    procedure RemoveSection(const Section: ISection); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ISectionContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E6EA2DFF-7180-4D09-B530-8CC6E7528533}
// *********************************************************************//
  ISectionContainer = interface(ISectionContainerBase)
    ['{E6EA2DFF-7180-4D09-B530-8CC6E7528533}']
  end;

// *********************************************************************//
// DispIntf:  ISectionContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E6EA2DFF-7180-4D09-B530-8CC6E7528533}
// *********************************************************************//
  ISectionContainerDisp = dispinterface
    ['{E6EA2DFF-7180-4D09-B530-8CC6E7528533}']
    property ItemByKey[Key: OleVariant]: ISection readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddSection(Key: OleVariant; const WktPolygon: WideString): ISection; dispid 1610874882;
    function DuplicateSection(Source: OleVariant; NewKey: OleVariant): ISection; dispid 1610874883;
    procedure RemoveSection(const Section: ISection); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ISectionBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D967759B-B0BD-4447-B1BC-D44E24381057}
// *********************************************************************//
  ISectionBase = interface(IObjectBase)
    ['{D967759B-B0BD-4447-B1BC-D44E24381057}']
    function Get_Points: IPointContainer; safecall;
    function Get_DisplayType: IDisplayType; safecall;
    function Get_Level: ILevel; safecall;
    function Get_AddLvl: ILevel; safecall;
    function Get_AreaMeas: IAreaMeasurementCollection; safecall;
    property Points: IPointContainer read Get_Points;
    property DisplayType: IDisplayType read Get_DisplayType;
    property Level: ILevel read Get_Level;
    property AddLvl: ILevel read Get_AddLvl;
    property AreaMeas: IAreaMeasurementCollection read Get_AreaMeas;
  end;

// *********************************************************************//
// DispIntf:  ISectionBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D967759B-B0BD-4447-B1BC-D44E24381057}
// *********************************************************************//
  ISectionBaseDisp = dispinterface
    ['{D967759B-B0BD-4447-B1BC-D44E24381057}']
    property Points: IPointContainer readonly dispid 1610809344;
    property DisplayType: IDisplayType readonly dispid 1610809345;
    property Level: ILevel readonly dispid 1610809346;
    property AddLvl: ILevel readonly dispid 1610809347;
    property AreaMeas: IAreaMeasurementCollection readonly dispid 1610809348;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ISection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {99D1C75E-E163-4530-9507-F9C593C8D7A3}
// *********************************************************************//
  ISection = interface(ISectionBase)
    ['{99D1C75E-E163-4530-9507-F9C593C8D7A3}']
  end;

// *********************************************************************//
// DispIntf:  ISectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {99D1C75E-E163-4530-9507-F9C593C8D7A3}
// *********************************************************************//
  ISectionDisp = dispinterface
    ['{99D1C75E-E163-4530-9507-F9C593C8D7A3}']
    property Points: IPointContainer readonly dispid 1610809344;
    property DisplayType: IDisplayType readonly dispid 1610809345;
    property Level: ILevel readonly dispid 1610809346;
    property AddLvl: ILevel readonly dispid 1610809347;
    property AreaMeas: IAreaMeasurementCollection readonly dispid 1610809348;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ISignalControllerCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {25336DEA-F9A7-4000-9708-46979BD63249}
// *********************************************************************//
  ISignalControllerCollection = interface(ICollectionBase)
    ['{25336DEA-F9A7-4000-9708-46979BD63249}']
  end;

// *********************************************************************//
// DispIntf:  ISignalControllerCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {25336DEA-F9A7-4000-9708-46979BD63249}
// *********************************************************************//
  ISignalControllerCollectionDisp = dispinterface
    ['{25336DEA-F9A7-4000-9708-46979BD63249}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ISignalControllerContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0A406036-8E6D-4B67-B8E3-66E3EBCBE644}
// *********************************************************************//
  ISignalControllerContainerBase = interface(ISignalControllerCollection)
    ['{0A406036-8E6D-4B67-B8E3-66E3EBCBE644}']
    function Get_ItemByKey(Key: OleVariant): ISignalController; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddSignalController(Key: OleVariant): ISignalController; safecall;
    function DuplicateSignalController(Source: OleVariant; NewKey: OleVariant): ISignalController; safecall;
    procedure RemoveSignalController(const SignalController: ISignalController); safecall;
    property ItemByKey[Key: OleVariant]: ISignalController read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  ISignalControllerContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0A406036-8E6D-4B67-B8E3-66E3EBCBE644}
// *********************************************************************//
  ISignalControllerContainerBaseDisp = dispinterface
    ['{0A406036-8E6D-4B67-B8E3-66E3EBCBE644}']
    property ItemByKey[Key: OleVariant]: ISignalController readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddSignalController(Key: OleVariant): ISignalController; dispid 1610874882;
    function DuplicateSignalController(Source: OleVariant; NewKey: OleVariant): ISignalController; dispid 1610874883;
    procedure RemoveSignalController(const SignalController: ISignalController); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ISignalControllerContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B4F21CFF-E705-49D1-841D-5B5F3BB09137}
// *********************************************************************//
  ISignalControllerContainer = interface(ISignalControllerContainerBase)
    ['{B4F21CFF-E705-49D1-841D-5B5F3BB09137}']
    procedure OptimizeAll; safecall;
  end;

// *********************************************************************//
// DispIntf:  ISignalControllerContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B4F21CFF-E705-49D1-841D-5B5F3BB09137}
// *********************************************************************//
  ISignalControllerContainerDisp = dispinterface
    ['{B4F21CFF-E705-49D1-841D-5B5F3BB09137}']
    procedure OptimizeAll; dispid 1610940416;
    property ItemByKey[Key: OleVariant]: ISignalController readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddSignalController(Key: OleVariant): ISignalController; dispid 1610874882;
    function DuplicateSignalController(Source: OleVariant; NewKey: OleVariant): ISignalController; dispid 1610874883;
    procedure RemoveSignalController(const SignalController: ISignalController); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ISignalHeadContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {092C5649-8576-4715-A848-CDCBFA53D0FF}
// *********************************************************************//
  ISignalHeadContainerBase = interface(ISignalHeadCollection)
    ['{092C5649-8576-4715-A848-CDCBFA53D0FF}']
    function Get_ItemByKey(Key: OleVariant): ISignalHead; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddSignalHead(Key: OleVariant; const Lane: ILane; Pos: Double): ISignalHead; safecall;
    function DuplicateSignalHead(Source: OleVariant; NewKey: OleVariant): ISignalHead; safecall;
    procedure RemoveSignalHead(const SignalHead: ISignalHead); safecall;
    property ItemByKey[Key: OleVariant]: ISignalHead read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  ISignalHeadContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {092C5649-8576-4715-A848-CDCBFA53D0FF}
// *********************************************************************//
  ISignalHeadContainerBaseDisp = dispinterface
    ['{092C5649-8576-4715-A848-CDCBFA53D0FF}']
    property ItemByKey[Key: OleVariant]: ISignalHead readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddSignalHead(Key: OleVariant; const Lane: ILane; Pos: Double): ISignalHead; dispid 1610874882;
    function DuplicateSignalHead(Source: OleVariant; NewKey: OleVariant): ISignalHead; dispid 1610874883;
    procedure RemoveSignalHead(const SignalHead: ISignalHead); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ISignalHeadContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3EFBE8BE-373F-4202-868A-4AA0998E07EB}
// *********************************************************************//
  ISignalHeadContainer = interface(ISignalHeadContainerBase)
    ['{3EFBE8BE-373F-4202-868A-4AA0998E07EB}']
  end;

// *********************************************************************//
// DispIntf:  ISignalHeadContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3EFBE8BE-373F-4202-868A-4AA0998E07EB}
// *********************************************************************//
  ISignalHeadContainerDisp = dispinterface
    ['{3EFBE8BE-373F-4202-868A-4AA0998E07EB}']
    property ItemByKey[Key: OleVariant]: ISignalHead readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddSignalHead(Key: OleVariant; const Lane: ILane; Pos: Double): ISignalHead; dispid 1610874882;
    function DuplicateSignalHead(Source: OleVariant; NewKey: OleVariant): ISignalHead; dispid 1610874883;
    procedure RemoveSignalHead(const SignalHead: ISignalHead); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ISignalHeadBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0585BCE1-B71B-4FE1-91BE-A65F52888E0F}
// *********************************************************************//
  ISignalHeadBase = interface(IObjectBase)
    ['{0585BCE1-B71B-4FE1-91BE-A65F52888E0F}']
    function Get_SG: ISignalGroup; safecall;
    function Get_OrSG: ISignalGroup; safecall;
    function Get_Lane: ILane; safecall;
    function Get_VehClasses: IVehicleClassCollection; safecall;
    function Get_PedClasses: IPedestrianClassCollection; safecall;
    property SG: ISignalGroup read Get_SG;
    property OrSG: ISignalGroup read Get_OrSG;
    property Lane: ILane read Get_Lane;
    property VehClasses: IVehicleClassCollection read Get_VehClasses;
    property PedClasses: IPedestrianClassCollection read Get_PedClasses;
  end;

// *********************************************************************//
// DispIntf:  ISignalHeadBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0585BCE1-B71B-4FE1-91BE-A65F52888E0F}
// *********************************************************************//
  ISignalHeadBaseDisp = dispinterface
    ['{0585BCE1-B71B-4FE1-91BE-A65F52888E0F}']
    property SG: ISignalGroup readonly dispid 1610809344;
    property OrSG: ISignalGroup readonly dispid 1610809345;
    property Lane: ILane readonly dispid 1610809346;
    property VehClasses: IVehicleClassCollection readonly dispid 1610809347;
    property PedClasses: IPedestrianClassCollection readonly dispid 1610809348;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ISignalHead
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F560FFCC-B59B-42FF-9381-284FC599E694}
// *********************************************************************//
  ISignalHead = interface(ISignalHeadBase)
    ['{F560FFCC-B59B-42FF-9381-284FC599E694}']
  end;

// *********************************************************************//
// DispIntf:  ISignalHeadDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F560FFCC-B59B-42FF-9381-284FC599E694}
// *********************************************************************//
  ISignalHeadDisp = dispinterface
    ['{F560FFCC-B59B-42FF-9381-284FC599E694}']
    property SG: ISignalGroup readonly dispid 1610809344;
    property OrSG: ISignalGroup readonly dispid 1610809345;
    property Lane: ILane readonly dispid 1610809346;
    property VehClasses: IVehicleClassCollection readonly dispid 1610809347;
    property PedClasses: IPedestrianClassCollection readonly dispid 1610809348;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ITrafficSignal3DCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {61C29214-773A-4526-9585-471687BAC192}
// *********************************************************************//
  ITrafficSignal3DCollection = interface(ICollectionBase)
    ['{61C29214-773A-4526-9585-471687BAC192}']
  end;

// *********************************************************************//
// DispIntf:  ITrafficSignal3DCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {61C29214-773A-4526-9585-471687BAC192}
// *********************************************************************//
  ITrafficSignal3DCollectionDisp = dispinterface
    ['{61C29214-773A-4526-9585-471687BAC192}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ITrafficSignal3DContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8C7F5556-4D9C-491E-A3C3-C35EBC4BEFDA}
// *********************************************************************//
  ITrafficSignal3DContainerBase = interface(ITrafficSignal3DCollection)
    ['{8C7F5556-4D9C-491E-A3C3-C35EBC4BEFDA}']
    function Get_ItemByKey(Key: OleVariant): ITrafficSignal3D; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddTrafficSignal3D(Key: OleVariant; const CoordWktPoint3D: WideString): ITrafficSignal3D; safecall;
    function DuplicateTrafficSignal3D(Source: OleVariant; NewKey: OleVariant): ITrafficSignal3D; safecall;
    procedure RemoveTrafficSignal3D(const TrafficSignal3D: ITrafficSignal3D); safecall;
    property ItemByKey[Key: OleVariant]: ITrafficSignal3D read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  ITrafficSignal3DContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8C7F5556-4D9C-491E-A3C3-C35EBC4BEFDA}
// *********************************************************************//
  ITrafficSignal3DContainerBaseDisp = dispinterface
    ['{8C7F5556-4D9C-491E-A3C3-C35EBC4BEFDA}']
    property ItemByKey[Key: OleVariant]: ITrafficSignal3D readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddTrafficSignal3D(Key: OleVariant; const CoordWktPoint3D: WideString): ITrafficSignal3D; dispid 1610874882;
    function DuplicateTrafficSignal3D(Source: OleVariant; NewKey: OleVariant): ITrafficSignal3D; dispid 1610874883;
    procedure RemoveTrafficSignal3D(const TrafficSignal3D: ITrafficSignal3D); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ITrafficSignal3DContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {361A27A3-A7EB-457E-ACFD-88BC87588AAD}
// *********************************************************************//
  ITrafficSignal3DContainer = interface(ITrafficSignal3DContainerBase)
    ['{361A27A3-A7EB-457E-ACFD-88BC87588AAD}']
  end;

// *********************************************************************//
// DispIntf:  ITrafficSignal3DContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {361A27A3-A7EB-457E-ACFD-88BC87588AAD}
// *********************************************************************//
  ITrafficSignal3DContainerDisp = dispinterface
    ['{361A27A3-A7EB-457E-ACFD-88BC87588AAD}']
    property ItemByKey[Key: OleVariant]: ITrafficSignal3D readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddTrafficSignal3D(Key: OleVariant; const CoordWktPoint3D: WideString): ITrafficSignal3D; dispid 1610874882;
    function DuplicateTrafficSignal3D(Source: OleVariant; NewKey: OleVariant): ITrafficSignal3D; dispid 1610874883;
    procedure RemoveTrafficSignal3D(const TrafficSignal3D: ITrafficSignal3D); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ITrafficSignal3DBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AEB25F66-BFB4-477C-AC8D-D7675F9261B6}
// *********************************************************************//
  ITrafficSignal3DBase = interface(IObjectBase)
    ['{AEB25F66-BFB4-477C-AC8D-D7675F9261B6}']
    function Get_Level: ILevel; safecall;
    function Get_SigArms: ISignalArm3DContainer; safecall;
    function Get_SigHeads: ISignalHead3DContainer; safecall;
    function Get_TrafficSigns: ITrafficSign3DContainer; safecall;
    function Get_Streetlights: IStreetlight3DContainer; safecall;
    property Level: ILevel read Get_Level;
    property SigArms: ISignalArm3DContainer read Get_SigArms;
    property SigHeads: ISignalHead3DContainer read Get_SigHeads;
    property TrafficSigns: ITrafficSign3DContainer read Get_TrafficSigns;
    property Streetlights: IStreetlight3DContainer read Get_Streetlights;
  end;

// *********************************************************************//
// DispIntf:  ITrafficSignal3DBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AEB25F66-BFB4-477C-AC8D-D7675F9261B6}
// *********************************************************************//
  ITrafficSignal3DBaseDisp = dispinterface
    ['{AEB25F66-BFB4-477C-AC8D-D7675F9261B6}']
    property Level: ILevel readonly dispid 1610809344;
    property SigArms: ISignalArm3DContainer readonly dispid 1610809345;
    property SigHeads: ISignalHead3DContainer readonly dispid 1610809346;
    property TrafficSigns: ITrafficSign3DContainer readonly dispid 1610809347;
    property Streetlights: IStreetlight3DContainer readonly dispid 1610809348;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ITrafficSignal3D
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8CA21489-EA75-4444-ACAC-2024A86FA57E}
// *********************************************************************//
  ITrafficSignal3D = interface(ITrafficSignal3DBase)
    ['{8CA21489-EA75-4444-ACAC-2024A86FA57E}']
  end;

// *********************************************************************//
// DispIntf:  ITrafficSignal3DDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8CA21489-EA75-4444-ACAC-2024A86FA57E}
// *********************************************************************//
  ITrafficSignal3DDisp = dispinterface
    ['{8CA21489-EA75-4444-ACAC-2024A86FA57E}']
    property Level: ILevel readonly dispid 1610809344;
    property SigArms: ISignalArm3DContainer readonly dispid 1610809345;
    property SigHeads: ISignalHead3DContainer readonly dispid 1610809346;
    property TrafficSigns: ITrafficSign3DContainer readonly dispid 1610809347;
    property Streetlights: IStreetlight3DContainer readonly dispid 1610809348;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ISignalArm3DCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EC81A101-8C6E-4807-AF77-683FBB0CDC71}
// *********************************************************************//
  ISignalArm3DCollection = interface(ICollectionBase)
    ['{EC81A101-8C6E-4807-AF77-683FBB0CDC71}']
  end;

// *********************************************************************//
// DispIntf:  ISignalArm3DCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EC81A101-8C6E-4807-AF77-683FBB0CDC71}
// *********************************************************************//
  ISignalArm3DCollectionDisp = dispinterface
    ['{EC81A101-8C6E-4807-AF77-683FBB0CDC71}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ISignalArm3DContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {05747882-FBE4-4EEC-A4AF-9FBDB705BCAF}
// *********************************************************************//
  ISignalArm3DContainerBase = interface(ISignalArm3DCollection)
    ['{05747882-FBE4-4EEC-A4AF-9FBDB705BCAF}']
    function Get_ItemByKey(Key: OleVariant): ISignalArm3D; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddSignalArm3D(Key: OleVariant): ISignalArm3D; safecall;
    function DuplicateSignalArm3D(Source: OleVariant; NewKey: OleVariant): ISignalArm3D; safecall;
    procedure RemoveSignalArm3D(const SignalArm3D: ISignalArm3D); safecall;
    property ItemByKey[Key: OleVariant]: ISignalArm3D read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  ISignalArm3DContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {05747882-FBE4-4EEC-A4AF-9FBDB705BCAF}
// *********************************************************************//
  ISignalArm3DContainerBaseDisp = dispinterface
    ['{05747882-FBE4-4EEC-A4AF-9FBDB705BCAF}']
    property ItemByKey[Key: OleVariant]: ISignalArm3D readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddSignalArm3D(Key: OleVariant): ISignalArm3D; dispid 1610874882;
    function DuplicateSignalArm3D(Source: OleVariant; NewKey: OleVariant): ISignalArm3D; dispid 1610874883;
    procedure RemoveSignalArm3D(const SignalArm3D: ISignalArm3D); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ISignalArm3DContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {956A6CD4-787D-4217-B227-12AEF87CFFBC}
// *********************************************************************//
  ISignalArm3DContainer = interface(ISignalArm3DContainerBase)
    ['{956A6CD4-787D-4217-B227-12AEF87CFFBC}']
  end;

// *********************************************************************//
// DispIntf:  ISignalArm3DContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {956A6CD4-787D-4217-B227-12AEF87CFFBC}
// *********************************************************************//
  ISignalArm3DContainerDisp = dispinterface
    ['{956A6CD4-787D-4217-B227-12AEF87CFFBC}']
    property ItemByKey[Key: OleVariant]: ISignalArm3D readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddSignalArm3D(Key: OleVariant): ISignalArm3D; dispid 1610874882;
    function DuplicateSignalArm3D(Source: OleVariant; NewKey: OleVariant): ISignalArm3D; dispid 1610874883;
    procedure RemoveSignalArm3D(const SignalArm3D: ISignalArm3D); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ISignalArm3DBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {287AAF02-434B-4F7A-ADA1-2463749BA2FC}
// *********************************************************************//
  ISignalArm3DBase = interface(IObjectBase)
    ['{287AAF02-434B-4F7A-ADA1-2463749BA2FC}']
    function Get_TrafSig3D: ITrafficSignal3D; safecall;
    property TrafSig3D: ITrafficSignal3D read Get_TrafSig3D;
  end;

// *********************************************************************//
// DispIntf:  ISignalArm3DBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {287AAF02-434B-4F7A-ADA1-2463749BA2FC}
// *********************************************************************//
  ISignalArm3DBaseDisp = dispinterface
    ['{287AAF02-434B-4F7A-ADA1-2463749BA2FC}']
    property TrafSig3D: ITrafficSignal3D readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ISignalArm3D
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {68845131-BF02-4EE1-A784-782A36457E95}
// *********************************************************************//
  ISignalArm3D = interface(ISignalArm3DBase)
    ['{68845131-BF02-4EE1-A784-782A36457E95}']
  end;

// *********************************************************************//
// DispIntf:  ISignalArm3DDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {68845131-BF02-4EE1-A784-782A36457E95}
// *********************************************************************//
  ISignalArm3DDisp = dispinterface
    ['{68845131-BF02-4EE1-A784-782A36457E95}']
    property TrafSig3D: ITrafficSignal3D readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ISignalHead3DCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {60E07CB8-F682-45EB-9B4C-80A3AE8408B2}
// *********************************************************************//
  ISignalHead3DCollection = interface(ICollectionBase)
    ['{60E07CB8-F682-45EB-9B4C-80A3AE8408B2}']
  end;

// *********************************************************************//
// DispIntf:  ISignalHead3DCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {60E07CB8-F682-45EB-9B4C-80A3AE8408B2}
// *********************************************************************//
  ISignalHead3DCollectionDisp = dispinterface
    ['{60E07CB8-F682-45EB-9B4C-80A3AE8408B2}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ISignalHead3DContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EC6D7029-4072-4E10-A56F-7E0E8EC35782}
// *********************************************************************//
  ISignalHead3DContainerBase = interface(ISignalHead3DCollection)
    ['{EC6D7029-4072-4E10-A56F-7E0E8EC35782}']
    function AddSignalHead3D(Key: OleVariant): ISignalHead3D; safecall;
    function DuplicateSignalHead3D(Source: OleVariant; NewKey: OleVariant): ISignalHead3D; safecall;
    procedure RemoveSignalHead3D(const SignalHead3D: ISignalHead3D); safecall;
  end;

// *********************************************************************//
// DispIntf:  ISignalHead3DContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EC6D7029-4072-4E10-A56F-7E0E8EC35782}
// *********************************************************************//
  ISignalHead3DContainerBaseDisp = dispinterface
    ['{EC6D7029-4072-4E10-A56F-7E0E8EC35782}']
    function AddSignalHead3D(Key: OleVariant): ISignalHead3D; dispid 1610874880;
    function DuplicateSignalHead3D(Source: OleVariant; NewKey: OleVariant): ISignalHead3D; dispid 1610874881;
    procedure RemoveSignalHead3D(const SignalHead3D: ISignalHead3D); dispid 1610874882;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ISignalHead3DContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {498FE5F8-5C23-486C-8501-DFF84B591355}
// *********************************************************************//
  ISignalHead3DContainer = interface(ISignalHead3DContainerBase)
    ['{498FE5F8-5C23-486C-8501-DFF84B591355}']
  end;

// *********************************************************************//
// DispIntf:  ISignalHead3DContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {498FE5F8-5C23-486C-8501-DFF84B591355}
// *********************************************************************//
  ISignalHead3DContainerDisp = dispinterface
    ['{498FE5F8-5C23-486C-8501-DFF84B591355}']
    function AddSignalHead3D(Key: OleVariant): ISignalHead3D; dispid 1610874880;
    function DuplicateSignalHead3D(Source: OleVariant; NewKey: OleVariant): ISignalHead3D; dispid 1610874881;
    procedure RemoveSignalHead3D(const SignalHead3D: ISignalHead3D); dispid 1610874882;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ISignalHead3DBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {02A82836-569C-497E-8A4B-80AF348DA981}
// *********************************************************************//
  ISignalHead3DBase = interface(IObjectBase)
    ['{02A82836-569C-497E-8A4B-80AF348DA981}']
    function Get_SignalArm: ISignalArm3D; safecall;
    function Get_AssocSGRight: ISignalGroup; safecall;
    function Get_AssocSGLeft: ISignalGroup; safecall;
    function Get_AssocSGThr: ISignalGroup; safecall;
    function Get_TrafSig3D: ITrafficSignal3D; safecall;
    property SignalArm: ISignalArm3D read Get_SignalArm;
    property AssocSGRight: ISignalGroup read Get_AssocSGRight;
    property AssocSGLeft: ISignalGroup read Get_AssocSGLeft;
    property AssocSGThr: ISignalGroup read Get_AssocSGThr;
    property TrafSig3D: ITrafficSignal3D read Get_TrafSig3D;
  end;

// *********************************************************************//
// DispIntf:  ISignalHead3DBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {02A82836-569C-497E-8A4B-80AF348DA981}
// *********************************************************************//
  ISignalHead3DBaseDisp = dispinterface
    ['{02A82836-569C-497E-8A4B-80AF348DA981}']
    property SignalArm: ISignalArm3D readonly dispid 1610809344;
    property AssocSGRight: ISignalGroup readonly dispid 1610809345;
    property AssocSGLeft: ISignalGroup readonly dispid 1610809346;
    property AssocSGThr: ISignalGroup readonly dispid 1610809347;
    property TrafSig3D: ITrafficSignal3D readonly dispid 1610809348;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ISignalHead3D
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E2864996-8168-4C81-834E-012FE3F87463}
// *********************************************************************//
  ISignalHead3D = interface(ISignalHead3DBase)
    ['{E2864996-8168-4C81-834E-012FE3F87463}']
  end;

// *********************************************************************//
// DispIntf:  ISignalHead3DDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E2864996-8168-4C81-834E-012FE3F87463}
// *********************************************************************//
  ISignalHead3DDisp = dispinterface
    ['{E2864996-8168-4C81-834E-012FE3F87463}']
    property SignalArm: ISignalArm3D readonly dispid 1610809344;
    property AssocSGRight: ISignalGroup readonly dispid 1610809345;
    property AssocSGLeft: ISignalGroup readonly dispid 1610809346;
    property AssocSGThr: ISignalGroup readonly dispid 1610809347;
    property TrafSig3D: ITrafficSignal3D readonly dispid 1610809348;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ITrafficSign3DCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {820EC3FD-5681-4AD5-9F3A-39250E54F51E}
// *********************************************************************//
  ITrafficSign3DCollection = interface(ICollectionBase)
    ['{820EC3FD-5681-4AD5-9F3A-39250E54F51E}']
  end;

// *********************************************************************//
// DispIntf:  ITrafficSign3DCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {820EC3FD-5681-4AD5-9F3A-39250E54F51E}
// *********************************************************************//
  ITrafficSign3DCollectionDisp = dispinterface
    ['{820EC3FD-5681-4AD5-9F3A-39250E54F51E}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ITrafficSign3DContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F967D7FD-9DC6-4E23-981A-2D37CF320C43}
// *********************************************************************//
  ITrafficSign3DContainerBase = interface(ITrafficSign3DCollection)
    ['{F967D7FD-9DC6-4E23-981A-2D37CF320C43}']
    function AddTrafficSign3D(Key: OleVariant): ITrafficSign3D; safecall;
    function DuplicateTrafficSign3D(Source: OleVariant; NewKey: OleVariant): ITrafficSign3D; safecall;
    procedure RemoveTrafficSign3D(const TrafficSign3D: ITrafficSign3D); safecall;
  end;

// *********************************************************************//
// DispIntf:  ITrafficSign3DContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F967D7FD-9DC6-4E23-981A-2D37CF320C43}
// *********************************************************************//
  ITrafficSign3DContainerBaseDisp = dispinterface
    ['{F967D7FD-9DC6-4E23-981A-2D37CF320C43}']
    function AddTrafficSign3D(Key: OleVariant): ITrafficSign3D; dispid 1610874880;
    function DuplicateTrafficSign3D(Source: OleVariant; NewKey: OleVariant): ITrafficSign3D; dispid 1610874881;
    procedure RemoveTrafficSign3D(const TrafficSign3D: ITrafficSign3D); dispid 1610874882;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ITrafficSign3DContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4906D52F-21B7-4DF8-8968-23E13C9EBD18}
// *********************************************************************//
  ITrafficSign3DContainer = interface(ITrafficSign3DContainerBase)
    ['{4906D52F-21B7-4DF8-8968-23E13C9EBD18}']
  end;

// *********************************************************************//
// DispIntf:  ITrafficSign3DContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4906D52F-21B7-4DF8-8968-23E13C9EBD18}
// *********************************************************************//
  ITrafficSign3DContainerDisp = dispinterface
    ['{4906D52F-21B7-4DF8-8968-23E13C9EBD18}']
    function AddTrafficSign3D(Key: OleVariant): ITrafficSign3D; dispid 1610874880;
    function DuplicateTrafficSign3D(Source: OleVariant; NewKey: OleVariant): ITrafficSign3D; dispid 1610874881;
    procedure RemoveTrafficSign3D(const TrafficSign3D: ITrafficSign3D); dispid 1610874882;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ITrafficSign3DBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {ACF9848A-FDCE-4A10-AEA3-639F17EFB360}
// *********************************************************************//
  ITrafficSign3DBase = interface(IObjectBase)
    ['{ACF9848A-FDCE-4A10-AEA3-639F17EFB360}']
    function Get_SignalArm: ISignalArm3D; safecall;
    function Get_TrafSig3D: ITrafficSignal3D; safecall;
    property SignalArm: ISignalArm3D read Get_SignalArm;
    property TrafSig3D: ITrafficSignal3D read Get_TrafSig3D;
  end;

// *********************************************************************//
// DispIntf:  ITrafficSign3DBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {ACF9848A-FDCE-4A10-AEA3-639F17EFB360}
// *********************************************************************//
  ITrafficSign3DBaseDisp = dispinterface
    ['{ACF9848A-FDCE-4A10-AEA3-639F17EFB360}']
    property SignalArm: ISignalArm3D readonly dispid 1610809344;
    property TrafSig3D: ITrafficSignal3D readonly dispid 1610809345;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ITrafficSign3D
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7BBBD0F8-C847-45FB-ADD4-EC0B320C91DD}
// *********************************************************************//
  ITrafficSign3D = interface(ITrafficSign3DBase)
    ['{7BBBD0F8-C847-45FB-ADD4-EC0B320C91DD}']
  end;

// *********************************************************************//
// DispIntf:  ITrafficSign3DDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7BBBD0F8-C847-45FB-ADD4-EC0B320C91DD}
// *********************************************************************//
  ITrafficSign3DDisp = dispinterface
    ['{7BBBD0F8-C847-45FB-ADD4-EC0B320C91DD}']
    property SignalArm: ISignalArm3D readonly dispid 1610809344;
    property TrafSig3D: ITrafficSignal3D readonly dispid 1610809345;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IStreetlight3DCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F13016CC-1CBA-478B-9637-48D2EB0EF595}
// *********************************************************************//
  IStreetlight3DCollection = interface(ICollectionBase)
    ['{F13016CC-1CBA-478B-9637-48D2EB0EF595}']
  end;

// *********************************************************************//
// DispIntf:  IStreetlight3DCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F13016CC-1CBA-478B-9637-48D2EB0EF595}
// *********************************************************************//
  IStreetlight3DCollectionDisp = dispinterface
    ['{F13016CC-1CBA-478B-9637-48D2EB0EF595}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IStreetlight3DContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {59584560-A04F-4790-A77D-7759A43682F6}
// *********************************************************************//
  IStreetlight3DContainerBase = interface(IStreetlight3DCollection)
    ['{59584560-A04F-4790-A77D-7759A43682F6}']
    function AddStreetlight3D(Key: OleVariant): IStreetlight3D; safecall;
    function DuplicateStreetlight3D(Source: OleVariant; NewKey: OleVariant): IStreetlight3D; safecall;
    procedure RemoveStreetlight3D(const Streetlight3D: IStreetlight3D); safecall;
  end;

// *********************************************************************//
// DispIntf:  IStreetlight3DContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {59584560-A04F-4790-A77D-7759A43682F6}
// *********************************************************************//
  IStreetlight3DContainerBaseDisp = dispinterface
    ['{59584560-A04F-4790-A77D-7759A43682F6}']
    function AddStreetlight3D(Key: OleVariant): IStreetlight3D; dispid 1610874880;
    function DuplicateStreetlight3D(Source: OleVariant; NewKey: OleVariant): IStreetlight3D; dispid 1610874881;
    procedure RemoveStreetlight3D(const Streetlight3D: IStreetlight3D); dispid 1610874882;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IStreetlight3DContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E8D927B8-317A-42B4-89CC-B801428F7360}
// *********************************************************************//
  IStreetlight3DContainer = interface(IStreetlight3DContainerBase)
    ['{E8D927B8-317A-42B4-89CC-B801428F7360}']
  end;

// *********************************************************************//
// DispIntf:  IStreetlight3DContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E8D927B8-317A-42B4-89CC-B801428F7360}
// *********************************************************************//
  IStreetlight3DContainerDisp = dispinterface
    ['{E8D927B8-317A-42B4-89CC-B801428F7360}']
    function AddStreetlight3D(Key: OleVariant): IStreetlight3D; dispid 1610874880;
    function DuplicateStreetlight3D(Source: OleVariant; NewKey: OleVariant): IStreetlight3D; dispid 1610874881;
    procedure RemoveStreetlight3D(const Streetlight3D: IStreetlight3D); dispid 1610874882;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IStreetlight3DBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B1A915EF-331C-47B6-84F8-3818164CD003}
// *********************************************************************//
  IStreetlight3DBase = interface(IObjectBase)
    ['{B1A915EF-331C-47B6-84F8-3818164CD003}']
    function Get_TrafSig3D: ITrafficSignal3D; safecall;
    property TrafSig3D: ITrafficSignal3D read Get_TrafSig3D;
  end;

// *********************************************************************//
// DispIntf:  IStreetlight3DBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B1A915EF-331C-47B6-84F8-3818164CD003}
// *********************************************************************//
  IStreetlight3DBaseDisp = dispinterface
    ['{B1A915EF-331C-47B6-84F8-3818164CD003}']
    property TrafSig3D: ITrafficSignal3D readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IStreetlight3D
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6FCE6CD0-575F-4652-B90E-E2ABE814BEEB}
// *********************************************************************//
  IStreetlight3D = interface(IStreetlight3DBase)
    ['{6FCE6CD0-575F-4652-B90E-E2ABE814BEEB}']
  end;

// *********************************************************************//
// DispIntf:  IStreetlight3DDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6FCE6CD0-575F-4652-B90E-E2ABE814BEEB}
// *********************************************************************//
  IStreetlight3DDisp = dispinterface
    ['{6FCE6CD0-575F-4652-B90E-E2ABE814BEEB}']
    property TrafSig3D: ITrafficSignal3D readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ISimulationBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AFEAD6A3-9D82-48BD-AB41-5590452BF7FA}
// *********************************************************************//
  ISimulationBase = interface(IObjectBase)
    ['{AFEAD6A3-9D82-48BD-AB41-5590452BF7FA}']
    function Get_MesoSectsForMicroSim: ISectionCollection; safecall;
    property MesoSectsForMicroSim: ISectionCollection read Get_MesoSectsForMicroSim;
  end;

// *********************************************************************//
// DispIntf:  ISimulationBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AFEAD6A3-9D82-48BD-AB41-5590452BF7FA}
// *********************************************************************//
  ISimulationBaseDisp = dispinterface
    ['{AFEAD6A3-9D82-48BD-AB41-5590452BF7FA}']
    property MesoSectsForMicroSim: ISectionCollection readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ISimulation
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8E31AAEC-F42D-4ED1-85D6-B02A90932041}
// *********************************************************************//
  ISimulation = interface(ISimulationBase)
    ['{8E31AAEC-F42D-4ED1-85D6-B02A90932041}']
    procedure RunContinuous; safecall;
    procedure RunSingleStep; safecall;
    procedure Stop; safecall;
    function Get_SimulationSecond: Double; safecall;
    property SimulationSecond: Double read Get_SimulationSecond;
  end;

// *********************************************************************//
// DispIntf:  ISimulationDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8E31AAEC-F42D-4ED1-85D6-B02A90932041}
// *********************************************************************//
  ISimulationDisp = dispinterface
    ['{8E31AAEC-F42D-4ED1-85D6-B02A90932041}']
    procedure RunContinuous; dispid 1610874880;
    procedure RunSingleStep; dispid 1610874881;
    procedure Stop; dispid 1610874882;
    property SimulationSecond: Double readonly dispid 1610874883;
    property MesoSectsForMicroSim: ISectionCollection readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ISimulationRunCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C989B6D1-40F5-45D3-8B92-F4D1CB9B5610}
// *********************************************************************//
  ISimulationRunCollection = interface(ICollectionBase)
    ['{C989B6D1-40F5-45D3-8B92-F4D1CB9B5610}']
  end;

// *********************************************************************//
// DispIntf:  ISimulationRunCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C989B6D1-40F5-45D3-8B92-F4D1CB9B5610}
// *********************************************************************//
  ISimulationRunCollectionDisp = dispinterface
    ['{C989B6D1-40F5-45D3-8B92-F4D1CB9B5610}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ISimulationRunContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7B16323F-8BBC-4652-BB98-CC59B5267E66}
// *********************************************************************//
  ISimulationRunContainerBase = interface(ISimulationRunCollection)
    ['{7B16323F-8BBC-4652-BB98-CC59B5267E66}']
    function Get_ItemByKey(Key: OleVariant): ISimulationRun; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    procedure RemoveSimulationRun(const SimulationRun: ISimulationRun); safecall;
    property ItemByKey[Key: OleVariant]: ISimulationRun read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  ISimulationRunContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7B16323F-8BBC-4652-BB98-CC59B5267E66}
// *********************************************************************//
  ISimulationRunContainerBaseDisp = dispinterface
    ['{7B16323F-8BBC-4652-BB98-CC59B5267E66}']
    property ItemByKey[Key: OleVariant]: ISimulationRun readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    procedure RemoveSimulationRun(const SimulationRun: ISimulationRun); dispid 1610874882;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ISimulationRunContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7B7DFDFB-D627-4215-A505-605BC4C1A0AF}
// *********************************************************************//
  ISimulationRunContainer = interface(ISimulationRunContainerBase)
    ['{7B7DFDFB-D627-4215-A505-605BC4C1A0AF}']
  end;

// *********************************************************************//
// DispIntf:  ISimulationRunContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7B7DFDFB-D627-4215-A505-605BC4C1A0AF}
// *********************************************************************//
  ISimulationRunContainerDisp = dispinterface
    ['{7B7DFDFB-D627-4215-A505-605BC4C1A0AF}']
    property ItemByKey[Key: OleVariant]: ISimulationRun readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    procedure RemoveSimulationRun(const SimulationRun: ISimulationRun); dispid 1610874882;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ISimulationRunBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {484F3A85-8311-42BE-86E9-F8A19C79AA52}
// *********************************************************************//
  ISimulationRunBase = interface(IObjectBase)
    ['{484F3A85-8311-42BE-86E9-F8A19C79AA52}']
  end;

// *********************************************************************//
// DispIntf:  ISimulationRunBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {484F3A85-8311-42BE-86E9-F8A19C79AA52}
// *********************************************************************//
  ISimulationRunBaseDisp = dispinterface
    ['{484F3A85-8311-42BE-86E9-F8A19C79AA52}']
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ISimulationRun
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A21F4373-9873-4B48-AF07-58FDC1B69F9F}
// *********************************************************************//
  ISimulationRun = interface(ISimulationRunBase)
    ['{A21F4373-9873-4B48-AF07-58FDC1B69F9F}']
  end;

// *********************************************************************//
// DispIntf:  ISimulationRunDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A21F4373-9873-4B48-AF07-58FDC1B69F9F}
// *********************************************************************//
  ISimulationRunDisp = dispinterface
    ['{A21F4373-9873-4B48-AF07-58FDC1B69F9F}']
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IStatic3DModelCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {982F2FF7-4C91-4090-954D-81648ABF866C}
// *********************************************************************//
  IStatic3DModelCollection = interface(ICollectionBase)
    ['{982F2FF7-4C91-4090-954D-81648ABF866C}']
  end;

// *********************************************************************//
// DispIntf:  IStatic3DModelCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {982F2FF7-4C91-4090-954D-81648ABF866C}
// *********************************************************************//
  IStatic3DModelCollectionDisp = dispinterface
    ['{982F2FF7-4C91-4090-954D-81648ABF866C}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IStatic3DModelContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A2F87DF5-148F-4184-B39F-CD22C4A9DCD5}
// *********************************************************************//
  IStatic3DModelContainerBase = interface(IStatic3DModelCollection)
    ['{A2F87DF5-148F-4184-B39F-CD22C4A9DCD5}']
    function Get_ItemByKey(Key: OleVariant): IStatic3DModel; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddStatic3DModel(Key: OleVariant; const ModelFilename: WideString; 
                              const CoordWktPoint3D: WideString): IStatic3DModel; safecall;
    function DuplicateStatic3DModel(Source: OleVariant; NewKey: OleVariant): IStatic3DModel; safecall;
    procedure RemoveStatic3DModel(const Static3DModel: IStatic3DModel); safecall;
    property ItemByKey[Key: OleVariant]: IStatic3DModel read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IStatic3DModelContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A2F87DF5-148F-4184-B39F-CD22C4A9DCD5}
// *********************************************************************//
  IStatic3DModelContainerBaseDisp = dispinterface
    ['{A2F87DF5-148F-4184-B39F-CD22C4A9DCD5}']
    property ItemByKey[Key: OleVariant]: IStatic3DModel readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddStatic3DModel(Key: OleVariant; const ModelFilename: WideString; 
                              const CoordWktPoint3D: WideString): IStatic3DModel; dispid 1610874882;
    function DuplicateStatic3DModel(Source: OleVariant; NewKey: OleVariant): IStatic3DModel; dispid 1610874883;
    procedure RemoveStatic3DModel(const Static3DModel: IStatic3DModel); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IStatic3DModelContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A5CCCCDB-7EF0-4315-947A-8C4231772F4C}
// *********************************************************************//
  IStatic3DModelContainer = interface(IStatic3DModelContainerBase)
    ['{A5CCCCDB-7EF0-4315-947A-8C4231772F4C}']
  end;

// *********************************************************************//
// DispIntf:  IStatic3DModelContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A5CCCCDB-7EF0-4315-947A-8C4231772F4C}
// *********************************************************************//
  IStatic3DModelContainerDisp = dispinterface
    ['{A5CCCCDB-7EF0-4315-947A-8C4231772F4C}']
    property ItemByKey[Key: OleVariant]: IStatic3DModel readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddStatic3DModel(Key: OleVariant; const ModelFilename: WideString; 
                              const CoordWktPoint3D: WideString): IStatic3DModel; dispid 1610874882;
    function DuplicateStatic3DModel(Source: OleVariant; NewKey: OleVariant): IStatic3DModel; dispid 1610874883;
    procedure RemoveStatic3DModel(const Static3DModel: IStatic3DModel); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IStatic3DModelBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1B2C11D0-2944-474C-ABFC-A647C9D720FC}
// *********************************************************************//
  IStatic3DModelBase = interface(IObjectBase)
    ['{1B2C11D0-2944-474C-ABFC-A647C9D720FC}']
    function Get_Level: ILevel; safecall;
    property Level: ILevel read Get_Level;
  end;

// *********************************************************************//
// DispIntf:  IStatic3DModelBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1B2C11D0-2944-474C-ABFC-A647C9D720FC}
// *********************************************************************//
  IStatic3DModelBaseDisp = dispinterface
    ['{1B2C11D0-2944-474C-ABFC-A647C9D720FC}']
    property Level: ILevel readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IStatic3DModel
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {39434C68-9BED-4B63-8CB5-9FF51D8C7F3E}
// *********************************************************************//
  IStatic3DModel = interface(IStatic3DModelBase)
    ['{39434C68-9BED-4B63-8CB5-9FF51D8C7F3E}']
  end;

// *********************************************************************//
// DispIntf:  IStatic3DModelDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {39434C68-9BED-4B63-8CB5-9FF51D8C7F3E}
// *********************************************************************//
  IStatic3DModelDisp = dispinterface
    ['{39434C68-9BED-4B63-8CB5-9FF51D8C7F3E}']
    property Level: ILevel readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IStopSignContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A6D8BDD3-07C3-4D45-9D0E-1C7A98EADB39}
// *********************************************************************//
  IStopSignContainerBase = interface(IStopSignCollection)
    ['{A6D8BDD3-07C3-4D45-9D0E-1C7A98EADB39}']
    function Get_ItemByKey(Key: OleVariant): IStopSign; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddStopSign(Key: OleVariant; const Lane: ILane; Pos: Double): IStopSign; safecall;
    function DuplicateStopSign(Source: OleVariant; NewKey: OleVariant): IStopSign; safecall;
    procedure RemoveStopSign(const StopSign: IStopSign); safecall;
    property ItemByKey[Key: OleVariant]: IStopSign read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IStopSignContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A6D8BDD3-07C3-4D45-9D0E-1C7A98EADB39}
// *********************************************************************//
  IStopSignContainerBaseDisp = dispinterface
    ['{A6D8BDD3-07C3-4D45-9D0E-1C7A98EADB39}']
    property ItemByKey[Key: OleVariant]: IStopSign readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddStopSign(Key: OleVariant; const Lane: ILane; Pos: Double): IStopSign; dispid 1610874882;
    function DuplicateStopSign(Source: OleVariant; NewKey: OleVariant): IStopSign; dispid 1610874883;
    procedure RemoveStopSign(const StopSign: IStopSign); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IStopSignContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {ABB53166-391B-479E-868D-999A9B095E21}
// *********************************************************************//
  IStopSignContainer = interface(IStopSignContainerBase)
    ['{ABB53166-391B-479E-868D-999A9B095E21}']
  end;

// *********************************************************************//
// DispIntf:  IStopSignContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {ABB53166-391B-479E-868D-999A9B095E21}
// *********************************************************************//
  IStopSignContainerDisp = dispinterface
    ['{ABB53166-391B-479E-868D-999A9B095E21}']
    property ItemByKey[Key: OleVariant]: IStopSign readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddStopSign(Key: OleVariant; const Lane: ILane; Pos: Double): IStopSign; dispid 1610874882;
    function DuplicateStopSign(Source: OleVariant; NewKey: OleVariant): IStopSign; dispid 1610874883;
    procedure RemoveStopSign(const StopSign: IStopSign); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IStopSignBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2D15DE1C-A7B5-430B-B49E-D354862A781B}
// *********************************************************************//
  IStopSignBase = interface(IObjectBase)
    ['{2D15DE1C-A7B5-430B-B49E-D354862A781B}']
    function Get_SG: ISignalGroup; safecall;
    function Get_VehClassDwTmDistr: IVehClassDwellTimeDistributionContainer; safecall;
    function Get_Lane: ILane; safecall;
    property SG: ISignalGroup read Get_SG;
    property VehClassDwTmDistr: IVehClassDwellTimeDistributionContainer read Get_VehClassDwTmDistr;
    property Lane: ILane read Get_Lane;
  end;

// *********************************************************************//
// DispIntf:  IStopSignBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2D15DE1C-A7B5-430B-B49E-D354862A781B}
// *********************************************************************//
  IStopSignBaseDisp = dispinterface
    ['{2D15DE1C-A7B5-430B-B49E-D354862A781B}']
    property SG: ISignalGroup readonly dispid 1610809344;
    property VehClassDwTmDistr: IVehClassDwellTimeDistributionContainer readonly dispid 1610809345;
    property Lane: ILane readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IStopSign
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C297F20E-8134-4A62-8862-3B86B53E6D1F}
// *********************************************************************//
  IStopSign = interface(IStopSignBase)
    ['{C297F20E-8134-4A62-8862-3B86B53E6D1F}']
  end;

// *********************************************************************//
// DispIntf:  IStopSignDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C297F20E-8134-4A62-8862-3B86B53E6D1F}
// *********************************************************************//
  IStopSignDisp = dispinterface
    ['{C297F20E-8134-4A62-8862-3B86B53E6D1F}']
    property SG: ISignalGroup readonly dispid 1610809344;
    property VehClassDwTmDistr: IVehClassDwellTimeDistributionContainer readonly dispid 1610809345;
    property Lane: ILane readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehClassDwellTimeDistributionCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {24CF68D6-A29F-45C7-AFFF-6AE1EA6D86F0}
// *********************************************************************//
  IVehClassDwellTimeDistributionCollection = interface(ICollectionBase)
    ['{24CF68D6-A29F-45C7-AFFF-6AE1EA6D86F0}']
  end;

// *********************************************************************//
// DispIntf:  IVehClassDwellTimeDistributionCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {24CF68D6-A29F-45C7-AFFF-6AE1EA6D86F0}
// *********************************************************************//
  IVehClassDwellTimeDistributionCollectionDisp = dispinterface
    ['{24CF68D6-A29F-45C7-AFFF-6AE1EA6D86F0}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehClassDwellTimeDistributionContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2D134C95-C72C-4FED-9233-75CF8FC84FDD}
// *********************************************************************//
  IVehClassDwellTimeDistributionContainerBase = interface(IVehClassDwellTimeDistributionCollection)
    ['{2D134C95-C72C-4FED-9233-75CF8FC84FDD}']
    function AddVehClassDwellTimeDistribution(const VehClass: IVehicleClass): IVehClassDwellTimeDistribution; safecall;
    procedure RemoveVehClassDwellTimeDistribution(const VehClassDwellTimeDistribution: IVehClassDwellTimeDistribution); safecall;
  end;

// *********************************************************************//
// DispIntf:  IVehClassDwellTimeDistributionContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2D134C95-C72C-4FED-9233-75CF8FC84FDD}
// *********************************************************************//
  IVehClassDwellTimeDistributionContainerBaseDisp = dispinterface
    ['{2D134C95-C72C-4FED-9233-75CF8FC84FDD}']
    function AddVehClassDwellTimeDistribution(const VehClass: IVehicleClass): IVehClassDwellTimeDistribution; dispid 1610874880;
    procedure RemoveVehClassDwellTimeDistribution(const VehClassDwellTimeDistribution: IVehClassDwellTimeDistribution); dispid 1610874881;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehClassDwellTimeDistributionContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7A397F1F-EC1D-408E-860B-5FAD3D577634}
// *********************************************************************//
  IVehClassDwellTimeDistributionContainer = interface(IVehClassDwellTimeDistributionContainerBase)
    ['{7A397F1F-EC1D-408E-860B-5FAD3D577634}']
  end;

// *********************************************************************//
// DispIntf:  IVehClassDwellTimeDistributionContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7A397F1F-EC1D-408E-860B-5FAD3D577634}
// *********************************************************************//
  IVehClassDwellTimeDistributionContainerDisp = dispinterface
    ['{7A397F1F-EC1D-408E-860B-5FAD3D577634}']
    function AddVehClassDwellTimeDistribution(const VehClass: IVehicleClass): IVehClassDwellTimeDistribution; dispid 1610874880;
    procedure RemoveVehClassDwellTimeDistribution(const VehClassDwellTimeDistribution: IVehClassDwellTimeDistribution); dispid 1610874881;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehClassDwellTimeDistributionBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {75BC0F84-3A2B-4360-B3FE-10932F24BFB4}
// *********************************************************************//
  IVehClassDwellTimeDistributionBase = interface(IObjectBase)
    ['{75BC0F84-3A2B-4360-B3FE-10932F24BFB4}']
    function Get_DwellTmDistr: ITimeDistribution; safecall;
    function Get_VehClass: IVehicleClass; safecall;
    function Get_StopSign: IStopSign; safecall;
    property DwellTmDistr: ITimeDistribution read Get_DwellTmDistr;
    property VehClass: IVehicleClass read Get_VehClass;
    property StopSign: IStopSign read Get_StopSign;
  end;

// *********************************************************************//
// DispIntf:  IVehClassDwellTimeDistributionBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {75BC0F84-3A2B-4360-B3FE-10932F24BFB4}
// *********************************************************************//
  IVehClassDwellTimeDistributionBaseDisp = dispinterface
    ['{75BC0F84-3A2B-4360-B3FE-10932F24BFB4}']
    property DwellTmDistr: ITimeDistribution readonly dispid 1610809344;
    property VehClass: IVehicleClass readonly dispid 1610809345;
    property StopSign: IStopSign readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehClassDwellTimeDistribution
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EE557C7B-8293-47A4-9D4C-2CA3AA6DD839}
// *********************************************************************//
  IVehClassDwellTimeDistribution = interface(IVehClassDwellTimeDistributionBase)
    ['{EE557C7B-8293-47A4-9D4C-2CA3AA6DD839}']
  end;

// *********************************************************************//
// DispIntf:  IVehClassDwellTimeDistributionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EE557C7B-8293-47A4-9D4C-2CA3AA6DD839}
// *********************************************************************//
  IVehClassDwellTimeDistributionDisp = dispinterface
    ['{EE557C7B-8293-47A4-9D4C-2CA3AA6DD839}']
    property DwellTmDistr: ITimeDistribution readonly dispid 1610809344;
    property VehClass: IVehicleClass readonly dispid 1610809345;
    property StopSign: IStopSign readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IStoryboardCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CA971839-9EDC-470D-B897-2038E41DF48A}
// *********************************************************************//
  IStoryboardCollection = interface(ICollectionBase)
    ['{CA971839-9EDC-470D-B897-2038E41DF48A}']
  end;

// *********************************************************************//
// DispIntf:  IStoryboardCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CA971839-9EDC-470D-B897-2038E41DF48A}
// *********************************************************************//
  IStoryboardCollectionDisp = dispinterface
    ['{CA971839-9EDC-470D-B897-2038E41DF48A}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IStoryboardContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2DB3493D-6B7E-4841-8B11-3A118EC693F1}
// *********************************************************************//
  IStoryboardContainerBase = interface(IStoryboardCollection)
    ['{2DB3493D-6B7E-4841-8B11-3A118EC693F1}']
    function Get_ItemByKey(Key: OleVariant): IStoryboard; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddStoryboard(Key: OleVariant): IStoryboard; safecall;
    function DuplicateStoryboard(Source: OleVariant; NewKey: OleVariant): IStoryboard; safecall;
    procedure RemoveStoryboard(const Storyboard: IStoryboard); safecall;
    property ItemByKey[Key: OleVariant]: IStoryboard read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IStoryboardContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2DB3493D-6B7E-4841-8B11-3A118EC693F1}
// *********************************************************************//
  IStoryboardContainerBaseDisp = dispinterface
    ['{2DB3493D-6B7E-4841-8B11-3A118EC693F1}']
    property ItemByKey[Key: OleVariant]: IStoryboard readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddStoryboard(Key: OleVariant): IStoryboard; dispid 1610874882;
    function DuplicateStoryboard(Source: OleVariant; NewKey: OleVariant): IStoryboard; dispid 1610874883;
    procedure RemoveStoryboard(const Storyboard: IStoryboard); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IStoryboardContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DAB2E943-9823-45D4-AEC8-BDBE1A605859}
// *********************************************************************//
  IStoryboardContainer = interface(IStoryboardContainerBase)
    ['{DAB2E943-9823-45D4-AEC8-BDBE1A605859}']
  end;

// *********************************************************************//
// DispIntf:  IStoryboardContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DAB2E943-9823-45D4-AEC8-BDBE1A605859}
// *********************************************************************//
  IStoryboardContainerDisp = dispinterface
    ['{DAB2E943-9823-45D4-AEC8-BDBE1A605859}']
    property ItemByKey[Key: OleVariant]: IStoryboard readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddStoryboard(Key: OleVariant): IStoryboard; dispid 1610874882;
    function DuplicateStoryboard(Source: OleVariant; NewKey: OleVariant): IStoryboard; dispid 1610874883;
    procedure RemoveStoryboard(const Storyboard: IStoryboard); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IStoryboardBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BD6BAC53-0041-425B-95BA-11A3E29B797E}
// *********************************************************************//
  IStoryboardBase = interface(IObjectBase)
    ['{BD6BAC53-0041-425B-95BA-11A3E29B797E}']
    function Get_Keyframes: IKeyframeContainer; safecall;
    property Keyframes: IKeyframeContainer read Get_Keyframes;
  end;

// *********************************************************************//
// DispIntf:  IStoryboardBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BD6BAC53-0041-425B-95BA-11A3E29B797E}
// *********************************************************************//
  IStoryboardBaseDisp = dispinterface
    ['{BD6BAC53-0041-425B-95BA-11A3E29B797E}']
    property Keyframes: IKeyframeContainer readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IStoryboard
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {60D1A9E0-2F24-4F74-9228-0B27C90F669F}
// *********************************************************************//
  IStoryboard = interface(IStoryboardBase)
    ['{60D1A9E0-2F24-4F74-9228-0B27C90F669F}']
  end;

// *********************************************************************//
// DispIntf:  IStoryboardDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {60D1A9E0-2F24-4F74-9228-0B27C90F669F}
// *********************************************************************//
  IStoryboardDisp = dispinterface
    ['{60D1A9E0-2F24-4F74-9228-0B27C90F669F}']
    property Keyframes: IKeyframeContainer readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IKeyframeCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0CF68B99-96E6-4E4F-8868-1428EC58D0FE}
// *********************************************************************//
  IKeyframeCollection = interface(ICollectionBase)
    ['{0CF68B99-96E6-4E4F-8868-1428EC58D0FE}']
  end;

// *********************************************************************//
// DispIntf:  IKeyframeCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0CF68B99-96E6-4E4F-8868-1428EC58D0FE}
// *********************************************************************//
  IKeyframeCollectionDisp = dispinterface
    ['{0CF68B99-96E6-4E4F-8868-1428EC58D0FE}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IKeyframeContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4E575E96-883A-477F-977E-FCBA231E9F1B}
// *********************************************************************//
  IKeyframeContainerBase = interface(IKeyframeCollection)
    ['{4E575E96-883A-477F-977E-FCBA231E9F1B}']
    function Get_ItemByKey(Key: OleVariant): IKeyframe; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddKeyframe(Key: OleVariant): IKeyframe; safecall;
    procedure RemoveKeyframe(const Keyframe: IKeyframe); safecall;
    property ItemByKey[Key: OleVariant]: IKeyframe read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IKeyframeContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4E575E96-883A-477F-977E-FCBA231E9F1B}
// *********************************************************************//
  IKeyframeContainerBaseDisp = dispinterface
    ['{4E575E96-883A-477F-977E-FCBA231E9F1B}']
    property ItemByKey[Key: OleVariant]: IKeyframe readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddKeyframe(Key: OleVariant): IKeyframe; dispid 1610874882;
    procedure RemoveKeyframe(const Keyframe: IKeyframe); dispid 1610874883;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IKeyframeContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C16BF8AE-DB75-411D-A6DD-5F64FBA76BA5}
// *********************************************************************//
  IKeyframeContainer = interface(IKeyframeContainerBase)
    ['{C16BF8AE-DB75-411D-A6DD-5F64FBA76BA5}']
  end;

// *********************************************************************//
// DispIntf:  IKeyframeContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C16BF8AE-DB75-411D-A6DD-5F64FBA76BA5}
// *********************************************************************//
  IKeyframeContainerDisp = dispinterface
    ['{C16BF8AE-DB75-411D-A6DD-5F64FBA76BA5}']
    property ItemByKey[Key: OleVariant]: IKeyframe readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddKeyframe(Key: OleVariant): IKeyframe; dispid 1610874882;
    procedure RemoveKeyframe(const Keyframe: IKeyframe); dispid 1610874883;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IKeyframeBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {57FBF21B-7F75-4716-8EB8-C5722486092E}
// *********************************************************************//
  IKeyframeBase = interface(IObjectBase)
    ['{57FBF21B-7F75-4716-8EB8-C5722486092E}']
    function Get_CamPos: ICameraPosition; safecall;
    function Get_Storyboard: IStoryboard; safecall;
    property CamPos: ICameraPosition read Get_CamPos;
    property Storyboard: IStoryboard read Get_Storyboard;
  end;

// *********************************************************************//
// DispIntf:  IKeyframeBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {57FBF21B-7F75-4716-8EB8-C5722486092E}
// *********************************************************************//
  IKeyframeBaseDisp = dispinterface
    ['{57FBF21B-7F75-4716-8EB8-C5722486092E}']
    property CamPos: ICameraPosition readonly dispid 1610809344;
    property Storyboard: IStoryboard readonly dispid 1610809345;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IKeyframe
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8071E5C9-D455-47A9-AE1C-17CC79446D6B}
// *********************************************************************//
  IKeyframe = interface(IKeyframeBase)
    ['{8071E5C9-D455-47A9-AE1C-17CC79446D6B}']
  end;

// *********************************************************************//
// DispIntf:  IKeyframeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8071E5C9-D455-47A9-AE1C-17CC79446D6B}
// *********************************************************************//
  IKeyframeDisp = dispinterface
    ['{8071E5C9-D455-47A9-AE1C-17CC79446D6B}']
    property CamPos: ICameraPosition readonly dispid 1610809344;
    property Storyboard: IStoryboard readonly dispid 1610809345;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ITimeDistributionCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BE4C999A-EBEA-4344-B5D7-4A8E700106F3}
// *********************************************************************//
  ITimeDistributionCollection = interface(ICollectionBase)
    ['{BE4C999A-EBEA-4344-B5D7-4A8E700106F3}']
  end;

// *********************************************************************//
// DispIntf:  ITimeDistributionCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BE4C999A-EBEA-4344-B5D7-4A8E700106F3}
// *********************************************************************//
  ITimeDistributionCollectionDisp = dispinterface
    ['{BE4C999A-EBEA-4344-B5D7-4A8E700106F3}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ITimeDistributionContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A2728A78-BE27-4C92-9A61-685F54A6A162}
// *********************************************************************//
  ITimeDistributionContainerBase = interface(ITimeDistributionCollection)
    ['{A2728A78-BE27-4C92-9A61-685F54A6A162}']
    function Get_ItemByKey(Key: OleVariant): ITimeDistribution; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddTimeDistribution(Key: OleVariant; Type_: DistributionType; 
                                 DurDistrDataPts: OleVariant): ITimeDistribution; safecall;
    function DuplicateTimeDistribution(Source: OleVariant; NewKey: OleVariant): ITimeDistribution; safecall;
    procedure RemoveTimeDistribution(const TimeDistribution: ITimeDistribution); safecall;
    property ItemByKey[Key: OleVariant]: ITimeDistribution read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  ITimeDistributionContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A2728A78-BE27-4C92-9A61-685F54A6A162}
// *********************************************************************//
  ITimeDistributionContainerBaseDisp = dispinterface
    ['{A2728A78-BE27-4C92-9A61-685F54A6A162}']
    property ItemByKey[Key: OleVariant]: ITimeDistribution readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddTimeDistribution(Key: OleVariant; Type_: DistributionType; 
                                 DurDistrDataPts: OleVariant): ITimeDistribution; dispid 1610874882;
    function DuplicateTimeDistribution(Source: OleVariant; NewKey: OleVariant): ITimeDistribution; dispid 1610874883;
    procedure RemoveTimeDistribution(const TimeDistribution: ITimeDistribution); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ITimeDistributionContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {69D8E2F7-9590-4BCB-8037-79DFBCF779B6}
// *********************************************************************//
  ITimeDistributionContainer = interface(ITimeDistributionContainerBase)
    ['{69D8E2F7-9590-4BCB-8037-79DFBCF779B6}']
    function AddTimeDistributionNormal(Key: OleVariant): ITimeDistribution; safecall;
    function AddTimeDistributionEmpirical(Key: OleVariant; DurDistrDataPts: OleVariant): ITimeDistribution; safecall;
  end;

// *********************************************************************//
// DispIntf:  ITimeDistributionContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {69D8E2F7-9590-4BCB-8037-79DFBCF779B6}
// *********************************************************************//
  ITimeDistributionContainerDisp = dispinterface
    ['{69D8E2F7-9590-4BCB-8037-79DFBCF779B6}']
    function AddTimeDistributionNormal(Key: OleVariant): ITimeDistribution; dispid 1610940416;
    function AddTimeDistributionEmpirical(Key: OleVariant; DurDistrDataPts: OleVariant): ITimeDistribution; dispid 1610940417;
    property ItemByKey[Key: OleVariant]: ITimeDistribution readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddTimeDistribution(Key: OleVariant; Type_: DistributionType; 
                                 DurDistrDataPts: OleVariant): ITimeDistribution; dispid 1610874882;
    function DuplicateTimeDistribution(Source: OleVariant; NewKey: OleVariant): ITimeDistribution; dispid 1610874883;
    procedure RemoveTimeDistribution(const TimeDistribution: ITimeDistribution); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ITimeIntervalSetCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1DDF61AF-F69A-4535-B98D-DA4BA5011996}
// *********************************************************************//
  ITimeIntervalSetCollection = interface(ICollectionBase)
    ['{1DDF61AF-F69A-4535-B98D-DA4BA5011996}']
  end;

// *********************************************************************//
// DispIntf:  ITimeIntervalSetCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1DDF61AF-F69A-4535-B98D-DA4BA5011996}
// *********************************************************************//
  ITimeIntervalSetCollectionDisp = dispinterface
    ['{1DDF61AF-F69A-4535-B98D-DA4BA5011996}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ITimeIntervalSetContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1E6A3C4D-8188-403E-B063-686440BA5BF0}
// *********************************************************************//
  ITimeIntervalSetContainerBase = interface(ITimeIntervalSetCollection)
    ['{1E6A3C4D-8188-403E-B063-686440BA5BF0}']
    function Get_ItemByKey(Key: OleVariant): ITimeIntervalSet; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    property ItemByKey[Key: OleVariant]: ITimeIntervalSet read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  ITimeIntervalSetContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1E6A3C4D-8188-403E-B063-686440BA5BF0}
// *********************************************************************//
  ITimeIntervalSetContainerBaseDisp = dispinterface
    ['{1E6A3C4D-8188-403E-B063-686440BA5BF0}']
    property ItemByKey[Key: OleVariant]: ITimeIntervalSet readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ITimeIntervalSetContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B43B2F39-55BD-4A7E-93AB-C84602818E30}
// *********************************************************************//
  ITimeIntervalSetContainer = interface(ITimeIntervalSetContainerBase)
    ['{B43B2F39-55BD-4A7E-93AB-C84602818E30}']
  end;

// *********************************************************************//
// DispIntf:  ITimeIntervalSetContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B43B2F39-55BD-4A7E-93AB-C84602818E30}
// *********************************************************************//
  ITimeIntervalSetContainerDisp = dispinterface
    ['{B43B2F39-55BD-4A7E-93AB-C84602818E30}']
    property ItemByKey[Key: OleVariant]: ITimeIntervalSet readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ITollPricingCalculationModelCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5BBCE65E-93DB-4BA7-9E06-42785C6A37EE}
// *********************************************************************//
  ITollPricingCalculationModelCollection = interface(ICollectionBase)
    ['{5BBCE65E-93DB-4BA7-9E06-42785C6A37EE}']
  end;

// *********************************************************************//
// DispIntf:  ITollPricingCalculationModelCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5BBCE65E-93DB-4BA7-9E06-42785C6A37EE}
// *********************************************************************//
  ITollPricingCalculationModelCollectionDisp = dispinterface
    ['{5BBCE65E-93DB-4BA7-9E06-42785C6A37EE}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ITollPricingCalculationModelContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FCEA9773-E129-42C0-BADC-056550ED2962}
// *********************************************************************//
  ITollPricingCalculationModelContainerBase = interface(ITollPricingCalculationModelCollection)
    ['{FCEA9773-E129-42C0-BADC-056550ED2962}']
    function Get_ItemByKey(Key: OleVariant): ITollPricingCalculationModel; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    property ItemByKey[Key: OleVariant]: ITollPricingCalculationModel read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  ITollPricingCalculationModelContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FCEA9773-E129-42C0-BADC-056550ED2962}
// *********************************************************************//
  ITollPricingCalculationModelContainerBaseDisp = dispinterface
    ['{FCEA9773-E129-42C0-BADC-056550ED2962}']
    property ItemByKey[Key: OleVariant]: ITollPricingCalculationModel readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ITollPricingCalculationModelContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C6703BBD-AB8F-4914-BA24-A31D1D7DDF8A}
// *********************************************************************//
  ITollPricingCalculationModelContainer = interface(ITollPricingCalculationModelContainerBase)
    ['{C6703BBD-AB8F-4914-BA24-A31D1D7DDF8A}']
  end;

// *********************************************************************//
// DispIntf:  ITollPricingCalculationModelContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C6703BBD-AB8F-4914-BA24-A31D1D7DDF8A}
// *********************************************************************//
  ITollPricingCalculationModelContainerDisp = dispinterface
    ['{C6703BBD-AB8F-4914-BA24-A31D1D7DDF8A}']
    property ItemByKey[Key: OleVariant]: ITollPricingCalculationModel readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ITollPricingCalculationModelBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {37002997-5CAE-4BAD-B4E2-21FE339EAD5A}
// *********************************************************************//
  ITollPricingCalculationModelBase = interface(IObjectBase)
    ['{37002997-5CAE-4BAD-B4E2-21FE339EAD5A}']
    function Get_TollPricingCalculationModelElements: ITollPricingCalculationModelElementContainer; safecall;
    property TollPricingCalculationModelElements: ITollPricingCalculationModelElementContainer read Get_TollPricingCalculationModelElements;
  end;

// *********************************************************************//
// DispIntf:  ITollPricingCalculationModelBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {37002997-5CAE-4BAD-B4E2-21FE339EAD5A}
// *********************************************************************//
  ITollPricingCalculationModelBaseDisp = dispinterface
    ['{37002997-5CAE-4BAD-B4E2-21FE339EAD5A}']
    property TollPricingCalculationModelElements: ITollPricingCalculationModelElementContainer readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ITollPricingCalculationModel
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CE7B90FB-D04C-4D5D-8DFC-17C1D224ACA2}
// *********************************************************************//
  ITollPricingCalculationModel = interface(ITollPricingCalculationModelBase)
    ['{CE7B90FB-D04C-4D5D-8DFC-17C1D224ACA2}']
  end;

// *********************************************************************//
// DispIntf:  ITollPricingCalculationModelDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CE7B90FB-D04C-4D5D-8DFC-17C1D224ACA2}
// *********************************************************************//
  ITollPricingCalculationModelDisp = dispinterface
    ['{CE7B90FB-D04C-4D5D-8DFC-17C1D224ACA2}']
    property TollPricingCalculationModelElements: ITollPricingCalculationModelElementContainer readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ITollPricingCalculationModelElementCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {854EA3E5-8803-4E4B-AFEB-313DA4297248}
// *********************************************************************//
  ITollPricingCalculationModelElementCollection = interface(ICollectionBase)
    ['{854EA3E5-8803-4E4B-AFEB-313DA4297248}']
  end;

// *********************************************************************//
// DispIntf:  ITollPricingCalculationModelElementCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {854EA3E5-8803-4E4B-AFEB-313DA4297248}
// *********************************************************************//
  ITollPricingCalculationModelElementCollectionDisp = dispinterface
    ['{854EA3E5-8803-4E4B-AFEB-313DA4297248}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ITollPricingCalculationModelElementContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {909C1525-66E7-41E0-8923-AF13D6C07D57}
// *********************************************************************//
  ITollPricingCalculationModelElementContainerBase = interface(ITollPricingCalculationModelElementCollection)
    ['{909C1525-66E7-41E0-8923-AF13D6C07D57}']
  end;

// *********************************************************************//
// DispIntf:  ITollPricingCalculationModelElementContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {909C1525-66E7-41E0-8923-AF13D6C07D57}
// *********************************************************************//
  ITollPricingCalculationModelElementContainerBaseDisp = dispinterface
    ['{909C1525-66E7-41E0-8923-AF13D6C07D57}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ITollPricingCalculationModelElementContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A9EAA809-A185-461E-AA2B-48DC0D300F10}
// *********************************************************************//
  ITollPricingCalculationModelElementContainer = interface(ITollPricingCalculationModelElementContainerBase)
    ['{A9EAA809-A185-461E-AA2B-48DC0D300F10}']
  end;

// *********************************************************************//
// DispIntf:  ITollPricingCalculationModelElementContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A9EAA809-A185-461E-AA2B-48DC0D300F10}
// *********************************************************************//
  ITollPricingCalculationModelElementContainerDisp = dispinterface
    ['{A9EAA809-A185-461E-AA2B-48DC0D300F10}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IUserDefinedAttributeCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D1CED0D7-3C67-493B-A6DF-918BE588A6CA}
// *********************************************************************//
  IUserDefinedAttributeCollection = interface(ICollectionBase)
    ['{D1CED0D7-3C67-493B-A6DF-918BE588A6CA}']
  end;

// *********************************************************************//
// DispIntf:  IUserDefinedAttributeCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D1CED0D7-3C67-493B-A6DF-918BE588A6CA}
// *********************************************************************//
  IUserDefinedAttributeCollectionDisp = dispinterface
    ['{D1CED0D7-3C67-493B-A6DF-918BE588A6CA}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IUserDefinedAttributeContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {28307507-D934-4CE5-8ECA-3E87C065E4D5}
// *********************************************************************//
  IUserDefinedAttributeContainerBase = interface(IUserDefinedAttributeCollection)
    ['{28307507-D934-4CE5-8ECA-3E87C065E4D5}']
    function Get_ItemByKey(Key: OleVariant): IUserDefinedAttribute; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function DuplicateUserDefinedAttribute(Source: OleVariant; NewKey: OleVariant): IUserDefinedAttribute; safecall;
    procedure RemoveUserDefinedAttribute(const UserDefinedAttribute: IUserDefinedAttribute); safecall;
    property ItemByKey[Key: OleVariant]: IUserDefinedAttribute read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IUserDefinedAttributeContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {28307507-D934-4CE5-8ECA-3E87C065E4D5}
// *********************************************************************//
  IUserDefinedAttributeContainerBaseDisp = dispinterface
    ['{28307507-D934-4CE5-8ECA-3E87C065E4D5}']
    property ItemByKey[Key: OleVariant]: IUserDefinedAttribute readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function DuplicateUserDefinedAttribute(Source: OleVariant; NewKey: OleVariant): IUserDefinedAttribute; dispid 1610874882;
    procedure RemoveUserDefinedAttribute(const UserDefinedAttribute: IUserDefinedAttribute); dispid 1610874883;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IUserDefinedAttributeContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EB8BED10-67D8-41A2-AFC9-DF3904CC67D3}
// *********************************************************************//
  IUserDefinedAttributeContainer = interface(IUserDefinedAttributeContainerBase)
    ['{EB8BED10-67D8-41A2-AFC9-DF3904CC67D3}']
    function AddUserDefinedDataAttribute(Key: OleVariant; const ObjType: WideString; 
                                         const NameShort: WideString; const NameLong: WideString; 
                                         DataType: UserDefinedAttributeDataType; SubAttrs: SYSINT; 
                                         CanBeEmpty: WordBool): IUserDefinedAttribute; safecall;
    function AddUserDefinedFormulaAttribute(Key: OleVariant; const ObjType: WideString; 
                                            const NameShort: WideString; 
                                            const NameLong: WideString; 
                                            DataType: UserDefinedAttributeDataType; 
                                            SubAttrs: SYSINT; const Formula: WideString): IUserDefinedAttribute; safecall;
  end;

// *********************************************************************//
// DispIntf:  IUserDefinedAttributeContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EB8BED10-67D8-41A2-AFC9-DF3904CC67D3}
// *********************************************************************//
  IUserDefinedAttributeContainerDisp = dispinterface
    ['{EB8BED10-67D8-41A2-AFC9-DF3904CC67D3}']
    function AddUserDefinedDataAttribute(Key: OleVariant; const ObjType: WideString; 
                                         const NameShort: WideString; const NameLong: WideString; 
                                         DataType: UserDefinedAttributeDataType; SubAttrs: SYSINT; 
                                         CanBeEmpty: WordBool): IUserDefinedAttribute; dispid 1610940416;
    function AddUserDefinedFormulaAttribute(Key: OleVariant; const ObjType: WideString; 
                                            const NameShort: WideString; 
                                            const NameLong: WideString; 
                                            DataType: UserDefinedAttributeDataType; 
                                            SubAttrs: SYSINT; const Formula: WideString): IUserDefinedAttribute; dispid 1610940417;
    property ItemByKey[Key: OleVariant]: IUserDefinedAttribute readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function DuplicateUserDefinedAttribute(Source: OleVariant; NewKey: OleVariant): IUserDefinedAttribute; dispid 1610874882;
    procedure RemoveUserDefinedAttribute(const UserDefinedAttribute: IUserDefinedAttribute); dispid 1610874883;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IUserDefinedAttributeBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E5B8E5FC-9A92-4878-AF2E-9D093027B2E2}
// *********************************************************************//
  IUserDefinedAttributeBase = interface(IObjectBase)
    ['{E5B8E5FC-9A92-4878-AF2E-9D093027B2E2}']
  end;

// *********************************************************************//
// DispIntf:  IUserDefinedAttributeBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E5B8E5FC-9A92-4878-AF2E-9D093027B2E2}
// *********************************************************************//
  IUserDefinedAttributeBaseDisp = dispinterface
    ['{E5B8E5FC-9A92-4878-AF2E-9D093027B2E2}']
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IUserDefinedAttribute
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {809710B6-E357-481E-9581-AA1892882D4B}
// *********************************************************************//
  IUserDefinedAttribute = interface(IUserDefinedAttributeBase)
    ['{809710B6-E357-481E-9581-AA1892882D4B}']
  end;

// *********************************************************************//
// DispIntf:  IUserDefinedAttributeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {809710B6-E357-481E-9581-AA1892882D4B}
// *********************************************************************//
  IUserDefinedAttributeDisp = dispinterface
    ['{809710B6-E357-481E-9581-AA1892882D4B}']
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehicleAttributeDecisionCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EB10C714-6CEA-47AD-8D32-17DAD1514515}
// *********************************************************************//
  IVehicleAttributeDecisionCollection = interface(ICollectionBase)
    ['{EB10C714-6CEA-47AD-8D32-17DAD1514515}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleAttributeDecisionCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EB10C714-6CEA-47AD-8D32-17DAD1514515}
// *********************************************************************//
  IVehicleAttributeDecisionCollectionDisp = dispinterface
    ['{EB10C714-6CEA-47AD-8D32-17DAD1514515}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleAttributeDecisionContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BD104C67-DC5D-470F-BC6C-194588B11980}
// *********************************************************************//
  IVehicleAttributeDecisionContainerBase = interface(IVehicleAttributeDecisionCollection)
    ['{BD104C67-DC5D-470F-BC6C-194588B11980}']
    function Get_ItemByKey(Key: OleVariant): IVehicleAttributeDecision; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddVehicleAttributeDecision(Key: OleVariant; const Attr: WideString; 
                                         const Lane: ILane; Pos: Double): IVehicleAttributeDecision; safecall;
    function DuplicateVehicleAttributeDecision(Source: OleVariant; NewKey: OleVariant): IVehicleAttributeDecision; safecall;
    procedure RemoveVehicleAttributeDecision(const VehicleAttributeDecision: IVehicleAttributeDecision); safecall;
    property ItemByKey[Key: OleVariant]: IVehicleAttributeDecision read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IVehicleAttributeDecisionContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BD104C67-DC5D-470F-BC6C-194588B11980}
// *********************************************************************//
  IVehicleAttributeDecisionContainerBaseDisp = dispinterface
    ['{BD104C67-DC5D-470F-BC6C-194588B11980}']
    property ItemByKey[Key: OleVariant]: IVehicleAttributeDecision readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddVehicleAttributeDecision(Key: OleVariant; const Attr: WideString; 
                                         const Lane: ILane; Pos: Double): IVehicleAttributeDecision; dispid 1610874882;
    function DuplicateVehicleAttributeDecision(Source: OleVariant; NewKey: OleVariant): IVehicleAttributeDecision; dispid 1610874883;
    procedure RemoveVehicleAttributeDecision(const VehicleAttributeDecision: IVehicleAttributeDecision); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleAttributeDecisionContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {31F034A3-E29F-47EE-8E07-7F9730A3DB45}
// *********************************************************************//
  IVehicleAttributeDecisionContainer = interface(IVehicleAttributeDecisionContainerBase)
    ['{31F034A3-E29F-47EE-8E07-7F9730A3DB45}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleAttributeDecisionContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {31F034A3-E29F-47EE-8E07-7F9730A3DB45}
// *********************************************************************//
  IVehicleAttributeDecisionContainerDisp = dispinterface
    ['{31F034A3-E29F-47EE-8E07-7F9730A3DB45}']
    property ItemByKey[Key: OleVariant]: IVehicleAttributeDecision readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddVehicleAttributeDecision(Key: OleVariant; const Attr: WideString; 
                                         const Lane: ILane; Pos: Double): IVehicleAttributeDecision; dispid 1610874882;
    function DuplicateVehicleAttributeDecision(Source: OleVariant; NewKey: OleVariant): IVehicleAttributeDecision; dispid 1610874883;
    procedure RemoveVehicleAttributeDecision(const VehicleAttributeDecision: IVehicleAttributeDecision); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleAttributeDecisionBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4F229C37-C80C-45F7-B99E-0CCAB7775C2F}
// *********************************************************************//
  IVehicleAttributeDecisionBase = interface(IObjectBase)
    ['{4F229C37-C80C-45F7-B99E-0CCAB7775C2F}']
    function Get_VehClasses: IVehicleClassCollection; safecall;
    function Get_Lane: ILane; safecall;
    function Get_Distr: IFreeDistribution; safecall;
    property VehClasses: IVehicleClassCollection read Get_VehClasses;
    property Lane: ILane read Get_Lane;
    property Distr: IFreeDistribution read Get_Distr;
  end;

// *********************************************************************//
// DispIntf:  IVehicleAttributeDecisionBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4F229C37-C80C-45F7-B99E-0CCAB7775C2F}
// *********************************************************************//
  IVehicleAttributeDecisionBaseDisp = dispinterface
    ['{4F229C37-C80C-45F7-B99E-0CCAB7775C2F}']
    property VehClasses: IVehicleClassCollection readonly dispid 1610809344;
    property Lane: ILane readonly dispid 1610809345;
    property Distr: IFreeDistribution readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehicleAttributeDecision
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {151237AD-861C-49F9-9F89-0FAA98582C3D}
// *********************************************************************//
  IVehicleAttributeDecision = interface(IVehicleAttributeDecisionBase)
    ['{151237AD-861C-49F9-9F89-0FAA98582C3D}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleAttributeDecisionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {151237AD-861C-49F9-9F89-0FAA98582C3D}
// *********************************************************************//
  IVehicleAttributeDecisionDisp = dispinterface
    ['{151237AD-861C-49F9-9F89-0FAA98582C3D}']
    property VehClasses: IVehicleClassCollection readonly dispid 1610809344;
    property Lane: ILane readonly dispid 1610809345;
    property Distr: IFreeDistribution readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehicleClassContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {67F9C140-E35C-4BC6-976D-FAA347F15DE5}
// *********************************************************************//
  IVehicleClassContainerBase = interface(IVehicleClassCollection)
    ['{67F9C140-E35C-4BC6-976D-FAA347F15DE5}']
    function Get_ItemByKey(Key: OleVariant): IVehicleClass; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddVehicleClass(Key: OleVariant): IVehicleClass; safecall;
    function DuplicateVehicleClass(Source: OleVariant; NewKey: OleVariant): IVehicleClass; safecall;
    procedure RemoveVehicleClass(const VehicleClass: IVehicleClass); safecall;
    property ItemByKey[Key: OleVariant]: IVehicleClass read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IVehicleClassContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {67F9C140-E35C-4BC6-976D-FAA347F15DE5}
// *********************************************************************//
  IVehicleClassContainerBaseDisp = dispinterface
    ['{67F9C140-E35C-4BC6-976D-FAA347F15DE5}']
    property ItemByKey[Key: OleVariant]: IVehicleClass readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddVehicleClass(Key: OleVariant): IVehicleClass; dispid 1610874882;
    function DuplicateVehicleClass(Source: OleVariant; NewKey: OleVariant): IVehicleClass; dispid 1610874883;
    procedure RemoveVehicleClass(const VehicleClass: IVehicleClass); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleClassContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C00C6E99-6E6A-4590-A511-3F46E4C854F4}
// *********************************************************************//
  IVehicleClassContainer = interface(IVehicleClassContainerBase)
    ['{C00C6E99-6E6A-4590-A511-3F46E4C854F4}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleClassContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C00C6E99-6E6A-4590-A511-3F46E4C854F4}
// *********************************************************************//
  IVehicleClassContainerDisp = dispinterface
    ['{C00C6E99-6E6A-4590-A511-3F46E4C854F4}']
    property ItemByKey[Key: OleVariant]: IVehicleClass readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddVehicleClass(Key: OleVariant): IVehicleClass; dispid 1610874882;
    function DuplicateVehicleClass(Source: OleVariant; NewKey: OleVariant): IVehicleClass; dispid 1610874883;
    procedure RemoveVehicleClass(const VehicleClass: IVehicleClass); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleCompositionCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F7B23C02-8B08-4B1C-996A-EDA762118B67}
// *********************************************************************//
  IVehicleCompositionCollection = interface(ICollectionBase)
    ['{F7B23C02-8B08-4B1C-996A-EDA762118B67}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleCompositionCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F7B23C02-8B08-4B1C-996A-EDA762118B67}
// *********************************************************************//
  IVehicleCompositionCollectionDisp = dispinterface
    ['{F7B23C02-8B08-4B1C-996A-EDA762118B67}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleCompositionContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EA3266D8-CC24-47D1-ACC0-452EECE347DB}
// *********************************************************************//
  IVehicleCompositionContainerBase = interface(IVehicleCompositionCollection)
    ['{EA3266D8-CC24-47D1-ACC0-452EECE347DB}']
    function Get_ItemByKey(Key: OleVariant): IVehicleComposition; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddVehicleComposition(Key: OleVariant; VehCompRelFlows: OleVariant): IVehicleComposition; safecall;
    function DuplicateVehicleComposition(Source: OleVariant; NewKey: OleVariant): IVehicleComposition; safecall;
    procedure RemoveVehicleComposition(const VehicleComposition: IVehicleComposition); safecall;
    property ItemByKey[Key: OleVariant]: IVehicleComposition read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IVehicleCompositionContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EA3266D8-CC24-47D1-ACC0-452EECE347DB}
// *********************************************************************//
  IVehicleCompositionContainerBaseDisp = dispinterface
    ['{EA3266D8-CC24-47D1-ACC0-452EECE347DB}']
    property ItemByKey[Key: OleVariant]: IVehicleComposition readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddVehicleComposition(Key: OleVariant; VehCompRelFlows: OleVariant): IVehicleComposition; dispid 1610874882;
    function DuplicateVehicleComposition(Source: OleVariant; NewKey: OleVariant): IVehicleComposition; dispid 1610874883;
    procedure RemoveVehicleComposition(const VehicleComposition: IVehicleComposition); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleCompositionContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5DD92028-8C7F-4E31-A50E-755BA81C0FEC}
// *********************************************************************//
  IVehicleCompositionContainer = interface(IVehicleCompositionContainerBase)
    ['{5DD92028-8C7F-4E31-A50E-755BA81C0FEC}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleCompositionContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5DD92028-8C7F-4E31-A50E-755BA81C0FEC}
// *********************************************************************//
  IVehicleCompositionContainerDisp = dispinterface
    ['{5DD92028-8C7F-4E31-A50E-755BA81C0FEC}']
    property ItemByKey[Key: OleVariant]: IVehicleComposition readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddVehicleComposition(Key: OleVariant; VehCompRelFlows: OleVariant): IVehicleComposition; dispid 1610874882;
    function DuplicateVehicleComposition(Source: OleVariant; NewKey: OleVariant): IVehicleComposition; dispid 1610874883;
    procedure RemoveVehicleComposition(const VehicleComposition: IVehicleComposition); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleInputContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B60574F0-7F0C-47E2-A47A-45FF57C819B7}
// *********************************************************************//
  IVehicleInputContainerBase = interface(IVehicleInputCollection)
    ['{B60574F0-7F0C-47E2-A47A-45FF57C819B7}']
    function Get_ItemByKey(Key: OleVariant): IVehicleInput; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddVehicleInput(Key: OleVariant; const Link: ILink): IVehicleInput; safecall;
    function DuplicateVehicleInput(Source: OleVariant; NewKey: OleVariant): IVehicleInput; safecall;
    procedure RemoveVehicleInput(const VehicleInput: IVehicleInput); safecall;
    property ItemByKey[Key: OleVariant]: IVehicleInput read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IVehicleInputContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B60574F0-7F0C-47E2-A47A-45FF57C819B7}
// *********************************************************************//
  IVehicleInputContainerBaseDisp = dispinterface
    ['{B60574F0-7F0C-47E2-A47A-45FF57C819B7}']
    property ItemByKey[Key: OleVariant]: IVehicleInput readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddVehicleInput(Key: OleVariant; const Link: ILink): IVehicleInput; dispid 1610874882;
    function DuplicateVehicleInput(Source: OleVariant; NewKey: OleVariant): IVehicleInput; dispid 1610874883;
    procedure RemoveVehicleInput(const VehicleInput: IVehicleInput); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleInputContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4F793BC8-7E0F-4A0E-ABCD-3324C0A5E486}
// *********************************************************************//
  IVehicleInputContainer = interface(IVehicleInputContainerBase)
    ['{4F793BC8-7E0F-4A0E-ABCD-3324C0A5E486}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleInputContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4F793BC8-7E0F-4A0E-ABCD-3324C0A5E486}
// *********************************************************************//
  IVehicleInputContainerDisp = dispinterface
    ['{4F793BC8-7E0F-4A0E-ABCD-3324C0A5E486}']
    property ItemByKey[Key: OleVariant]: IVehicleInput readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddVehicleInput(Key: OleVariant; const Link: ILink): IVehicleInput; dispid 1610874882;
    function DuplicateVehicleInput(Source: OleVariant; NewKey: OleVariant): IVehicleInput; dispid 1610874883;
    procedure RemoveVehicleInput(const VehicleInput: IVehicleInput); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleInputBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {11810758-D2F1-4262-83E4-45DBD3573DB8}
// *********************************************************************//
  IVehicleInputBase = interface(IObjectBase)
    ['{11810758-D2F1-4262-83E4-45DBD3573DB8}']
    function Get_Link: ILink; safecall;
    function Get_TimeIntVehVols: ITimeIntervalVehVolumeContainer; safecall;
    function Get_Zone: IZone; safecall;
    property Link: ILink read Get_Link;
    property TimeIntVehVols: ITimeIntervalVehVolumeContainer read Get_TimeIntVehVols;
    property Zone: IZone read Get_Zone;
  end;

// *********************************************************************//
// DispIntf:  IVehicleInputBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {11810758-D2F1-4262-83E4-45DBD3573DB8}
// *********************************************************************//
  IVehicleInputBaseDisp = dispinterface
    ['{11810758-D2F1-4262-83E4-45DBD3573DB8}']
    property Link: ILink readonly dispid 1610809344;
    property TimeIntVehVols: ITimeIntervalVehVolumeContainer readonly dispid 1610809345;
    property Zone: IZone readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehicleInput
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FAF15F5C-8D5F-41AB-BACD-9E6433B21BC6}
// *********************************************************************//
  IVehicleInput = interface(IVehicleInputBase)
    ['{FAF15F5C-8D5F-41AB-BACD-9E6433B21BC6}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleInputDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FAF15F5C-8D5F-41AB-BACD-9E6433B21BC6}
// *********************************************************************//
  IVehicleInputDisp = dispinterface
    ['{FAF15F5C-8D5F-41AB-BACD-9E6433B21BC6}']
    property Link: ILink readonly dispid 1610809344;
    property TimeIntVehVols: ITimeIntervalVehVolumeContainer readonly dispid 1610809345;
    property Zone: IZone readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ITimeIntervalVehVolumeCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {794EE991-B3F7-4F87-B7B0-53E6571B9EF2}
// *********************************************************************//
  ITimeIntervalVehVolumeCollection = interface(ICollectionBase)
    ['{794EE991-B3F7-4F87-B7B0-53E6571B9EF2}']
  end;

// *********************************************************************//
// DispIntf:  ITimeIntervalVehVolumeCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {794EE991-B3F7-4F87-B7B0-53E6571B9EF2}
// *********************************************************************//
  ITimeIntervalVehVolumeCollectionDisp = dispinterface
    ['{794EE991-B3F7-4F87-B7B0-53E6571B9EF2}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ITimeIntervalVehVolumeContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EE331888-5E60-4D5A-A6BA-5C16B0642F09}
// *********************************************************************//
  ITimeIntervalVehVolumeContainerBase = interface(ITimeIntervalVehVolumeCollection)
    ['{EE331888-5E60-4D5A-A6BA-5C16B0642F09}']
  end;

// *********************************************************************//
// DispIntf:  ITimeIntervalVehVolumeContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EE331888-5E60-4D5A-A6BA-5C16B0642F09}
// *********************************************************************//
  ITimeIntervalVehVolumeContainerBaseDisp = dispinterface
    ['{EE331888-5E60-4D5A-A6BA-5C16B0642F09}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: ITimeIntervalVehVolumeContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3583D881-CBBD-481A-99E9-07D4AE819199}
// *********************************************************************//
  ITimeIntervalVehVolumeContainer = interface(ITimeIntervalVehVolumeContainerBase)
    ['{3583D881-CBBD-481A-99E9-07D4AE819199}']
  end;

// *********************************************************************//
// DispIntf:  ITimeIntervalVehVolumeContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3583D881-CBBD-481A-99E9-07D4AE819199}
// *********************************************************************//
  ITimeIntervalVehVolumeContainerDisp = dispinterface
    ['{3583D881-CBBD-481A-99E9-07D4AE819199}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleNetworkPerformanceMeasurementBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2D8B7C72-980D-409C-A3BC-A0CA3D645B0A}
// *********************************************************************//
  IVehicleNetworkPerformanceMeasurementBase = interface(IObjectBase)
    ['{2D8B7C72-980D-409C-A3BC-A0CA3D645B0A}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleNetworkPerformanceMeasurementBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2D8B7C72-980D-409C-A3BC-A0CA3D645B0A}
// *********************************************************************//
  IVehicleNetworkPerformanceMeasurementBaseDisp = dispinterface
    ['{2D8B7C72-980D-409C-A3BC-A0CA3D645B0A}']
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehicleNetworkPerformanceMeasurement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FE03F0D0-35CA-443A-A411-DF36516D7F34}
// *********************************************************************//
  IVehicleNetworkPerformanceMeasurement = interface(IVehicleNetworkPerformanceMeasurementBase)
    ['{FE03F0D0-35CA-443A-A411-DF36516D7F34}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleNetworkPerformanceMeasurementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FE03F0D0-35CA-443A-A411-DF36516D7F34}
// *********************************************************************//
  IVehicleNetworkPerformanceMeasurementDisp = dispinterface
    ['{FE03F0D0-35CA-443A-A411-DF36516D7F34}']
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehicleRoutingDecisionClosureCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {623003B4-A0CC-412F-8535-BD12E296BA4A}
// *********************************************************************//
  IVehicleRoutingDecisionClosureCollection = interface(ICollectionBase)
    ['{623003B4-A0CC-412F-8535-BD12E296BA4A}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleRoutingDecisionClosureCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {623003B4-A0CC-412F-8535-BD12E296BA4A}
// *********************************************************************//
  IVehicleRoutingDecisionClosureCollectionDisp = dispinterface
    ['{623003B4-A0CC-412F-8535-BD12E296BA4A}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleRoutingDecisionClosureContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {53DD227E-1B94-4061-ACBE-030E21AFBA7B}
// *********************************************************************//
  IVehicleRoutingDecisionClosureContainerBase = interface(IVehicleRoutingDecisionClosureCollection)
    ['{53DD227E-1B94-4061-ACBE-030E21AFBA7B}']
    function Get_ItemByKey(Key: OleVariant): IVehicleRoutingDecisionClosure; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddVehicleRoutingDecisionClosure(Key: OleVariant; const Link: ILink; Pos: Double): IVehicleRoutingDecisionClosure; safecall;
    function DuplicateVehicleRoutingDecisionClosure(Source: OleVariant; NewKey: OleVariant): IVehicleRoutingDecisionClosure; safecall;
    procedure RemoveVehicleRoutingDecisionClosure(const VehicleRoutingDecisionClosure: IVehicleRoutingDecisionClosure); safecall;
    property ItemByKey[Key: OleVariant]: IVehicleRoutingDecisionClosure read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IVehicleRoutingDecisionClosureContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {53DD227E-1B94-4061-ACBE-030E21AFBA7B}
// *********************************************************************//
  IVehicleRoutingDecisionClosureContainerBaseDisp = dispinterface
    ['{53DD227E-1B94-4061-ACBE-030E21AFBA7B}']
    property ItemByKey[Key: OleVariant]: IVehicleRoutingDecisionClosure readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddVehicleRoutingDecisionClosure(Key: OleVariant; const Link: ILink; Pos: Double): IVehicleRoutingDecisionClosure; dispid 1610874882;
    function DuplicateVehicleRoutingDecisionClosure(Source: OleVariant; NewKey: OleVariant): IVehicleRoutingDecisionClosure; dispid 1610874883;
    procedure RemoveVehicleRoutingDecisionClosure(const VehicleRoutingDecisionClosure: IVehicleRoutingDecisionClosure); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleRoutingDecisionClosureContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7368813D-DFCE-48FB-B2B2-051544D66374}
// *********************************************************************//
  IVehicleRoutingDecisionClosureContainer = interface(IVehicleRoutingDecisionClosureContainerBase)
    ['{7368813D-DFCE-48FB-B2B2-051544D66374}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleRoutingDecisionClosureContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7368813D-DFCE-48FB-B2B2-051544D66374}
// *********************************************************************//
  IVehicleRoutingDecisionClosureContainerDisp = dispinterface
    ['{7368813D-DFCE-48FB-B2B2-051544D66374}']
    property ItemByKey[Key: OleVariant]: IVehicleRoutingDecisionClosure readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddVehicleRoutingDecisionClosure(Key: OleVariant; const Link: ILink; Pos: Double): IVehicleRoutingDecisionClosure; dispid 1610874882;
    function DuplicateVehicleRoutingDecisionClosure(Source: OleVariant; NewKey: OleVariant): IVehicleRoutingDecisionClosure; dispid 1610874883;
    procedure RemoveVehicleRoutingDecisionClosure(const VehicleRoutingDecisionClosure: IVehicleRoutingDecisionClosure); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleRoutingDecisionClosureBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3FA2E839-49C9-4643-BB3B-B2332EDEAF45}
// *********************************************************************//
  IVehicleRoutingDecisionClosureBase = interface(IObjectBase)
    ['{3FA2E839-49C9-4643-BB3B-B2332EDEAF45}']
    function Get_VehRoutClos: IVehicleRouteClosureContainer; safecall;
    function Get_Link: ILink; safecall;
    property VehRoutClos: IVehicleRouteClosureContainer read Get_VehRoutClos;
    property Link: ILink read Get_Link;
  end;

// *********************************************************************//
// DispIntf:  IVehicleRoutingDecisionClosureBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3FA2E839-49C9-4643-BB3B-B2332EDEAF45}
// *********************************************************************//
  IVehicleRoutingDecisionClosureBaseDisp = dispinterface
    ['{3FA2E839-49C9-4643-BB3B-B2332EDEAF45}']
    property VehRoutClos: IVehicleRouteClosureContainer readonly dispid 1610809344;
    property Link: ILink readonly dispid 1610809345;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehicleRoutingDecisionClosure
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1B6D947C-E5A8-4D13-8190-E9EBBB63D46B}
// *********************************************************************//
  IVehicleRoutingDecisionClosure = interface(IVehicleRoutingDecisionClosureBase)
    ['{1B6D947C-E5A8-4D13-8190-E9EBBB63D46B}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleRoutingDecisionClosureDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1B6D947C-E5A8-4D13-8190-E9EBBB63D46B}
// *********************************************************************//
  IVehicleRoutingDecisionClosureDisp = dispinterface
    ['{1B6D947C-E5A8-4D13-8190-E9EBBB63D46B}']
    property VehRoutClos: IVehicleRouteClosureContainer readonly dispid 1610809344;
    property Link: ILink readonly dispid 1610809345;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehicleRouteClosureContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AAC4C1DA-037F-4D12-84DE-2CFCCBC50E5E}
// *********************************************************************//
  IVehicleRouteClosureContainerBase = interface(IVehicleRouteClosureCollection)
    ['{AAC4C1DA-037F-4D12-84DE-2CFCCBC50E5E}']
    function Get_ItemByKey(Key: OleVariant): IVehicleRouteClosure; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddVehicleRouteClosure(Key: OleVariant; const DestLink: ILink; DestPos: Double): IVehicleRouteClosure; safecall;
    function DuplicateVehicleRouteClosure(Source: OleVariant; NewKey: OleVariant): IVehicleRouteClosure; safecall;
    procedure RemoveVehicleRouteClosure(const VehicleRouteClosure: IVehicleRouteClosure); safecall;
    property ItemByKey[Key: OleVariant]: IVehicleRouteClosure read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IVehicleRouteClosureContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AAC4C1DA-037F-4D12-84DE-2CFCCBC50E5E}
// *********************************************************************//
  IVehicleRouteClosureContainerBaseDisp = dispinterface
    ['{AAC4C1DA-037F-4D12-84DE-2CFCCBC50E5E}']
    property ItemByKey[Key: OleVariant]: IVehicleRouteClosure readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddVehicleRouteClosure(Key: OleVariant; const DestLink: ILink; DestPos: Double): IVehicleRouteClosure; dispid 1610874882;
    function DuplicateVehicleRouteClosure(Source: OleVariant; NewKey: OleVariant): IVehicleRouteClosure; dispid 1610874883;
    procedure RemoveVehicleRouteClosure(const VehicleRouteClosure: IVehicleRouteClosure); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleRouteClosureContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3A2E3D8A-D0A6-4407-A0E5-4EE5CCEAA999}
// *********************************************************************//
  IVehicleRouteClosureContainer = interface(IVehicleRouteClosureContainerBase)
    ['{3A2E3D8A-D0A6-4407-A0E5-4EE5CCEAA999}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleRouteClosureContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3A2E3D8A-D0A6-4407-A0E5-4EE5CCEAA999}
// *********************************************************************//
  IVehicleRouteClosureContainerDisp = dispinterface
    ['{3A2E3D8A-D0A6-4407-A0E5-4EE5CCEAA999}']
    property ItemByKey[Key: OleVariant]: IVehicleRouteClosure readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddVehicleRouteClosure(Key: OleVariant; const DestLink: ILink; DestPos: Double): IVehicleRouteClosure; dispid 1610874882;
    function DuplicateVehicleRouteClosure(Source: OleVariant; NewKey: OleVariant): IVehicleRouteClosure; dispid 1610874883;
    procedure RemoveVehicleRouteClosure(const VehicleRouteClosure: IVehicleRouteClosure); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleRouteClosureBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {53E4AF8F-D90E-4715-ABF7-6D96A6B845BD}
// *********************************************************************//
  IVehicleRouteClosureBase = interface(IObjectBase)
    ['{53E4AF8F-D90E-4715-ABF7-6D96A6B845BD}']
    function Get_VehRoutDec: IVehicleRoutingDecisionClosure; safecall;
    function Get_LinkSeq: ILinkCollection; safecall;
    function Get_DestLink: ILink; safecall;
    property VehRoutDec: IVehicleRoutingDecisionClosure read Get_VehRoutDec;
    property LinkSeq: ILinkCollection read Get_LinkSeq;
    property DestLink: ILink read Get_DestLink;
  end;

// *********************************************************************//
// DispIntf:  IVehicleRouteClosureBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {53E4AF8F-D90E-4715-ABF7-6D96A6B845BD}
// *********************************************************************//
  IVehicleRouteClosureBaseDisp = dispinterface
    ['{53E4AF8F-D90E-4715-ABF7-6D96A6B845BD}']
    property VehRoutDec: IVehicleRoutingDecisionClosure readonly dispid 1610809344;
    property LinkSeq: ILinkCollection readonly dispid 1610809345;
    property DestLink: ILink readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehicleRouteClosure
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B9F3E6A2-DBD5-480E-BBF0-28625CFDD74F}
// *********************************************************************//
  IVehicleRouteClosure = interface(IVehicleRouteClosureBase)
    ['{B9F3E6A2-DBD5-480E-BBF0-28625CFDD74F}']
    procedure UpdateLinkSequence(RouteSegments: OleVariant); safecall;
  end;

// *********************************************************************//
// DispIntf:  IVehicleRouteClosureDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B9F3E6A2-DBD5-480E-BBF0-28625CFDD74F}
// *********************************************************************//
  IVehicleRouteClosureDisp = dispinterface
    ['{B9F3E6A2-DBD5-480E-BBF0-28625CFDD74F}']
    procedure UpdateLinkSequence(RouteSegments: OleVariant); dispid 1610874880;
    property VehRoutDec: IVehicleRoutingDecisionClosure readonly dispid 1610809344;
    property LinkSeq: ILinkCollection readonly dispid 1610809345;
    property DestLink: ILink readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehicleRoutingDecisionDynamicContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8F053A86-B774-4CDB-8DF8-963C17A389A8}
// *********************************************************************//
  IVehicleRoutingDecisionDynamicContainerBase = interface(IVehicleRoutingDecisionDynamicCollection)
    ['{8F053A86-B774-4CDB-8DF8-963C17A389A8}']
    function Get_ItemByKey(Key: OleVariant): IVehicleRoutingDecisionDynamic; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddVehicleRoutingDecisionDynamic(Key: OleVariant; const Link: ILink; Pos: Double): IVehicleRoutingDecisionDynamic; safecall;
    function DuplicateVehicleRoutingDecisionDynamic(Source: OleVariant; NewKey: OleVariant): IVehicleRoutingDecisionDynamic; safecall;
    procedure RemoveVehicleRoutingDecisionDynamic(const VehicleRoutingDecisionDynamic: IVehicleRoutingDecisionDynamic); safecall;
    property ItemByKey[Key: OleVariant]: IVehicleRoutingDecisionDynamic read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IVehicleRoutingDecisionDynamicContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8F053A86-B774-4CDB-8DF8-963C17A389A8}
// *********************************************************************//
  IVehicleRoutingDecisionDynamicContainerBaseDisp = dispinterface
    ['{8F053A86-B774-4CDB-8DF8-963C17A389A8}']
    property ItemByKey[Key: OleVariant]: IVehicleRoutingDecisionDynamic readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddVehicleRoutingDecisionDynamic(Key: OleVariant; const Link: ILink; Pos: Double): IVehicleRoutingDecisionDynamic; dispid 1610874882;
    function DuplicateVehicleRoutingDecisionDynamic(Source: OleVariant; NewKey: OleVariant): IVehicleRoutingDecisionDynamic; dispid 1610874883;
    procedure RemoveVehicleRoutingDecisionDynamic(const VehicleRoutingDecisionDynamic: IVehicleRoutingDecisionDynamic); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleRoutingDecisionDynamicContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7570D448-5BFB-4593-AF0F-759BD7145EC8}
// *********************************************************************//
  IVehicleRoutingDecisionDynamicContainer = interface(IVehicleRoutingDecisionDynamicContainerBase)
    ['{7570D448-5BFB-4593-AF0F-759BD7145EC8}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleRoutingDecisionDynamicContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7570D448-5BFB-4593-AF0F-759BD7145EC8}
// *********************************************************************//
  IVehicleRoutingDecisionDynamicContainerDisp = dispinterface
    ['{7570D448-5BFB-4593-AF0F-759BD7145EC8}']
    property ItemByKey[Key: OleVariant]: IVehicleRoutingDecisionDynamic readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddVehicleRoutingDecisionDynamic(Key: OleVariant; const Link: ILink; Pos: Double): IVehicleRoutingDecisionDynamic; dispid 1610874882;
    function DuplicateVehicleRoutingDecisionDynamic(Source: OleVariant; NewKey: OleVariant): IVehicleRoutingDecisionDynamic; dispid 1610874883;
    procedure RemoveVehicleRoutingDecisionDynamic(const VehicleRoutingDecisionDynamic: IVehicleRoutingDecisionDynamic); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleRoutingDecisionManagedLanesContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5DBB39B4-5060-4D07-ADAC-E815CEE0C8DD}
// *********************************************************************//
  IVehicleRoutingDecisionManagedLanesContainerBase = interface(IVehicleRoutingDecisionManagedLanesCollection)
    ['{5DBB39B4-5060-4D07-ADAC-E815CEE0C8DD}']
    function Get_ItemByKey(Key: OleVariant): IVehicleRoutingDecisionManagedLanes; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddVehicleRoutingDecisionManagedLanes(Key: OleVariant; const Link: ILink; Pos: Double; 
                                                   const DestLink: ILink; DestPos: Double): IVehicleRoutingDecisionManagedLanes; safecall;
    function DuplicateVehicleRoutingDecisionManagedLanes(Source: OleVariant; NewKey: OleVariant): IVehicleRoutingDecisionManagedLanes; safecall;
    procedure RemoveVehicleRoutingDecisionManagedLanes(const VehicleRoutingDecisionManagedLanes: IVehicleRoutingDecisionManagedLanes); safecall;
    property ItemByKey[Key: OleVariant]: IVehicleRoutingDecisionManagedLanes read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IVehicleRoutingDecisionManagedLanesContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5DBB39B4-5060-4D07-ADAC-E815CEE0C8DD}
// *********************************************************************//
  IVehicleRoutingDecisionManagedLanesContainerBaseDisp = dispinterface
    ['{5DBB39B4-5060-4D07-ADAC-E815CEE0C8DD}']
    property ItemByKey[Key: OleVariant]: IVehicleRoutingDecisionManagedLanes readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddVehicleRoutingDecisionManagedLanes(Key: OleVariant; const Link: ILink; Pos: Double; 
                                                   const DestLink: ILink; DestPos: Double): IVehicleRoutingDecisionManagedLanes; dispid 1610874882;
    function DuplicateVehicleRoutingDecisionManagedLanes(Source: OleVariant; NewKey: OleVariant): IVehicleRoutingDecisionManagedLanes; dispid 1610874883;
    procedure RemoveVehicleRoutingDecisionManagedLanes(const VehicleRoutingDecisionManagedLanes: IVehicleRoutingDecisionManagedLanes); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleRoutingDecisionManagedLanesContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BD358AFB-666E-48F2-BCAA-F0CDB947C23C}
// *********************************************************************//
  IVehicleRoutingDecisionManagedLanesContainer = interface(IVehicleRoutingDecisionManagedLanesContainerBase)
    ['{BD358AFB-666E-48F2-BCAA-F0CDB947C23C}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleRoutingDecisionManagedLanesContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BD358AFB-666E-48F2-BCAA-F0CDB947C23C}
// *********************************************************************//
  IVehicleRoutingDecisionManagedLanesContainerDisp = dispinterface
    ['{BD358AFB-666E-48F2-BCAA-F0CDB947C23C}']
    property ItemByKey[Key: OleVariant]: IVehicleRoutingDecisionManagedLanes readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddVehicleRoutingDecisionManagedLanes(Key: OleVariant; const Link: ILink; Pos: Double; 
                                                   const DestLink: ILink; DestPos: Double): IVehicleRoutingDecisionManagedLanes; dispid 1610874882;
    function DuplicateVehicleRoutingDecisionManagedLanes(Source: OleVariant; NewKey: OleVariant): IVehicleRoutingDecisionManagedLanes; dispid 1610874883;
    procedure RemoveVehicleRoutingDecisionManagedLanes(const VehicleRoutingDecisionManagedLanes: IVehicleRoutingDecisionManagedLanes); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleRoutingDecisionParkingContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C60A78FC-1807-467A-BA27-FBA58E2EE80A}
// *********************************************************************//
  IVehicleRoutingDecisionParkingContainerBase = interface(IVehicleRoutingDecisionParkingCollection)
    ['{C60A78FC-1807-467A-BA27-FBA58E2EE80A}']
    function Get_ItemByKey(Key: OleVariant): IVehicleRoutingDecisionParking; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddVehicleRoutingDecisionParking(Key: OleVariant; const Link: ILink; Pos: Double): IVehicleRoutingDecisionParking; safecall;
    function DuplicateVehicleRoutingDecisionParking(Source: OleVariant; NewKey: OleVariant): IVehicleRoutingDecisionParking; safecall;
    procedure RemoveVehicleRoutingDecisionParking(const VehicleRoutingDecisionParking: IVehicleRoutingDecisionParking); safecall;
    property ItemByKey[Key: OleVariant]: IVehicleRoutingDecisionParking read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IVehicleRoutingDecisionParkingContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C60A78FC-1807-467A-BA27-FBA58E2EE80A}
// *********************************************************************//
  IVehicleRoutingDecisionParkingContainerBaseDisp = dispinterface
    ['{C60A78FC-1807-467A-BA27-FBA58E2EE80A}']
    property ItemByKey[Key: OleVariant]: IVehicleRoutingDecisionParking readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddVehicleRoutingDecisionParking(Key: OleVariant; const Link: ILink; Pos: Double): IVehicleRoutingDecisionParking; dispid 1610874882;
    function DuplicateVehicleRoutingDecisionParking(Source: OleVariant; NewKey: OleVariant): IVehicleRoutingDecisionParking; dispid 1610874883;
    procedure RemoveVehicleRoutingDecisionParking(const VehicleRoutingDecisionParking: IVehicleRoutingDecisionParking); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleRoutingDecisionParkingContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {06F7F10D-B1E0-4EA6-A6E4-DA87CA1DF1E1}
// *********************************************************************//
  IVehicleRoutingDecisionParkingContainer = interface(IVehicleRoutingDecisionParkingContainerBase)
    ['{06F7F10D-B1E0-4EA6-A6E4-DA87CA1DF1E1}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleRoutingDecisionParkingContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {06F7F10D-B1E0-4EA6-A6E4-DA87CA1DF1E1}
// *********************************************************************//
  IVehicleRoutingDecisionParkingContainerDisp = dispinterface
    ['{06F7F10D-B1E0-4EA6-A6E4-DA87CA1DF1E1}']
    property ItemByKey[Key: OleVariant]: IVehicleRoutingDecisionParking readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddVehicleRoutingDecisionParking(Key: OleVariant; const Link: ILink; Pos: Double): IVehicleRoutingDecisionParking; dispid 1610874882;
    function DuplicateVehicleRoutingDecisionParking(Source: OleVariant; NewKey: OleVariant): IVehicleRoutingDecisionParking; dispid 1610874883;
    procedure RemoveVehicleRoutingDecisionParking(const VehicleRoutingDecisionParking: IVehicleRoutingDecisionParking); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleRoutingDecisionPartialContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {47A0CD49-942C-4C90-BC7C-1B624B59C6B5}
// *********************************************************************//
  IVehicleRoutingDecisionPartialContainerBase = interface(IVehicleRoutingDecisionPartialCollection)
    ['{47A0CD49-942C-4C90-BC7C-1B624B59C6B5}']
    function Get_ItemByKey(Key: OleVariant): IVehicleRoutingDecisionPartial; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddVehicleRoutingDecisionPartial(Key: OleVariant; const Link: ILink; Pos: Double; 
                                              const DestLink: ILink; DestPos: Double): IVehicleRoutingDecisionPartial; safecall;
    function DuplicateVehicleRoutingDecisionPartial(Source: OleVariant; NewKey: OleVariant): IVehicleRoutingDecisionPartial; safecall;
    procedure RemoveVehicleRoutingDecisionPartial(const VehicleRoutingDecisionPartial: IVehicleRoutingDecisionPartial); safecall;
    property ItemByKey[Key: OleVariant]: IVehicleRoutingDecisionPartial read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IVehicleRoutingDecisionPartialContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {47A0CD49-942C-4C90-BC7C-1B624B59C6B5}
// *********************************************************************//
  IVehicleRoutingDecisionPartialContainerBaseDisp = dispinterface
    ['{47A0CD49-942C-4C90-BC7C-1B624B59C6B5}']
    property ItemByKey[Key: OleVariant]: IVehicleRoutingDecisionPartial readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddVehicleRoutingDecisionPartial(Key: OleVariant; const Link: ILink; Pos: Double; 
                                              const DestLink: ILink; DestPos: Double): IVehicleRoutingDecisionPartial; dispid 1610874882;
    function DuplicateVehicleRoutingDecisionPartial(Source: OleVariant; NewKey: OleVariant): IVehicleRoutingDecisionPartial; dispid 1610874883;
    procedure RemoveVehicleRoutingDecisionPartial(const VehicleRoutingDecisionPartial: IVehicleRoutingDecisionPartial); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleRoutingDecisionPartialContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {93B71828-A482-44E8-B773-40ED315CD84F}
// *********************************************************************//
  IVehicleRoutingDecisionPartialContainer = interface(IVehicleRoutingDecisionPartialContainerBase)
    ['{93B71828-A482-44E8-B773-40ED315CD84F}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleRoutingDecisionPartialContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {93B71828-A482-44E8-B773-40ED315CD84F}
// *********************************************************************//
  IVehicleRoutingDecisionPartialContainerDisp = dispinterface
    ['{93B71828-A482-44E8-B773-40ED315CD84F}']
    property ItemByKey[Key: OleVariant]: IVehicleRoutingDecisionPartial readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddVehicleRoutingDecisionPartial(Key: OleVariant; const Link: ILink; Pos: Double; 
                                              const DestLink: ILink; DestPos: Double): IVehicleRoutingDecisionPartial; dispid 1610874882;
    function DuplicateVehicleRoutingDecisionPartial(Source: OleVariant; NewKey: OleVariant): IVehicleRoutingDecisionPartial; dispid 1610874883;
    procedure RemoveVehicleRoutingDecisionPartial(const VehicleRoutingDecisionPartial: IVehicleRoutingDecisionPartial); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleRoutingDecisionPartialPTContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {381498B3-392F-4553-A983-40D9BB6C2F59}
// *********************************************************************//
  IVehicleRoutingDecisionPartialPTContainerBase = interface(IVehicleRoutingDecisionPartialPTCollection)
    ['{381498B3-392F-4553-A983-40D9BB6C2F59}']
    function Get_ItemByKey(Key: OleVariant): IVehicleRoutingDecisionPartialPT; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddVehicleRoutingDecisionPartialPT(Key: OleVariant; const Link: ILink; Pos: Double; 
                                                const DestLink: ILink; DestPos: Double): IVehicleRoutingDecisionPartialPT; safecall;
    function DuplicateVehicleRoutingDecisionPartialPT(Source: OleVariant; NewKey: OleVariant): IVehicleRoutingDecisionPartialPT; safecall;
    procedure RemoveVehicleRoutingDecisionPartialPT(const VehicleRoutingDecisionPartialPT: IVehicleRoutingDecisionPartialPT); safecall;
    property ItemByKey[Key: OleVariant]: IVehicleRoutingDecisionPartialPT read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IVehicleRoutingDecisionPartialPTContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {381498B3-392F-4553-A983-40D9BB6C2F59}
// *********************************************************************//
  IVehicleRoutingDecisionPartialPTContainerBaseDisp = dispinterface
    ['{381498B3-392F-4553-A983-40D9BB6C2F59}']
    property ItemByKey[Key: OleVariant]: IVehicleRoutingDecisionPartialPT readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddVehicleRoutingDecisionPartialPT(Key: OleVariant; const Link: ILink; Pos: Double; 
                                                const DestLink: ILink; DestPos: Double): IVehicleRoutingDecisionPartialPT; dispid 1610874882;
    function DuplicateVehicleRoutingDecisionPartialPT(Source: OleVariant; NewKey: OleVariant): IVehicleRoutingDecisionPartialPT; dispid 1610874883;
    procedure RemoveVehicleRoutingDecisionPartialPT(const VehicleRoutingDecisionPartialPT: IVehicleRoutingDecisionPartialPT); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleRoutingDecisionPartialPTContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {839A29A1-129F-41EF-B129-40AF896CBCA7}
// *********************************************************************//
  IVehicleRoutingDecisionPartialPTContainer = interface(IVehicleRoutingDecisionPartialPTContainerBase)
    ['{839A29A1-129F-41EF-B129-40AF896CBCA7}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleRoutingDecisionPartialPTContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {839A29A1-129F-41EF-B129-40AF896CBCA7}
// *********************************************************************//
  IVehicleRoutingDecisionPartialPTContainerDisp = dispinterface
    ['{839A29A1-129F-41EF-B129-40AF896CBCA7}']
    property ItemByKey[Key: OleVariant]: IVehicleRoutingDecisionPartialPT readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddVehicleRoutingDecisionPartialPT(Key: OleVariant; const Link: ILink; Pos: Double; 
                                                const DestLink: ILink; DestPos: Double): IVehicleRoutingDecisionPartialPT; dispid 1610874882;
    function DuplicateVehicleRoutingDecisionPartialPT(Source: OleVariant; NewKey: OleVariant): IVehicleRoutingDecisionPartialPT; dispid 1610874883;
    procedure RemoveVehicleRoutingDecisionPartialPT(const VehicleRoutingDecisionPartialPT: IVehicleRoutingDecisionPartialPT); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleRoutingDecisionStaticContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DB67DBC5-C72B-4ABD-8C53-073B7B1C3425}
// *********************************************************************//
  IVehicleRoutingDecisionStaticContainerBase = interface(IVehicleRoutingDecisionStaticCollection)
    ['{DB67DBC5-C72B-4ABD-8C53-073B7B1C3425}']
    function Get_ItemByKey(Key: OleVariant): IVehicleRoutingDecisionStatic; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddVehicleRoutingDecisionStatic(Key: OleVariant; const Link: ILink; Pos: Double): IVehicleRoutingDecisionStatic; safecall;
    function DuplicateVehicleRoutingDecisionStatic(Source: OleVariant; NewKey: OleVariant): IVehicleRoutingDecisionStatic; safecall;
    procedure RemoveVehicleRoutingDecisionStatic(const VehicleRoutingDecisionStatic: IVehicleRoutingDecisionStatic); safecall;
    property ItemByKey[Key: OleVariant]: IVehicleRoutingDecisionStatic read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IVehicleRoutingDecisionStaticContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DB67DBC5-C72B-4ABD-8C53-073B7B1C3425}
// *********************************************************************//
  IVehicleRoutingDecisionStaticContainerBaseDisp = dispinterface
    ['{DB67DBC5-C72B-4ABD-8C53-073B7B1C3425}']
    property ItemByKey[Key: OleVariant]: IVehicleRoutingDecisionStatic readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddVehicleRoutingDecisionStatic(Key: OleVariant; const Link: ILink; Pos: Double): IVehicleRoutingDecisionStatic; dispid 1610874882;
    function DuplicateVehicleRoutingDecisionStatic(Source: OleVariant; NewKey: OleVariant): IVehicleRoutingDecisionStatic; dispid 1610874883;
    procedure RemoveVehicleRoutingDecisionStatic(const VehicleRoutingDecisionStatic: IVehicleRoutingDecisionStatic); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleRoutingDecisionStaticContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D7981D02-CBED-41DF-BB6C-4DE1A0373211}
// *********************************************************************//
  IVehicleRoutingDecisionStaticContainer = interface(IVehicleRoutingDecisionStaticContainerBase)
    ['{D7981D02-CBED-41DF-BB6C-4DE1A0373211}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleRoutingDecisionStaticContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D7981D02-CBED-41DF-BB6C-4DE1A0373211}
// *********************************************************************//
  IVehicleRoutingDecisionStaticContainerDisp = dispinterface
    ['{D7981D02-CBED-41DF-BB6C-4DE1A0373211}']
    property ItemByKey[Key: OleVariant]: IVehicleRoutingDecisionStatic readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddVehicleRoutingDecisionStatic(Key: OleVariant; const Link: ILink; Pos: Double): IVehicleRoutingDecisionStatic; dispid 1610874882;
    function DuplicateVehicleRoutingDecisionStatic(Source: OleVariant; NewKey: OleVariant): IVehicleRoutingDecisionStatic; dispid 1610874883;
    procedure RemoveVehicleRoutingDecisionStatic(const VehicleRoutingDecisionStatic: IVehicleRoutingDecisionStatic); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleTravelTimeMeasurementContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DB717E58-0470-4BEA-9BB1-55907867B0D4}
// *********************************************************************//
  IVehicleTravelTimeMeasurementContainerBase = interface(IVehicleTravelTimeMeasurementCollection)
    ['{DB717E58-0470-4BEA-9BB1-55907867B0D4}']
    function Get_ItemByKey(Key: OleVariant): IVehicleTravelTimeMeasurement; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddVehicleTravelTimeMeasurement(Key: OleVariant; const StartLink: ILink; 
                                             StartPos: Double; const EndLink: ILink; EndPos: Double): IVehicleTravelTimeMeasurement; safecall;
    function DuplicateVehicleTravelTimeMeasurement(Source: OleVariant; NewKey: OleVariant): IVehicleTravelTimeMeasurement; safecall;
    procedure RemoveVehicleTravelTimeMeasurement(const VehicleTravelTimeMeasurement: IVehicleTravelTimeMeasurement); safecall;
    property ItemByKey[Key: OleVariant]: IVehicleTravelTimeMeasurement read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IVehicleTravelTimeMeasurementContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DB717E58-0470-4BEA-9BB1-55907867B0D4}
// *********************************************************************//
  IVehicleTravelTimeMeasurementContainerBaseDisp = dispinterface
    ['{DB717E58-0470-4BEA-9BB1-55907867B0D4}']
    property ItemByKey[Key: OleVariant]: IVehicleTravelTimeMeasurement readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddVehicleTravelTimeMeasurement(Key: OleVariant; const StartLink: ILink; 
                                             StartPos: Double; const EndLink: ILink; EndPos: Double): IVehicleTravelTimeMeasurement; dispid 1610874882;
    function DuplicateVehicleTravelTimeMeasurement(Source: OleVariant; NewKey: OleVariant): IVehicleTravelTimeMeasurement; dispid 1610874883;
    procedure RemoveVehicleTravelTimeMeasurement(const VehicleTravelTimeMeasurement: IVehicleTravelTimeMeasurement); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleTravelTimeMeasurementContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {850FFE03-9681-40FE-B0D3-EC63D73F54F4}
// *********************************************************************//
  IVehicleTravelTimeMeasurementContainer = interface(IVehicleTravelTimeMeasurementContainerBase)
    ['{850FFE03-9681-40FE-B0D3-EC63D73F54F4}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleTravelTimeMeasurementContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {850FFE03-9681-40FE-B0D3-EC63D73F54F4}
// *********************************************************************//
  IVehicleTravelTimeMeasurementContainerDisp = dispinterface
    ['{850FFE03-9681-40FE-B0D3-EC63D73F54F4}']
    property ItemByKey[Key: OleVariant]: IVehicleTravelTimeMeasurement readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddVehicleTravelTimeMeasurement(Key: OleVariant; const StartLink: ILink; 
                                             StartPos: Double; const EndLink: ILink; EndPos: Double): IVehicleTravelTimeMeasurement; dispid 1610874882;
    function DuplicateVehicleTravelTimeMeasurement(Source: OleVariant; NewKey: OleVariant): IVehicleTravelTimeMeasurement; dispid 1610874883;
    procedure RemoveVehicleTravelTimeMeasurement(const VehicleTravelTimeMeasurement: IVehicleTravelTimeMeasurement); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleTravelTimeMeasurementBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {223F9483-612C-4845-AA1C-D7AF8DBEC075}
// *********************************************************************//
  IVehicleTravelTimeMeasurementBase = interface(IObjectBase)
    ['{223F9483-612C-4845-AA1C-D7AF8DBEC075}']
    function Get_StartLink: ILink; safecall;
    function Get_EndLink: ILink; safecall;
    function Get_DelayMeas: IDelayMeasurementCollection; safecall;
    property StartLink: ILink read Get_StartLink;
    property EndLink: ILink read Get_EndLink;
    property DelayMeas: IDelayMeasurementCollection read Get_DelayMeas;
  end;

// *********************************************************************//
// DispIntf:  IVehicleTravelTimeMeasurementBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {223F9483-612C-4845-AA1C-D7AF8DBEC075}
// *********************************************************************//
  IVehicleTravelTimeMeasurementBaseDisp = dispinterface
    ['{223F9483-612C-4845-AA1C-D7AF8DBEC075}']
    property StartLink: ILink readonly dispid 1610809344;
    property EndLink: ILink readonly dispid 1610809345;
    property DelayMeas: IDelayMeasurementCollection readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehicleTravelTimeMeasurement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DF1DC73E-6F9B-485E-A2D7-C8D8FE53E12B}
// *********************************************************************//
  IVehicleTravelTimeMeasurement = interface(IVehicleTravelTimeMeasurementBase)
    ['{DF1DC73E-6F9B-485E-A2D7-C8D8FE53E12B}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleTravelTimeMeasurementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DF1DC73E-6F9B-485E-A2D7-C8D8FE53E12B}
// *********************************************************************//
  IVehicleTravelTimeMeasurementDisp = dispinterface
    ['{DF1DC73E-6F9B-485E-A2D7-C8D8FE53E12B}']
    property StartLink: ILink readonly dispid 1610809344;
    property EndLink: ILink readonly dispid 1610809345;
    property DelayMeas: IDelayMeasurementCollection readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehicleTypeContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {896BAAAA-96BD-473E-BFA2-E7E9572865ED}
// *********************************************************************//
  IVehicleTypeContainerBase = interface(IVehicleTypeCollection)
    ['{896BAAAA-96BD-473E-BFA2-E7E9572865ED}']
    function Get_ItemByKey(Key: OleVariant): IVehicleType; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddVehicleType(Key: OleVariant): IVehicleType; safecall;
    function DuplicateVehicleType(Source: OleVariant; NewKey: OleVariant): IVehicleType; safecall;
    procedure RemoveVehicleType(const VehicleType: IVehicleType); safecall;
    property ItemByKey[Key: OleVariant]: IVehicleType read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IVehicleTypeContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {896BAAAA-96BD-473E-BFA2-E7E9572865ED}
// *********************************************************************//
  IVehicleTypeContainerBaseDisp = dispinterface
    ['{896BAAAA-96BD-473E-BFA2-E7E9572865ED}']
    property ItemByKey[Key: OleVariant]: IVehicleType readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddVehicleType(Key: OleVariant): IVehicleType; dispid 1610874882;
    function DuplicateVehicleType(Source: OleVariant; NewKey: OleVariant): IVehicleType; dispid 1610874883;
    procedure RemoveVehicleType(const VehicleType: IVehicleType); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleTypeContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B7929C5C-8F9E-40EA-9CF7-DDFBA020E73D}
// *********************************************************************//
  IVehicleTypeContainer = interface(IVehicleTypeContainerBase)
    ['{B7929C5C-8F9E-40EA-9CF7-DDFBA020E73D}']
  end;

// *********************************************************************//
// DispIntf:  IVehicleTypeContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B7929C5C-8F9E-40EA-9CF7-DDFBA020E73D}
// *********************************************************************//
  IVehicleTypeContainerDisp = dispinterface
    ['{B7929C5C-8F9E-40EA-9CF7-DDFBA020E73D}']
    property ItemByKey[Key: OleVariant]: IVehicleType readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddVehicleType(Key: OleVariant): IVehicleType; dispid 1610874882;
    function DuplicateVehicleType(Source: OleVariant; NewKey: OleVariant): IVehicleType; dispid 1610874883;
    procedure RemoveVehicleType(const VehicleType: IVehicleType); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {29F96939-BC8A-481B-93BF-5ECEDE96508F}
// *********************************************************************//
  IVehicleContainerBase = interface(IVehicleCollection)
    ['{29F96939-BC8A-481B-93BF-5ECEDE96508F}']
    function Get_ItemByKey(Key: OleVariant): IVehicle; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    property ItemByKey[Key: OleVariant]: IVehicle read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IVehicleContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {29F96939-BC8A-481B-93BF-5ECEDE96508F}
// *********************************************************************//
  IVehicleContainerBaseDisp = dispinterface
    ['{29F96939-BC8A-481B-93BF-5ECEDE96508F}']
    property ItemByKey[Key: OleVariant]: IVehicle readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IVehicleContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C1568A6C-AE37-481C-803C-D01DC1C9F28B}
// *********************************************************************//
  IVehicleContainer = interface(IVehicleContainerBase)
    ['{C1568A6C-AE37-481C-803C-D01DC1C9F28B}']
    function AddVehicleInZone(VehicleType: OleVariant; Zone: OleVariant): IVehicle; safecall;
    function AddVehicleInParkingLot(VehicleType: OleVariant; ParkingLot: OleVariant): IVehicle; safecall;
    function AddVehicleAtLinkPosition(VehicleType: OleVariant; Link: OleVariant; Lane: SYSINT; 
                                      Position: Double; DesiredSpeed: Double; Interaction: WordBool): IVehicle; safecall;
    function AddVehicleToPTLine(VehicleType: OleVariant; PTTransitLine: OleVariant): IVehicle; safecall;
    procedure RemoveVehicle(Vehicle: OleVariant); safecall;
    function GetArrived: IVehicleCollection; safecall;
    function GetParked: IVehicleCollection; safecall;
    function GetDeparted: IVehicleCollection; safecall;
    function GetByLocation(positionX: Double; positionY: Double; DistanceDistribution: OleVariant): IVehicleCollection; safecall;
  end;

// *********************************************************************//
// DispIntf:  IVehicleContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C1568A6C-AE37-481C-803C-D01DC1C9F28B}
// *********************************************************************//
  IVehicleContainerDisp = dispinterface
    ['{C1568A6C-AE37-481C-803C-D01DC1C9F28B}']
    function AddVehicleInZone(VehicleType: OleVariant; Zone: OleVariant): IVehicle; dispid 1610940416;
    function AddVehicleInParkingLot(VehicleType: OleVariant; ParkingLot: OleVariant): IVehicle; dispid 1610940417;
    function AddVehicleAtLinkPosition(VehicleType: OleVariant; Link: OleVariant; Lane: SYSINT; 
                                      Position: Double; DesiredSpeed: Double; Interaction: WordBool): IVehicle; dispid 1610940418;
    function AddVehicleToPTLine(VehicleType: OleVariant; PTTransitLine: OleVariant): IVehicle; dispid 1610940419;
    procedure RemoveVehicle(Vehicle: OleVariant); dispid 1610940420;
    function GetArrived: IVehicleCollection; dispid 1610940421;
    function GetParked: IVehicleCollection; dispid 1610940422;
    function GetDeparted: IVehicleCollection; dispid 1610940423;
    function GetByLocation(positionX: Double; positionY: Double; DistanceDistribution: OleVariant): IVehicleCollection; dispid 1610940424;
    property ItemByKey[Key: OleVariant]: IVehicle readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IWTTFileContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A1082D35-EA65-4153-9ECE-7069F65DC252}
// *********************************************************************//
  IWTTFileContainerBase = interface(IWTTFileCollection)
    ['{A1082D35-EA65-4153-9ECE-7069F65DC252}']
    function Get_ItemByKey(Key: OleVariant): IWTTFile; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    property ItemByKey[Key: OleVariant]: IWTTFile read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IWTTFileContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A1082D35-EA65-4153-9ECE-7069F65DC252}
// *********************************************************************//
  IWTTFileContainerBaseDisp = dispinterface
    ['{A1082D35-EA65-4153-9ECE-7069F65DC252}']
    property ItemByKey[Key: OleVariant]: IWTTFile readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IWTTFileContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7040BC78-53B3-489C-A501-527D80B63369}
// *********************************************************************//
  IWTTFileContainer = interface(IWTTFileContainerBase)
    ['{7040BC78-53B3-489C-A501-527D80B63369}']
  end;

// *********************************************************************//
// DispIntf:  IWTTFileContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7040BC78-53B3-489C-A501-527D80B63369}
// *********************************************************************//
  IWTTFileContainerDisp = dispinterface
    ['{7040BC78-53B3-489C-A501-527D80B63369}']
    property ItemByKey[Key: OleVariant]: IWTTFile readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IWTTFileBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F87415BA-BA17-4047-BD0D-1E9A754FD13F}
// *********************************************************************//
  IWTTFileBase = interface(IObjectBase)
    ['{F87415BA-BA17-4047-BD0D-1E9A754FD13F}']
  end;

// *********************************************************************//
// DispIntf:  IWTTFileBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F87415BA-BA17-4047-BD0D-1E9A754FD13F}
// *********************************************************************//
  IWTTFileBaseDisp = dispinterface
    ['{F87415BA-BA17-4047-BD0D-1E9A754FD13F}']
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IWTTFile
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F6A6661C-5650-4D42-94FD-3CAF98C51C3A}
// *********************************************************************//
  IWTTFile = interface(IWTTFileBase)
    ['{F6A6661C-5650-4D42-94FD-3CAF98C51C3A}']
  end;

// *********************************************************************//
// DispIntf:  IWTTFileDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F6A6661C-5650-4D42-94FD-3CAF98C51C3A}
// *********************************************************************//
  IWTTFileDisp = dispinterface
    ['{F6A6661C-5650-4D42-94FD-3CAF98C51C3A}']
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IWalkingBehaviorCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B761AD6E-9EAD-454F-A6DD-1E1A87BA9B83}
// *********************************************************************//
  IWalkingBehaviorCollection = interface(ICollectionBase)
    ['{B761AD6E-9EAD-454F-A6DD-1E1A87BA9B83}']
  end;

// *********************************************************************//
// DispIntf:  IWalkingBehaviorCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B761AD6E-9EAD-454F-A6DD-1E1A87BA9B83}
// *********************************************************************//
  IWalkingBehaviorCollectionDisp = dispinterface
    ['{B761AD6E-9EAD-454F-A6DD-1E1A87BA9B83}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IWalkingBehaviorContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E43F8F71-E10D-494F-A322-5AB2824343BE}
// *********************************************************************//
  IWalkingBehaviorContainerBase = interface(IWalkingBehaviorCollection)
    ['{E43F8F71-E10D-494F-A322-5AB2824343BE}']
    function Get_ItemByKey(Key: OleVariant): IWalkingBehavior; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddWalkingBehavior(Key: OleVariant): IWalkingBehavior; safecall;
    function DuplicateWalkingBehavior(Source: OleVariant; NewKey: OleVariant): IWalkingBehavior; safecall;
    procedure RemoveWalkingBehavior(const WalkingBehavior: IWalkingBehavior); safecall;
    property ItemByKey[Key: OleVariant]: IWalkingBehavior read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IWalkingBehaviorContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E43F8F71-E10D-494F-A322-5AB2824343BE}
// *********************************************************************//
  IWalkingBehaviorContainerBaseDisp = dispinterface
    ['{E43F8F71-E10D-494F-A322-5AB2824343BE}']
    property ItemByKey[Key: OleVariant]: IWalkingBehavior readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddWalkingBehavior(Key: OleVariant): IWalkingBehavior; dispid 1610874882;
    function DuplicateWalkingBehavior(Source: OleVariant; NewKey: OleVariant): IWalkingBehavior; dispid 1610874883;
    procedure RemoveWalkingBehavior(const WalkingBehavior: IWalkingBehavior); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IWalkingBehaviorContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {23977C45-5102-4693-B83F-2D4D18CCCBC0}
// *********************************************************************//
  IWalkingBehaviorContainer = interface(IWalkingBehaviorContainerBase)
    ['{23977C45-5102-4693-B83F-2D4D18CCCBC0}']
  end;

// *********************************************************************//
// DispIntf:  IWalkingBehaviorContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {23977C45-5102-4693-B83F-2D4D18CCCBC0}
// *********************************************************************//
  IWalkingBehaviorContainerDisp = dispinterface
    ['{23977C45-5102-4693-B83F-2D4D18CCCBC0}']
    property ItemByKey[Key: OleVariant]: IWalkingBehavior readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddWalkingBehavior(Key: OleVariant): IWalkingBehavior; dispid 1610874882;
    function DuplicateWalkingBehavior(Source: OleVariant; NewKey: OleVariant): IWalkingBehavior; dispid 1610874883;
    procedure RemoveWalkingBehavior(const WalkingBehavior: IWalkingBehavior); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IWeightDistributionCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B112BEF9-DBE6-42DC-B8C1-6DFCE147BCC8}
// *********************************************************************//
  IWeightDistributionCollection = interface(ICollectionBase)
    ['{B112BEF9-DBE6-42DC-B8C1-6DFCE147BCC8}']
  end;

// *********************************************************************//
// DispIntf:  IWeightDistributionCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B112BEF9-DBE6-42DC-B8C1-6DFCE147BCC8}
// *********************************************************************//
  IWeightDistributionCollectionDisp = dispinterface
    ['{B112BEF9-DBE6-42DC-B8C1-6DFCE147BCC8}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IWeightDistributionContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A724E9FD-B4DC-4618-A73A-F23815301DBE}
// *********************************************************************//
  IWeightDistributionContainerBase = interface(IWeightDistributionCollection)
    ['{A724E9FD-B4DC-4618-A73A-F23815301DBE}']
    function Get_ItemByKey(Key: OleVariant): IWeightDistribution; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddWeightDistribution(Key: OleVariant; DistrDataPts: OleVariant): IWeightDistribution; safecall;
    function DuplicateWeightDistribution(Source: OleVariant; NewKey: OleVariant): IWeightDistribution; safecall;
    procedure RemoveWeightDistribution(const WeightDistribution: IWeightDistribution); safecall;
    property ItemByKey[Key: OleVariant]: IWeightDistribution read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IWeightDistributionContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A724E9FD-B4DC-4618-A73A-F23815301DBE}
// *********************************************************************//
  IWeightDistributionContainerBaseDisp = dispinterface
    ['{A724E9FD-B4DC-4618-A73A-F23815301DBE}']
    property ItemByKey[Key: OleVariant]: IWeightDistribution readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddWeightDistribution(Key: OleVariant; DistrDataPts: OleVariant): IWeightDistribution; dispid 1610874882;
    function DuplicateWeightDistribution(Source: OleVariant; NewKey: OleVariant): IWeightDistribution; dispid 1610874883;
    procedure RemoveWeightDistribution(const WeightDistribution: IWeightDistribution); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IWeightDistributionContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {443DF4A0-407E-4B95-A882-AC10BB0C7E91}
// *********************************************************************//
  IWeightDistributionContainer = interface(IWeightDistributionContainerBase)
    ['{443DF4A0-407E-4B95-A882-AC10BB0C7E91}']
  end;

// *********************************************************************//
// DispIntf:  IWeightDistributionContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {443DF4A0-407E-4B95-A882-AC10BB0C7E91}
// *********************************************************************//
  IWeightDistributionContainerDisp = dispinterface
    ['{443DF4A0-407E-4B95-A882-AC10BB0C7E91}']
    property ItemByKey[Key: OleVariant]: IWeightDistribution readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddWeightDistribution(Key: OleVariant; DistrDataPts: OleVariant): IWeightDistribution; dispid 1610874882;
    function DuplicateWeightDistribution(Source: OleVariant; NewKey: OleVariant): IWeightDistribution; dispid 1610874883;
    procedure RemoveWeightDistribution(const WeightDistribution: IWeightDistribution); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IZoneCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {54E9C1B9-41E2-4378-AFEE-B30CCF558A80}
// *********************************************************************//
  IZoneCollection = interface(ICollectionBase)
    ['{54E9C1B9-41E2-4378-AFEE-B30CCF558A80}']
  end;

// *********************************************************************//
// DispIntf:  IZoneCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {54E9C1B9-41E2-4378-AFEE-B30CCF558A80}
// *********************************************************************//
  IZoneCollectionDisp = dispinterface
    ['{54E9C1B9-41E2-4378-AFEE-B30CCF558A80}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IZoneContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3185EE23-DA14-4330-89D5-466303E69298}
// *********************************************************************//
  IZoneContainerBase = interface(IZoneCollection)
    ['{3185EE23-DA14-4330-89D5-466303E69298}']
    function Get_ItemByKey(Key: OleVariant): IZone; safecall;
    function Get_ItemKeyExists(Key: OleVariant): WordBool; safecall;
    function AddZone(Key: OleVariant): IZone; safecall;
    function DuplicateZone(Source: OleVariant; NewKey: OleVariant): IZone; safecall;
    procedure RemoveZone(const Zone: IZone); safecall;
    property ItemByKey[Key: OleVariant]: IZone read Get_ItemByKey;
    property ItemKeyExists[Key: OleVariant]: WordBool read Get_ItemKeyExists;
  end;

// *********************************************************************//
// DispIntf:  IZoneContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3185EE23-DA14-4330-89D5-466303E69298}
// *********************************************************************//
  IZoneContainerBaseDisp = dispinterface
    ['{3185EE23-DA14-4330-89D5-466303E69298}']
    property ItemByKey[Key: OleVariant]: IZone readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddZone(Key: OleVariant): IZone; dispid 1610874882;
    function DuplicateZone(Source: OleVariant; NewKey: OleVariant): IZone; dispid 1610874883;
    procedure RemoveZone(const Zone: IZone); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IZoneContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2594385A-F1E9-4AED-9196-E0422E85C359}
// *********************************************************************//
  IZoneContainer = interface(IZoneContainerBase)
    ['{2594385A-F1E9-4AED-9196-E0422E85C359}']
  end;

// *********************************************************************//
// DispIntf:  IZoneContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2594385A-F1E9-4AED-9196-E0422E85C359}
// *********************************************************************//
  IZoneContainerDisp = dispinterface
    ['{2594385A-F1E9-4AED-9196-E0422E85C359}']
    property ItemByKey[Key: OleVariant]: IZone readonly dispid 1610874880;
    property ItemKeyExists[Key: OleVariant]: WordBool readonly dispid 1610874881;
    function AddZone(Key: OleVariant): IZone; dispid 1610874882;
    function DuplicateZone(Source: OleVariant; NewKey: OleVariant): IZone; dispid 1610874883;
    procedure RemoveZone(const Zone: IZone); dispid 1610874884;
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IGraphics
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EF10FD71-7BA8-49F5-9EC1-39A22AFFE227}
// *********************************************************************//
  IGraphics = interface(IObjectBase)
    ['{EF10FD71-7BA8-49F5-9EC1-39A22AFFE227}']
    function Get_CurrentNetworkWindow: INetworkWindow; safecall;
    property CurrentNetworkWindow: INetworkWindow read Get_CurrentNetworkWindow;
  end;

// *********************************************************************//
// DispIntf:  IGraphicsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EF10FD71-7BA8-49F5-9EC1-39A22AFFE227}
// *********************************************************************//
  IGraphicsDisp = dispinterface
    ['{EF10FD71-7BA8-49F5-9EC1-39A22AFFE227}']
    property CurrentNetworkWindow: INetworkWindow readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: INetworkWindow
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {36CC2587-3283-43D0-8D69-CEE6115D1819}
// *********************************************************************//
  INetworkWindow = interface(IObjectBase)
    ['{36CC2587-3283-43D0-8D69-CEE6115D1819}']
    procedure GetCoordinates(out Top: SYSINT; out Left: SYSINT; out Bottom: SYSINT; 
                             out Right: SYSINT); safecall;
    procedure SetCoordinates(Top: SYSINT; Left: SYSINT; Bottom: SYSINT; Right: SYSINT); safecall;
    procedure Screenshot(const FileName: WideString; scaleFactor: Double); safecall;
    procedure ZoomTo(X1: Double; Y1: Double; X2: Double; Y2: Double); safecall;
    procedure ApplyLayout(const LayoutName: WideString); safecall;
    procedure SetCameraPositionAndAngle(xPos: Double; yPos: Double; zPos: Double; yawAngle: Double; 
                                        pitchAngle: Double); safecall;
    procedure SetCameraPositionAndFieldOfView(xPos: Double; yPos: Double; zPos: Double; 
                                              yawAngle: Double; pitchAngle: Double; 
                                              rollAngle: Double; fieldOfView: Double); safecall;
  end;

// *********************************************************************//
// DispIntf:  INetworkWindowDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {36CC2587-3283-43D0-8D69-CEE6115D1819}
// *********************************************************************//
  INetworkWindowDisp = dispinterface
    ['{36CC2587-3283-43D0-8D69-CEE6115D1819}']
    procedure GetCoordinates(out Top: SYSINT; out Left: SYSINT; out Bottom: SYSINT; 
                             out Right: SYSINT); dispid 1610809344;
    procedure SetCoordinates(Top: SYSINT; Left: SYSINT; Bottom: SYSINT; Right: SYSINT); dispid 1610809345;
    procedure Screenshot(const FileName: WideString; scaleFactor: Double); dispid 1610809346;
    procedure ZoomTo(X1: Double; Y1: Double; X2: Double; Y2: Double); dispid 1610809347;
    procedure ApplyLayout(const LayoutName: WideString); dispid 1610809348;
    procedure SetCameraPositionAndAngle(xPos: Double; yPos: Double; zPos: Double; yawAngle: Double; 
                                        pitchAngle: Double); dispid 1610809349;
    procedure SetCameraPositionAndFieldOfView(xPos: Double; yPos: Double; zPos: Double; 
                                              yawAngle: Double; pitchAngle: Double; 
                                              rollAngle: Double; fieldOfView: Double); dispid 1610809350;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IScenarioManagementBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3CD71AB4-B751-46EC-9919-41AB4CC0F5CC}
// *********************************************************************//
  IScenarioManagementBase = interface(IDispatch)
    ['{3CD71AB4-B751-46EC-9919-41AB4CC0F5CC}']
  end;

// *********************************************************************//
// DispIntf:  IScenarioManagementBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3CD71AB4-B751-46EC-9919-41AB4CC0F5CC}
// *********************************************************************//
  IScenarioManagementBaseDisp = dispinterface
    ['{3CD71AB4-B751-46EC-9919-41AB4CC0F5CC}']
  end;

// *********************************************************************//
// Interface: IScenarioManagement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {40E3ECEF-02F2-4D89-8D57-F9D384DC2C84}
// *********************************************************************//
  IScenarioManagement = interface(IScenarioManagementBase)
    ['{40E3ECEF-02F2-4D89-8D57-F9D384DC2C84}']
    procedure LoadBaseNet; safecall;
    procedure LoadScenario(Scenario: OleVariant); safecall;
    procedure LoadModification(Modification: OleVariant); safecall;
    procedure SaveScenario; safecall;
    function SaveScenarioAs(const ScenarioName: WideString): OleVariant; safecall;
    procedure SaveInMultipleScenarios(const Scenarios: WideString); safecall;
    procedure SaveModification; safecall;
  end;

// *********************************************************************//
// DispIntf:  IScenarioManagementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {40E3ECEF-02F2-4D89-8D57-F9D384DC2C84}
// *********************************************************************//
  IScenarioManagementDisp = dispinterface
    ['{40E3ECEF-02F2-4D89-8D57-F9D384DC2C84}']
    procedure LoadBaseNet; dispid 1610809344;
    procedure LoadScenario(Scenario: OleVariant); dispid 1610809345;
    procedure LoadModification(Modification: OleVariant); dispid 1610809346;
    procedure SaveScenario; dispid 1610809347;
    function SaveScenarioAs(const ScenarioName: WideString): OleVariant; dispid 1610809348;
    procedure SaveInMultipleScenarios(const Scenarios: WideString); dispid 1610809349;
    procedure SaveModification; dispid 1610809350;
  end;

// *********************************************************************//
// Interface: IPresentation
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {09FF1483-43EE-4E3B-932D-E57A171F9AF0}
// *********************************************************************//
  IPresentation = interface(IObjectBase)
    ['{09FF1483-43EE-4E3B-932D-E57A171F9AF0}']
    procedure LoadAnimation(const NetPath: WideString); safecall;
    procedure RunContinuousForward; safecall;
    procedure RunSingleStepForward; safecall;
    procedure RunContinuousBackward; safecall;
    procedure RunSingleStepBackward; safecall;
    procedure Stop; safecall;
  end;

// *********************************************************************//
// DispIntf:  IPresentationDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {09FF1483-43EE-4E3B-932D-E57A171F9AF0}
// *********************************************************************//
  IPresentationDisp = dispinterface
    ['{09FF1483-43EE-4E3B-932D-E57A171F9AF0}']
    procedure LoadAnimation(const NetPath: WideString); dispid 1610809344;
    procedure RunContinuousForward; dispid 1610809345;
    procedure RunSingleStepForward; dispid 1610809346;
    procedure RunContinuousBackward; dispid 1610809347;
    procedure RunSingleStepBackward; dispid 1610809348;
    procedure Stop; dispid 1610809349;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ILicenseInfo
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DC35BF66-4E51-40E6-AB1A-AD701D35BC59}
// *********************************************************************//
  ILicenseInfo = interface(IObjectBase)
    ['{DC35BF66-4E51-40E6-AB1A-AD701D35BC59}']
    function LicenseIncludesModule(mdule: LicenseModules): WordBool; safecall;
  end;

// *********************************************************************//
// DispIntf:  ILicenseInfoDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DC35BF66-4E51-40E6-AB1A-AD701D35BC59}
// *********************************************************************//
  ILicenseInfoDisp = dispinterface
    ['{DC35BF66-4E51-40E6-AB1A-AD701D35BC59}']
    function LicenseIncludesModule(mdule: LicenseModules): WordBool; dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IOptima
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CC7F7C27-C5FD-438F-BBCE-0561BE85FF87}
// *********************************************************************//
  IOptima = interface(IObjectBase)
    ['{CC7F7C27-C5FD-438F-BBCE-0561BE85FF87}']
    procedure EstablishConnection(connectionData: OleVariant); safecall;
  end;

// *********************************************************************//
// DispIntf:  IOptimaDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CC7F7C27-C5FD-438F-BBCE-0561BE85FF87}
// *********************************************************************//
  IOptimaDisp = dispinterface
    ['{CC7F7C27-C5FD-438F-BBCE-0561BE85FF87}']
    procedure EstablishConnection(connectionData: OleVariant); dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IAttribute
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4600A07A-5144-4D74-89E5-6C19DED0BD2E}
// *********************************************************************//
  IAttribute = interface(IDispatch)
    ['{4600A07A-5144-4D74-89E5-6C19DED0BD2E}']
    function Get_ID: OleVariant; safecall;
    function Get_Code: OleVariant; safecall;
    function Get_Editable: WordBool; safecall;
    function Get_ValueType: ValueType; safecall;
    function Get_Name: OleVariant; safecall;
    function Get_ValueMin: Double; safecall;
    function Get_ValueMax: Double; safecall;
    function Get_ValueDefault: Double; safecall;
    function Get_Comment: OleVariant; safecall;
    function Get_MaxStringLen: SYSINT; safecall;
    function Get_category: OleVariant; safecall;
    function Get_Scaled: WordBool; safecall;
    function Get_DecimalPlaces: SYSINT; safecall;
    function Get_Sparse: WordBool; safecall;
    function Get_StringValueDefault: OleVariant; safecall;
    function Get_Description: OleVariant; safecall;
    function Get_Source: OleVariant; safecall;
    property ID: OleVariant read Get_ID;
    property Code: OleVariant read Get_Code;
    property Editable: WordBool read Get_Editable;
    property ValueType: ValueType read Get_ValueType;
    property Name: OleVariant read Get_Name;
    property ValueMin: Double read Get_ValueMin;
    property ValueMax: Double read Get_ValueMax;
    property ValueDefault: Double read Get_ValueDefault;
    property Comment: OleVariant read Get_Comment;
    property MaxStringLen: SYSINT read Get_MaxStringLen;
    property category: OleVariant read Get_category;
    property Scaled: WordBool read Get_Scaled;
    property DecimalPlaces: SYSINT read Get_DecimalPlaces;
    property Sparse: WordBool read Get_Sparse;
    property StringValueDefault: OleVariant read Get_StringValueDefault;
    property Description: OleVariant read Get_Description;
    property Source: OleVariant read Get_Source;
  end;

// *********************************************************************//
// DispIntf:  IAttributeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4600A07A-5144-4D74-89E5-6C19DED0BD2E}
// *********************************************************************//
  IAttributeDisp = dispinterface
    ['{4600A07A-5144-4D74-89E5-6C19DED0BD2E}']
    property ID: OleVariant readonly dispid 1610743808;
    property Code: OleVariant readonly dispid 1610743809;
    property Editable: WordBool readonly dispid 1610743810;
    property ValueType: ValueType readonly dispid 1610743811;
    property Name: OleVariant readonly dispid 1610743812;
    property ValueMin: Double readonly dispid 1610743813;
    property ValueMax: Double readonly dispid 1610743814;
    property ValueDefault: Double readonly dispid 1610743815;
    property Comment: OleVariant readonly dispid 1610743816;
    property MaxStringLen: SYSINT readonly dispid 1610743817;
    property category: OleVariant readonly dispid 1610743818;
    property Scaled: WordBool readonly dispid 1610743819;
    property DecimalPlaces: SYSINT readonly dispid 1610743820;
    property Sparse: WordBool readonly dispid 1610743821;
    property StringValueDefault: OleVariant readonly dispid 1610743822;
    property Description: OleVariant readonly dispid 1610743823;
    property Source: OleVariant readonly dispid 1610743824;
  end;

// *********************************************************************//
// Interface: IAccelerationFunctionDataPointBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6BAD5237-2B47-408C-8BD8-60255DEB47BF}
// *********************************************************************//
  IAccelerationFunctionDataPointBase = interface(IObjectBase)
    ['{6BAD5237-2B47-408C-8BD8-60255DEB47BF}']
  end;

// *********************************************************************//
// DispIntf:  IAccelerationFunctionDataPointBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6BAD5237-2B47-408C-8BD8-60255DEB47BF}
// *********************************************************************//
  IAccelerationFunctionDataPointBaseDisp = dispinterface
    ['{6BAD5237-2B47-408C-8BD8-60255DEB47BF}']
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IAccelerationFunctionDataPoint
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0E01E5FB-E0A4-4CF3-B1EE-449897671537}
// *********************************************************************//
  IAccelerationFunctionDataPoint = interface(IAccelerationFunctionDataPointBase)
    ['{0E01E5FB-E0A4-4CF3-B1EE-449897671537}']
  end;

// *********************************************************************//
// DispIntf:  IAccelerationFunctionDataPointDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0E01E5FB-E0A4-4CF3-B1EE-449897671537}
// *********************************************************************//
  IAccelerationFunctionDataPointDisp = dispinterface
    ['{0E01E5FB-E0A4-4CF3-B1EE-449897671537}']
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IAlternativePathSearchBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {34D6391A-333D-4BA1-8525-A366403C2724}
// *********************************************************************//
  IAlternativePathSearchBase = interface(IObjectBase)
    ['{34D6391A-333D-4BA1-8525-A366403C2724}']
    function Get_ToZone: IZone; safecall;
    function Get_FromZone: IZone; safecall;
    function Get_DynAssign: IDynamicAssignment; safecall;
    property ToZone: IZone read Get_ToZone;
    property FromZone: IZone read Get_FromZone;
    property DynAssign: IDynamicAssignment read Get_DynAssign;
  end;

// *********************************************************************//
// DispIntf:  IAlternativePathSearchBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {34D6391A-333D-4BA1-8525-A366403C2724}
// *********************************************************************//
  IAlternativePathSearchBaseDisp = dispinterface
    ['{34D6391A-333D-4BA1-8525-A366403C2724}']
    property ToZone: IZone readonly dispid 1610809344;
    property FromZone: IZone readonly dispid 1610809345;
    property DynAssign: IDynamicAssignment readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IAlternativePathSearch
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9A9906F6-4C89-426E-B4F5-C04AF60DAB1D}
// *********************************************************************//
  IAlternativePathSearch = interface(IAlternativePathSearchBase)
    ['{9A9906F6-4C89-426E-B4F5-C04AF60DAB1D}']
  end;

// *********************************************************************//
// DispIntf:  IAlternativePathSearchDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9A9906F6-4C89-426E-B4F5-C04AF60DAB1D}
// *********************************************************************//
  IAlternativePathSearchDisp = dispinterface
    ['{9A9906F6-4C89-426E-B4F5-C04AF60DAB1D}']
    property ToZone: IZone readonly dispid 1610809344;
    property FromZone: IZone readonly dispid 1610809345;
    property DynAssign: IDynamicAssignment readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IAlternativePathSearchVehicleRoutingDecisionBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {04C24572-44F0-4921-B743-D856C2AC027D}
// *********************************************************************//
  IAlternativePathSearchVehicleRoutingDecisionBase = interface(IObjectBase)
    ['{04C24572-44F0-4921-B743-D856C2AC027D}']
    function Get_FromRoutDec: IVehicleRoutingDecisionDynamic; safecall;
    function Get_DynAssign: IDynamicAssignment; safecall;
    function Get_ToZone: IZone; safecall;
    property FromRoutDec: IVehicleRoutingDecisionDynamic read Get_FromRoutDec;
    property DynAssign: IDynamicAssignment read Get_DynAssign;
    property ToZone: IZone read Get_ToZone;
  end;

// *********************************************************************//
// DispIntf:  IAlternativePathSearchVehicleRoutingDecisionBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {04C24572-44F0-4921-B743-D856C2AC027D}
// *********************************************************************//
  IAlternativePathSearchVehicleRoutingDecisionBaseDisp = dispinterface
    ['{04C24572-44F0-4921-B743-D856C2AC027D}']
    property FromRoutDec: IVehicleRoutingDecisionDynamic readonly dispid 1610809344;
    property DynAssign: IDynamicAssignment readonly dispid 1610809345;
    property ToZone: IZone readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IAlternativePathSearchVehicleRoutingDecision
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BFC81654-ABF4-47E3-B3DA-CD97964D7E8E}
// *********************************************************************//
  IAlternativePathSearchVehicleRoutingDecision = interface(IAlternativePathSearchVehicleRoutingDecisionBase)
    ['{BFC81654-ABF4-47E3-B3DA-CD97964D7E8E}']
  end;

// *********************************************************************//
// DispIntf:  IAlternativePathSearchVehicleRoutingDecisionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BFC81654-ABF4-47E3-B3DA-CD97964D7E8E}
// *********************************************************************//
  IAlternativePathSearchVehicleRoutingDecisionDisp = dispinterface
    ['{BFC81654-ABF4-47E3-B3DA-CD97964D7E8E}']
    property FromRoutDec: IVehicleRoutingDecisionDynamic readonly dispid 1610809344;
    property DynAssign: IDynamicAssignment readonly dispid 1610809345;
    property ToZone: IZone readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IAttributeSelectionBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7417B15E-E773-49E2-AA1C-E0A70B7FB660}
// *********************************************************************//
  IAttributeSelectionBase = interface(IObjectBase)
    ['{7417B15E-E773-49E2-AA1C-E0A70B7FB660}']
  end;

// *********************************************************************//
// DispIntf:  IAttributeSelectionBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7417B15E-E773-49E2-AA1C-E0A70B7FB660}
// *********************************************************************//
  IAttributeSelectionBaseDisp = dispinterface
    ['{7417B15E-E773-49E2-AA1C-E0A70B7FB660}']
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IAttributeSelection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EDC3D526-CBB5-4B6E-9B91-2F98A204EE41}
// *********************************************************************//
  IAttributeSelection = interface(IAttributeSelectionBase)
    ['{EDC3D526-CBB5-4B6E-9B91-2F98A204EE41}']
  end;

// *********************************************************************//
// DispIntf:  IAttributeSelectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EDC3D526-CBB5-4B6E-9B91-2F98A204EE41}
// *********************************************************************//
  IAttributeSelectionDisp = dispinterface
    ['{EDC3D526-CBB5-4B6E-9B91-2F98A204EE41}']
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IBoardDelFuncDataPtBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C804FD2F-C814-4698-B083-6B135FD71849}
// *********************************************************************//
  IBoardDelFuncDataPtBase = interface(IObjectBase)
    ['{C804FD2F-C814-4698-B083-6B135FD71849}']
  end;

// *********************************************************************//
// DispIntf:  IBoardDelFuncDataPtBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C804FD2F-C814-4698-B083-6B135FD71849}
// *********************************************************************//
  IBoardDelFuncDataPtBaseDisp = dispinterface
    ['{C804FD2F-C814-4698-B083-6B135FD71849}']
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IBoardDelFuncDataPt
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1A22EDFB-4920-4D1D-A2E8-9096C28CFB44}
// *********************************************************************//
  IBoardDelFuncDataPt = interface(IBoardDelFuncDataPtBase)
    ['{1A22EDFB-4920-4D1D-A2E8-9096C28CFB44}']
  end;

// *********************************************************************//
// DispIntf:  IBoardDelFuncDataPtDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1A22EDFB-4920-4D1D-A2E8-9096C28CFB44}
// *********************************************************************//
  IBoardDelFuncDataPtDisp = dispinterface
    ['{1A22EDFB-4920-4D1D-A2E8-9096C28CFB44}']
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ICritSpeedFuncDataPtBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {37279276-18B9-428B-BA07-F30876D893BC}
// *********************************************************************//
  ICritSpeedFuncDataPtBase = interface(IObjectBase)
    ['{37279276-18B9-428B-BA07-F30876D893BC}']
  end;

// *********************************************************************//
// DispIntf:  ICritSpeedFuncDataPtBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {37279276-18B9-428B-BA07-F30876D893BC}
// *********************************************************************//
  ICritSpeedFuncDataPtBaseDisp = dispinterface
    ['{37279276-18B9-428B-BA07-F30876D893BC}']
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ICritSpeedFuncDataPt
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {46D55EAF-3755-4F0E-AE31-8A76C893933A}
// *********************************************************************//
  ICritSpeedFuncDataPt = interface(ICritSpeedFuncDataPtBase)
    ['{46D55EAF-3755-4F0E-AE31-8A76C893933A}']
  end;

// *********************************************************************//
// DispIntf:  ICritSpeedFuncDataPtDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {46D55EAF-3755-4F0E-AE31-8A76C893933A}
// *********************************************************************//
  ICritSpeedFuncDataPtDisp = dispinterface
    ['{46D55EAF-3755-4F0E-AE31-8A76C893933A}']
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IDecelerationFunctionDataPointBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AFDD8126-C114-4A96-ADFD-5B4F6635AFB5}
// *********************************************************************//
  IDecelerationFunctionDataPointBase = interface(IObjectBase)
    ['{AFDD8126-C114-4A96-ADFD-5B4F6635AFB5}']
  end;

// *********************************************************************//
// DispIntf:  IDecelerationFunctionDataPointBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AFDD8126-C114-4A96-ADFD-5B4F6635AFB5}
// *********************************************************************//
  IDecelerationFunctionDataPointBaseDisp = dispinterface
    ['{AFDD8126-C114-4A96-ADFD-5B4F6635AFB5}']
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IDecelerationFunctionDataPoint
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7F7E6D8C-5967-40B8-AB1A-1E1A957EF106}
// *********************************************************************//
  IDecelerationFunctionDataPoint = interface(IDecelerationFunctionDataPointBase)
    ['{7F7E6D8C-5967-40B8-AB1A-1E1A957EF106}']
  end;

// *********************************************************************//
// DispIntf:  IDecelerationFunctionDataPointDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7F7E6D8C-5967-40B8-AB1A-1E1A957EF106}
// *********************************************************************//
  IDecelerationFunctionDataPointDisp = dispinterface
    ['{7F7E6D8C-5967-40B8-AB1A-1E1A957EF106}']
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IDistributionDataPointBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {83C2DB13-C37A-47DA-89DB-C9169D939BEF}
// *********************************************************************//
  IDistributionDataPointBase = interface(IObjectBase)
    ['{83C2DB13-C37A-47DA-89DB-C9169D939BEF}']
  end;

// *********************************************************************//
// DispIntf:  IDistributionDataPointBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {83C2DB13-C37A-47DA-89DB-C9169D939BEF}
// *********************************************************************//
  IDistributionDataPointBaseDisp = dispinterface
    ['{83C2DB13-C37A-47DA-89DB-C9169D939BEF}']
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IDistributionDataPoint
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4F9CEAA8-283B-4863-8751-345F78B55DDA}
// *********************************************************************//
  IDistributionDataPoint = interface(IDistributionDataPointBase)
    ['{4F9CEAA8-283B-4863-8751-345F78B55DDA}']
  end;

// *********************************************************************//
// DispIntf:  IDistributionDataPointDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4F9CEAA8-283B-4863-8751-345F78B55DDA}
// *********************************************************************//
  IDistributionDataPointDisp = dispinterface
    ['{4F9CEAA8-283B-4863-8751-345F78B55DDA}']
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IDoorBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {24C893D9-4434-40D9-948E-57D82AAE6CC1}
// *********************************************************************//
  IDoorBase = interface(IObjectBase)
    ['{24C893D9-4434-40D9-948E-57D82AAE6CC1}']
    function Get_Model2D3DSeg: IModel2D3DSegment; safecall;
    function Get_BoardDelType: IBoardDelType; safecall;
    property Model2D3DSeg: IModel2D3DSegment read Get_Model2D3DSeg;
    property BoardDelType: IBoardDelType read Get_BoardDelType;
  end;

// *********************************************************************//
// DispIntf:  IDoorBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {24C893D9-4434-40D9-948E-57D82AAE6CC1}
// *********************************************************************//
  IDoorBaseDisp = dispinterface
    ['{24C893D9-4434-40D9-948E-57D82AAE6CC1}']
    property Model2D3DSeg: IModel2D3DSegment readonly dispid 1610809344;
    property BoardDelType: IBoardDelType readonly dispid 1610809345;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IDoor
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9B6B12F9-3F11-4E24-9BB4-E223D2CC6F86}
// *********************************************************************//
  IDoor = interface(IDoorBase)
    ['{9B6B12F9-3F11-4E24-9BB4-E223D2CC6F86}']
  end;

// *********************************************************************//
// DispIntf:  IDoorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9B6B12F9-3F11-4E24-9BB4-E223D2CC6F86}
// *********************************************************************//
  IDoorDisp = dispinterface
    ['{9B6B12F9-3F11-4E24-9BB4-E223D2CC6F86}']
    property Model2D3DSeg: IModel2D3DSegment readonly dispid 1610809344;
    property BoardDelType: IBoardDelType readonly dispid 1610809345;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IDrivBehavVehClassSpeedMisestDistrBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {80783263-1B70-41B1-AC5B-781BEC586E74}
// *********************************************************************//
  IDrivBehavVehClassSpeedMisestDistrBase = interface(IObjectBase)
    ['{80783263-1B70-41B1-AC5B-781BEC586E74}']
    function Get_VehClass: IVehicleClass; safecall;
    function Get_SpeedMisestDistrClass: IFreeDistribution; safecall;
    function Get_DrivBehav: IDrivingBehavior; safecall;
    property VehClass: IVehicleClass read Get_VehClass;
    property SpeedMisestDistrClass: IFreeDistribution read Get_SpeedMisestDistrClass;
    property DrivBehav: IDrivingBehavior read Get_DrivBehav;
  end;

// *********************************************************************//
// DispIntf:  IDrivBehavVehClassSpeedMisestDistrBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {80783263-1B70-41B1-AC5B-781BEC586E74}
// *********************************************************************//
  IDrivBehavVehClassSpeedMisestDistrBaseDisp = dispinterface
    ['{80783263-1B70-41B1-AC5B-781BEC586E74}']
    property VehClass: IVehicleClass readonly dispid 1610809344;
    property SpeedMisestDistrClass: IFreeDistribution readonly dispid 1610809345;
    property DrivBehav: IDrivingBehavior readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IDrivBehavVehClassSpeedMisestDistr
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D91A5118-BB9A-4936-AEF5-652971231414}
// *********************************************************************//
  IDrivBehavVehClassSpeedMisestDistr = interface(IDrivBehavVehClassSpeedMisestDistrBase)
    ['{D91A5118-BB9A-4936-AEF5-652971231414}']
  end;

// *********************************************************************//
// DispIntf:  IDrivBehavVehClassSpeedMisestDistrDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D91A5118-BB9A-4936-AEF5-652971231414}
// *********************************************************************//
  IDrivBehavVehClassSpeedMisestDistrDisp = dispinterface
    ['{D91A5118-BB9A-4936-AEF5-652971231414}']
    property VehClass: IVehicleClass readonly dispid 1610809344;
    property SpeedMisestDistrClass: IFreeDistribution readonly dispid 1610809345;
    property DrivBehav: IDrivingBehavior readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IDurationDistributionDataPointBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7B917B19-CB3F-4296-AEA4-0F4D7BE81103}
// *********************************************************************//
  IDurationDistributionDataPointBase = interface(IObjectBase)
    ['{7B917B19-CB3F-4296-AEA4-0F4D7BE81103}']
  end;

// *********************************************************************//
// DispIntf:  IDurationDistributionDataPointBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7B917B19-CB3F-4296-AEA4-0F4D7BE81103}
// *********************************************************************//
  IDurationDistributionDataPointBaseDisp = dispinterface
    ['{7B917B19-CB3F-4296-AEA4-0F4D7BE81103}']
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IDurationDistributionDataPoint
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E7BD3703-8B35-4ED9-8CD3-53621E92B178}
// *********************************************************************//
  IDurationDistributionDataPoint = interface(IDurationDistributionDataPointBase)
    ['{E7BD3703-8B35-4ED9-8CD3-53621E92B178}']
  end;

// *********************************************************************//
// DispIntf:  IDurationDistributionDataPointDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E7BD3703-8B35-4ED9-8CD3-53621E92B178}
// *********************************************************************//
  IDurationDistributionDataPointDisp = dispinterface
    ['{E7BD3703-8B35-4ED9-8CD3-53621E92B178}']
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IFDSMeshBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F84DEF5C-3B6C-436A-828C-137570AEC106}
// *********************************************************************//
  IFDSMeshBase = interface(IObjectBase)
    ['{F84DEF5C-3B6C-436A-828C-137570AEC106}']
    function Get_FireEvent: IFireEvent; safecall;
    function Get_Plot3DFilesTimestep: IPlot3DFileTimestepContainer; safecall;
    property FireEvent: IFireEvent read Get_FireEvent;
    property Plot3DFilesTimestep: IPlot3DFileTimestepContainer read Get_Plot3DFilesTimestep;
  end;

// *********************************************************************//
// DispIntf:  IFDSMeshBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F84DEF5C-3B6C-436A-828C-137570AEC106}
// *********************************************************************//
  IFDSMeshBaseDisp = dispinterface
    ['{F84DEF5C-3B6C-436A-828C-137570AEC106}']
    property FireEvent: IFireEvent readonly dispid 1610809344;
    property Plot3DFilesTimestep: IPlot3DFileTimestepContainer readonly dispid 1610809345;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPlot3DFileTimestepCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F102D061-D77F-406B-ADD9-1615CF989A9C}
// *********************************************************************//
  IPlot3DFileTimestepCollection = interface(ICollectionBase)
    ['{F102D061-D77F-406B-ADD9-1615CF989A9C}']
  end;

// *********************************************************************//
// DispIntf:  IPlot3DFileTimestepCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F102D061-D77F-406B-ADD9-1615CF989A9C}
// *********************************************************************//
  IPlot3DFileTimestepCollectionDisp = dispinterface
    ['{F102D061-D77F-406B-ADD9-1615CF989A9C}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPlot3DFileTimestepContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {18098AA9-A79A-404E-BFDD-A393B813CA9C}
// *********************************************************************//
  IPlot3DFileTimestepContainerBase = interface(IPlot3DFileTimestepCollection)
    ['{18098AA9-A79A-404E-BFDD-A393B813CA9C}']
  end;

// *********************************************************************//
// DispIntf:  IPlot3DFileTimestepContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {18098AA9-A79A-404E-BFDD-A393B813CA9C}
// *********************************************************************//
  IPlot3DFileTimestepContainerBaseDisp = dispinterface
    ['{18098AA9-A79A-404E-BFDD-A393B813CA9C}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IPlot3DFileTimestepContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {49005B6E-0E8D-4474-BA0F-A86213CAF1B0}
// *********************************************************************//
  IPlot3DFileTimestepContainer = interface(IPlot3DFileTimestepContainerBase)
    ['{49005B6E-0E8D-4474-BA0F-A86213CAF1B0}']
  end;

// *********************************************************************//
// DispIntf:  IPlot3DFileTimestepContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {49005B6E-0E8D-4474-BA0F-A86213CAF1B0}
// *********************************************************************//
  IPlot3DFileTimestepContainerDisp = dispinterface
    ['{49005B6E-0E8D-4474-BA0F-A86213CAF1B0}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IFDSMesh
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B1B8DAFB-A997-44D9-B532-498CC81B37A2}
// *********************************************************************//
  IFDSMesh = interface(IFDSMeshBase)
    ['{B1B8DAFB-A997-44D9-B532-498CC81B37A2}']
  end;

// *********************************************************************//
// DispIntf:  IFDSMeshDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B1B8DAFB-A997-44D9-B532-498CC81B37A2}
// *********************************************************************//
  IFDSMeshDisp = dispinterface
    ['{B1B8DAFB-A997-44D9-B532-498CC81B37A2}']
    property FireEvent: IFireEvent readonly dispid 1610809344;
    property Plot3DFilesTimestep: IPlot3DFileTimestepContainer readonly dispid 1610809345;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ILatDriftSpeedFuncDataPtBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5CA37D23-B376-43C8-AA7E-10B104054B88}
// *********************************************************************//
  ILatDriftSpeedFuncDataPtBase = interface(IObjectBase)
    ['{5CA37D23-B376-43C8-AA7E-10B104054B88}']
  end;

// *********************************************************************//
// DispIntf:  ILatDriftSpeedFuncDataPtBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5CA37D23-B376-43C8-AA7E-10B104054B88}
// *********************************************************************//
  ILatDriftSpeedFuncDataPtBaseDisp = dispinterface
    ['{5CA37D23-B376-43C8-AA7E-10B104054B88}']
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ILatDriftSpeedFuncDataPt
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CEF308AA-2383-4B37-8A9D-D3CC22316739}
// *********************************************************************//
  ILatDriftSpeedFuncDataPt = interface(ILatDriftSpeedFuncDataPtBase)
    ['{CEF308AA-2383-4B37-8A9D-D3CC22316739}']
  end;

// *********************************************************************//
// DispIntf:  ILatDriftSpeedFuncDataPtDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CEF308AA-2383-4B37-8A9D-D3CC22316739}
// *********************************************************************//
  ILatDriftSpeedFuncDataPtDisp = dispinterface
    ['{CEF308AA-2383-4B37-8A9D-D3CC22316739}']
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ILegOrientationBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A1FDA2BB-BA0B-4EBC-B271-A8827F1F1537}
// *********************************************************************//
  ILegOrientationBase = interface(IObjectBase)
    ['{A1FDA2BB-BA0B-4EBC-B271-A8827F1F1537}']
    function Get_Neighbor: INode; safecall;
    property Neighbor: INode read Get_Neighbor;
  end;

// *********************************************************************//
// DispIntf:  ILegOrientationBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A1FDA2BB-BA0B-4EBC-B271-A8827F1F1537}
// *********************************************************************//
  ILegOrientationBaseDisp = dispinterface
    ['{A1FDA2BB-BA0B-4EBC-B271-A8827F1F1537}']
    property Neighbor: INode readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ILegOrientation
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {25DBAFF5-DA5A-4E29-AD4A-B249A8E9EBE9}
// *********************************************************************//
  ILegOrientation = interface(ILegOrientationBase)
    ['{25DBAFF5-DA5A-4E29-AD4A-B249A8E9EBE9}']
  end;

// *********************************************************************//
// DispIntf:  ILegOrientationDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {25DBAFF5-DA5A-4E29-AD4A-B249A8E9EBE9}
// *********************************************************************//
  ILegOrientationDisp = dispinterface
    ['{25DBAFF5-DA5A-4E29-AD4A-B249A8E9EBE9}']
    property Neighbor: INode readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ILinkLnChgDistDistrAttrElementBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {13C506AD-F4AB-4E20-B754-28274813F7D8}
// *********************************************************************//
  ILinkLnChgDistDistrAttrElementBase = interface(IObjectBase)
    ['{13C506AD-F4AB-4E20-B754-28274813F7D8}']
    function Get_VehClass: IVehicleClass; safecall;
    function Get_LnChgDistDistr: IDistanceDistribution; safecall;
    function Get_Link: ILink; safecall;
    property VehClass: IVehicleClass read Get_VehClass;
    property LnChgDistDistr: IDistanceDistribution read Get_LnChgDistDistr;
    property Link: ILink read Get_Link;
  end;

// *********************************************************************//
// DispIntf:  ILinkLnChgDistDistrAttrElementBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {13C506AD-F4AB-4E20-B754-28274813F7D8}
// *********************************************************************//
  ILinkLnChgDistDistrAttrElementBaseDisp = dispinterface
    ['{13C506AD-F4AB-4E20-B754-28274813F7D8}']
    property VehClass: IVehicleClass readonly dispid 1610809344;
    property LnChgDistDistr: IDistanceDistribution readonly dispid 1610809345;
    property Link: ILink readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ILinkLnChgDistDistrAttrElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D9573466-F184-4BAD-8F56-410BBEE67EC3}
// *********************************************************************//
  ILinkLnChgDistDistrAttrElement = interface(ILinkLnChgDistDistrAttrElementBase)
    ['{D9573466-F184-4BAD-8F56-410BBEE67EC3}']
  end;

// *********************************************************************//
// DispIntf:  ILinkLnChgDistDistrAttrElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D9573466-F184-4BAD-8F56-410BBEE67EC3}
// *********************************************************************//
  ILinkLnChgDistDistrAttrElementDisp = dispinterface
    ['{D9573466-F184-4BAD-8F56-410BBEE67EC3}']
    property VehClass: IVehicleClass readonly dispid 1610809344;
    property LnChgDistDistr: IDistanceDistribution readonly dispid 1610809345;
    property Link: ILink readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ILinkPolyPointBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {923CF1A3-BE1F-485B-84ED-F0E4A5758CFD}
// *********************************************************************//
  ILinkPolyPointBase = interface(IObjectBase)
    ['{923CF1A3-BE1F-485B-84ED-F0E4A5758CFD}']
  end;

// *********************************************************************//
// DispIntf:  ILinkPolyPointBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {923CF1A3-BE1F-485B-84ED-F0E4A5758CFD}
// *********************************************************************//
  ILinkPolyPointBaseDisp = dispinterface
    ['{923CF1A3-BE1F-485B-84ED-F0E4A5758CFD}']
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ILinkPolyPoint
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {63FE0528-FA8C-40F0-941A-82C6F4486A46}
// *********************************************************************//
  ILinkPolyPoint = interface(ILinkPolyPointBase)
    ['{63FE0528-FA8C-40F0-941A-82C6F4486A46}']
  end;

// *********************************************************************//
// DispIntf:  ILinkPolyPointDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {63FE0528-FA8C-40F0-941A-82C6F4486A46}
// *********************************************************************//
  ILinkPolyPointDisp = dispinterface
    ['{63FE0528-FA8C-40F0-941A-82C6F4486A46}']
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ILinkSegmentBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {884873AD-A2A5-4256-A34C-47418084C549}
// *********************************************************************//
  ILinkSegmentBase = interface(IObjectBase)
    ['{884873AD-A2A5-4256-A34C-47418084C549}']
    function Get_Link: ILink; safecall;
    function Get_Node: INode; safecall;
    property Link: ILink read Get_Link;
    property Node: INode read Get_Node;
  end;

// *********************************************************************//
// DispIntf:  ILinkSegmentBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {884873AD-A2A5-4256-A34C-47418084C549}
// *********************************************************************//
  ILinkSegmentBaseDisp = dispinterface
    ['{884873AD-A2A5-4256-A34C-47418084C549}']
    property Link: ILink readonly dispid 1610809344;
    property Node: INode readonly dispid 1610809345;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ILinkSegment
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8D4D095B-472D-4432-B63E-9A7CCE813161}
// *********************************************************************//
  ILinkSegment = interface(ILinkSegmentBase)
    ['{8D4D095B-472D-4432-B63E-9A7CCE813161}']
  end;

// *********************************************************************//
// DispIntf:  ILinkSegmentDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8D4D095B-472D-4432-B63E-9A7CCE813161}
// *********************************************************************//
  ILinkSegmentDisp = dispinterface
    ['{8D4D095B-472D-4432-B63E-9A7CCE813161}']
    property Link: ILink readonly dispid 1610809344;
    property Node: INode readonly dispid 1610809345;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IMesoTurnBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {601598C8-759B-4D29-A88E-39073CBCEFB2}
// *********************************************************************//
  IMesoTurnBase = interface(IObjectBase)
    ['{601598C8-759B-4D29-A88E-39073CBCEFB2}']
    function Get_Node: INode; safecall;
    function Get_FromLink: ILink; safecall;
    function Get_ToLink: ILink; safecall;
    function Get_LinkSeq: ILinkCollection; safecall;
    function Get_MesoNode: IMesoNode; safecall;
    function Get_MesoEdge: IMesoEdge; safecall;
    function Get_DefLinks: ILinkCollection; safecall;
    property Node: INode read Get_Node;
    property FromLink: ILink read Get_FromLink;
    property ToLink: ILink read Get_ToLink;
    property LinkSeq: ILinkCollection read Get_LinkSeq;
    property MesoNode: IMesoNode read Get_MesoNode;
    property MesoEdge: IMesoEdge read Get_MesoEdge;
    property DefLinks: ILinkCollection read Get_DefLinks;
  end;

// *********************************************************************//
// DispIntf:  IMesoTurnBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {601598C8-759B-4D29-A88E-39073CBCEFB2}
// *********************************************************************//
  IMesoTurnBaseDisp = dispinterface
    ['{601598C8-759B-4D29-A88E-39073CBCEFB2}']
    property Node: INode readonly dispid 1610809344;
    property FromLink: ILink readonly dispid 1610809345;
    property ToLink: ILink readonly dispid 1610809346;
    property LinkSeq: ILinkCollection readonly dispid 1610809347;
    property MesoNode: IMesoNode readonly dispid 1610809348;
    property MesoEdge: IMesoEdge readonly dispid 1610809349;
    property DefLinks: ILinkCollection readonly dispid 1610809350;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IMesoTurn
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D504E95A-01B0-4061-BB77-5451386C222C}
// *********************************************************************//
  IMesoTurn = interface(IMesoTurnBase)
    ['{D504E95A-01B0-4061-BB77-5451386C222C}']
  end;

// *********************************************************************//
// DispIntf:  IMesoTurnDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D504E95A-01B0-4061-BB77-5451386C222C}
// *********************************************************************//
  IMesoTurnDisp = dispinterface
    ['{D504E95A-01B0-4061-BB77-5451386C222C}']
    property Node: INode readonly dispid 1610809344;
    property FromLink: ILink readonly dispid 1610809345;
    property ToLink: ILink readonly dispid 1610809346;
    property LinkSeq: ILinkCollection readonly dispid 1610809347;
    property MesoNode: IMesoNode readonly dispid 1610809348;
    property MesoEdge: IMesoEdge readonly dispid 1610809349;
    property DefLinks: ILinkCollection readonly dispid 1610809350;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IMesoTurnConflictBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1B07F81A-C74C-47E6-88CB-39B2F41AE156}
// *********************************************************************//
  IMesoTurnConflictBase = interface(IObjectBase)
    ['{1B07F81A-C74C-47E6-88CB-39B2F41AE156}']
    function Get_Node: INode; safecall;
    function Get_FromLink1: ILink; safecall;
    function Get_ToLink1: ILink; safecall;
    function Get_LinkSeq1: ILinkCollection; safecall;
    function Get_FromLink2: ILink; safecall;
    function Get_ToLink2: ILink; safecall;
    function Get_LinkSeq2: ILinkCollection; safecall;
    function Get_ConflictAreas: IConflictAreaCollection; safecall;
    function Get_MesoNode: IMesoNode; safecall;
    function Get_MesoTurn1: IMesoTurn; safecall;
    function Get_MesoTurn2: IMesoTurn; safecall;
    function Get_TurnMesoEdge1: IMesoEdge; safecall;
    function Get_TurnMesoEdge2: IMesoEdge; safecall;
    property Node: INode read Get_Node;
    property FromLink1: ILink read Get_FromLink1;
    property ToLink1: ILink read Get_ToLink1;
    property LinkSeq1: ILinkCollection read Get_LinkSeq1;
    property FromLink2: ILink read Get_FromLink2;
    property ToLink2: ILink read Get_ToLink2;
    property LinkSeq2: ILinkCollection read Get_LinkSeq2;
    property ConflictAreas: IConflictAreaCollection read Get_ConflictAreas;
    property MesoNode: IMesoNode read Get_MesoNode;
    property MesoTurn1: IMesoTurn read Get_MesoTurn1;
    property MesoTurn2: IMesoTurn read Get_MesoTurn2;
    property TurnMesoEdge1: IMesoEdge read Get_TurnMesoEdge1;
    property TurnMesoEdge2: IMesoEdge read Get_TurnMesoEdge2;
  end;

// *********************************************************************//
// DispIntf:  IMesoTurnConflictBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1B07F81A-C74C-47E6-88CB-39B2F41AE156}
// *********************************************************************//
  IMesoTurnConflictBaseDisp = dispinterface
    ['{1B07F81A-C74C-47E6-88CB-39B2F41AE156}']
    property Node: INode readonly dispid 1610809344;
    property FromLink1: ILink readonly dispid 1610809345;
    property ToLink1: ILink readonly dispid 1610809346;
    property LinkSeq1: ILinkCollection readonly dispid 1610809347;
    property FromLink2: ILink readonly dispid 1610809348;
    property ToLink2: ILink readonly dispid 1610809349;
    property LinkSeq2: ILinkCollection readonly dispid 1610809350;
    property ConflictAreas: IConflictAreaCollection readonly dispid 1610809351;
    property MesoNode: IMesoNode readonly dispid 1610809352;
    property MesoTurn1: IMesoTurn readonly dispid 1610809353;
    property MesoTurn2: IMesoTurn readonly dispid 1610809354;
    property TurnMesoEdge1: IMesoEdge readonly dispid 1610809355;
    property TurnMesoEdge2: IMesoEdge readonly dispid 1610809356;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IMesoTurnConflict
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BEDAE47F-8D4B-47AD-9981-1ADE4A2A74D4}
// *********************************************************************//
  IMesoTurnConflict = interface(IMesoTurnConflictBase)
    ['{BEDAE47F-8D4B-47AD-9981-1ADE4A2A74D4}']
  end;

// *********************************************************************//
// DispIntf:  IMesoTurnConflictDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BEDAE47F-8D4B-47AD-9981-1ADE4A2A74D4}
// *********************************************************************//
  IMesoTurnConflictDisp = dispinterface
    ['{BEDAE47F-8D4B-47AD-9981-1ADE4A2A74D4}']
    property Node: INode readonly dispid 1610809344;
    property FromLink1: ILink readonly dispid 1610809345;
    property ToLink1: ILink readonly dispid 1610809346;
    property LinkSeq1: ILinkCollection readonly dispid 1610809347;
    property FromLink2: ILink readonly dispid 1610809348;
    property ToLink2: ILink readonly dispid 1610809349;
    property LinkSeq2: ILinkCollection readonly dispid 1610809350;
    property ConflictAreas: IConflictAreaCollection readonly dispid 1610809351;
    property MesoNode: IMesoNode readonly dispid 1610809352;
    property MesoTurn1: IMesoTurn readonly dispid 1610809353;
    property MesoTurn2: IMesoTurn readonly dispid 1610809354;
    property TurnMesoEdge1: IMesoEdge readonly dispid 1610809355;
    property TurnMesoEdge2: IMesoEdge readonly dispid 1610809356;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPTLineStopBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F8BFC31C-0824-4794-93E1-A8BCF0696E9B}
// *********************************************************************//
  IPTLineStopBase = interface(IObjectBase)
    ['{F8BFC31C-0824-4794-93E1-A8BCF0696E9B}']
    function Get_PTLine: IPTLine; safecall;
    function Get_PTStop: IPTStop; safecall;
    function Get_AlightComp: IPedestrianComposition; safecall;
    function Get_DwellTmDistr: ITimeDistribution; safecall;
    function Get_AlightLoc: ILocationDistribution; safecall;
    property PTLine: IPTLine read Get_PTLine;
    property PTStop: IPTStop read Get_PTStop;
    property AlightComp: IPedestrianComposition read Get_AlightComp;
    property DwellTmDistr: ITimeDistribution read Get_DwellTmDistr;
    property AlightLoc: ILocationDistribution read Get_AlightLoc;
  end;

// *********************************************************************//
// DispIntf:  IPTLineStopBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F8BFC31C-0824-4794-93E1-A8BCF0696E9B}
// *********************************************************************//
  IPTLineStopBaseDisp = dispinterface
    ['{F8BFC31C-0824-4794-93E1-A8BCF0696E9B}']
    property PTLine: IPTLine readonly dispid 1610809344;
    property PTStop: IPTStop readonly dispid 1610809345;
    property AlightComp: IPedestrianComposition readonly dispid 1610809346;
    property DwellTmDistr: ITimeDistribution readonly dispid 1610809347;
    property AlightLoc: ILocationDistribution readonly dispid 1610809348;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPTLineStop
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A66288C5-E5C1-4650-A8DE-21B258358420}
// *********************************************************************//
  IPTLineStop = interface(IPTLineStopBase)
    ['{A66288C5-E5C1-4650-A8DE-21B258358420}']
  end;

// *********************************************************************//
// DispIntf:  IPTLineStopDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A66288C5-E5C1-4650-A8DE-21B258358420}
// *********************************************************************//
  IPTLineStopDisp = dispinterface
    ['{A66288C5-E5C1-4650-A8DE-21B258358420}']
    property PTLine: IPTLine readonly dispid 1610809344;
    property PTStop: IPTStop readonly dispid 1610809345;
    property AlightComp: IPedestrianComposition readonly dispid 1610809346;
    property DwellTmDistr: ITimeDistribution readonly dispid 1610809347;
    property AlightLoc: ILocationDistribution readonly dispid 1610809348;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IParkingLotSelectionParametersBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6C86A140-353D-423E-8502-4B003FD3BDDE}
// *********************************************************************//
  IParkingLotSelectionParametersBase = interface(IObjectBase)
    ['{6C86A140-353D-423E-8502-4B003FD3BDDE}']
  end;

// *********************************************************************//
// DispIntf:  IParkingLotSelectionParametersBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6C86A140-353D-423E-8502-4B003FD3BDDE}
// *********************************************************************//
  IParkingLotSelectionParametersBaseDisp = dispinterface
    ['{6C86A140-353D-423E-8502-4B003FD3BDDE}']
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IParkingLotSelectionParameters
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {88355199-2120-40EC-9455-5FF7D26DA342}
// *********************************************************************//
  IParkingLotSelectionParameters = interface(IParkingLotSelectionParametersBase)
    ['{88355199-2120-40EC-9455-5FF7D26DA342}']
  end;

// *********************************************************************//
// DispIntf:  IParkingLotSelectionParametersDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {88355199-2120-40EC-9455-5FF7D26DA342}
// *********************************************************************//
  IParkingLotSelectionParametersDisp = dispinterface
    ['{88355199-2120-40EC-9455-5FF7D26DA342}']
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPartialPTLineStopBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F8CB96F5-7D05-44CF-BB47-498A30A21F39}
// *********************************************************************//
  IPartialPTLineStopBase = interface(IObjectBase)
    ['{F8CB96F5-7D05-44CF-BB47-498A30A21F39}']
    function Get_PartPTRout: IVehicleRoutePartialPT; safecall;
    function Get_PTStop: IPTStop; safecall;
    function Get_AlightComp: IPedestrianComposition; safecall;
    function Get_DwellTmDistr: ITimeDistribution; safecall;
    function Get_AlightLoc: ILocationDistribution; safecall;
    property PartPTRout: IVehicleRoutePartialPT read Get_PartPTRout;
    property PTStop: IPTStop read Get_PTStop;
    property AlightComp: IPedestrianComposition read Get_AlightComp;
    property DwellTmDistr: ITimeDistribution read Get_DwellTmDistr;
    property AlightLoc: ILocationDistribution read Get_AlightLoc;
  end;

// *********************************************************************//
// DispIntf:  IPartialPTLineStopBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F8CB96F5-7D05-44CF-BB47-498A30A21F39}
// *********************************************************************//
  IPartialPTLineStopBaseDisp = dispinterface
    ['{F8CB96F5-7D05-44CF-BB47-498A30A21F39}']
    property PartPTRout: IVehicleRoutePartialPT readonly dispid 1610809344;
    property PTStop: IPTStop readonly dispid 1610809345;
    property AlightComp: IPedestrianComposition readonly dispid 1610809346;
    property DwellTmDistr: ITimeDistribution readonly dispid 1610809347;
    property AlightLoc: ILocationDistribution readonly dispid 1610809348;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPartialPTLineStop
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7F7DC8FB-0BB3-46B3-BD3B-1CA3DF3D61CB}
// *********************************************************************//
  IPartialPTLineStop = interface(IPartialPTLineStopBase)
    ['{7F7DC8FB-0BB3-46B3-BD3B-1CA3DF3D61CB}']
  end;

// *********************************************************************//
// DispIntf:  IPartialPTLineStopDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7F7DC8FB-0BB3-46B3-BD3B-1CA3DF3D61CB}
// *********************************************************************//
  IPartialPTLineStopDisp = dispinterface
    ['{7F7DC8FB-0BB3-46B3-BD3B-1CA3DF3D61CB}']
    property PartPTRout: IVehicleRoutePartialPT readonly dispid 1610809344;
    property PTStop: IPTStop readonly dispid 1610809345;
    property AlightComp: IPedestrianComposition readonly dispid 1610809346;
    property DwellTmDistr: ITimeDistribution readonly dispid 1610809347;
    property AlightLoc: ILocationDistribution readonly dispid 1610809348;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPedClassQueuingBehaviorBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A98E2F53-EF02-4BF8-B566-3787D6AC77E2}
// *********************************************************************//
  IPedClassQueuingBehaviorBase = interface(IObjectBase)
    ['{A98E2F53-EF02-4BF8-B566-3787D6AC77E2}']
    function Get_PedClass: IPedestrianClass; safecall;
    function Get_Area: IArea; safecall;
    property PedClass: IPedestrianClass read Get_PedClass;
    property Area: IArea read Get_Area;
  end;

// *********************************************************************//
// DispIntf:  IPedClassQueuingBehaviorBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A98E2F53-EF02-4BF8-B566-3787D6AC77E2}
// *********************************************************************//
  IPedClassQueuingBehaviorBaseDisp = dispinterface
    ['{A98E2F53-EF02-4BF8-B566-3787D6AC77E2}']
    property PedClass: IPedestrianClass readonly dispid 1610809344;
    property Area: IArea readonly dispid 1610809345;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPedClassQueuingBehavior
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {69077EF2-3C41-4936-94E5-CDA225F6B86C}
// *********************************************************************//
  IPedClassQueuingBehavior = interface(IPedClassQueuingBehaviorBase)
    ['{69077EF2-3C41-4936-94E5-CDA225F6B86C}']
  end;

// *********************************************************************//
// DispIntf:  IPedClassQueuingBehaviorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {69077EF2-3C41-4936-94E5-CDA225F6B86C}
// *********************************************************************//
  IPedClassQueuingBehaviorDisp = dispinterface
    ['{69077EF2-3C41-4936-94E5-CDA225F6B86C}']
    property PedClass: IPedestrianClass readonly dispid 1610809344;
    property Area: IArea readonly dispid 1610809345;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPedestrianRouteChoiceAreaBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {48BE4732-A226-4F78-93B0-BFBAE3E6E69D}
// *********************************************************************//
  IPedestrianRouteChoiceAreaBase = interface(IObjectBase)
    ['{48BE4732-A226-4F78-93B0-BFBAE3E6E69D}']
    function Get_Ramp: IRamp; safecall;
    function Get_Area: IArea; safecall;
    function Get_PedRoutPart: IPedestrianRoutePartial; safecall;
    property Ramp: IRamp read Get_Ramp;
    property Area: IArea read Get_Area;
    property PedRoutPart: IPedestrianRoutePartial read Get_PedRoutPart;
  end;

// *********************************************************************//
// DispIntf:  IPedestrianRouteChoiceAreaBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {48BE4732-A226-4F78-93B0-BFBAE3E6E69D}
// *********************************************************************//
  IPedestrianRouteChoiceAreaBaseDisp = dispinterface
    ['{48BE4732-A226-4F78-93B0-BFBAE3E6E69D}']
    property Ramp: IRamp readonly dispid 1610809344;
    property Area: IArea readonly dispid 1610809345;
    property PedRoutPart: IPedestrianRoutePartial readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPedestrianRouteChoiceArea
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F8F268B1-39F9-4C9F-B8CF-028E87373978}
// *********************************************************************//
  IPedestrianRouteChoiceArea = interface(IPedestrianRouteChoiceAreaBase)
    ['{F8F268B1-39F9-4C9F-B8CF-028E87373978}']
  end;

// *********************************************************************//
// DispIntf:  IPedestrianRouteChoiceAreaDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F8F268B1-39F9-4C9F-B8CF-028E87373978}
// *********************************************************************//
  IPedestrianRouteChoiceAreaDisp = dispinterface
    ['{F8F268B1-39F9-4C9F-B8CF-028E87373978}']
    property Ramp: IRamp readonly dispid 1610809344;
    property Area: IArea readonly dispid 1610809345;
    property PedRoutPart: IPedestrianRoutePartial readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPlot3DFileTimestepBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EBE62071-395C-4CBD-8378-630D37F9A3E0}
// *********************************************************************//
  IPlot3DFileTimestepBase = interface(IObjectBase)
    ['{EBE62071-395C-4CBD-8378-630D37F9A3E0}']
    function Get_FDSMesh: IFDSMesh; safecall;
    property FDSMesh: IFDSMesh read Get_FDSMesh;
  end;

// *********************************************************************//
// DispIntf:  IPlot3DFileTimestepBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EBE62071-395C-4CBD-8378-630D37F9A3E0}
// *********************************************************************//
  IPlot3DFileTimestepBaseDisp = dispinterface
    ['{EBE62071-395C-4CBD-8378-630D37F9A3E0}']
    property FDSMesh: IFDSMesh readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPlot3DFileTimestep
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FCF5F145-E38C-4ED1-9E40-9EB03D7A1C59}
// *********************************************************************//
  IPlot3DFileTimestep = interface(IPlot3DFileTimestepBase)
    ['{FCF5F145-E38C-4ED1-9E40-9EB03D7A1C59}']
  end;

// *********************************************************************//
// DispIntf:  IPlot3DFileTimestepDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FCF5F145-E38C-4ED1-9E40-9EB03D7A1C59}
// *********************************************************************//
  IPlot3DFileTimestepDisp = dispinterface
    ['{FCF5F145-E38C-4ED1-9E40-9EB03D7A1C59}']
    property FDSMesh: IFDSMesh readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPointBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EBB5FF27-37DB-4C0E-A2F4-D22C83C173EF}
// *********************************************************************//
  IPointBase = interface(IObjectBase)
    ['{EBB5FF27-37DB-4C0E-A2F4-D22C83C173EF}']
  end;

// *********************************************************************//
// DispIntf:  IPointBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EBB5FF27-37DB-4C0E-A2F4-D22C83C173EF}
// *********************************************************************//
  IPointBaseDisp = dispinterface
    ['{EBB5FF27-37DB-4C0E-A2F4-D22C83C173EF}']
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IPoint
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {25F40349-3833-41F5-9799-394197C8C9DA}
// *********************************************************************//
  IPoint = interface(IPointBase)
    ['{25F40349-3833-41F5-9799-394197C8C9DA}']
  end;

// *********************************************************************//
// DispIntf:  IPointDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {25F40349-3833-41F5-9799-394197C8C9DA}
// *********************************************************************//
  IPointDisp = dispinterface
    ['{25F40349-3833-41F5-9799-394197C8C9DA}']
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ISpeedDistributionDataPointBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8EE99A79-B1BA-420B-8531-A541C2062BFC}
// *********************************************************************//
  ISpeedDistributionDataPointBase = interface(IObjectBase)
    ['{8EE99A79-B1BA-420B-8531-A541C2062BFC}']
  end;

// *********************************************************************//
// DispIntf:  ISpeedDistributionDataPointBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8EE99A79-B1BA-420B-8531-A541C2062BFC}
// *********************************************************************//
  ISpeedDistributionDataPointBaseDisp = dispinterface
    ['{8EE99A79-B1BA-420B-8531-A541C2062BFC}']
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ISpeedDistributionDataPoint
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9FB82358-2CF1-487D-BD19-46C63C788A28}
// *********************************************************************//
  ISpeedDistributionDataPoint = interface(ISpeedDistributionDataPointBase)
    ['{9FB82358-2CF1-487D-BD19-46C63C788A28}']
  end;

// *********************************************************************//
// DispIntf:  ISpeedDistributionDataPointDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9FB82358-2CF1-487D-BD19-46C63C788A28}
// *********************************************************************//
  ISpeedDistributionDataPointDisp = dispinterface
    ['{9FB82358-2CF1-487D-BD19-46C63C788A28}']
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ITimeIntervalParkingRateBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8E8CE1AD-0B39-4D15-923E-3A1830AC97B5}
// *********************************************************************//
  ITimeIntervalParkingRateBase = interface(IObjectBase)
    ['{8E8CE1AD-0B39-4D15-923E-3A1830AC97B5}']
    function Get_TimeInt: ITimeInterval; safecall;
    function Get_ParkDur: ITimeDistribution; safecall;
    property TimeInt: ITimeInterval read Get_TimeInt;
    property ParkDur: ITimeDistribution read Get_ParkDur;
  end;

// *********************************************************************//
// DispIntf:  ITimeIntervalParkingRateBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8E8CE1AD-0B39-4D15-923E-3A1830AC97B5}
// *********************************************************************//
  ITimeIntervalParkingRateBaseDisp = dispinterface
    ['{8E8CE1AD-0B39-4D15-923E-3A1830AC97B5}']
    property TimeInt: ITimeInterval readonly dispid 1610809344;
    property ParkDur: ITimeDistribution readonly dispid 1610809345;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ITimeIntervalParkingRate
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {327967AA-AE70-4292-BC36-F67A8426BB34}
// *********************************************************************//
  ITimeIntervalParkingRate = interface(ITimeIntervalParkingRateBase)
    ['{327967AA-AE70-4292-BC36-F67A8426BB34}']
  end;

// *********************************************************************//
// DispIntf:  ITimeIntervalParkingRateDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {327967AA-AE70-4292-BC36-F67A8426BB34}
// *********************************************************************//
  ITimeIntervalParkingRateDisp = dispinterface
    ['{327967AA-AE70-4292-BC36-F67A8426BB34}']
    property TimeInt: ITimeInterval readonly dispid 1610809344;
    property ParkDur: ITimeDistribution readonly dispid 1610809345;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ITimeIntervalPedVolumeBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8FBC5A27-5354-48D1-A5AF-A056FDC45A0C}
// *********************************************************************//
  ITimeIntervalPedVolumeBase = interface(IObjectBase)
    ['{8FBC5A27-5354-48D1-A5AF-A056FDC45A0C}']
    function Get_TimeInt: ITimeInterval; safecall;
    function Get_PedComp: IPedestrianComposition; safecall;
    function Get_PedInp: IPedestrianInput; safecall;
    property TimeInt: ITimeInterval read Get_TimeInt;
    property PedComp: IPedestrianComposition read Get_PedComp;
    property PedInp: IPedestrianInput read Get_PedInp;
  end;

// *********************************************************************//
// DispIntf:  ITimeIntervalPedVolumeBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8FBC5A27-5354-48D1-A5AF-A056FDC45A0C}
// *********************************************************************//
  ITimeIntervalPedVolumeBaseDisp = dispinterface
    ['{8FBC5A27-5354-48D1-A5AF-A056FDC45A0C}']
    property TimeInt: ITimeInterval readonly dispid 1610809344;
    property PedComp: IPedestrianComposition readonly dispid 1610809345;
    property PedInp: IPedestrianInput readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ITimeIntervalPedVolume
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2C0D7881-D69D-4A81-A4CE-862F7A4773E5}
// *********************************************************************//
  ITimeIntervalPedVolume = interface(ITimeIntervalPedVolumeBase)
    ['{2C0D7881-D69D-4A81-A4CE-862F7A4773E5}']
  end;

// *********************************************************************//
// DispIntf:  ITimeIntervalPedVolumeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2C0D7881-D69D-4A81-A4CE-862F7A4773E5}
// *********************************************************************//
  ITimeIntervalPedVolumeDisp = dispinterface
    ['{2C0D7881-D69D-4A81-A4CE-862F7A4773E5}']
    property TimeInt: ITimeInterval readonly dispid 1610809344;
    property PedComp: IPedestrianComposition readonly dispid 1610809345;
    property PedInp: IPedestrianInput readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ITimeIntervalPricingModelBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0E2BB1B7-DB91-489D-AA07-85192E1FF172}
// *********************************************************************//
  ITimeIntervalPricingModelBase = interface(IObjectBase)
    ['{0E2BB1B7-DB91-489D-AA07-85192E1FF172}']
    function Get_TollPricModSOV: ITollPricingCalculationModel; safecall;
    function Get_TimeInt: ITimeInterval; safecall;
    function Get_ManagedLanesFacility: IManagedLanesFacility; safecall;
    function Get_TollPricModHOV2: ITollPricingCalculationModel; safecall;
    function Get_TollPricModHOV3Plus: ITollPricingCalculationModel; safecall;
    property TollPricModSOV: ITollPricingCalculationModel read Get_TollPricModSOV;
    property TimeInt: ITimeInterval read Get_TimeInt;
    property ManagedLanesFacility: IManagedLanesFacility read Get_ManagedLanesFacility;
    property TollPricModHOV2: ITollPricingCalculationModel read Get_TollPricModHOV2;
    property TollPricModHOV3Plus: ITollPricingCalculationModel read Get_TollPricModHOV3Plus;
  end;

// *********************************************************************//
// DispIntf:  ITimeIntervalPricingModelBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0E2BB1B7-DB91-489D-AA07-85192E1FF172}
// *********************************************************************//
  ITimeIntervalPricingModelBaseDisp = dispinterface
    ['{0E2BB1B7-DB91-489D-AA07-85192E1FF172}']
    property TollPricModSOV: ITollPricingCalculationModel readonly dispid 1610809344;
    property TimeInt: ITimeInterval readonly dispid 1610809345;
    property ManagedLanesFacility: IManagedLanesFacility readonly dispid 1610809346;
    property TollPricModHOV2: ITollPricingCalculationModel readonly dispid 1610809347;
    property TollPricModHOV3Plus: ITollPricingCalculationModel readonly dispid 1610809348;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ITimeIntervalPricingModel
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8C7D8FEB-5882-43C2-8BD6-C8A6A8B503D9}
// *********************************************************************//
  ITimeIntervalPricingModel = interface(ITimeIntervalPricingModelBase)
    ['{8C7D8FEB-5882-43C2-8BD6-C8A6A8B503D9}']
  end;

// *********************************************************************//
// DispIntf:  ITimeIntervalPricingModelDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8C7D8FEB-5882-43C2-8BD6-C8A6A8B503D9}
// *********************************************************************//
  ITimeIntervalPricingModelDisp = dispinterface
    ['{8C7D8FEB-5882-43C2-8BD6-C8A6A8B503D9}']
    property TollPricModSOV: ITollPricingCalculationModel readonly dispid 1610809344;
    property TimeInt: ITimeInterval readonly dispid 1610809345;
    property ManagedLanesFacility: IManagedLanesFacility readonly dispid 1610809346;
    property TollPricModHOV2: ITollPricingCalculationModel readonly dispid 1610809347;
    property TollPricModHOV3Plus: ITollPricingCalculationModel readonly dispid 1610809348;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ITimeIntervalVehVolumeBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4C38EE0B-79CA-40B9-A939-775CC2EEE4DE}
// *********************************************************************//
  ITimeIntervalVehVolumeBase = interface(IObjectBase)
    ['{4C38EE0B-79CA-40B9-A939-775CC2EEE4DE}']
    function Get_VehComp: IVehicleComposition; safecall;
    function Get_TimeInt: ITimeInterval; safecall;
    function Get_VehInp: IVehicleInput; safecall;
    property VehComp: IVehicleComposition read Get_VehComp;
    property TimeInt: ITimeInterval read Get_TimeInt;
    property VehInp: IVehicleInput read Get_VehInp;
  end;

// *********************************************************************//
// DispIntf:  ITimeIntervalVehVolumeBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4C38EE0B-79CA-40B9-A939-775CC2EEE4DE}
// *********************************************************************//
  ITimeIntervalVehVolumeBaseDisp = dispinterface
    ['{4C38EE0B-79CA-40B9-A939-775CC2EEE4DE}']
    property VehComp: IVehicleComposition readonly dispid 1610809344;
    property TimeInt: ITimeInterval readonly dispid 1610809345;
    property VehInp: IVehicleInput readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ITimeIntervalVehVolume
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {408F3930-1801-4014-8A15-8C32E71B7191}
// *********************************************************************//
  ITimeIntervalVehVolume = interface(ITimeIntervalVehVolumeBase)
    ['{408F3930-1801-4014-8A15-8C32E71B7191}']
  end;

// *********************************************************************//
// DispIntf:  ITimeIntervalVehVolumeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {408F3930-1801-4014-8A15-8C32E71B7191}
// *********************************************************************//
  ITimeIntervalVehVolumeDisp = dispinterface
    ['{408F3930-1801-4014-8A15-8C32E71B7191}']
    property VehComp: IVehicleComposition readonly dispid 1610809344;
    property TimeInt: ITimeInterval readonly dispid 1610809345;
    property VehInp: IVehicleInput readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ITollPricingCalculationModelElementBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {39B8863A-5D8B-458D-8211-1504A31E3D1B}
// *********************************************************************//
  ITollPricingCalculationModelElementBase = interface(IObjectBase)
    ['{39B8863A-5D8B-458D-8211-1504A31E3D1B}']
    function Get_TollPricCalcMod: ITollPricingCalculationModel; safecall;
    property TollPricCalcMod: ITollPricingCalculationModel read Get_TollPricCalcMod;
  end;

// *********************************************************************//
// DispIntf:  ITollPricingCalculationModelElementBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {39B8863A-5D8B-458D-8211-1504A31E3D1B}
// *********************************************************************//
  ITollPricingCalculationModelElementBaseDisp = dispinterface
    ['{39B8863A-5D8B-458D-8211-1504A31E3D1B}']
    property TollPricCalcMod: ITollPricingCalculationModel readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: ITollPricingCalculationModelElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {13BDCDF3-01F6-47C7-BD28-D3C74A083477}
// *********************************************************************//
  ITollPricingCalculationModelElement = interface(ITollPricingCalculationModelElementBase)
    ['{13BDCDF3-01F6-47C7-BD28-D3C74A083477}']
  end;

// *********************************************************************//
// DispIntf:  ITollPricingCalculationModelElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {13BDCDF3-01F6-47C7-BD28-D3C74A083477}
// *********************************************************************//
  ITollPricingCalculationModelElementDisp = dispinterface
    ['{13BDCDF3-01F6-47C7-BD28-D3C74A083477}']
    property TollPricCalcMod: ITollPricingCalculationModel readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehClassDecisionModelBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FEAF9FEF-8830-4C6A-BD20-E291560751B1}
// *********************************************************************//
  IVehClassDecisionModelBase = interface(IObjectBase)
    ['{FEAF9FEF-8830-4C6A-BD20-E291560751B1}']
    function Get_VehClass: IVehicleClass; safecall;
    function Get_ManagedLanesFacility: IManagedLanesFacility; safecall;
    property VehClass: IVehicleClass read Get_VehClass;
    property ManagedLanesFacility: IManagedLanesFacility read Get_ManagedLanesFacility;
  end;

// *********************************************************************//
// DispIntf:  IVehClassDecisionModelBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FEAF9FEF-8830-4C6A-BD20-E291560751B1}
// *********************************************************************//
  IVehClassDecisionModelBaseDisp = dispinterface
    ['{FEAF9FEF-8830-4C6A-BD20-E291560751B1}']
    property VehClass: IVehicleClass readonly dispid 1610809344;
    property ManagedLanesFacility: IManagedLanesFacility readonly dispid 1610809345;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehClassDecisionModel
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EAE86500-EC22-4CBC-A0B3-D32586E144D8}
// *********************************************************************//
  IVehClassDecisionModel = interface(IVehClassDecisionModelBase)
    ['{EAE86500-EC22-4CBC-A0B3-D32586E144D8}']
  end;

// *********************************************************************//
// DispIntf:  IVehClassDecisionModelDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EAE86500-EC22-4CBC-A0B3-D32586E144D8}
// *********************************************************************//
  IVehClassDecisionModelDisp = dispinterface
    ['{EAE86500-EC22-4CBC-A0B3-D32586E144D8}']
    property VehClass: IVehicleClass readonly dispid 1610809344;
    property ManagedLanesFacility: IManagedLanesFacility readonly dispid 1610809345;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehClassDynAssignDesSpeedDistributionBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A716F2EB-9B9F-417D-80EC-CB16A46959FD}
// *********************************************************************//
  IVehClassDynAssignDesSpeedDistributionBase = interface(IObjectBase)
    ['{A716F2EB-9B9F-417D-80EC-CB16A46959FD}']
    function Get_VehClass: IVehicleClass; safecall;
    function Get_DesSpeedDistr: IDesSpeedDistribution; safecall;
    function Get_ParkLot: IParkingLot; safecall;
    property VehClass: IVehicleClass read Get_VehClass;
    property DesSpeedDistr: IDesSpeedDistribution read Get_DesSpeedDistr;
    property ParkLot: IParkingLot read Get_ParkLot;
  end;

// *********************************************************************//
// DispIntf:  IVehClassDynAssignDesSpeedDistributionBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A716F2EB-9B9F-417D-80EC-CB16A46959FD}
// *********************************************************************//
  IVehClassDynAssignDesSpeedDistributionBaseDisp = dispinterface
    ['{A716F2EB-9B9F-417D-80EC-CB16A46959FD}']
    property VehClass: IVehicleClass readonly dispid 1610809344;
    property DesSpeedDistr: IDesSpeedDistribution readonly dispid 1610809345;
    property ParkLot: IParkingLot readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehClassDynAssignDesSpeedDistribution
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0DF7D03E-E4D9-4C8E-8A56-726ABB658F7E}
// *********************************************************************//
  IVehClassDynAssignDesSpeedDistribution = interface(IVehClassDynAssignDesSpeedDistributionBase)
    ['{0DF7D03E-E4D9-4C8E-8A56-726ABB658F7E}']
  end;

// *********************************************************************//
// DispIntf:  IVehClassDynAssignDesSpeedDistributionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0DF7D03E-E4D9-4C8E-8A56-726ABB658F7E}
// *********************************************************************//
  IVehClassDynAssignDesSpeedDistributionDisp = dispinterface
    ['{0DF7D03E-E4D9-4C8E-8A56-726ABB658F7E}']
    property VehClass: IVehicleClass readonly dispid 1610809344;
    property DesSpeedDistr: IDesSpeedDistribution readonly dispid 1610809345;
    property ParkLot: IParkingLot readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehClassFollowingBehaviorBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {97EF4A23-31DB-4F40-AF9A-8D795B92E5ED}
// *********************************************************************//
  IVehClassFollowingBehaviorBase = interface(IObjectBase)
    ['{97EF4A23-31DB-4F40-AF9A-8D795B92E5ED}']
    function Get_DrivBehav: IDrivingBehavior; safecall;
    function Get_VehClass: IVehicleClass; safecall;
    function Get_W99cc1Distr: ITimeDistribution; safecall;
    property DrivBehav: IDrivingBehavior read Get_DrivBehav;
    property VehClass: IVehicleClass read Get_VehClass;
    property W99cc1Distr: ITimeDistribution read Get_W99cc1Distr;
  end;

// *********************************************************************//
// DispIntf:  IVehClassFollowingBehaviorBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {97EF4A23-31DB-4F40-AF9A-8D795B92E5ED}
// *********************************************************************//
  IVehClassFollowingBehaviorBaseDisp = dispinterface
    ['{97EF4A23-31DB-4F40-AF9A-8D795B92E5ED}']
    property DrivBehav: IDrivingBehavior readonly dispid 1610809344;
    property VehClass: IVehicleClass readonly dispid 1610809345;
    property W99cc1Distr: ITimeDistribution readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehClassFollowingBehavior
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {23D980F3-93BB-4D16-976F-807C3374E6D8}
// *********************************************************************//
  IVehClassFollowingBehavior = interface(IVehClassFollowingBehaviorBase)
    ['{23D980F3-93BB-4D16-976F-807C3374E6D8}']
  end;

// *********************************************************************//
// DispIntf:  IVehClassFollowingBehaviorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {23D980F3-93BB-4D16-976F-807C3374E6D8}
// *********************************************************************//
  IVehClassFollowingBehaviorDisp = dispinterface
    ['{23D980F3-93BB-4D16-976F-807C3374E6D8}']
    property DrivBehav: IDrivingBehavior readonly dispid 1610809344;
    property VehClass: IVehicleClass readonly dispid 1610809345;
    property W99cc1Distr: ITimeDistribution readonly dispid 1610809346;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehClassLateralBehaviorBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0CA37626-E5B0-430F-9728-C578CCDFCD8E}
// *********************************************************************//
  IVehClassLateralBehaviorBase = interface(IObjectBase)
    ['{0CA37626-E5B0-430F-9728-C578CCDFCD8E}']
    function Get_VehClass: IVehicleClass; safecall;
    function Get_DrivBehav: IDrivingBehavior; safecall;
    property VehClass: IVehicleClass read Get_VehClass;
    property DrivBehav: IDrivingBehavior read Get_DrivBehav;
  end;

// *********************************************************************//
// DispIntf:  IVehClassLateralBehaviorBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0CA37626-E5B0-430F-9728-C578CCDFCD8E}
// *********************************************************************//
  IVehClassLateralBehaviorBaseDisp = dispinterface
    ['{0CA37626-E5B0-430F-9728-C578CCDFCD8E}']
    property VehClass: IVehicleClass readonly dispid 1610809344;
    property DrivBehav: IDrivingBehavior readonly dispid 1610809345;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehClassLateralBehavior
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C2B1E542-B8E6-42FC-AE04-80C7DFD8AAAC}
// *********************************************************************//
  IVehClassLateralBehavior = interface(IVehClassLateralBehaviorBase)
    ['{C2B1E542-B8E6-42FC-AE04-80C7DFD8AAAC}']
  end;

// *********************************************************************//
// DispIntf:  IVehClassLateralBehaviorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C2B1E542-B8E6-42FC-AE04-80C7DFD8AAAC}
// *********************************************************************//
  IVehClassLateralBehaviorDisp = dispinterface
    ['{C2B1E542-B8E6-42FC-AE04-80C7DFD8AAAC}']
    property VehClass: IVehicleClass readonly dispid 1610809344;
    property DrivBehav: IDrivingBehavior readonly dispid 1610809345;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehCompositionInitialVolumeBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {76C8E988-B119-420D-BA27-A9B3FA33B24B}
// *********************************************************************//
  IVehCompositionInitialVolumeBase = interface(IObjectBase)
    ['{76C8E988-B119-420D-BA27-A9B3FA33B24B}']
    function Get_VehComp: IVehicleComposition; safecall;
    property VehComp: IVehicleComposition read Get_VehComp;
  end;

// *********************************************************************//
// DispIntf:  IVehCompositionInitialVolumeBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {76C8E988-B119-420D-BA27-A9B3FA33B24B}
// *********************************************************************//
  IVehCompositionInitialVolumeBaseDisp = dispinterface
    ['{76C8E988-B119-420D-BA27-A9B3FA33B24B}']
    property VehComp: IVehicleComposition readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehCompositionInitialVolume
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {27DA5B2D-7712-47BB-9F41-E3C3CA5F5562}
// *********************************************************************//
  IVehCompositionInitialVolume = interface(IVehCompositionInitialVolumeBase)
    ['{27DA5B2D-7712-47BB-9F41-E3C3CA5F5562}']
  end;

// *********************************************************************//
// DispIntf:  IVehCompositionInitialVolumeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {27DA5B2D-7712-47BB-9F41-E3C3CA5F5562}
// *********************************************************************//
  IVehCompositionInitialVolumeDisp = dispinterface
    ['{27DA5B2D-7712-47BB-9F41-E3C3CA5F5562}']
    property VehComp: IVehicleComposition readonly dispid 1610809344;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehVehClassSpeedMisestFactBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BDECF80D-A52E-4B86-B12C-E043C9B1E0CB}
// *********************************************************************//
  IVehVehClassSpeedMisestFactBase = interface(IObjectBase)
    ['{BDECF80D-A52E-4B86-B12C-E043C9B1E0CB}']
    function Get_VehClass: IVehicleClass; safecall;
    function Get_Veh: IVehicle; safecall;
    property VehClass: IVehicleClass read Get_VehClass;
    property Veh: IVehicle read Get_Veh;
  end;

// *********************************************************************//
// DispIntf:  IVehVehClassSpeedMisestFactBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BDECF80D-A52E-4B86-B12C-E043C9B1E0CB}
// *********************************************************************//
  IVehVehClassSpeedMisestFactBaseDisp = dispinterface
    ['{BDECF80D-A52E-4B86-B12C-E043C9B1E0CB}']
    property VehClass: IVehicleClass readonly dispid 1610809344;
    property Veh: IVehicle readonly dispid 1610809345;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IVehVehClassSpeedMisestFact
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8EEEE08F-5C11-4066-8FDE-CED3C65B0C94}
// *********************************************************************//
  IVehVehClassSpeedMisestFact = interface(IVehVehClassSpeedMisestFactBase)
    ['{8EEEE08F-5C11-4066-8FDE-CED3C65B0C94}']
  end;

// *********************************************************************//
// DispIntf:  IVehVehClassSpeedMisestFactDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8EEEE08F-5C11-4066-8FDE-CED3C65B0C94}
// *********************************************************************//
  IVehVehClassSpeedMisestFactDisp = dispinterface
    ['{8EEEE08F-5C11-4066-8FDE-CED3C65B0C94}']
    property VehClass: IVehicleClass readonly dispid 1610809344;
    property Veh: IVehicle readonly dispid 1610809345;
    property AttValue[const Attribut: WideString]: OleVariant dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IWTTValueFormatCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8523BB14-48A9-4E3F-9B85-EE05B992591C}
// *********************************************************************//
  IWTTValueFormatCollection = interface(ICollectionBase)
    ['{8523BB14-48A9-4E3F-9B85-EE05B992591C}']
  end;

// *********************************************************************//
// DispIntf:  IWTTValueFormatCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8523BB14-48A9-4E3F-9B85-EE05B992591C}
// *********************************************************************//
  IWTTValueFormatCollectionDisp = dispinterface
    ['{8523BB14-48A9-4E3F-9B85-EE05B992591C}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IWTTValueFormatContainerBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {64ABFCEF-9CFE-4438-B19E-2B31641DF69C}
// *********************************************************************//
  IWTTValueFormatContainerBase = interface(IWTTValueFormatCollection)
    ['{64ABFCEF-9CFE-4438-B19E-2B31641DF69C}']
  end;

// *********************************************************************//
// DispIntf:  IWTTValueFormatContainerBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {64ABFCEF-9CFE-4438-B19E-2B31641DF69C}
// *********************************************************************//
  IWTTValueFormatContainerBaseDisp = dispinterface
    ['{64ABFCEF-9CFE-4438-B19E-2B31641DF69C}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IWTTValueFormatContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B8ED4A70-2A5D-499E-9B2F-AB8DD9936874}
// *********************************************************************//
  IWTTValueFormatContainer = interface(IWTTValueFormatContainerBase)
    ['{B8ED4A70-2A5D-499E-9B2F-AB8DD9936874}']
  end;

// *********************************************************************//
// DispIntf:  IWTTValueFormatContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B8ED4A70-2A5D-499E-9B2F-AB8DD9936874}
// *********************************************************************//
  IWTTValueFormatContainerDisp = dispinterface
    ['{B8ED4A70-2A5D-499E-9B2F-AB8DD9936874}']
    property _NewEnum: IUnknown readonly dispid -4;
    function GetMultiAttValues(const Attribute: WideString): OleVariant; dispid 1610743809;
    procedure SetAllAttValues(const Attribute: WideString; newValue: OleVariant; add: WordBool); dispid 1610743810;
    procedure SetMultiAttValues(const Attribute: WideString; newValues: OleVariant; add: WordBool); dispid 1610743811;
    function GetAll: OleVariant; dispid 1610743812;
    property Attributes: IAttributes readonly dispid 1610743813;
    property Iterator: IIterator readonly dispid 1610743814;
    property AttState[const Attribute: WideString]: WordBool readonly dispid 1610743815;
    procedure SetMultipleAttributes(AttrIDs: OleVariant; Value: OleVariant); dispid 1610743816;
    function GetMultipleAttributes(AttrIDs: OleVariant): OleVariant; dispid 1610743817;
    property Count: Integer readonly dispid 1610743818;
    property FilteredBy[const Formula: WideString]: ICollectionBase readonly dispid 1610743819;
    function GetFilteredSet(const Formula: WideString): ICollectionBase; dispid 1610743820;
    function GetMultiByFormula(const Formula: WideString; OnlyActive: WordBool): OleVariant; dispid 1610743821;
  end;

// *********************************************************************//
// The Class CoVissim provides a Create and CreateRemote method to          
// create instances of the default interface IVissim exposed by              
// the CoClass Vissim. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoVissim = class
    class function Create: IVissim;
    class function CreateRemote(const MachineName: string): IVissim;
  end;

implementation

uses System.Win.ComObj;

class function CoVissim.Create: IVissim;
begin
  Result := CreateComObject(CLASS_Vissim) as IVissim;
end;

class function CoVissim.CreateRemote(const MachineName: string): IVissim;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Vissim) as IVissim;
end;

end.
